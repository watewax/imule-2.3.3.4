<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title>&lt;a href=&quot;http://www.cryptopp.com&quot;&gt;Crypto++&lt;/a&gt;&lt;sup&gt;&lt;small&gt;TM&lt;/small&gt;&lt;/sup&gt; Library 5.2.1 Reference Manual</title>
    <filename>index</filename>
  </compound>
  <compound kind="file">
    <name>AddFileThread.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AddFileThread_8cpp</filename>
    <class kind="struct">QueuedFile</class>
    <member kind="typedef">
      <type>std::list&lt; QueuedFile &gt;</type>
      <name>FileQueue</name>
      <anchorfile>AddFileThread_8cpp.html</anchorfile>
      <anchor>73e7f2d22f5032bd261b6f31b9a2bda7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const byte</type>
      <name>default_zero_hash</name>
      <anchorfile>AddFileThread_8cpp.html</anchorfile>
      <anchor>4e5c99855c1cf0ec4db91dcc0772ff59</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxMutex</type>
      <name>s_mutex</name>
      <anchorfile>AddFileThread_8cpp.html</anchorfile>
      <anchor>6756b750e4916bee675df9bd30940858</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>s_running</name>
      <anchorfile>AddFileThread_8cpp.html</anchorfile>
      <anchor>d0d0cedd40e340cfe417d13bc4534292</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CAddFileThread *</type>
      <name>s_thread</name>
      <anchorfile>AddFileThread_8cpp.html</anchorfile>
      <anchor>fcb9a7783622deebbc630fdcae7d05db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FileQueue</type>
      <name>s_queue</name>
      <anchorfile>AddFileThread_8cpp.html</anchorfile>
      <anchor>68c5896f34fba202697eb5d75f33ea18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AddFileThread.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AddFileThread_8h</filename>
    <class kind="class">CAddFileThread</class>
  </compound>
  <compound kind="file">
    <name>AddFriend.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AddFriend_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>AddFriend.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AddFriend_8h</filename>
    <class kind="class">CAddFriend</class>
  </compound>
  <compound kind="file">
    <name>AICHSyncThread.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AICHSyncThread_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>AICHSyncThread.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AICHSyncThread_8h</filename>
    <class kind="class">CAICHSyncThread</class>
  </compound>
  <compound kind="file">
    <name>ArchSpecific.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ArchSpecific_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_SWAP_16</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>ee936477cfa28b8dcfe75a67ded4e53c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_SWAP_I_16</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>4480710938f9e93fcfe50134f626d1ab</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_SWAP_32</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>73169a08994527b23bd2f5001952ae40</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_SWAP_I_32</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>46a573ffefb88b78dbb1a52ab46f7c28</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_NTOHS</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>adec99980c112a4a40b9d1f86c02dc7c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_NTOHL</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>f4215b3de67085f91dabb53aea162ec2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_HTONS</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>3554ba26df1f1159d4283f21bc21ea88</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_HTONL</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>434f97867e6501241dd482781dcea1a3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_NTOHLL</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>c388b002b9eb9e1902c4e558987efe70</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIAN_HTONLL</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>97489b11cd2007d0dcd796c683ac2010</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>RawPeekUInt16</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>b55b8e9b58ef48aebcfc720fc805959c</anchor>
      <arglist>(const void *p)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>RawPeekUInt32</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>81e89942a36095c31a1229348e357a86</anchor>
      <arglist>(const void *p)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>RawPeekUInt64</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>4937d0740726b3f3a2ed4ed9c48c9c3d</anchor>
      <arglist>(const void *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RawPokeUInt16</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>03d63d3a765b94543ba7fb993517e669</anchor>
      <arglist>(void *p, uint16 nVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RawPokeUInt32</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>b6290dd75f9ffe5e1743569e715af24e</anchor>
      <arglist>(void *p, uint32 nVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RawPokeUInt64</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>70c3452b0136f4e3884537f06df3abb4</anchor>
      <arglist>(void *p, uint64 nVal)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>PeekUInt8</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>996c50b1cd47f1967e4fd812f1685a6d</anchor>
      <arglist>(const void *p)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>PeekUInt16</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>df9fd36c01ce253321e016cd02016bc0</anchor>
      <arglist>(const void *p)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>PeekUInt32</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>14ace182b554b9a4543008f03ae6ee14</anchor>
      <arglist>(const void *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PokeUInt8</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>7958a4eba4cf906b834529c5820e4cb3</anchor>
      <arglist>(void *p, uint8 nVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PokeUInt16</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>c4b2c2e5a4c9d7ed923a80282c43d305</anchor>
      <arglist>(void *p, uint16 nVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PokeUInt32</name>
      <anchorfile>ArchSpecific_8h.html</anchorfile>
      <anchor>4f42579f2db250899b9e9dc956db5b43</anchor>
      <arglist>(void *p, uint32 nVal)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AsyncDNS.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AsyncDNS_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>AsyncDNS.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>AsyncDNS_8h</filename>
    <class kind="class">CAsyncDNS</class>
    <member kind="define">
      <type>#define</type>
      <name>DNS_SOLVE_TIME</name>
      <anchorfile>AsyncDNS_8h.html</anchorfile>
      <anchor>dfb270b79c544900825433c0c4a26c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DnsSolveType</name>
      <anchorfile>AsyncDNS_8h.html</anchorfile>
      <anchor>19a1209453ad5010e6fba34638f64f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNS_UDP</name>
      <anchorfile>AsyncDNS_8h.html</anchorfile>
      <anchor>19a1209453ad5010e6fba34638f64f44c10bf512004018777d651e8ede609068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNS_SOURCE</name>
      <anchorfile>AsyncDNS_8h.html</anchorfile>
      <anchor>19a1209453ad5010e6fba34638f64f4494554ae25b4c152b08141225c3af40fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNS_SERVER_CONNECT</name>
      <anchorfile>AsyncDNS_8h.html</anchorfile>
      <anchor>19a1209453ad5010e6fba34638f64f4467de77b91ffcf3c4460790168be79564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BarShader.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>BarShader_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>HALF</name>
      <anchorfile>BarShader_8cpp.html</anchorfile>
      <anchor>1899fc96ec7697fc56958ccd120217b9</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEPTH</name>
      <anchorfile>BarShader_8cpp.html</anchorfile>
      <anchor>af0d37da5255db372b101d5f02b99b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>Pi</name>
      <anchorfile>BarShader_8cpp.html</anchorfile>
      <anchor>d37e1b7740e725cb44517fce48e5e3ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BarShader.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>BarShader_8h</filename>
    <class kind="class">CBarShader</class>
  </compound>
  <compound kind="file">
    <name>BaseClient.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>BaseClient_8cpp</filename>
    <member kind="variable" static="yes">
      <type>static wxString</type>
      <name>crash_name</name>
      <anchorfile>BaseClient_8cpp.html</anchorfile>
      <anchor>feaec9d675bf552f4f6cba9173c8f69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxString</type>
      <name>empty_name</name>
      <anchorfile>BaseClient_8cpp.html</anchorfile>
      <anchor>71ea1bfb11c894327ea46c0483fce9b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CatDialog.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CatDialog_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>CatDialog.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CatDialog_8h</filename>
    <class kind="class">CCatDialog</class>
  </compound>
  <compound kind="file">
    <name>CFile.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CFile_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>FLUSH_FD</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>3e51fe07b91f99b1f4ede416c834cca2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEEK_FD</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>d46e22fc03bb66d7460824d560edbdf7</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TELL_FD</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>705d8c1cc6883de18415b9da132ac956</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STAT_FD</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>8f2805728fec6ec19e7b3c63bfd125ba</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STAT_STRUCT</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>2c14e30b8edd80c33d5aca8e59eae234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYSCALL_CHECK</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>6f0d98d543ee16bc8142923ef8c5dc0e</anchor>
      <arglist>(check, what)</arglist>
    </member>
    <member kind="enumvalue">
      <name>F_OK</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>06fc87d81c62e9abb8790b6e5713c55bb16a72615f8613168ea14797c243fdfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_OK</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>06fc87d81c62e9abb8790b6e5713c55b071078523d17f0cb6149f6e20b6a471c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>W_OK</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>06fc87d81c62e9abb8790b6e5713c55b7311a74be0f44f83f23466613d3c17a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>R_OK</name>
      <anchorfile>CFile_8cpp.html</anchorfile>
      <anchor>06fc87d81c62e9abb8790b6e5713c55beb27e5778b94e7c60ae46b31d0b66dc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CFile.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CFile_8h</filename>
    <class kind="class">CFile</class>
    <class kind="struct">CSeekFailureException</class>
  </compound>
  <compound kind="file">
    <name>ChatSelector.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ChatSelector_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>COLOR_BLACK</name>
      <anchorfile>ChatSelector_8cpp.html</anchorfile>
      <anchor>ba2a7fe77a7501e5844370eec0185207</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLOR_BLUE</name>
      <anchorfile>ChatSelector_8cpp.html</anchorfile>
      <anchor>23c70d699a5a775bc2e1ebeb8603f630</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLOR_GREEN</name>
      <anchorfile>ChatSelector_8cpp.html</anchorfile>
      <anchor>fc9149f5de51bd9ac4f5ebbfa153f018</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLOR_RED</name>
      <anchorfile>ChatSelector_8cpp.html</anchorfile>
      <anchor>d86358bf19927183dd7b4ae215a29731</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChatSelector.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ChatSelector_8h</filename>
    <class kind="class">CChatSession</class>
    <class kind="class">CChatSelector</class>
  </compound>
  <compound kind="file">
    <name>ChatWnd.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ChatWnd_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ChatWnd.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ChatWnd_8h</filename>
    <class kind="class">CChatWnd</class>
  </compound>
  <compound kind="file">
    <name>ClientCredits.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientCredits_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ClientCredits.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientCredits_8h</filename>
    <class kind="struct">CreditStruct</class>
    <class kind="class">CClientCredits</class>
    <member kind="define">
      <type>#define</type>
      <name>MAXPUBKEYSIZE</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>3074a24d9cacb4d71d5ed4a2e4626d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPT_CIP_REMOTECLIENT</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>39b5c7454ae8f9d0faf289c21a5635dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPT_CIP_LOCALCLIENT</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>921ee25ba4cae4985efd2ec4de49929b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPT_CIP_NONECLIENT</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>0f7898888602cc102ed4acb974d471c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EIdentState</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>e88f24916596c32811737eb0291a036d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOTAVAILABLE</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>e88f24916596c32811737eb0291a036d0152be655ea2eaf5d97f0e1fd78ecb03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDNEEDED</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>e88f24916596c32811737eb0291a036d1161d99ef7b826b7c371ca03be2a3c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTIFIED</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>e88f24916596c32811737eb0291a036d999014fb75c3cc532974138849052b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDFAILED</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>e88f24916596c32811737eb0291a036d2752da951585010631c2b2a7692ce3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDBADGUY</name>
      <anchorfile>ClientCredits_8h.html</anchorfile>
      <anchor>e88f24916596c32811737eb0291a036d1d37cafdfa2d103162aed68ad0eeec1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientCreditsList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientCreditsList_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CLIENTS_MET_FILENAME</name>
      <anchorfile>ClientCreditsList_8cpp.html</anchorfile>
      <anchor>904e9a17000c95fe24ddf0e6e9c69121</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLIENTS_MET_BAK_FILENAME</name>
      <anchorfile>ClientCreditsList_8cpp.html</anchorfile>
      <anchor>7461264e1909fe7a4a4fef63d0dca42c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTKEY_FILENAME</name>
      <anchorfile>ClientCreditsList_8cpp.html</anchorfile>
      <anchor>47343c489984990e395357907c3b6333</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientCreditsList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientCreditsList_8h</filename>
    <class kind="class">CClientCreditsList</class>
  </compound>
  <compound kind="file">
    <name>ClientDetailDialog.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientDetailDialog_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ClientDetailDialog.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientDetailDialog_8h</filename>
    <class kind="class">CClientDetailDialog</class>
  </compound>
  <compound kind="file">
    <name>ClientList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientList_8cpp</filename>
    <class kind="class">CDeletedClient</class>
    <class kind="struct">CDeletedClient::DestAndHash</class>
  </compound>
  <compound kind="file">
    <name>ClientList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientList_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">CClientList</class>
    <member kind="define">
      <type>#define</type>
      <name>BAN_CLEANUP_TIME</name>
      <anchorfile>ClientList_8h.html</anchorfile>
      <anchor>007ca0971a0c44c2641a2b57a4efae88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientListCtrl_8cpp</filename>
    <class kind="struct">ClientListView</class>
    <member kind="define">
      <type>#define</type>
      <name>imagelist</name>
      <anchorfile>ClientListCtrl_8cpp.html</anchorfile>
      <anchor>92a7577487fc4188bd557fe08ee2f3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareVersions</name>
      <anchorfile>ClientListCtrl_8cpp.html</anchorfile>
      <anchor>db73654aa378156f6249e206f1dcd874</anchor>
      <arglist>(const CUpDownClient *client1, const CUpDownClient *client2)</arglist>
    </member>
    <member kind="variable">
      <type>ClientListView</type>
      <name>g_listViews</name>
      <anchorfile>ClientListCtrl_8cpp.html</anchorfile>
      <anchor>8878dda2fd56874073a97db835113efc</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientListCtrl_8h</filename>
    <class kind="class">CClientListCtrl</class>
    <class kind="struct">CUploadingView</class>
    <class kind="struct">CQueuedView</class>
    <class kind="struct">CClientsView</class>
    <member kind="enumeration">
      <name>ViewType</name>
      <anchorfile>ClientListCtrl_8h.html</anchorfile>
      <anchor>467386d41067b285e13551fd3becd60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtNone</name>
      <anchorfile>ClientListCtrl_8h.html</anchorfile>
      <anchor>467386d41067b285e13551fd3becd60fb24239cb1ffdaa2c4361a1b5f4e9d0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtUploading</name>
      <anchorfile>ClientListCtrl_8h.html</anchorfile>
      <anchor>467386d41067b285e13551fd3becd60fb831c34ec4e12971b591a6c809e5ec43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtQueued</name>
      <anchorfile>ClientListCtrl_8h.html</anchorfile>
      <anchor>467386d41067b285e13551fd3becd60f3bb9360abb4eee9074b2bce47eec0704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtClients</name>
      <anchorfile>ClientListCtrl_8h.html</anchorfile>
      <anchor>467386d41067b285e13551fd3becd60fba6eb4c08931e7718c9d8e590c8c765c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientTCPSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientTCPSocket_8cpp</filename>
    <class kind="class">CClientTCPSocketHandler</class>
    <member kind="variable" static="yes">
      <type>static CClientTCPSocketHandler</type>
      <name>g_clientReqSocketHandler</name>
      <anchorfile>ClientTCPSocket_8cpp.html</anchorfile>
      <anchor>9947c0c14d02b8a4dc6ce3d8edd8f499</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientTCPSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientTCPSocket_8h</filename>
    <class kind="class">CClientTCPSocket</class>
    <member kind="function">
      <type></type>
      <name>WX_DECLARE_OBJARRAY</name>
      <anchorfile>ClientTCPSocket_8h.html</anchorfile>
      <anchor>a712f45d88160e9acf937321626aced0</anchor>
      <arglist>(wxString, ArrayOfwxStrings)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClientUDPSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientUDPSocket_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ClientUDPSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ClientUDPSocket_8h</filename>
    <class kind="class">CClientUDPSocket</class>
  </compound>
  <compound kind="file">
    <name>Color.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Color_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SYSCOLOR</name>
      <anchorfile>Color_8h.html</anchorfile>
      <anchor>8441a92e36d0cc5f9809329f907d1a0c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>G_BLEND</name>
      <anchorfile>Color_8h.html</anchorfile>
      <anchor>1912dda224961c983349e41cb5c5aff5</anchor>
      <arglist>(unsigned char a, int percentage)</arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>DarkenColour</name>
      <anchorfile>Color_8h.html</anchorfile>
      <anchor>9bf52b6945aedd20902bd6bc2b810d66</anchor>
      <arglist>(wxColour rgb, int level)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ColorFrameCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ColorFrameCtrl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ColorFrameCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ColorFrameCtrl_8h</filename>
    <class kind="class">CColorFrameCtrl</class>
  </compound>
  <compound kind="file">
    <name>CommentDialog.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CommentDialog_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>CommentDialog.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CommentDialog_8h</filename>
    <class kind="class">CCommentDialog</class>
  </compound>
  <compound kind="file">
    <name>CommentDialogLst.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CommentDialogLst_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>CommentDialogLst.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CommentDialogLst_8h</filename>
    <class kind="class">CCommentDialogLst</class>
  </compound>
  <compound kind="file">
    <name>CryptoPP.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CryptoPP_8cpp</filename>
    <class kind="class">ClassNullRNG</class>
    <class kind="class">PK_DefaultEncryptionFilter</class>
    <class kind="class">PrimeSelector</class>
    <class kind="struct">NewPrimeTable</class>
    <class kind="struct">NewLastSmallPrimeSquared</class>
    <class kind="class">PrimeSieve</class>
    <class kind="class">DWord</class>
    <class kind="class">Word</class>
    <class kind="class">Portable</class>
    <class kind="struct">NewInteger</class>
    <class kind="class">KDF2_RNG</class>
    <class kind="struct">WindowSlider</class>
    <class kind="class">ByteQueueNode</class>
    <class kind="class">MessageQueue</class>
    <class kind="class">RSAPrimeSelector</class>
    <class kind="struct">MDC_Info</class>
    <class kind="class">MDC</class>
    <class kind="class">MDC::Enc</class>
    <class kind="class">AbstractPolicyHolder</class>
    <class kind="class">ConcretePolicyHolder</class>
    <class kind="class">CFB_CipherAbstractPolicy</class>
    <class kind="class">CFB_CipherTemplate</class>
    <class kind="class">CFB_EncryptionTemplate</class>
    <class kind="class">CFB_DecryptionTemplate</class>
    <class kind="struct">CipherModeDocumentation</class>
    <class kind="class">CipherModeBase</class>
    <class kind="class">ModePolicyCommonTemplate</class>
    <class kind="class">CFB_ModePolicy</class>
    <class kind="class">CipherModeFinalTemplate_CipherHolder</class>
    <class kind="struct">CFB_Mode</class>
    <member kind="define">
      <type>#define</type>
      <name>FILTER_BEGIN</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>050fde569dd8dde64f31766e9a4092d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILTER_END_NO_MESSAGE_END_NO_RETURN</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>bbe2040b597e7eda8ca0c48b223940db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILTER_END_NO_MESSAGE_END</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>cf7eda615b9e505b0c312ffae19426a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILTER_OUTPUT2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>84bd79de3ee9efeeaf75dd0e84243e8a</anchor>
      <arglist>(site, statement, output, length, messageEnd)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FILTER_OUTPUT</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9de4e704b2f8b88c6539a017fde9a6b4</anchor>
      <arglist>(site, output, length, messageEnd)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9b937679eac78f9be577838a8953b114</anchor>
      <arglist>(value, name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MulAcc</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a1c181f086aa153a72f72d40461cb690</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SaveMulAcc</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>86c8bcc32df414e1bd01841286160599</anchor>
      <arglist>(s, x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SquAcc</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5c2cd2280f6e3fb3ee8b81398379d8ff</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SaveSquAcc</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>fc0a942ed905e8d908b463cdc1c53288</anchor>
      <arglist>(s, x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>A0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>0d158f1e3af2ab523eb8423db3e5bd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>A1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>cd92b430059d886880c53f13ae038e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>B0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8a03ef52aa4926d1d75cb647ac768622</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>B1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7b21d6a6a4573b4997b1f04b01cd4efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d41b89d4eb6d63a0def5e5fd2a5ab326</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c16509a75e3d3fc46b9df1726be486ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>259c2993ee45e06a4ea8150451a7a70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T3</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5d800c5f04f8638061876b9e32c6c508</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>30ab9da60435727bc80839d416461b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>918f64eb53db8e8dc694f36a87646476</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7a255a2815b9453060f51c6eb22cfed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R3</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>48c945e21828118c1d6fab15405b7fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a1bdbfb602e7609a6a6e7a3c3e5644f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c597abe7cf610f262f7aaec53ed1d413</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2074b9a2c1c6a3190319241fd96ebdd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>V1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e21a9518b4dd62d2baeab430c89a657a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8476f4a8de2c191433342c9ce896986a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1964818ccd90a6173ea48cecb652feeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>79ae03a0214cb30e57b9e8835f2a0019</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>X3</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>db6fd3d004959525c6a684b82ef50860</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>blk0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1a75de24d0277c5319098c218efaef2d</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>blk1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c3ee335ef02e1d11166e1a2daf3b0a24</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>f1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>895cf264b1bd506426ebc9e51336241e</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>f2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5a8cd147d49dfc130047aad8b83ddadf</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>f3</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e4a6b9a0d304177d9ce0e7488a890bb4</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>f4</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d91225588c8fe60771183f5a9d653cea</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R0</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8ac24a09e1273548828d3cc9436f9bc7</anchor>
      <arglist>(v, w, x, y, z, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R1</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2628f8af7bf67ca052200537279f855a</anchor>
      <arglist>(v, w, x, y, z, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>774229b80509be0e9e0a1d9819580224</anchor>
      <arglist>(v, w, x, y, z, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R3</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c0b8b342432d17717ff1020d10cf0eea</anchor>
      <arglist>(v, w, x, y, z, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R4</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>f77ddc8894422d2af2adbd4e71e55d1f</anchor>
      <arglist>(v, w, x, y, z, i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>96d73bbd7af15cb1fc38c3f4a3bd82e9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d96b7cf3182ce2ba85e5a7a93b12c441</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e42219072d798876e6b08e6b78614ff6</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>function</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>30be5bb54009262286b950cf7315eda3</anchor>
      <arglist>(a, b, c, d, k, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>function</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>30be5bb54009262286b950cf7315eda3</anchor>
      <arglist>(a, b, c, d, k, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>function</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>30be5bb54009262286b950cf7315eda3</anchor>
      <arglist>(a, b, c, d, k, s)</arglist>
    </member>
    <member kind="typedef">
      <type>Portable</type>
      <name>LowLevel</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>3b781d40adcb86528fd0936fd432718b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>KeystreamOperation</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b4a226527d2bd01ff19bfa14d0974227</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE_KEYSTREAM</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b4a226527d2bd01ff19bfa14d09742276ab40a8f816d015407f61839c60b9a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_KEYSTREAM</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b4a226527d2bd01ff19bfa14d09742273862fdc8a3c07e925d4a37ea9ee307d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_KEYSTREAM_INPLACE</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b4a226527d2bd01ff19bfa14d0974227e9825e39d4d116f8ea4944836b8b82ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CRYPTOPP_COMPILE_ASSERT_GLOBAL</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>4adf16cda4b599014a788e1a95151bae</anchor>
      <arglist>(sizeof(byte)==1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CRYPTOPP_COMPILE_ASSERT_GLOBAL</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>719b7952b7ee42d7324d00fb2e06feb5</anchor>
      <arglist>(sizeof(word16)==2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CRYPTOPP_COMPILE_ASSERT_GLOBAL</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8c5aa245121d116f7bb8a0ac5422234b</anchor>
      <arglist>(sizeof(word32)==4)</arglist>
    </member>
    <member kind="function">
      <type>BufferedTransformation &amp;</type>
      <name>TheBitBucket</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e42d0f5e86285a0fd540be52caabbfeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RandomNumberGenerator &amp;</type>
      <name>NullRNG</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1e53479a6d427158247ac1ece3161a6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END unsigned int</type>
      <name>CountWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>fce6633f37f0b75a9074c367d54cbf6c</anchor>
      <arglist>(const word *X, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>16079d1c2fc486d45e004aac01aaed24</anchor>
      <arglist>(word *r, word a, unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a46d62cace10e93043611197194bb7f7</anchor>
      <arglist>(word *r, const word *a, unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>XorWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1577c2ba7d174341152de1a42e9c4f08</anchor>
      <arglist>(word *r, const word *a, const word *b, unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>XorWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e36305c283ef5c76a6743f4318914194</anchor>
      <arglist>(word *r, const word *a, unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>ShiftWordsLeftByBits</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1abadd2950ef7329d88d1706069bd494</anchor>
      <arglist>(word *r, unsigned int n, unsigned int shiftBits)</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>ShiftWordsRightByBits</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d3abadc03b3b5c2ef446f7416df16411</anchor>
      <arglist>(word *r, unsigned int n, unsigned int shiftBits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShiftWordsLeftByWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>04d203db6d4dd71fdc1430a80c06718d</anchor>
      <arglist>(word *r, unsigned int n, unsigned int shiftWords)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShiftWordsRightByWords</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>0e06b6bc499284f7169f9a7940e4a10a</anchor>
      <arglist>(word *r, unsigned int n, unsigned int shiftWords)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END void</type>
      <name>xorbuf</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>65badcdacfbb12f11dea53be94196977</anchor>
      <arglist>(byte *buf, const byte *mask, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>xorbuf</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>45ef699175c67b962e1e558273b06bcd</anchor>
      <arglist>(byte *output, const byte *input, const byte *mask, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Parity</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>0e59612670084f7cd651634d99449fd5</anchor>
      <arglist>(unsigned long value)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BytePrecision</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a8a563a530a3f56b1e353f58631fd4a6</anchor>
      <arglist>(unsigned long value)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BitPrecision</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>aaf8639a8e313849f2db1618ad03c7ef</anchor>
      <arglist>(unsigned long value)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>Crop</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e4d13348a30ef0dab0e4dd75d9e2f1c2</anchor>
      <arglist>(unsigned long value, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CallNewHandler</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>71af89664aab380fe936b21db0a7dff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END CRYPTOPP_DLL const word16 *</type>
      <name>GetPrimeTable</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>54b3b419de1b9fbcf18a6146c92e1672</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>IsSmallPrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7bfb6022241ff5fb96250e366c68d49e</anchor>
      <arglist>(const Integer &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>TrialDivision</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>ef5a456e724cba394ff8ad788eae777d</anchor>
      <arglist>(const Integer &amp;p, unsigned bound)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>SmallDivisorsTest</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7d7be62fa8075e10432f49cc08273707</anchor>
      <arglist>(const Integer &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>IsStrongProbablePrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>97c6199f98f7c5174373422d1e1c39af</anchor>
      <arglist>(const Integer &amp;n, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>IsStrongLucasProbablePrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9167952dad6998d1b854dee8355b53a0</anchor>
      <arglist>(const Integer &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>RabinMillerTest</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9a1916cd404eeddf147711ce86a404c3</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;w, unsigned int rounds)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>IsPrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e8442dd787d99d3604436a91799552bf</anchor>
      <arglist>(const Integer &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>VerifyPrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>633d17045e229eccc3614426df054463</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;p, unsigned int level=1)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>FirstPrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>aef9ef9567713cd9935e468309ebcc9d</anchor>
      <arglist>(Integer &amp;p, const Integer &amp;max, const Integer &amp;equiv, const Integer &amp;mod, const PrimeSelector *pSelector)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>PrimeSearchInterval</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>404a825d6ad8d8b32e910db16b8da9f0</anchor>
      <arglist>(const Integer &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL AlgorithmParameters&lt; AlgorithmParameters&lt; AlgorithmParameters&lt; NullNameValuePairs, Integer::RandomNumberType &gt;, Integer &gt;, Integer &gt;</type>
      <name>MakeParametersForTwoPrimesOfEqualSize</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a6f7e53c2b4ae4b33dc51d62de9ecef7</anchor>
      <arglist>(unsigned int productBitLength)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>GCD</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c1d98aa1d0ed1df97bf0dc194da5169a</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RelativelyPrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1653aff24d226faac1ff141e665ef9e1</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>LCM</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>daa35c5ed3df59615477e3ae91cc8015</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>EuclideanMultiplicativeInverse</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a88bcc8ea0e0608098a17bec60abe61e</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>CRT</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>23d78c5df56940591dc726e4465f4682</anchor>
      <arglist>(const Integer &amp;xp, const Integer &amp;p, const Integer &amp;xq, const Integer &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>CRT</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b3fae49135264b5b5afecd0331915040</anchor>
      <arglist>(const Integer &amp;xp, const Integer &amp;p, const Integer &amp;xq, const Integer &amp;q, const Integer &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL int</type>
      <name>Jacobi</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>bffe3c03543252f53fcf59fdb2df765c</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>Lucas</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>6f8b2f16d9cb4cdc4bfa5a785928044a</anchor>
      <arglist>(const Integer &amp;e, const Integer &amp;p, const Integer &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>InverseLucas</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c309cf5e8d4d8d01cfcb460e9c57bc27</anchor>
      <arglist>(const Integer &amp;e, const Integer &amp;m, const Integer &amp;p, const Integer &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>InverseLucas</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9b5b91490b1ae3357ab4f0d863f103c1</anchor>
      <arglist>(const Integer &amp;e, const Integer &amp;m, const Integer &amp;p, const Integer &amp;q, const Integer &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>ModularExponentiation</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c0201026bfc9919554e7d1ef0e5c971c</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;e, const Integer &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>ModularRoot</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c636c1a4d4ffcaa43f8a3ac2fc8d814a</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;e, const Integer &amp;p, const Integer &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL Integer</type>
      <name>ModularRoot</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>ad7ca1c53c38a93997327226eddc0240</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;dp, const Integer &amp;dq, const Integer &amp;p, const Integer &amp;q, const Integer &amp;u)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>FastProbablePrimeTest</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>3502775b6bf08abfa935cc200db7e4c5</anchor>
      <arglist>(const Integer &amp;n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>798d691974bb467a18ded223624f2c25</anchor>
      <arglist>(iso()+2, member_body) DEFINE_OID(member_body()+840</arglist>
    </member>
    <member kind="function">
      <type>iso_us</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8754e16a37b639c7a1832771c7deb678</anchor>
      <arglist>(iso_us()+10040, ansi_x9_57) DEFINE_OID(ansi_x9_57()+4+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9e59fa50902bc15224e82b3080d0de6c</anchor>
      <arglist>(iso_us()+10045, ansi_x9_62) DEFINE_OID(ansi_x9_62()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>cabf8777d8b6a5a6e9070abf54100ff7</anchor>
      <arglist>(id_fieldType()+1, prime_field) DEFINE_OID(id_fieldType()+2</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8ae6c8e37684dfe84f05d89711f448f9</anchor>
      <arglist>(characteristic_two_field()+3, id_characteristic_two_basis) DEFINE_OID(id_characteristic_two_basis()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>4fe2f853119fd3ab0f6ce94a7b2b54b6</anchor>
      <arglist>(id_characteristic_two_basis()+2, tpBasis) DEFINE_OID(id_characteristic_two_basis()+3</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b462fb95fb3cd17ea4841923d7a82894</anchor>
      <arglist>(ansi_x9_62()+2, id_publicKeyType) DEFINE_OID(id_publicKeyType()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>663f45241408f91fe2f95b41536187c6</anchor>
      <arglist>(ansi_x9_62()+3, ansi_x9_62_curves) DEFINE_OID(ansi_x9_62_curves()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>51b2e2eb966544e0fea8c78d27578d18</anchor>
      <arglist>(ansi_x9_62_curves_prime()+1, secp192r1) DEFINE_OID(ansi_x9_62_curves_prime()+7</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>6fba3deb1ba4457e186032d2c841d971</anchor>
      <arglist>(iso_us()+113549, rsadsi) DEFINE_OID(rsadsi()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>877599ff263313cc06b34a0d2f5134a2</anchor>
      <arglist>(pkcs()+1, pkcs_1) DEFINE_OID(pkcs_1()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a0dc3171e61c55fc4f2c24f9a16467de</anchor>
      <arglist>(rsadsi()+2, rsadsi_digestAlgorithm) DEFINE_OID(rsadsi_digestAlgorithm()+2</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>4529926ab43252af7c14bde75f2000fd</anchor>
      <arglist>(rsadsi_digestAlgorithm()+5, id_md5) DEFINE_OID(iso()+3</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>139d9422ab9280587ad38d4e58b93eeb</anchor>
      <arglist>(identified_organization()+14, oiw) DEFINE_OID(oiw()+14</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2999bde80a42f4071db98e88e574eb12</anchor>
      <arglist>(oiw_secsig()+2, oiw_secsig_algorithms) DEFINE_OID(oiw_secsig_algorithms()+26</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>434b67e3c4aa7546f455c8bfe7278243</anchor>
      <arglist>(identified_organization()+36, teletrust) DEFINE_OID(teletrust()+3+2+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d2980944efb3db3a37fd8b08e92fafd4</anchor>
      <arglist>(identified_organization()+132, certicom) DEFINE_OID(certicom()+0</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>dfd596ddef22dc92e96c38ec72f27f85</anchor>
      <arglist>(certicom_ellipticCurve()+6, secp112r1) DEFINE_OID(certicom_ellipticCurve()+7</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>86c011b8b905efc561fce383613314dd</anchor>
      <arglist>(certicom_ellipticCurve()+8, secp160r1) DEFINE_OID(certicom_ellipticCurve()+9</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>613e422e69e04ad0c6a8b8ed89cb48a0</anchor>
      <arglist>(certicom_ellipticCurve()+10, secp256k1) DEFINE_OID(certicom_ellipticCurve()+28</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b9a1209114f39d0066bed6f95260e40a</anchor>
      <arglist>(certicom_ellipticCurve()+29, secp128r2) DEFINE_OID(certicom_ellipticCurve()+30</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>465d144850397663ce130b3000fb31b6</anchor>
      <arglist>(certicom_ellipticCurve()+31, secp192k1) DEFINE_OID(certicom_ellipticCurve()+32</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>47026bce7d3d176ed619af1e6c989793</anchor>
      <arglist>(certicom_ellipticCurve()+33, secp224r1) DEFINE_OID(certicom_ellipticCurve()+34</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>18802bc31fe0d13739c04f4a81fa2c66</anchor>
      <arglist>(certicom_ellipticCurve()+35, secp521r1) DEFINE_OID(certicom_ellipticCurve()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>df0594e80aba6b77c4a77de853a6b693</anchor>
      <arglist>(certicom_ellipticCurve()+2, sect163r1) DEFINE_OID(certicom_ellipticCurve()+3</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>f7f61f6ee0f54ce72ad68c1d551d8a7f</anchor>
      <arglist>(certicom_ellipticCurve()+4, sect113r1) DEFINE_OID(certicom_ellipticCurve()+5</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b615887c1d4deee66d10a16f2c506b59</anchor>
      <arglist>(certicom_ellipticCurve()+15, sect163r2) DEFINE_OID(certicom_ellipticCurve()+16</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>4b3f9b36930841c87917012eed9f1bfa</anchor>
      <arglist>(certicom_ellipticCurve()+17, sect283r1) DEFINE_OID(certicom_ellipticCurve()+22</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e0281535dcc32f80d27314da8bed6889</anchor>
      <arglist>(certicom_ellipticCurve()+23, sect131r2) DEFINE_OID(certicom_ellipticCurve()+24</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>149fa862534c71432b3a27971801761e</anchor>
      <arglist>(certicom_ellipticCurve()+25, sect193r2) DEFINE_OID(certicom_ellipticCurve()+26</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9bd75dfc1d0b5259d073ee03c1b028cf</anchor>
      <arglist>(certicom_ellipticCurve()+27, sect233r1) DEFINE_OID(certicom_ellipticCurve()+36</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5c159be6c406219f4d2fbb35fc80ec07</anchor>
      <arglist>(certicom_ellipticCurve()+37, sect409r1) DEFINE_OID(certicom_ellipticCurve()+38</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>ce05dfa8dba2c8e19205a4d7b01279dc</anchor>
      <arglist>(certicom_ellipticCurve()+39, sect571r1) DEFINE_OID(joint_iso_ccitt()+16</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>cf0d5fa6915da93911d779fe3c88153c</anchor>
      <arglist>(country()+840, joint_iso_ccitt_us) DEFINE_OID(joint_iso_ccitt_us()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>6572ea5a3fa2b634f95bd07a92af487f</anchor>
      <arglist>(us_organization()+101, us_gov) DEFINE_OID(us_gov()+3</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9be60ca2652aac04b011be29f3b1c3d3</anchor>
      <arglist>(csor()+4, nistalgorithms) DEFINE_OID(nistalgorithms()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a4d73889e00fd03a0a5d89bea3a71e9e</anchor>
      <arglist>(aes()+1, id_aes128_ECB) DEFINE_OID(aes()+2</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a30fdc7df9dada7914641d054fae14de</anchor>
      <arglist>(aes()+3, id_aes128_ofb) DEFINE_OID(aes()+4</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>cc10283972c6f2b06155ace4dd153a9e</anchor>
      <arglist>(aes()+21, id_aes192_ECB) DEFINE_OID(aes()+22</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb id_aes192_cbc</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d3e02ef480b4818fa0b23a87494f2463</anchor>
      <arglist>(aes()+23, id_aes192_ofb) DEFINE_OID(aes()+24</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb id_aes192_cbc id_aes192_cfb</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>27dcab982827d6a9cdfe15a9b1904d75</anchor>
      <arglist>(aes()+41, id_aes256_ECB) DEFINE_OID(aes()+42</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb id_aes192_cbc id_aes192_cfb id_aes256_cbc</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>38c5a77b9b32f8aae71b01d9a8a8a786</anchor>
      <arglist>(aes()+43, id_aes256_ofb) DEFINE_OID(aes()+44</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb id_aes192_cbc id_aes192_cfb id_aes256_cbc id_aes256_cfb</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>39739816597f2dfbf9c9d1b2001e7764</anchor>
      <arglist>(nistalgorithms()+2, nist_hashalgs) DEFINE_OID(nist_hashalgs()+1</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb id_aes192_cbc id_aes192_cfb id_aes256_cbc id_aes256_cfb id_sha256</type>
      <name>DEFINE_OID</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b6b70b9c4d24631dc21181c60b0dce1b</anchor>
      <arglist>(nist_hashalgs()+2, id_sha384) DEFINE_OID(nist_hashalgs()+3</arglist>
    </member>
    <member kind="function">
      <type>iso_us id_dsa id_fieldType characteristic_two_field gnBasis ppBasis id_ecPublicKey ansi_x9_62_curves_prime secp256r1 pkcs rsaEncryption id_md2 identified_organization oiw_secsig id_sha1 id_ripemd160 certicom_ellipticCurve secp112r2 secp160k1 secp128r1 secp160r2 secp224k1 secp384r1 sect163k1 sect239k1 sect113r2 sect283k1 sect131r1 sect193r1 sect233k1 sect409k1 sect571k1 country us_organization csor aes id_aes128_cbc id_aes128_cfb id_aes192_cbc id_aes192_cfb id_aes256_cbc id_aes256_cfb id_sha256 id_sha512 NAMESPACE_END NAMESPACE_END bool</type>
      <name>FunctionAssignIntToInteger</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>15d7a73aa51357edc54f8a9f9d3f6a95</anchor>
      <arglist>(const std::type_info &amp;valueType, void *pInteger, const void *pInt)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Compare</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2ea0adea436f839c76849d34875ca328</anchor>
      <arglist>(const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>Increment</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>61d25601280689001b3656e31d66d716</anchor>
      <arglist>(word *A, unsigned int N, word B=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>Decrement</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e79a1f99c44b3e95e13b3bda32176840</anchor>
      <arglist>(word *A, unsigned int N, word B=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwosComplement</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>673657454b6475c9d3adafcf4b687a02</anchor>
      <arglist>(word *A, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>AtomicInverseModPower2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2892e25d31bf73a0f1466d3930f8813d</anchor>
      <arglist>(word A)</arglist>
    </member>
    <member kind="function">
      <type>S</type>
      <name>DivideThreeWordsByTwo</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e7760acfcc311dccedc17afdde803e3f</anchor>
      <arglist>(S *A, S B0, S B1, D *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>D</type>
      <name>DivideFourWordsByTwo</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>9d214bfcf2d6cc36fa33fc08c014ebdf</anchor>
      <arglist>(S *T, const D &amp;Al, const D &amp;Ah, const D &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecursiveMultiply</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>08ec38f367c11e8d28f49fc5889fa3c3</anchor>
      <arglist>(word *R, word *T, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecursiveSquare</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c9ea91498ad318916b1900d2e38161cb</anchor>
      <arglist>(word *R, word *T, const word *A, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecursiveMultiplyBottom</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>1432474e925404897c84b830fbd0a26d</anchor>
      <arglist>(word *R, word *T, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecursiveMultiplyTop</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>16f704534b885e25400ffc803f80c98d</anchor>
      <arglist>(word *R, word *T, const word *L, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>Add</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>52d8ed3a720c2e2b35ed2f2b94700219</anchor>
      <arglist>(word *C, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>Subtract</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>6d5ffdc42272f3a2258f8cd43cc1e22e</anchor>
      <arglist>(word *C, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Multiply</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7a250cf92339d2a28caa887c0e9ebad7</anchor>
      <arglist>(word *R, word *T, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Square</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>56445b6bffefd2dfd0f9b9899895b335</anchor>
      <arglist>(word *R, word *T, const word *A, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyBottom</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c65856fafcc978a418a05991a05c09eb</anchor>
      <arglist>(word *R, word *T, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyTop</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7f62c68089267bfde07b043c11851f6d</anchor>
      <arglist>(word *R, word *T, const word *L, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>LinearMultiply</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>4e86535bf7f41b98fe67a85ddd3fb8da</anchor>
      <arglist>(word *C, const word *A, word B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AsymmetricMultiply</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2ed83b357ef09d5cec807dbd8959a3c6</anchor>
      <arglist>(word *R, word *T, const word *A, unsigned int NA, const word *B, unsigned int NB)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecursiveInverseModPower2</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>adaf27ef1fafa04dbdcedfa08f733c98</anchor>
      <arglist>(word *R, word *T, const word *A, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MontgomeryReduce</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>02aed105b4b3db69cc220915aa1d68cd</anchor>
      <arglist>(word *R, word *T, const word *X, const word *M, const word *U, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HalfMontgomeryReduce</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d94a76a771a17fc1ecce41fad54b61e0</anchor>
      <arglist>(word *R, word *T, const word *X, const word *M, const word *U, const word *V, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AtomicDivide</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5b612f44089a266e38d810f3eee66a5e</anchor>
      <arglist>(word *Q, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CorrectQuotientEstimate</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>85f578886a60f4219290b3c3508746a6</anchor>
      <arglist>(word *R, word *T, word *Q, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Divide</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>50eb2957f43530d6a65df9eec9967225</anchor>
      <arglist>(word *R, word *Q, word *T, const word *A, unsigned int NA, const word *B, unsigned int NB)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>EvenWordCount</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>aa482f445be5b59e45e532600b41e432</anchor>
      <arglist>(const word *X, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>AlmostInverse</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d28c0312bded13499b4825532a2402c5</anchor>
      <arglist>(word *R, word *T, const word *A, unsigned int NA, const word *M, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivideByPower2Mod</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>937c13e3931056cc73228dd78080342f</anchor>
      <arglist>(word *R, const word *A, unsigned int k, const word *M, unsigned int N)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiplyByPower2Mod</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>902e229e303d37d7e133c181a48b30a9</anchor>
      <arglist>(word *R, const word *A, unsigned int k, const word *M, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>RoundupSize</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>12362ae691aca45f3c44983a7e17fa3a</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Integer</type>
      <name>StringToInteger</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5f31254e491c18ea7ae8031c2742d9ba</anchor>
      <arglist>(const T *str)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>99ad8fd21605c5caedde9c48c09bfe0b</anchor>
      <arglist>(std::istream &amp;in, Integer &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>f229949f360bddce0743d21fdecf36c3</anchor>
      <arglist>(std::ostream &amp;out, const Integer &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PositiveAdd</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>6295e7fe9ae3d0c22e38168e8fd7c0f1</anchor>
      <arglist>(Integer &amp;sum, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PositiveSubtract</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>cc5b1ed43bfa0c217e2c64535515e7bb</anchor>
      <arglist>(Integer &amp;diff, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PositiveMultiply</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>53b5444044b02d93e76fafac50c3bb29</anchor>
      <arglist>(Integer &amp;product, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Multiply</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>8b8001fac810accd2304a925d2555c42</anchor>
      <arglist>(Integer &amp;product, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PositiveDivide</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>ee404c9f4de37a0b7ce19e221cd6de5b</anchor>
      <arglist>(Integer &amp;remainder, Integer &amp;quotient, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>a_times_b_mod_c</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c030bf1a90f1feb05d18c6b09e37db38</anchor>
      <arglist>(const Integer &amp;x, const Integer &amp;y, const Integer &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>a_exp_b_mod_c</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>45068a431797e59f7876e7d64e0f8dbb</anchor>
      <arglist>(const Integer &amp;x, const Integer &amp;e, const Integer &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END void</type>
      <name>swap</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>fc0a991d32a6219829895641adfcf3b6</anchor>
      <arglist>(CryptoPP::MessageQueue &amp;a, CryptoPP::MessageQueue &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END void</type>
      <name>P1363_MGF1KDF2_Common</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>53d2f6d43c6e6cbb0657cfbf751f0f11</anchor>
      <arglist>(HashTransformation &amp;hash, byte *output, unsigned int outputLength, const byte *input, unsigned int inputLength, const byte *derivationParams, unsigned int derivationParamsLength, bool mask, unsigned int counterStart)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END unsigned int</type>
      <name>DERLengthEncode</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>2f217701e2921e83b7ed810be76590f6</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BERLengthDecode</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>58689380dff1d1285c3a43611a5c35f0</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int &amp;length, bool &amp;definiteLength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BERLengthDecode</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>699e656343eac627b5fbb7fd917c88f7</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int &amp;length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncodeNull</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>5aeaed6d91ab657afd0b9b63513c9765</anchor>
      <arglist>(BufferedTransformation &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeNull</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>0e6996e2da65748beb48a7632e67da12</anchor>
      <arglist>(BufferedTransformation &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DEREncodeOctetString</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>741bd8b29b9b9b0d5784e088ce51ddb0</anchor>
      <arglist>(BufferedTransformation &amp;bt, const byte *str, unsigned int strLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DEREncodeOctetString</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7a3d20b4648e83025094e63b8f9f8ad6</anchor>
      <arglist>(BufferedTransformation &amp;bt, const SecByteBlock &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DERReencode</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>372455ee445350f376d104a1df164d9e</anchor>
      <arglist>(BufferedTransformation &amp;source, BufferedTransformation &amp;dest)</arglist>
    </member>
    <member kind="variable">
      <type>const NullNameValuePairs</type>
      <name>g_nullNameValuePairs</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d3205973dd1afa14090a683154c1109c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NAMESPACE_END const word</type>
      <name>s_lastSmallPrime</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>ee8444cedc4e51c12ecb8c4bca0cc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>s_RunAtStartup</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>a730962d98429742ac5e0c95d2dbf19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned int</type>
      <name>RoundupSizeTable</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>64afc43c3e8e58402e462a0978467102</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static NAMESPACE_END const unsigned int</type>
      <name>s_maxAutoNodeSize</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>e27b799d3be8eb70920ac6fee69685aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NAMESPACE_END bool(*</type>
      <name>AssignIntToInteger</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>7bd2eda68709e613e62336d8b14c5cfd</anchor>
      <arglist>)(const std::type_info &amp;valueType, void *pInteger, const void *pInt)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static NAMESPACE_END const byte</type>
      <name>s_vec</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>b1d4123bb57d7ff59bf7adb5d0a2dc1e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const byte</type>
      <name>s_padding</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>d752c69d9a583acb5dd539bf9d5ef18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NAMESPACE_END typedef MDC&lt; SHA &gt;</type>
      <name>RandomPoolCipher</name>
      <anchorfile>CryptoPP_8cpp.html</anchorfile>
      <anchor>c92973856fe7c4ece7637d804a68547e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoPP.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CryptoPP_8h</filename>
    <class kind="struct">EnumToType</class>
    <class kind="class">Exception</class>
    <class kind="class">InvalidArgument</class>
    <class kind="class">InvalidDataFormat</class>
    <class kind="class">NotImplemented</class>
    <class kind="class">CannotFlush</class>
    <class kind="class">OS_Error</class>
    <class kind="struct">DecodingResult</class>
    <class kind="class">NameValuePairs</class>
    <class kind="class">NameValuePairs::ValueTypeMismatch</class>
    <class kind="class">NullNameValuePairs</class>
    <class kind="class">Clonable</class>
    <class kind="class">Algorithm</class>
    <class kind="class">SimpleKeyingInterface</class>
    <class kind="class">BlockTransformation</class>
    <class kind="class">StreamTransformation</class>
    <class kind="class">HashTransformation</class>
    <class kind="class">SimpleKeyedTransformation</class>
    <class kind="class">RandomNumberGenerator</class>
    <class kind="class">Waitable</class>
    <class kind="class">BufferedTransformation</class>
    <class kind="struct">BufferedTransformation::BlockingInputOnly</class>
    <class kind="struct">BufferedTransformation::NoChannelSupport</class>
    <class kind="class">CryptoMaterial</class>
    <class kind="class">CryptoMaterial::InvalidMaterial</class>
    <class kind="class">GeneratableCryptoMaterial</class>
    <class kind="class">PublicKey</class>
    <class kind="class">PrivateKey</class>
    <class kind="class">AsymmetricAlgorithm</class>
    <class kind="class">PublicKeyAlgorithm</class>
    <class kind="class">PrivateKeyAlgorithm</class>
    <class kind="class">PK_CryptoSystem</class>
    <class kind="class">PK_Encryptor</class>
    <class kind="class">PK_Encryptor::InvalidPlaintextLength</class>
    <class kind="class">PK_SignatureScheme</class>
    <class kind="class">PK_SignatureScheme::InvalidKeyLength</class>
    <class kind="class">PK_SignatureScheme::KeyTooShort</class>
    <class kind="class">PK_MessageAccumulator</class>
    <class kind="class">PK_Signer</class>
    <class kind="class">PK_Verifier</class>
    <class kind="class">BERDecodeErr</class>
    <class kind="class">ASN1Object</class>
    <class kind="class">simple_ptr</class>
    <class kind="class">member_ptr</class>
    <class kind="struct">CompileTimeAssert&lt; true &gt;</class>
    <class kind="class">Empty</class>
    <class kind="class">TwoBases</class>
    <class kind="class">ObjectHolder</class>
    <class kind="class">NotCopyable</class>
    <class kind="struct">NewObject</class>
    <class kind="class">Singleton</class>
    <class kind="class">GetBlock</class>
    <class kind="struct">SafeShifter&lt; true &gt;</class>
    <class kind="struct">SafeShifter&lt; false &gt;</class>
    <class kind="class">AllocatorBase</class>
    <class kind="class">AllocatorWithCleanup</class>
    <class kind="struct">AllocatorWithCleanup::rebind</class>
    <class kind="class">NullAllocator</class>
    <class kind="class">FixedSizeAllocatorWithCleanup</class>
    <class kind="class">SecBlock</class>
    <class kind="class">FixedSizeSecBlock</class>
    <class kind="class">Integer</class>
    <class kind="class">Integer::DivideByZero</class>
    <class kind="class">Integer::RandomNumberNotFound</class>
    <class kind="class">Integer::OpenPGPDecodeErr</class>
    <class kind="class">AbstractGroup</class>
    <class kind="class">AbstractRing</class>
    <class kind="class">AbstractRing::MultiplicativeGroupT</class>
    <class kind="class">AbstractEuclideanDomain</class>
    <class kind="class">EuclideanDomainOf</class>
    <class kind="class">ModularArithmetic</class>
    <class kind="class">MontgomeryRepresentation</class>
    <class kind="class">ClonableImpl</class>
    <class kind="class">AlgorithmImpl</class>
    <class kind="class">InvalidKeyLength</class>
    <class kind="class">ASN1CryptoMaterial</class>
    <class kind="class">Bufferless</class>
    <class kind="class">Unflushable</class>
    <class kind="class">InputRejecting</class>
    <class kind="struct">InputRejecting::InputRejected</class>
    <class kind="class">CustomFlushPropagation</class>
    <class kind="class">CustomSignalPropagation</class>
    <class kind="class">AutoSignaling</class>
    <class kind="class">Store</class>
    <class kind="class">Sink</class>
    <class kind="class">BitBucket</class>
    <class kind="class">ByteQueue</class>
    <class kind="class">ByteQueue::Walker</class>
    <class kind="class">ConstByteArrayParameter</class>
    <class kind="class">ByteArrayParameter</class>
    <class kind="class">CombinedNameValuePairs</class>
    <class kind="class">GetValueHelperClass</class>
    <class kind="class">AssignFromHelperClass</class>
    <class kind="class">AlgorithmParametersBase</class>
    <class kind="class">AlgorithmParametersBase::ParameterNotUsed</class>
    <class kind="class">AlgorithmParametersBase2</class>
    <class kind="class">AlgorithmParameters</class>
    <class kind="class">Filter</class>
    <class kind="struct">FilterPutSpaceHelper</class>
    <class kind="class">FilterWithBufferedInput</class>
    <class kind="class">FilterWithBufferedInput::BlockQueue</class>
    <class kind="class">HashFilter</class>
    <class kind="class">OutputProxy</class>
    <class kind="class">ProxyFilter</class>
    <class kind="class">SimpleProxyFilter</class>
    <class kind="class">StringSinkTemplate</class>
    <class kind="class">ArraySink</class>
    <class kind="class">ArrayXorSink</class>
    <class kind="class">StringStore</class>
    <class kind="class">Source</class>
    <class kind="class">SourceTemplate</class>
    <class kind="class">StringSource</class>
    <class kind="class">RandomizedTrapdoorFunction</class>
    <class kind="class">TrapdoorFunction</class>
    <class kind="class">RandomizedTrapdoorFunctionInverse</class>
    <class kind="class">TrapdoorFunctionInverse</class>
    <class kind="class">PK_EncryptionMessageEncodingMethod</class>
    <class kind="class">TF_Base</class>
    <class kind="class">PK_SignatureMessageEncodingMethod</class>
    <class kind="struct">PK_SignatureMessageEncodingMethod::HashIdentifierLookup</class>
    <class kind="struct">PK_SignatureMessageEncodingMethod::HashIdentifierLookup::HashIdentifierLookup2</class>
    <class kind="class">PK_DeterministicSignatureMessageEncodingMethod</class>
    <class kind="class">PK_MessageAccumulatorBase</class>
    <class kind="class">PK_MessageAccumulatorImpl</class>
    <class kind="class">TF_SignatureSchemeBase</class>
    <class kind="class">TF_SignerBase</class>
    <class kind="class">TF_VerifierBase</class>
    <class kind="struct">TF_CryptoSchemeOptions</class>
    <class kind="struct">TF_SignatureSchemeOptions</class>
    <class kind="class">PublicKeyCopier</class>
    <class kind="class">PrivateKeyCopier</class>
    <class kind="class">TF_ObjectImplBase</class>
    <class kind="class">TF_ObjectImpl</class>
    <class kind="class">TF_SignerImpl</class>
    <class kind="class">TF_VerifierImpl</class>
    <class kind="class">P1363_KDF2</class>
    <class kind="class">PK_FinalTemplate</class>
    <class kind="struct">EncryptionStandard</class>
    <class kind="struct">SignatureStandard</class>
    <class kind="class">TF_SS</class>
    <class kind="class">IteratedHashBase</class>
    <class kind="class">IteratedHashBase2</class>
    <class kind="class">IteratedHash</class>
    <class kind="class">IteratedHashWithStaticTransform</class>
    <class kind="class">SHA</class>
    <class kind="class">PKCS_EncryptionPaddingScheme</class>
    <class kind="class">PKCS_DigestDecoration</class>
    <class kind="class">PKCS1v15_SignatureMessageEncodingMethod</class>
    <class kind="struct">PKCS1v15_SignatureMessageEncodingMethod::HashIdentifierLookup</class>
    <class kind="struct">PKCS1v15_SignatureMessageEncodingMethod::HashIdentifierLookup::HashIdentifierLookup2</class>
    <class kind="struct">PKCS1v15</class>
    <class kind="class">OID</class>
    <class kind="class">BERGeneralDecoder</class>
    <class kind="class">DERGeneralEncoder</class>
    <class kind="class">BERSequenceDecoder</class>
    <class kind="class">DERSequenceEncoder</class>
    <class kind="class">ASN1Key</class>
    <class kind="class">X509PublicKey</class>
    <class kind="class">PKCS8PrivateKey</class>
    <class kind="class">RSAFunction</class>
    <class kind="class">InvertibleRSAFunction</class>
    <class kind="struct">RSA</class>
    <class kind="struct">RSASS</class>
    <class kind="class">BaseN_Encoder</class>
    <class kind="class">BaseN_Decoder</class>
    <class kind="class">Grouper</class>
    <class kind="class">Base64Encoder</class>
    <class kind="class">Base64Decoder</class>
    <class kind="class">FileStore</class>
    <class kind="class">FileStore::Err</class>
    <class kind="class">FileStore::OpenErr</class>
    <class kind="class">FileStore::ReadErr</class>
    <class kind="class">FileSource</class>
    <class kind="class">FileSink</class>
    <class kind="class">FileSink::Err</class>
    <class kind="class">FileSink::OpenErr</class>
    <class kind="class">FileSink::WriteErr</class>
    <class kind="class">RandomPool</class>
    <class kind="class">FixedBlockSize</class>
    <class kind="class">FixedKeyLength</class>
    <class kind="class">SimpleKeyingInterfaceImpl</class>
    <class kind="class">BlockCipherImpl</class>
    <class kind="class">BlockCipherFinal</class>
    <class kind="struct">SymmetricCipherDocumentation</class>
    <class kind="class">MD4</class>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_CONFIG_H</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a6018c4623b5ee3ee742e14002d2258d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_LITTLE_ENDIAN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>30f87dfd7349d5165f116b550c35c6ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_MS_CRYPTOAPI</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7803e60737e5d8b7ad2913b20adce11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSA_1024_BIT_MODULUS_ONLY</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d4a96bb31ff4c8fe6f938b319a680069</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GZIP_OS_CODE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f28128118c3579150e041ede1256e929</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PREFER_BERKELEY_STYLE_SOCKETS</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>45c0301a7346544348a4e21fe634901d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WORKAROUND_MS_BUG_Q258000</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>abfdd55802bcba51d1f474be8b86524a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NAMESPACE_BEGIN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d149ead4031d3962c87e84a3e12f4866</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NAMESPACE_END</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>552036593282adfb00999ab4152fc0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOCUMENTED_TYPEDEF</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>2908c73b9236473c1001caf7c09e7594</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANONYMOUS_NAMESPACE_BEGIN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7d71e0a7caeeaa70a0e7550a4406b5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USING_NAMESPACE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>9c72d61d65f5ecc076646ea1259e2f14</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOCUMENTED_NAMESPACE_BEGIN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>353ee061318724ece426944aa2da4a95</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOCUMENTED_NAMESPACE_END</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>0fd763974c4afd0f1030280a438ea446</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TYPE_OF_SOCKLEN_T</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ee822906b0029619aa4392c012b5471a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_NATIVE_DWORD_AVAILABLE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>6fa7a813f9ef3b8a99c66340e137278c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPP_TYPENAME</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7f5a6ac7a1c5d05f91189c6a8ba2c526</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_NO_VTABLE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>58965a33ece893fc3ee0afa1f8ead626</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_UNCAUGHT_EXCEPTION_AVAILABLE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a7b3540c031d715fd062f105cb6ac9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_BERKELEY_STYLE_SOCKETS</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1be20004ea4253c45febf2a466df6471</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_DLL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ff905f6801901b4aa6290aa34d789345</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_API</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7d6afddc69ad61b70f5117a6e6cb79b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_CDECL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>cd899094376a4599a1b9c0836d50cf36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_STATIC_TEMPLATE_CLASS</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>681fb43de6ed6baa43f60803024b2b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_COMPILE_ASSERT</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>abf15cfbfcee788cb7d29c9bcf8da418</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_COMPILE_ASSERT_GLOBAL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>9fe94c39013605df02ac122d2c315e0f</anchor>
      <arglist>(assertion)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_COMPILE_ASSERT_INSTANCE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>4002b9b8cfe3baff72fc606a0525c2fe</anchor>
      <arglist>(assertion, instance)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_ASSERT_JOIN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>687aa2e764e0e2f1f4649e68d9869a3b</anchor>
      <arglist>(X, Y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_DO_ASSERT_JOIN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ed3676a29b97ad67ab9efc2682ef78d4</anchor>
      <arglist>(X, Y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_IF_NONZERO</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ff336cfe214604ffdd1075d94a11f8c5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GETBYTE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>fb5d495902796a542084124233281265</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_INHERIT_ALLOCATOR_TYPES</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f02c087b7d7c8b0cfae30a330873a603</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_GET_FUNCTION_ENTRY</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>4ad41719cb8807adc9a2a4adc1bfec4a</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_SET_FUNCTION_ENTRY</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f4fce3e3f75bedc0ae26daa67027eb04</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_SET_FUNCTION_ENTRY2</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>37f7cb24c4d045059385b0cfa4bd1901</anchor>
      <arglist>(name1, name2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRYPTOPP_DEFINE_NAME_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f6c3a7d34e217c23442ec2f73b25a9b1</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>byte</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>0c8186d9b9b7880309c27230bbb5e69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>word16</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c32ea9831f54b53dfce00081c0d02681</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>word32</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>866a177fb33ece8b6d66154dc820e99d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>word32</type>
      <name>lword</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>eb522976f7caf72abe32236b8a23c8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>word8</type>
      <name>hword</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>01c8b1cae9f98aa4992c2adf64c946cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>word16</type>
      <name>word</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c016f649564626781a6385dcf1fca83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>word32</type>
      <name>dword</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>56ae1102c2897b7d3675e8ba047dc041</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EnumToType&lt; ByteOrder, LITTLE_ENDIAN_ORDER &gt;</type>
      <name>LittleEndian</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d00625e1e5e96656feaf83fd53c1ab4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EnumToType&lt; ByteOrder, BIG_ENDIAN_ORDER &gt;</type>
      <name>BigEndian</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f2a408c806f842a5be8d06de7d6a1066</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HashTransformation</type>
      <name>HashFunction</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ae85ebe1505a3afb46dae8b043c265c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SimpleKeyedTransformation&lt; BlockTransformation &gt;</type>
      <name>BlockCipher</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>aab313f31d9bbb4c7b53e3e9a2214fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SimpleKeyedTransformation&lt; StreamTransformation &gt;</type>
      <name>SymmetricCipher</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>5fe9f49fc8a0269cef3b1a38cc03d40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SimpleKeyedTransformation&lt; HashTransformation &gt;</type>
      <name>MessageAuthenticationCode</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>06dbb131eff59cbc9d4f3b1b85138359</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LittleEndian</type>
      <name>NativeByteOrder</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>108a15557c06bfa449e87879f283a268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SecBlock&lt; byte &gt;</type>
      <name>SecByteBlock</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a064549cc65551046be92445277ee159</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SecBlock&lt; word &gt;</type>
      <name>SecWordBlock</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c0935e21f6cf755457f504f159369e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SecWordBlock</type>
      <name>SecAlignedWordBlock</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>cdedf40adf75451a1ecf8db5686f09a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringSinkTemplate&lt; std::string &gt;</type>
      <name>StringSink</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>99fa4862941760cc15989e76324c65f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const byte *, unsigned int &gt;</type>
      <name>HashIdentifier</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>21baf0a8ac011fcaf9d9d9ce9e89a4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SHA</type>
      <name>SHA1</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>faafcd1359b4fc6520ec73f1854fa8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RSASS&lt; PKCS1v15, SHA &gt;::Signer</type>
      <name>RSASSA_PKCS1v15_SHA_Signer</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>6772b3d51b4dc972ca1d23ea5231c7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RSASS&lt; PKCS1v15, SHA &gt;::Verifier</type>
      <name>RSASSA_PKCS1v15_SHA_Verifier</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>bac3ac56160c84a05a74c30a23a8ae47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CipherDir</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>353ccabf5ddc119a6a33e92f7b9961c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENCRYPTION</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>353ccabf5ddc119a6a33e92f7b9961c7244e5e74f856cdd5aafc1005877a2f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECRYPTION</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>353ccabf5ddc119a6a33e92f7b9961c7b5f88847da182e7a1a8af64f4e18f048</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ByteOrder</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>aeb92d42f5a6e27b8ba19f18d69d142b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LITTLE_ENDIAN_ORDER</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>aeb92d42f5a6e27b8ba19f18d69d142bccd5b3585bd07d6bdae383aa8271b9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIG_ENDIAN_ORDER</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>aeb92d42f5a6e27b8ba19f18d69d142bf0c3bb6c718cc7ff0bffef4e8f178c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ASNTag</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d8a583f16e8d237a423c8c1d9087a4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTEGER</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d5a063e265d2ac903b6808e9f6e73ec46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BIT_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d97c181a5b22a04a71b2882fcfbc0fc67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OCTET_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d13a71c7ae31302fe4c69f0da235a13f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_NULL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d81938a78b8aefc4200f2827cc5f51573</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_IDENTIFIER</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d75b386c925dfb585ab93960e6c25b095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_DESCRIPTOR</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9dead9cae2ef40bc32700347a0c4dffea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTERNAL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d63fbb9fe7b9a695d3a65541465cb99d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REAL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d053cb139f4b2333482449705c529b1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENUMERATED</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d5d3484746021701b98a9b9c109d722f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UTF8_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9def8323bb1a48d3826fa5269e578b4a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEQUENCE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9db8f22878cbe7cc7489be00dcf9afe313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SET</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9db44c8101cc294c074709ec1b14211792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMERIC_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d0b683849a61dc7676dcb118d57284954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINTABLE_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d52100c425088a9e8019dba716980382b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T61_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9df800b959fbd966514ad06a1f01fe5cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VIDEOTEXT_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9dd1d0c9711b137d3f49d5b4fbbeef67ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IA5_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d778ebd23d6b0ab6c614659912bdc34e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UTC_TIME</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d7536fd1a3559b6fae6d7b8a136623910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERALIZED_TIME</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9dcf66fbe88d676fbf5609dc9283a509eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPHIC_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d32cc52f4ce30c0c3f995e086d174db36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBLE_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9d9484ae8a7268af4304f593b23256405b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL_STRING</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>df2a7ad51c665c609abbb2dd71ad4a9daf314c1d24c976fc32ca44d0d1ed1168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ASNIdFlag</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>78a87342a75aedee779a1de3db486290</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIVERSAL</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>78a87342a75aedee779a1de3db4862905441eeb1ea3b7eff8ea600536afd8b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONSTRUCTED</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>78a87342a75aedee779a1de3db4862901acba607546c7822e5fd87a6962a67bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>78a87342a75aedee779a1de3db486290241e8ba97c5a6b68b13a60bb16235b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTEXT_SPECIFIC</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>78a87342a75aedee779a1de3db4862902e3bd86a4fe1c97c8a20a29d39419a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>78a87342a75aedee779a1de3db4862900f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL RandomNumberGenerator &amp;</type>
      <name>NullRNG</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d2744bd90fd43080f37f65868c980a00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferedTransformation &amp;</type>
      <name>TheBitBucket</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>e42d0f5e86285a0fd540be52caabbfeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>STDMIN</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c6580c9da0b5bf2c3c4a3b100a5e8ed0</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>STDMAX</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a58fe877871c136050c5a3c19c5455c0</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>Parity</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>8ce13d46c73fd2273cc866190c4bc9b3</anchor>
      <arglist>(unsigned long)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>BytePrecision</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>bc28fbcc44f66fd8f735667b4171b315</anchor>
      <arglist>(unsigned long)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>BitPrecision</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>bf433356ad06f330cbdbcbe789a93fb0</anchor>
      <arglist>(unsigned long)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned long</type>
      <name>Crop</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a1851e0ebda6620c76ff1b66de187034</anchor>
      <arglist>(unsigned long, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BitsToBytes</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>928832782e70fcd24493cf8a745a7673</anchor>
      <arglist>(unsigned int bitCount)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BytesToWords</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>9b1d3bf3c784aa36c0fa28407ac4d82f</anchor>
      <arglist>(unsigned int byteCount)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BitsToWords</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>26bfb1946a5b629614c069ef1910880e</anchor>
      <arglist>(unsigned int bitCount)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BitsToDwords</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>300f0973b1deb0a23a28aa5a2624d38c</anchor>
      <arglist>(unsigned int bitCount)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>xorbuf</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>40e50a26b843eff53cf9d53f8dd19e13</anchor>
      <arglist>(byte *buf, const byte *mask, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>xorbuf</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>cc248a535ecb55ea4e67ad39aebea667</anchor>
      <arglist>(byte *output, const byte *input, const byte *mask, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPowerOf2</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>60ff89cf281d08bb7469ae60f3064637</anchor>
      <arglist>(T n)</arglist>
    </member>
    <member kind="function">
      <type>T2</type>
      <name>ModPowerOf2</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1dff24345828703d2d84fe9bb6502cc5</anchor>
      <arglist>(T1 a, T2 b)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>RoundDownToMultipleOf</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>9ae73d9f48473ae2bc20c7abbe5ee3de</anchor>
      <arglist>(T n, T m)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>RoundUpToMultipleOf</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a537c3fe03553c41eec69deafdf3b84b</anchor>
      <arglist>(T n, T m)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetAlignment</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d3ec6fcfcb9b2c25a8ef2849ca0e6fdf</anchor>
      <arglist>(T *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlignedOn</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>bb512dbc635acd3fc140e2ac2fd63292</anchor>
      <arglist>(const void *p, unsigned int alignment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAligned</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ea3ec6cbd741f9792959991e0d5281e2</anchor>
      <arglist>(const void *p, T *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>ByteOrder</type>
      <name>GetNativeByteOrder</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ed8336b0d98f2469441837be6cbbebf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NativeByteOrderIs</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>6c2da0dd866619761e63c3b5da58c477</anchor>
      <arglist>(ByteOrder order)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>IntToString</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>650f20faa1b66278be166442f64596e0</anchor>
      <arglist>(T a, unsigned int base=10)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>IntToString&lt; unsigned int &gt;</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>6de2d2278a1981f8d543c50ccfde1ce9</anchor>
      <arglist>(unsigned int a, unsigned int base)</arglist>
    </member>
    <member kind="function">
      <type>T1</type>
      <name>SaturatingSubtract</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>eaae1edbd04de942ae77eeff4bc0c8f4</anchor>
      <arglist>(T1 a, T2 b)</arglist>
    </member>
    <member kind="function">
      <type>CipherDir</type>
      <name>GetCipherDir</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>85f57d15d92f65b4d71a484ff9ee17e4</anchor>
      <arglist>(const T &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CallNewHandler</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>71af89664aab380fe936b21db0a7dff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>rotlFixed</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f7248d11e828a4b70c40178f54245fc0</anchor>
      <arglist>(T x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>rotrFixed</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f5435fe7f515e042997840ca2b34eae0</anchor>
      <arglist>(T x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>rotlVariable</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d17da1be85deb222a434ee69b9ec5cf8</anchor>
      <arglist>(T x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>rotrVariable</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>350349ffe42768b94172eb507e5c99e4</anchor>
      <arglist>(T x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>rotlMod</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f0f090b3490d7173719a2035d5432d90</anchor>
      <arglist>(T x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>rotrMod</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>0d83ef4a85b2cffed10dd8b92224d364</anchor>
      <arglist>(T x, unsigned int y)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetByte</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>3157bef7f5fac62c6b1facd8be189fed</anchor>
      <arglist>(ByteOrder order, T value, unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>ByteReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1d8d5adca8384ebedc699760ce217b08</anchor>
      <arglist>(byte value)</arglist>
    </member>
    <member kind="function">
      <type>word16</type>
      <name>ByteReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a179e009cf5c74bb431b3c112d7ee444</anchor>
      <arglist>(word16 value)</arglist>
    </member>
    <member kind="function">
      <type>word32</type>
      <name>ByteReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>cf65f4a9edb6224d01e900aa7205a4f4</anchor>
      <arglist>(word32 value)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>BitReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1746e70bf831f0cbf8ad73d8c15bc921</anchor>
      <arglist>(byte value)</arglist>
    </member>
    <member kind="function">
      <type>word16</type>
      <name>BitReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>699c24d7013f20ee03076576984c875e</anchor>
      <arglist>(word16 value)</arglist>
    </member>
    <member kind="function">
      <type>word32</type>
      <name>BitReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>ad87ebeafa7de2c11c19453f3b3cfea7</anchor>
      <arglist>(word32 value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>BitReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>35221b14cf49b0a738f1be10c42d6600</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ConditionalByteReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c5a9ab152d4675a97f74e597068739a5</anchor>
      <arglist>(ByteOrder order, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ByteReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>645d188cf11704902a6bf5f193b30575</anchor>
      <arglist>(T *out, const T *in, unsigned int byteCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConditionalByteReverse</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>2718c0e1fa2388b1599ababb280b5bdb</anchor>
      <arglist>(ByteOrder order, T *out, const T *in, unsigned int byteCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetUserKey</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>94d40e319a41579866b7c4fca2b054ee</anchor>
      <arglist>(ByteOrder order, T *out, unsigned int outlen, const byte *in, unsigned int inlen)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>UnalignedGetWordNonTemplate</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>9c0c1c538bfa3738772c943c2b1dccec</anchor>
      <arglist>(ByteOrder, const byte *block, byte *)</arglist>
    </member>
    <member kind="function">
      <type>word16</type>
      <name>UnalignedGetWordNonTemplate</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1b46f6ccd9744cf2169cafcd1b7e31a6</anchor>
      <arglist>(ByteOrder order, const byte *block, word16 *)</arglist>
    </member>
    <member kind="function">
      <type>word32</type>
      <name>UnalignedGetWordNonTemplate</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>61648b4b60a1620edff954b711c1a1a8</anchor>
      <arglist>(ByteOrder order, const byte *block, word32 *)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>UnalignedGetWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>458fd71b9beaa18efeb4b5c2ea476687</anchor>
      <arglist>(ByteOrder order, const byte *block, T *dummy=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnalignedPutWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>b4664bae08e4a1895ce6e8d74d64aa6e</anchor>
      <arglist>(ByteOrder, byte *block, byte value, const byte *xorBlock=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnalignedPutWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1be136e0211141b66890a8553647b91d</anchor>
      <arglist>(ByteOrder order, byte *block, word16 value, const byte *xorBlock=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnalignedPutWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>950dc28707fdbb20c951ccb187137fc3</anchor>
      <arglist>(ByteOrder order, byte *block, word32 value, const byte *xorBlock=NULL)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>85818494fbcd1b243e4e38feeb7b8b81</anchor>
      <arglist>(bool assumeAligned, ByteOrder order, const byte *block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>b3fbd29656a2fdb4601f0e64fe73b7a4</anchor>
      <arglist>(bool assumeAligned, ByteOrder order, T &amp;result, const byte *block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutWord</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>b2f0c3ecc6fce36f95a83876a219e702</anchor>
      <arglist>(bool assumeAligned, ByteOrder order, byte *block, T value, const byte *xorBlock=NULL)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>SafeRightShift</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>24d732f9cee8456482b66d61a55d4acb</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>SafeLeftShift</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>078c8f7ed4788ba544f68cb8c1bd2b52</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>A::pointer</type>
      <name>StandardReallocate</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>19f2f2e5089c8d59ec56cf9545460fc3</anchor>
      <arglist>(A &amp;a, T *p, typename A::size_type oldSize, typename A::size_type newSize, bool preserve)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>14f555d72c3fccc2e6262dd41e9c883d</anchor>
      <arglist>(const CryptoPP::AllocatorWithCleanup&lt; T &gt; &amp;, const CryptoPP::AllocatorWithCleanup&lt; U &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a7f6b44d8ee818854f8459f4e87e4d0a</anchor>
      <arglist>(const CryptoPP::AllocatorWithCleanup&lt; T &gt; &amp;, const CryptoPP::AllocatorWithCleanup&lt; U &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END void</type>
      <name>swap</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>5921c14c6cff0a4277fc10e2373ea31d</anchor>
      <arglist>(CryptoPP::SecBlock&lt; T, A &gt; &amp;a, CryptoPP::SecBlock&lt; T, A &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void CRYPTOPP_DLL</type>
      <name>DisableSSE2</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>e53b58fe348208c718a966285a060d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>e7b0dd9fd44f9a4f324475fa15e4a158</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>4e6d86e561db9b81727c5b7d52b8ee87</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>fb086b04c447975b7ffee4ca924cecc7</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d6ba1e63653c35a36c1d17f52492a409</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>3ba41d05e4a23cbec8967b2db93c2bda</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7beb3a89196983007196880a02e01c21</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::Integer</type>
      <name>operator+</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f184962074a0a0360b5d5725be87bf04</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::Integer</type>
      <name>operator-</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>6b00f575ffdf7efbee43aef216a1a1e3</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::Integer</type>
      <name>operator*</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>33026c5834be7d16ce39f7570ed1f035</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::Integer</type>
      <name>operator/</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>88f7d833212a550e8953d014457251e1</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::Integer</type>
      <name>operator%</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>746976ac317e114efecb8a8e4531f00a</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, const CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::Integer</type>
      <name>operator/</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>4224ad6a90e0af4316bccc2bfa1f8b95</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, CryptoPP::word b)</arglist>
    </member>
    <member kind="function">
      <type>CryptoPP::word</type>
      <name>operator%</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>60e177e867bd53fb2f307885f4d462c8</anchor>
      <arglist>(const CryptoPP::Integer &amp;a, CryptoPP::word b)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END void</type>
      <name>swap</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>fa20e741e7457f6a628ff2c11301ea2a</anchor>
      <arglist>(CryptoPP::Integer &amp;a, CryptoPP::Integer &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>NAMESPACE_END void</type>
      <name>swap</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>789229bc5c42523f2afa68f86d37b000</anchor>
      <arglist>(CryptoPP::ByteQueue &amp;a, CryptoPP::ByteQueue &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>GetValueHelperClass&lt; T, BASE &gt;</type>
      <name>GetValueHelper</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c79fe808e84499c397df337561f06047</anchor>
      <arglist>(const T *pObject, const char *name, const std::type_info &amp;valueType, void *pValue, const NameValuePairs *searchFirst=NULL, BASE *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>GetValueHelperClass&lt; T, T &gt;</type>
      <name>GetValueHelper</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>c4ed10574c3ee8e78dd182d9fb62eacd</anchor>
      <arglist>(const T *pObject, const char *name, const std::type_info &amp;valueType, void *pValue, const NameValuePairs *searchFirst=NULL)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>Hack_DefaultValueFromConstReferenceType</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>77ef30b27703aa2eb2d548d0c5f97f74</anchor>
      <arglist>(const R &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Hack_GetValueIntoConstReference</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>f31a2ff4fd9475691644862a3983956c</anchor>
      <arglist>(const NameValuePairs &amp;source, const char *name, const R &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>AssignFromHelperClass&lt; T, BASE &gt;</type>
      <name>AssignFromHelper</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>afac56fe30fdb90ff055a260d380a760</anchor>
      <arglist>(T *pObject, const NameValuePairs &amp;source, BASE *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>AssignFromHelperClass&lt; T, T &gt;</type>
      <name>AssignFromHelper</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7bc7f765fea9d123989379249b7be54f</anchor>
      <arglist>(T *pObject, const NameValuePairs &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL const std::type_info &amp;</type>
      <name>IntegerTypeId</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>052285369686d089be8d248d29350275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AlgorithmParameters&lt; NullNameValuePairs, T &gt;</type>
      <name>MakeParameters</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>57b3e4e933793f139e52d3b11ddb1c88</anchor>
      <arglist>(const char *name, const T &amp;value, bool throwIfNotUsed=true)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>P1363_MGF1KDF2_Common</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>dafbf6aa23be199e756d65247751438f</anchor>
      <arglist>(HashTransformation &amp;hash, byte *output, unsigned int outputLength, const byte *input, unsigned int inputLength, const byte *derivationParams, unsigned int derivationParamsLength, bool mask, unsigned int counterStart)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeError</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>faf6b517352dfdaa7cc68ccb8396cba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>DERLengthEncode</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>8d8b6c4b7e1a59f5d69a0497f99d74a1</anchor>
      <arglist>(BufferedTransformation &amp;out, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>BERLengthDecode</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>d1d2ea3205c2d7c065eab894c6637ca6</anchor>
      <arglist>(BufferedTransformation &amp;in, unsigned int &amp;length)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>DEREncodeNull</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>6b46756c9bc1539c31bbe9d7de0c93e8</anchor>
      <arglist>(BufferedTransformation &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>BERDecodeNull</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>e387c4267380847317bd4cdd713a76c0</anchor>
      <arglist>(BufferedTransformation &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>DEREncodeOctetString</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>733249df5d19bd68077d4023c853ccc3</anchor>
      <arglist>(BufferedTransformation &amp;out, const byte *str, unsigned int strLen)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>DEREncodeOctetString</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>1b1731dda7e3f72811fb44163a1d555a</anchor>
      <arglist>(BufferedTransformation &amp;out, const SecByteBlock &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>DERReencode</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>a169a97ab6ae80c89cae6a281fc7440d</anchor>
      <arglist>(BufferedTransformation &amp;source, BufferedTransformation &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DEREncodeUnsigned</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>28361725e9121805081f3fd278812068</anchor>
      <arglist>(BufferedTransformation &amp;out, T w, byte asnTag=INTEGER)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeUnsigned</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>31c289db66797868f7d1e84c6e15a08c</anchor>
      <arglist>(BufferedTransformation &amp;in, T &amp;w, byte asnTag=INTEGER, T minValue=0, T maxValue=0xffffffff)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>8a57b0572c774f1dd6cd73dc55898d93</anchor>
      <arglist>(const ::CryptoPP::OID &amp;lhs, const ::CryptoPP::OID &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>b0d238125a633c23b5a40f115ed5733d</anchor>
      <arglist>(const ::CryptoPP::OID &amp;lhs, const ::CryptoPP::OID &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>47b0955ce6885b3105da84205c64fbca</anchor>
      <arglist>(const ::CryptoPP::OID &amp;lhs, const ::CryptoPP::OID &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>inline::CryptoPP::OID</type>
      <name>operator+</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>0b2251733cfcaa4812e796c3ebb6d20d</anchor>
      <arglist>(const ::CryptoPP::OID &amp;lhs, unsigned long rhs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CheckedSetKey</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>97f0f4344bd438b58aefe452c39df5c6</anchor>
      <arglist>(T *obj, Empty empty, const byte *key, unsigned int length, const NameValuePairs &amp;param)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CheckedSetKey</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>3a3db91e4e308f5b0388b48a1dd62ed4</anchor>
      <arglist>(T *obj, CipherDir dir, const byte *key, unsigned int length, const NameValuePairs &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>WORD_SIZE</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>e425d045268f61ec562aaa99003a26f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>WORD_BITS</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>7cfe0e3bc218de4bd10e7a468fac2183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CRYPTOPP_DLL const NullNameValuePairs</type>
      <name>g_nullNameValuePairs</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>b1b0f7d11a21c6163be8ca2662ce2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CRYPTOPP_DLL bool(*</type>
      <name>AssignIntToInteger</name>
      <anchorfile>CryptoPP_8h.html</anchorfile>
      <anchor>159b0ba5e204a155d1252a7c9df24f97</anchor>
      <arglist>)(const std::type_info &amp;valueType, void *pInteger, const void *pInt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoPP_Inc.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CryptoPP__Inc_8h</filename>
  </compound>
  <compound kind="file">
    <name>CTypedPtrList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>CTypedPtrList_8h</filename>
    <class kind="struct">POSITION</class>
    <class kind="class">CList</class>
    <class kind="struct">CList::MyNode</class>
    <class kind="class">CTypedPtrList</class>
    <member kind="typedef">
      <type>CList&lt; void *, void * &gt;</type>
      <name>CPtrList</name>
      <anchorfile>CTypedPtrList_8h.html</anchorfile>
      <anchor>6c6da4ef0f497716bee3152249950516</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DataToText.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DataToText_8cpp</filename>
    <member kind="function">
      <type>wxString</type>
      <name>PriorityToStr</name>
      <anchorfile>DataToText_8cpp.html</anchorfile>
      <anchor>a6d12966b6254d22eeea1fb5048b5375</anchor>
      <arglist>(int priority, bool isAuto)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>DownloadStateToStr</name>
      <anchorfile>DataToText_8cpp.html</anchorfile>
      <anchor>4555cf4fac077608b922428e8e94b762</anchor>
      <arglist>(int state, bool queueFull)</arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>GetSoftName</name>
      <anchorfile>DataToText_8cpp.html</anchorfile>
      <anchor>ebe6ad9c409d370bbede6b2a64cac211</anchor>
      <arglist>(unsigned int software_ident)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>OriginToText</name>
      <anchorfile>DataToText_8cpp.html</anchorfile>
      <anchor>c2de7982e8f4f0397565033a766fbb23</anchor>
      <arglist>(unsigned int source_from)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DataToText.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DataToText_8h</filename>
    <member kind="function">
      <type>wxString</type>
      <name>PriorityToStr</name>
      <anchorfile>DataToText_8h.html</anchorfile>
      <anchor>a6d12966b6254d22eeea1fb5048b5375</anchor>
      <arglist>(int priority, bool isAuto)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>DownloadStateToStr</name>
      <anchorfile>DataToText_8h.html</anchorfile>
      <anchor>4555cf4fac077608b922428e8e94b762</anchor>
      <arglist>(int state, bool queueFull)</arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>GetSoftName</name>
      <anchorfile>DataToText_8h.html</anchorfile>
      <anchor>ebe6ad9c409d370bbede6b2a64cac211</anchor>
      <arglist>(unsigned int software_ident)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>OriginToText</name>
      <anchorfile>DataToText_8h.html</anchorfile>
      <anchor>c2de7982e8f4f0397565033a766fbb23</anchor>
      <arglist>(unsigned int source_from)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DeadSourceList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DeadSourceList_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CLEANUPTIME</name>
      <anchorfile>DeadSourceList_8cpp.html</anchorfile>
      <anchor>885ed6c06cd7959d719bd00f3b06976e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLOCKTIME</name>
      <anchorfile>DeadSourceList_8cpp.html</anchorfile>
      <anchor>2fb804a9cedf4748930b7f049adef127</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLOCKTIMEFW</name>
      <anchorfile>DeadSourceList_8cpp.html</anchorfile>
      <anchor>87f17025634f592afdccde3fd1371414</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DeadSourceList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DeadSourceList_8h</filename>
    <class kind="class">CDeadSourceList</class>
    <class kind="class">CDeadSourceList::CDeadSource</class>
  </compound>
  <compound kind="file">
    <name>DirectoryTreeCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DirectoryTreeCtrl_8cpp</filename>
    <class kind="class">CDirectoryTreeItemData</class>
    <member kind="define">
      <type>#define</type>
      <name>ROOT_CHAR</name>
      <anchorfile>DirectoryTreeCtrl_8cpp.html</anchorfile>
      <anchor>d447996cc584c26d4627154eb4bdc853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROOT_STRING</name>
      <anchorfile>DirectoryTreeCtrl_8cpp.html</anchorfile>
      <anchor>de23856741c30283b862634f1878cecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_FOLDER</name>
      <anchorfile>DirectoryTreeCtrl_8cpp.html</anchorfile>
      <anchor>385c44f6fb256e5716a2302a5b9403882477733422286e98e0df77a5570d41b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_FOLDER_SUB_SHARED</name>
      <anchorfile>DirectoryTreeCtrl_8cpp.html</anchorfile>
      <anchor>385c44f6fb256e5716a2302a5b940388752e78b788c44129d39a1cbaf401c5a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DirectoryTreeCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DirectoryTreeCtrl_8h</filename>
    <class kind="class">CDirectoryTreeCtrl</class>
    <member kind="define">
      <type>#define</type>
      <name>USRMSG_ITEMSTATECHANGED</name>
      <anchorfile>DirectoryTreeCtrl_8h.html</anchorfile>
      <anchor>af1ad6bada2366508da75f4ab008933d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MP_SHAREDFOLDERS_FIRST</name>
      <anchorfile>DirectoryTreeCtrl_8h.html</anchorfile>
      <anchor>43a3d9c020b7cb95a07d2679be3531f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DownloadClient.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DownloadClient_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>DownloadListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DownloadListCtrl_8cpp</filename>
    <class kind="struct">CtrlItem_Struct</class>
    <member kind="define">
      <type>#define</type>
      <name>m_ImageList</name>
      <anchorfile>DownloadListCtrl_8cpp.html</anchorfile>
      <anchor>1ba45058b10b7731a7adb84d89b90179</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CtrlItem_Struct * &gt;</type>
      <name>ItemList</name>
      <anchorfile>DownloadListCtrl_8cpp.html</anchorfile>
      <anchor>5320326fd1c1fab4cd6627711f2f83fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ItemList</type>
      <name>GetSelectedItems</name>
      <anchorfile>DownloadListCtrl_8cpp.html</anchorfile>
      <anchor>82efb7700f8319bb81aced96d4f6afd3</anchor>
      <arglist>(CDownloadListCtrl *list, int types)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>itFILES</name>
      <anchorfile>DownloadListCtrl_8cpp.html</anchorfile>
      <anchor>ef3fa32cee80346430f63daaa4659cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>itSOURCES</name>
      <anchorfile>DownloadListCtrl_8cpp.html</anchorfile>
      <anchor>14b7c5d42872326e3b281ec0005037d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DownloadListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DownloadListCtrl_8h</filename>
    <class kind="class">CDownloadListCtrl</class>
  </compound>
  <compound kind="file">
    <name>DownloadQueue.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DownloadQueue_8cpp</filename>
    <class kind="struct">SFindBestPF</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_FILES_PER_UDP_PACKET</name>
      <anchorfile>DownloadQueue_8cpp.html</anchorfile>
      <anchor>4190038b0a42109f5e35b9e9777fb111</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_REQUESTS_PER_SERVER</name>
      <anchorfile>DownloadQueue_8cpp.html</anchorfile>
      <anchor>362c1232873950d65ea8068e6e961c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnectedServer</name>
      <anchorfile>DownloadQueue_8cpp.html</anchorfile>
      <anchor>a18310ae0c9cb26ff376f4a566bad870</anchor>
      <arglist>(const CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ComparePartFiles</name>
      <anchorfile>DownloadQueue_8cpp.html</anchorfile>
      <anchor>1690ed9afe59dda6306e814fa2bac024</anchor>
      <arglist>(const CPartFile *file1, const CPartFile *file2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DownloadQueue.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>DownloadQueue_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">CDownloadQueue</class>
    <class kind="struct">CDownloadQueue::Hostname_Entry</class>
  </compound>
  <compound kind="file">
    <name>ECSpecialCoreTags.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ECSpecialCoreTags_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ECSpecialMuleTags.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ECSpecialMuleTags_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>ApplyBoolean</name>
      <anchorfile>ECSpecialMuleTags_8cpp.html</anchorfile>
      <anchor>658157236f80e51ae15f7e01d9161fad</anchor>
      <arglist>(bool use_tag, const CECTag *thisTab, void(applyFunc)(bool), int tagName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ED2KLink.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ED2KLink_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ED2KLink.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ED2KLink_8h</filename>
    <class kind="class">CED2KLink</class>
    <class kind="class">CED2KFileLink</class>
    <class kind="struct">CED2KFileLink::SED2KLinkSource</class>
    <class kind="class">CED2KServerLink</class>
    <class kind="class">CED2KServerListLink</class>
  </compound>
  <compound kind="file">
    <name>ED2KLinkParser.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ED2KLinkParser_8cpp</filename>
    <member kind="function">
      <type>string</type>
      <name>GetLinksFilePath</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>736781a2c8dd922068c49fa13c261522</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>HexToDec</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>bf148fab2e5c73d917e51bd637637ed7</anchor>
      <arglist>(const string &amp;hex)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>Unescape</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>cd678cbdc627b7ca929b8627dba83aff</anchor>
      <arglist>(const string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>strip</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>dbf22eef7a8a6a3a56ce15687890c075</anchor>
      <arglist>(const string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNumber</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>32365e377c80c8e22cf61b4f94ae1b02</anchor>
      <arglist>(const string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMD4Hash</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>0e079720c5831ecc12e79091fd9e401c</anchor>
      <arglist>(const string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getVersion</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>9392c43f8a1b95e9f8ee260ef4d83297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>badLink</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>47810102c7cd2c02b2051b406aff037b</anchor>
      <arglist>(const string &amp;type, const string &amp;err, const string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeLink</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>55770394ba314a1b55b2ce983818eb8f</anchor>
      <arglist>(const string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkFileLink</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>5bdcd18ce0ae00feda585d658d031869</anchor>
      <arglist>(const string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkServerLink</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>cc3a859002ab90c4ae756e977183bc86</anchor>
      <arglist>(const string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkServerListLink</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>ff490c06b78e0c32c2275fb2c33dd10e</anchor>
      <arglist>(const string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>versionMajor</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>420b43bd37bfdca3ae9113d3688ae941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>versionMinor</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>ceccd926a82abac63bfb9f1244db9e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>versionRevision</name>
      <anchorfile>ED2KLinkParser_8cpp.html</anchorfile>
      <anchor>b904022637f5b40a8b0b4f16a4d84b88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EditServerListDlg.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>EditServerListDlg_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>EditServerListDlg.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>EditServerListDlg_8h</filename>
    <class kind="class">EditServerListDlg</class>
  </compound>
  <compound kind="file">
    <name>EMSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>EMSocket_8cpp</filename>
    <member kind="variable">
      <type>const uint32</type>
      <name>MAX_SIZE</name>
      <anchorfile>EMSocket_8cpp.html</anchorfile>
      <anchor>1c696e953e0407cf568fa9a24db091d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EMSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>EMSocket_8h</filename>
    <class kind="class">CEMSocket</class>
    <class kind="struct">CEMSocket::StandardPacketQueueEntry</class>
    <member kind="define">
      <type>#define</type>
      <name>ERR_WRONGHEADER</name>
      <anchorfile>EMSocket_8h.html</anchorfile>
      <anchor>c2617887d71922bd5a4e8be53a64c9b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_TOOBIG</name>
      <anchorfile>EMSocket_8h.html</anchorfile>
      <anchor>65490e73610e9a3e37871285c3866366</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ES_DISCONNECTED</name>
      <anchorfile>EMSocket_8h.html</anchorfile>
      <anchor>f8584463a0eaab1b19c6b628cff52baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ES_NOTCONNECTED</name>
      <anchorfile>EMSocket_8h.html</anchorfile>
      <anchor>e62437ebcea4adbf3140c2040e4c499b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ES_CONNECTED</name>
      <anchorfile>EMSocket_8h.html</anchorfile>
      <anchor>b26420158563cb71bdd71418099cef15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const sint32</type>
      <name>PACKET_HEADER_SIZE</name>
      <anchorfile>EMSocket_8h.html</anchorfile>
      <anchor>3f61313743b306b9e8e502deb9221497</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>listctrl.262.cpp</name>
    <path>/media/brun/progs/iMule/src/extern/</path>
    <filename>listctrl_8262_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>listctrl.262.h</name>
    <path>/media/brun/progs/iMule/src/extern/</path>
    <filename>listctrl_8262_8h</filename>
    <namespace>MuleExtern</namespace>
    <class kind="class">MuleExtern::wxGenericListCtrl</class>
    <class kind="class">MuleExtern::wxListCtrl</class>
    <member kind="define">
      <type>#define</type>
      <name>wxLC_OWNERDRAW</name>
      <anchorfile>listctrl_8262_8h.html</anchorfile>
      <anchor>4c2f27438b31e89513725b66b71d4243</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>wxImageList</type>
      <name>wxImageListType</name>
      <anchorfile>listctrl_8262_8h.html</anchorfile>
      <anchor>7c4bdb663f15c79e43028a92113efc48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ExternalConn.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ExternalConn_8cpp</filename>
    <class kind="class">CECServerSocket</class>
    <member kind="enumvalue">
      <name>SERVER_ID</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>bc5c98fcc1211af2b80116dd6e0a035dcc9d7d342c77b23067cdb9f0a900fa2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_StatRequest</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>c0632ba3aece67a9b7e6db027c84bdce</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetSharedFiles</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>46d1064307a95310293ac52b7ba3c17f</anchor>
      <arglist>(const CECPacket *request, CKnownFile_Encoder_Map &amp;encoders)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetSharedFiles</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>b453fff88ba855671a63cc27254551a2</anchor>
      <arglist>(CKnownFile_Encoder_Map &amp;encoders, CObjTagMap &amp;tagmap)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetWaitQueue</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>ef56d0f1525d1b2b82bac42efe95f649</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetWaitQueue</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>c024be528e00f343d1d84461db7189c4</anchor>
      <arglist>(CObjTagMap &amp;tagmap)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetUpQueue</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>43c90f67fdcdd446d364ea8d0710be43</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetUpQueue</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>72fdb295643506fceecc1b4265a03e66</anchor>
      <arglist>(CObjTagMap &amp;tagmap)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetDownloadQueue</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>c54ee77a71533053ecb9faaf30118d88</anchor>
      <arglist>(CPartFile_Encoder_Map &amp;encoders, CObjTagMap &amp;tagmap)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_GetDownloadQueue</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>e4dd1e50a0d4f9b8bc6a0a0dfb11b354</anchor>
      <arglist>(const CECPacket *request, CPartFile_Encoder_Map &amp;encoders)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_PartFile_Cmd</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>1094884b384ad7090a4e97aebb701d26</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Server_Add</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>a9dde2409e5df8c04502f66cfd2618c9</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Server</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>87ddc8c3fce111cd47c2852093cfdd05</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Search_Results</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>836be5894eb0bbf3de3c0278f9dbccd4</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Search_Results</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>4f8e13e48f2ff9d6d7c9f3eb55080467</anchor>
      <arglist>(CObjTagMap &amp;tagmap)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Search_Results_Download</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>c2b82bcf18d529f9e594d67c58d6984c</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Search_Stop</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>b466b9128d08a63743081e9283bb3634</anchor>
      <arglist>(const CECPacket *WXUNUSED(request))</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Search</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>0b0833a8350ea0a4c6812b67f07d9d22</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Set_SharedFile_Prio</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>cc891219e37aa112053ad06b17f10f4f</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>Get_EC_Response_Kad_Connect</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>2dfd310c7a1985a98ec5a22d7a45cf43</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>CECPacket *</type>
      <name>GetStatsGraphs</name>
      <anchorfile>ExternalConn_8cpp.html</anchorfile>
      <anchor>8c5a32695a01025f2b0bb03871f87258</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ExternalConn.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ExternalConn_8h</filename>
    <class kind="class">CFileEncoderMap</class>
    <class kind="class">CPartFile_Encoder</class>
    <class kind="class">CKnownFile_Encoder</class>
    <class kind="class">CTagSet</class>
    <class kind="class">CObjTagMap</class>
    <class kind="class">ExternalConn</class>
    <member kind="typedef">
      <type>CFileEncoderMap&lt; CPartFile, CPartFile_Encoder, CDownloadQueue &gt;</type>
      <name>CPartFile_Encoder_Map</name>
      <anchorfile>ExternalConn_8h.html</anchorfile>
      <anchor>ae9df42aa3cbff02c04968a0e02f7ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CFileEncoderMap&lt; CKnownFile, CKnownFile_Encoder, CSharedFileList &gt;</type>
      <name>CKnownFile_Encoder_Map</name>
      <anchorfile>ExternalConn_8h.html</anchorfile>
      <anchor>27a97f55f338595ef1b3431001e3b36b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ExternalConnector.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ExternalConnector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ExternalConnector.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ExternalConnector_8h</filename>
    <class kind="class">CCommandTree</class>
    <class kind="class">CimuleExternalConnector</class>
    <member kind="define">
      <type>#define</type>
      <name>CMD_DEPRECATED</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>98effc331418f3f9814230f46a03460e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_OK</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>bb50905ce8538a1ee8952ff664a7a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ID_QUIT</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>7c4d6f918cfc320cd8fd43708228b034</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ID_HELP</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>50a69c03155a1aaccc76904ad3407e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ERR_SYNTAX</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>d70f277abb0c19dfb0d77ef5acc71af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ERR_PROCESS_CMD</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>27bab5fb8f918313f6b38f577571a549</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ERR_NO_PARAM</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>d8f5d1d726118a88f45c98d2815c9c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ERR_MUST_HAVE_PARAM</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>8596817b20f7f21b22d1fe726c2bd845</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ERR_INVALID_ARG</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>7d36ae38b3e93c0896a9b83686dbbcf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMD_ERR_INCOMPLETE</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>9442a1eab547aab6955358c45814015c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; const CCommandTree * &gt;</type>
      <name>CmdList_t</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>598e85a3add5c670feabf1fb682b9ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; const CCommandTree * &gt;::iterator</type>
      <name>CmdPos_t</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>e1909a0c743be9de5860bb5180a6486f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; const CCommandTree * &gt;::const_iterator</type>
      <name>CmdPosConst_t</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>fed399b690042dc2cc2acdfd3be61a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Params</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>b126c13bc335f4a996ef88c85aec7a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_PARAM_NEVER</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>b126c13bc335f4a996ef88c85aec7a2413b7a9656c2c82c470d04ca5d90ed2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_PARAM_OPTIONAL</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>b126c13bc335f4a996ef88c85aec7a244d8f3728d0964673f6a727cb26ae09be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_PARAM_ALWAYS</name>
      <anchorfile>ExternalConnector_8h.html</anchorfile>
      <anchor>b126c13bc335f4a996ef88c85aec7a2412bf4099c81e80bb7df4e9a8e720ddac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileDetailDialog.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileDetailDialog_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>ID_MY_TIMER</name>
      <anchorfile>FileDetailDialog_8cpp.html</anchorfile>
      <anchor>7523493983b99c51920d5ab57e2b1843</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LVCFMT_LEFT</name>
      <anchorfile>FileDetailDialog_8cpp.html</anchorfile>
      <anchor>c02a36e4e42df4f6b64d062ec3122025</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EVT_BUTTON</name>
      <anchorfile>FileDetailDialog_8cpp.html</anchorfile>
      <anchor>f74127f78f827dcdde216291886e5e34</anchor>
      <arglist>(IDC_CMTBT, CFileDetailDialog::OnBnClickedShowComment) EVT_BUTTON(IDC_RENAME</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDigit</name>
      <anchorfile>FileDetailDialog_8cpp.html</anchorfile>
      <anchor>12e3cba460a47954348bae9e24a8049c</anchor>
      <arglist>(const wxChar ch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsWordSeparator</name>
      <anchorfile>FileDetailDialog_8cpp.html</anchorfile>
      <anchor>73987a81ddd496aa2520a3a37676e046</anchor>
      <arglist>(const wxChar ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReplaceWord</name>
      <anchorfile>FileDetailDialog_8cpp.html</anchorfile>
      <anchor>ca8c2bcba0d03602f189f0e955641acf</anchor>
      <arglist>(wxString &amp;str, const wxString &amp;replaceFrom, const wxString &amp;replaceTo, bool numbers=false)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileDetailDialog.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileDetailDialog_8h</filename>
    <class kind="class">CFileDetailDialog</class>
    <class kind="struct">CFileDetailDialog::SourcenameItem</class>
  </compound>
  <compound kind="file">
    <name>FileDetailListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileDetailListCtrl_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>LVCFMT_LEFT</name>
      <anchorfile>FileDetailListCtrl_8cpp.html</anchorfile>
      <anchor>c02a36e4e42df4f6b64d062ec3122025</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>wxLIST_STATE_DESELECTED</name>
      <anchorfile>FileDetailListCtrl_8cpp.html</anchorfile>
      <anchor>c9e84571eceed117bf7f8070665d895d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EVT_LIST_ITEM_SELECTED</name>
      <anchorfile>FileDetailListCtrl_8cpp.html</anchorfile>
      <anchor>f95685c1380b52ee043f54bc35b67bb3</anchor>
      <arglist>(IDC_LISTCTRLFILENAMES, CFileDetailListCtrl::OnSelect) CFileDetailListCtrl</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileDetailListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileDetailListCtrl_8h</filename>
    <class kind="class">CFileDetailListCtrl</class>
    <class kind="struct">CFileDetailListCtrl::SourcenameItem</class>
  </compound>
  <compound kind="file">
    <name>FileFunctions.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileFunctions_8cpp</filename>
    <member kind="typedef">
      <type>std::map&lt; wxString, FSCheckResult &gt;</type>
      <name>CPathCache</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>b2692e4440d719ff862d493a351d0c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>UTF8_Stat</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>9517200dc740b7c9f0237f3a22aebb82</anchor>
      <arglist>(const wxString &amp;file_name, struct stat *buf)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UTF8_MoveFile</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>61d657ef37dcc8f57800e2331b92c44c</anchor>
      <arglist>(const wxString &amp;from, const wxString &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UTF8_RemoveFile</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>60a53b47dd4d4e273070d3bb8a369992</anchor>
      <arglist>(const wxString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UTF8_CopyFile</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>e2ffb199f4cabfa597ec26735ad810b0</anchor>
      <arglist>(const wxString &amp;from, const wxString &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>off_t</type>
      <name>GetFileSize</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>78881a2de261143912b7a8239fbcb330</anchor>
      <arglist>(const wxString &amp;fullPath)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>GetLastModificationTime</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>ad56d1dd80651a8caaf87650bec68f75</anchor>
      <arglist>(const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckDirExists</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>8a42c6bdcffc8e1085f9a2109925d91c</anchor>
      <arglist>(const wxString &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckFileExists</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>6a6e10323031e5acea7eca396e638dfa</anchor>
      <arglist>(const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BackupFile</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>e0bcbe778c108b66d3f5924be2b83ac7</anchor>
      <arglist>(const wxString &amp;filename, const wxString &amp;appendix)</arglist>
    </member>
    <member kind="function">
      <type>EFileType</type>
      <name>GuessFiletype</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>2f1a37483c7164c98da859be81d2fb8d</anchor>
      <arglist>(const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UnpackZipFile</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>517ea37168321af530c0ea2050618874</anchor>
      <arglist>(const wxString &amp;file, const wxChar *files[])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UnpackGZipFile</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>b7c65e580b3c53c80028cd16fc7db78a</anchor>
      <arglist>(const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>UnpackResult</type>
      <name>UnpackArchive</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>fd99ef78487138798d385b550010cd81</anchor>
      <arglist>(const wxString &amp;file, const wxChar *files[])</arglist>
    </member>
    <member kind="function">
      <type>FSCheckResult</type>
      <name>DoCheckFileSystem</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>e93f451a44473475d565cfce688c8006</anchor>
      <arglist>(const wxString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>FSCheckResult</type>
      <name>CheckFileSystem</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>532858ef90affd07d47464b417f5dcec</anchor>
      <arglist>(const wxString &amp;path)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>FILE_COPY_BUFFER</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>db6c39b088e94cab8cbb4c70de4ec354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxMutex</type>
      <name>s_lock</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>4c462b8b9484f44ab10c62e9ed0bbd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CPathCache</type>
      <name>s_cache</name>
      <anchorfile>FileFunctions_8cpp.html</anchorfile>
      <anchor>48ffdb63cb8df90782c059f4465cb75c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileFunctions.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileFunctions_8h</filename>
    <class kind="class">CDirIterator</class>
    <member kind="typedef">
      <type>std::pair&lt; bool, EFileType &gt;</type>
      <name>UnpackResult</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>c680db70237d83943104d9efa4d342f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EFileType</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>24c954d23b027d1a0df2682bc18a77b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EFT_Text</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>24c954d23b027d1a0df2682bc18a77b2fd63dbd1b29225c863a28d2fe790c2eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EFT_Zip</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>24c954d23b027d1a0df2682bc18a77b23662e739dd285d17d6991a386d6f9c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EFT_GZip</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>24c954d23b027d1a0df2682bc18a77b279a67b1e5cbfa1e9b913a76c9742bf35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EFT_Met</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>24c954d23b027d1a0df2682bc18a77b27bf3442845c8328cfd8a65bfdf256bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EFT_Unknown</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>24c954d23b027d1a0df2682bc18a77b2337acb0f33af8515afdd2036cd70bd66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FSCheckResult</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>383262302defd1be1b18153c995cf40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FS_IsFAT32</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>383262302defd1be1b18153c995cf40f9c08e28a3421072a6ec6587ba36493c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FS_NotFAT32</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>383262302defd1be1b18153c995cf40fceb35227b6d008d862a664cd3574f60d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FS_Failed</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>383262302defd1be1b18153c995cf40f47a18013e708199b6eac14740c2d4cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>UTF8_Stat</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>9517200dc740b7c9f0237f3a22aebb82</anchor>
      <arglist>(const wxString &amp;file_name, struct stat *buf)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UTF8_MoveFile</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>61d657ef37dcc8f57800e2331b92c44c</anchor>
      <arglist>(const wxString &amp;from, const wxString &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UTF8_CopyFile</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>e2ffb199f4cabfa597ec26735ad810b0</anchor>
      <arglist>(const wxString &amp;from, const wxString &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BackupFile</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>e0bcbe778c108b66d3f5924be2b83ac7</anchor>
      <arglist>(const wxString &amp;filename, const wxString &amp;appendix)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>GetLastModificationTime</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>ad56d1dd80651a8caaf87650bec68f75</anchor>
      <arglist>(const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>off_t</type>
      <name>GetFileSize</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>78881a2de261143912b7a8239fbcb330</anchor>
      <arglist>(const wxString &amp;fullPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckDirExists</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>8a42c6bdcffc8e1085f9a2109925d91c</anchor>
      <arglist>(const wxString &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckFileExists</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>6a6e10323031e5acea7eca396e638dfa</anchor>
      <arglist>(const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>UnpackResult</type>
      <name>UnpackArchive</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>fd99ef78487138798d385b550010cd81</anchor>
      <arglist>(const wxString &amp;file, const wxChar *files[])</arglist>
    </member>
    <member kind="function">
      <type>FSCheckResult</type>
      <name>CheckFileSystem</name>
      <anchorfile>FileFunctions_8h.html</anchorfile>
      <anchor>532858ef90affd07d47464b417f5dcec</anchor>
      <arglist>(const wxString &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileLock.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FileLock_8h</filename>
    <class kind="class">CFileLock</class>
  </compound>
  <compound kind="file">
    <name>Friend.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Friend_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Friend.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Friend_8h</filename>
    <class kind="class">CFriend</class>
    <member kind="define">
      <type>#define</type>
      <name>FF_NAME</name>
      <anchorfile>Friend_8h.html</anchorfile>
      <anchor>4bee89a4355fe06b0cf8f8881475960c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FriendList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FriendList_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>FriendList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FriendList_8h</filename>
    <class kind="class">CFriendList</class>
    <member kind="typedef">
      <type>std::list&lt; CFriend * &gt;</type>
      <name>FriendList</name>
      <anchorfile>FriendList_8h.html</anchorfile>
      <anchor>fd8a0cb6c3c7ecae1880b98f04672955</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FriendListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FriendListCtrl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>FriendListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>FriendListCtrl_8h</filename>
    <class kind="class">CDlgFriend</class>
    <class kind="class">CFriendListCtrl</class>
  </compound>
  <compound kind="file">
    <name>GetTickCount.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>GetTickCount_8cpp</filename>
    <member kind="function">
      <type>uint32</type>
      <name>GetTickCountFullRes</name>
      <anchorfile>GetTickCount_8cpp.html</anchorfile>
      <anchor>90a4babd1f1f6e27065ad1fd918e3404</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartTickTimer</name>
      <anchorfile>GetTickCount_8cpp.html</anchorfile>
      <anchor>28563c06217381f425e21d89af004a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopTickTimer</name>
      <anchorfile>GetTickCount_8cpp.html</anchorfile>
      <anchor>23b7a11f5e04d79b9fe4e62d16cb2b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetTickCount</name>
      <anchorfile>GetTickCount_8cpp.html</anchorfile>
      <anchor>e971fd55e95f8299962adc4ac489d635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetTickCount64</name>
      <anchorfile>GetTickCount_8cpp.html</anchorfile>
      <anchor>2bb8758f1c684842229dd25265fabe8e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GetTickCount.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>GetTickCount_8h</filename>
    <member kind="function">
      <type>uint32</type>
      <name>GetTickCount</name>
      <anchorfile>GetTickCount_8h.html</anchorfile>
      <anchor>e971fd55e95f8299962adc4ac489d635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetTickCountFullRes</name>
      <anchorfile>GetTickCount_8h.html</anchorfile>
      <anchor>137321f1472888373dbedaa0021f7be1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetTickCount64</name>
      <anchorfile>GetTickCount_8h.html</anchorfile>
      <anchor>2bb8758f1c684842229dd25265fabe8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartTickTimer</name>
      <anchorfile>GetTickCount_8h.html</anchorfile>
      <anchor>28563c06217381f425e21d89af004a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopTickTimer</name>
      <anchorfile>GetTickCount_8h.html</anchorfile>
      <anchor>23b7a11f5e04d79b9fe4e62d16cb2b37</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GuiEvents.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>GuiEvents_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>GuiEvents.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>GuiEvents_8h</filename>
    <class kind="class">GUIEvent</class>
    <member kind="define">
      <type>#define</type>
      <name>Notify_0_ValEvent</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>b65224930f036ad4667b46e7577eed58</anchor>
      <arglist>(id)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_1_ValEvent</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>0fe74743d84e5f68b8cc45e246397aac</anchor>
      <arglist>(id, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_2_ValEvent</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>857ed33909522377e445dbef49f0ea3f</anchor>
      <arglist>(id, val0, val1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_3_ValEvent</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>e9dad6b78a205c9ae17966671f8aa03b</anchor>
      <arglist>(id, val0, val1, val2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SharedFilesShowFile</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>adea392250b51dc47a3860800d71f13b</anchor>
      <arglist>(file)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SharedFilesRemoveFile</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>a10b6c97d9b6a9994ded98676c8f9048</anchor>
      <arglist>(file)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SharedFilesRemoveAllItems</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>e3efc419ed63045566f6a3d0a95b8559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SharedFilesShowFileList</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>6a080251729bc883dfa78eb795599794</anchor>
      <arglist>(list)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SharedFilesSort</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>4cd2eb91f7c59f81e2017e8404da8601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SharedFilesUpdateItem</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>0ba20d9328d4bca53982a2dafa71fa9c</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlUpdateItem</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>4f158cb3a5c94293108671804c398350</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlAddFile</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f128b8f3993be3b82ff4487b3aec5d14</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlAddSource</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>af9d55c921ce65d298d261cf96a2fe14</anchor>
      <arglist>(p0, p1, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlRemoveFile</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>6e33cbd01f0a49e25353ea97a5deaa5c</anchor>
      <arglist>(ptr0)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlRemoveSource</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>e68cdf31da27c6e99a3cf85c540f705f</anchor>
      <arglist>(ptr0, ptr1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlHideSource</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>b8dbdfc36151cd70ab6a2ece9ef2305f</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_DownloadCtrlSort</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bd53b1fef78d3132e912ec3ab539731c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_UploadCtrlAddClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>921c1ba6491f4c72801ca3ac7aa1b0d6</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_UploadCtrlRefreshClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>464391bc31ec3c9b1601f5b10c026703</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_UploadCtrlRemoveClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>154c60b69ed96472f7259332bf661a1c</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ClientCtrlAddClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>cb9e65b4f0666ccff4df8f49a02d6af8</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ClientCtrlRefreshClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>564d0b5b47dbe27cbdac06f048d8b1ef</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ClientCtrlRemoveClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>97f5966978e775413d852c2de790b2fa</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerAdd</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>b1b5698fbb4cc36ae6768f5b451712b6</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerRemove</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>7291a2bdbc076f3df9e7060b53a77c82</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerRemoveDead</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>1550cf4d33cd69d343a04c2cb9ddcef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerRemoveAll</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>c8f19699cba53eedf62d68277a2e5590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerHighlight</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>c3659149ddfdba82409cb8bccdb50c0a</anchor>
      <arglist>(ptr, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerRefresh</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>02cd39338ccf3ffc549a191c1c3f5b69</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerFreeze</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>e523934b7e472d40a76ddb1def6de170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerThaw</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ec60623dcafa4f4653cee8d8150c1e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerUpdateED2KInfo</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>b64c3d9eb903f1d62a37cf72129f86c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ServerUpdateKadKInfo</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>da00dc4b9fa993e14648a9c6694928d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_QlistAddClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>5501158bb53a25951def9868044f8ab5</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_QlistRemoveClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>e62aad78e45a8ca6555859ffe41c1875</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_QlistRefreshClient</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>d847efd911785306ec67b8fcae37e61e</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_QlistThaw</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ed5b805b37abe0f45d23e7c9977eed7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SearchCancel</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>2544e96c0f1a49b40014a14cf7f1b30b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_SearchLocalEnd</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>7dc8a76d020fc048739ba7acfb85c155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_Search_Update_Sources</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>93f8274321b73e14647ef17599b86d20</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_Search_Add_Result</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>79ddc85c72212c89f257b1308c884e4b</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ChatRefreshFriend</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>6010973b6423bbb9ff7b29769259f60b</anchor>
      <arglist>(val0, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ChatConnResult</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>8e7f2191ecfcabacb1699325a644322a</anchor>
      <arglist>(val0, dest, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ChatProcessMsg</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>2073fad4d1f6dd4655eb5472dbf7d8f1</anchor>
      <arglist>(val0, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ShowConnState</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>23d7daf8bac00316f9c42ea57e9d40e3</anchor>
      <arglist>(val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ShowUserCount</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>468f50c1e72fa3b0b1a6626627990009</anchor>
      <arglist>(str)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ShowQueueCount</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>65e7ac6d1541af7416022908b87efbc8</anchor>
      <arglist>(val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ShowUpdateCatTabTitles</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>87b1ec2f8f346468fde906158e9d9b82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_ShowGUI</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>caa8eb069d90b3f3f08d569e9f88bab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_CategoryAdded</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>d64b759a742c6bd1022b55a37172e1ab</anchor>
      <arglist>(cat)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_CategoryUpdate</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca1fed7fd256976a1f02d9b896bc229b</anchor>
      <arglist>(cat)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_CategoryDelete</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>afb11ab9117773603791f4bb1224f45a</anchor>
      <arglist>(cat)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_KadNode_Added</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>26313dd1fe9efad7c0fdd69b35f8957e</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Notify_KadNode_Deleted</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>42368f0ff8601002f040ebdc6e19f5b9</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_RemoveNoNeeded</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>8d9bbedd10036f1f35ad362d90c8ef2d</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_RemoveFullQueue</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>fc38f20f07e16070e1074af0acb8cd25</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_RemoveHighQueue</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>1f8e1207d1b48596be9cf6b4729753cc</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_SourceCleanup</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>7e24fc6b82a3ddcb163fa55eaa3ce3dd</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Swap_A4AF</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>35ebfad6e00d07f5125d2f8e2defef89</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Swap_A4AF_Auto</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>d3f4514043c5c3ea2bb4e26bc6f51271</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Swap_A4AF_Others</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>c1bbc6bf57bda3da31f63f01c58aab84</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Pause</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>0430a4a8c061b915de325150786b59cf</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Resume</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>afa6ef3d08412b9a5f72878e79043d81</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Stop</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>2b48a251e0e6cd5fcfa887605ef9796e</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_PrioAuto</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>6be2b7d194b3a8e21e3b5d6895851043</anchor>
      <arglist>(ptr, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_PrioSet</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>2f70cd29e5805c894ba074f61eb081ab</anchor>
      <arglist>(p, v0, v1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_Delete</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>6a0bd50a46a4ef833d50f3306954d000</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_PartFile_SetCat</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>38ecf6d56f007e250061891d84f664f7</anchor>
      <arglist>(ptr, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_KnownFile_Up_Prio_Set</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>b3af54150fab36a0cc2e8bd8487cf3f4</anchor>
      <arglist>(ptr, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_KnownFile_Up_Prio_Auto</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>d7e924f279d3bba7ab7ef86772ae54a1</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_KnownFile_Comment_Set</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>0bd3bfca86a5f473075ab8a3cc8a61ee</anchor>
      <arglist>(ptr, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_Search_Add_Download</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>c4ed02bcbbf74390388d446085eef387</anchor>
      <arglist>(ptr, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_Search_Update_Progress</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>6a67d38e2e11218f19a7b1697622c8ca</anchor>
      <arglist>(val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_Download_Set_Cat_Prio</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>204dd4329b353ba90cecd49601059d67</anchor>
      <arglist>(cat, pri)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CoreNotify_Download_Set_Cat_Status</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>c18f9bfc6f1ee53f73f6d3a00d49f7ea</anchor>
      <arglist>(cat, st)</arglist>
    </member>
    <member kind="enumeration">
      <name>GUI_Event_ID</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_EVENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055ec69f7865c8af05e9764aaf97e9ec78d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QLIST_CTRL_ADD_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705528c9f0b832582437446f274e2516d7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QLIST_CTRL_RM_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705505d2662910b1b68cb7caa30685f338e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QLIST_CTRL_REFRESH_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705524720c9992aaeffbb42c107f7e764eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAREDFILES_UPDATE_ITEM</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70550e7e27404f7545555b1e04d85f6f2b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAREDFILES_REMOVE_ITEM</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70557f2135b14f623cd8de7f7e3e43e48eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAREDFILES_REMOVE_ALL_ITEMS</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b025db2eec1b575f14de97190cb22f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAREDFILES_SHOW_ITEM</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055d8340ae0252507c6af5b491c41ad67b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAREDFILES_SHOW_ITEM_LIST</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055279390df07bb81b009c7fa8e31be73d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHAREDFILES_SORT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055c98acb910f62c264425fbc2a948e6854</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_UPDATEITEM</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70559f69529a5ff01ff82c4a37f0920aa0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_ADD_FILE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055df097139811c12417f6626d027ebe420</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_ADD_SOURCE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70550b6f27e333e89249268c1a2f67b2a1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_RM_FILE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055eb0c02b6d121ffbbfce88a905f72037c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_RM_SOURCE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705586f33b1c9ec241aa780371b6e9c9f51c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_HIDE_SOURCE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055e6a2b585bf61308e7b3bf327106ff306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_CTRL_SORT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70552bc98feced8e4d3fa82a3fac33a13a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_CTRL_ADD_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705595c9bd8a107293fab19fde041d71105f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_CTRL_REFRESH_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705566b197bdd337d202e9cc4863bd94f9d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_CTRL_RM_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70555962b28e6bf69e6d60f4a3fbab7fea90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_CTRL_ADD_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705518891b565a09b6e2046dd5113d439f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_CTRL_REFRESH_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70556c7aa9b484bc890feb905f81bed92c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_CTRL_RM_CLIENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055127ece137acfc9ede2d5257bfca648f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_ADD</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b1d439bbf6cd6470ed8bd8ffacbfae12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_RM</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70555b0253703202dcd7bdb450b446cf0ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_RM_DEAD</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055a58435b42fd8edf67a90588548e71fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_RM_ALL</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70555d6f595d053d3bb9d911b8d4748349ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_HIGHLIGHT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70550cb74110fc3a6a5c9416171a634c874b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_REFRESH</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b00db906eb96d12cc83756241e1e0f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_FREEZE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055e8f94e10155a19129fd3106aa2ba7374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_THAW</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055d682da324177812fa31b933c2124d736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_UPDATEED2KINFO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055501c213f3f89d98f356213160662fa82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_UPDATEKADINFO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b40f48f1386567844a7e2ad647053f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCH_CANCEL</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70557d55690579155f1644c7bab03e9b7222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCH_LOCAL_END</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70559c5fa227dbb7b6f6d8ad0bf03ca1e481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_REFRESH_FRIEND</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055f16befe4f54b1bdc582caa11853b8b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_FIND_FRIEND</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705552c263f5941b75ba4f4a282c69bd3c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_CONN_RESULT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70551accdbe2fb6bddf28e90f3267bdfeffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_PROCESS_MSG</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055e720f202553582abddf7afa8d4d7f94b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_CONN_STATE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b735aa9dff63549868e027974b4dd603</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_USER_COUNT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055687a85d4708cd616093322cef27192a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_QUEUE_COUNT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70552fcccb108ea85469aed85c5f10abf8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_UPDATE_CAT_TABS</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b4167cfa91a790406c104edbc49e2550</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_GUI</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70556cbfb350372c105ffe38b4e7dfaaa1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORY_ADD</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70559be5805f8ccaa88ac6779d6ef2ef73fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORY_UPDATE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b76ba401d486aebe82ffadb8c212128e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CATEGORY_DELETE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70558ee331dc15ce33e1bb32cfba4d3e990b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADDLOGLINE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70552bec57773351309ee99b8e7fb322c08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADDDEBUGLOGLINE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055fa97b8d22a0192b099e91c61ec06e93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_REMOVE_NO_NEEDED</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b054dd743f5d8c1b92491f3376de9f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_REMOVE_FULL_QUEUE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705572a0b95cf37a24ece8d49cbfa0cc590b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_REMOVE_HIGH_QUEUE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70552418d2a2ac9c20aeaad9b7d5122db559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_CLEANUP_SOURCES</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b383d561607ac82675956d1f04a6e766</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_SWAP_A4AF_THIS</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055ee34f1a05053aa6ee2b622996796fd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_SWAP_A4AF_THIS_AUTO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055009bb2479163afe0d7b248c9eb05e978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_SWAP_A4AF_OTHERS</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055632b87a3eb740692e356ba800094e5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_PAUSE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705556a5b586e96ead5eb4a514d465c5fbe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_RESUME</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055d51ac750880afab873f74819e7e4208d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_STOP</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055ab919cfd7b4d6dc7fd2639b392cd531d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_PRIO_AUTO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055f7667e3347dbcc78247acce4973fd8d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_PRIO_SET</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055acc14127717be9642c50e686744ebc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_DELETE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70556c36ef6716bc133689a1103954fd9929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTFILE_SET_CAT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055e04bf51badef43e6974eb29a8a19e3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KNOWNFILE_SET_UP_PRIO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb705571e9aa8f575bade26b6786b9694ebd62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KNOWNFILE_SET_UP_PRIO_AUTO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70552c2a84596afccb18a90186c9fea2c1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KNOWNFILE_SET_COMMENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055882506468b7996ac2d178a0872ec4e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCH_ADD_TO_DLOAD</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055a5f2aabaeac9ae9139683c87ac890bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCH_ADD_RESULT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055a36751a8f2d81d08ddfffd21d5ff3216</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCH_UPDATE_SOURCES</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055b26ff82641d53263718a96552af9c50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCH_UPDATE_PROGRESS</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70556d2af6b0f7ccba1482877177ceb02908</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DLOAD_SET_CAT_PRIO</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055a9513c2dfb73a6216b8c12d0b71ada82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DLOAD_SET_CAT_STATUS</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb70557fa56f90ee40ee1570322f1907549c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KAD_NODE_ADD</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055e717becc58f69b55aa54a3abf94b3d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KAD_NODE_DELETE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>ca58864fcd14772a6251d00172fb7055a9cb4c2863244737d2fc7ff515028cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Core_Event_ID</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTIFY_EVENT</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a440984be3f460f7bdc1f4bcea0c83181f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_HASHING_FINISHED</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a49d99a8435381f672db8cff2387a930b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_HASHING_SHUTDOWN</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a456ada9255c9d58041ed397f8e62f2444</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_COMPLETION_FINISHED</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a48fe2432f535455c69aafa8d938990fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTTP_DOWNLOAD_FINISHED</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a46f430dbd5fc1cf368ec1d7f3013e1d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_DNS_DONE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a4b81cfc95b667ff28eb4db64f1e463b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP_DNS_DONE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a4cddf8e5997bab42ee36bbeef8fc34ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_DNS_DONE</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a4cb8f38779597f352418460771b31e9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_TIMER</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>f68652e7a27d33f3e8761d4110dda9a4811c2a26881d48cc1a77300cd79a918e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HTTP_Download_File</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bb0b40293347d684e1c92a0422acb038</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTTP_IPFilter</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bb0b40293347d684e1c92a0422acb0384a5f662ecb7c7910add2b09532e02fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTTP_ServerMet</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bb0b40293347d684e1c92a0422acb038fccc3dac63ceafe4b7b3fda43348a9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTTP_ServerMetAuto</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bb0b40293347d684e1c92a0422acb038a9993936c34f20435611da3ab902463c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTTP_VersionCheck</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bb0b40293347d684e1c92a0422acb0381c9d02ed347989d2eb2848d1621bacbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTTP_NodesDat</name>
      <anchorfile>GuiEvents_8h.html</anchorfile>
      <anchor>bb0b40293347d684e1c92a0422acb03808f729bca50ff8118ad344530e878b86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HTTPDownload.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>HTTPDownload_8cpp</filename>
    <class kind="class">CHTTPDownloadDialog</class>
    <member kind="typedef">
      <type>wxGauge</type>
      <name>wxGaugeControl</name>
      <anchorfile>HTTPDownload_8cpp.html</anchorfile>
      <anchor>2027c36dc741fd8846b93fee7edaf3a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HTTPDownload.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>HTTPDownload_8h</filename>
    <class kind="class">CHTTPDownloadThread</class>
  </compound>
  <compound kind="file">
    <name>I2PConnectionManager.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>I2PConnectionManager_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DELAY_BEFORE_RECONNECTION</name>
      <anchorfile>I2PConnectionManager_8cpp.html</anchorfile>
      <anchor>2bfb6b76dce9c32f20711bcfb571875d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>I2PConnectionManager.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>I2PConnectionManager_8h</filename>
    <class kind="class">I2PConnectionManager</class>
    <class kind="class">I2PConnectionManager::Delay</class>
  </compound>
  <compound kind="file">
    <name>amule-gui.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imule-gui_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>amule-remote-gui.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imule-remote-gui_8cpp</filename>
    <member kind="function">
      <type></type>
      <name>DEFINE_LOCAL_EVENT_TYPE</name>
      <anchorfile>imule-remote-gui_8cpp.html</anchorfile>
      <anchor>43b760355c52d5df13be90322eab5be5</anchor>
      <arglist>(wxEVT_EC_INIT_DONE)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amule-remote-gui.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imule-remote-gui_8h</filename>
    <class kind="class">CEConnectDlg</class>
    <class kind="class">wxECInitDoneEvent</class>
    <class kind="class">CPreferencesRem</class>
    <class kind="class">CRemoteContainer</class>
    <class kind="class">CServerConnectRem</class>
    <class kind="class">CServerListRem</class>
    <class kind="class">CUpDownClientListRem</class>
    <class kind="class">CUpQueueRem</class>
    <class kind="class">CDownQueueRem</class>
    <class kind="class">CSharedFilesRem</class>
    <class kind="class">CKnownFilesRem</class>
    <class kind="class">CClientCreditsRem</class>
    <class kind="class">CClientListRem</class>
    <class kind="class">CIPFilterRem</class>
    <class kind="class">CSearchListRem</class>
    <class kind="class">CStatsUpdaterRem</class>
    <class kind="class">CListenSocketRem</class>
  </compound>
  <compound kind="file">
    <name>amule.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imule_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>RLIMIT_RESOURCE</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>84288f227a67eb50ce2c0c9ac8cdfc1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>UnlimitResource</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>93cbcecf0dca6cefa82ac3775c707299</anchor>
      <arglist>(RLIMIT_RESOURCE resType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetResourceLimits</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>dc9dfe94a7beccc063848ceb9fc3a5b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnShutdownSignal</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>0edbb7f81651b796ab2bf72c2d75b568</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, wxString &gt;</type>
      <name>CheckMuleDirectory</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>d3a145df9a818174fac2c5705ff54794</anchor>
      <arglist>(const wxString &amp;desc, const wxString &amp;dir, const wxString &amp;fallback)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>wxFindAppPath</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>8948baa00b93f03987d151ade3a4bc98</anchor>
      <arglist>(const wxString &amp;argv0, const wxString &amp;cwd, const wxString &amp;appVariableName)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>g_shutdownSignal</name>
      <anchorfile>imule_8cpp.html</anchorfile>
      <anchor>23c9e6c4d4eda15c9be080cb52f4711e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amule.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imule_8h</filename>
    <class kind="class">CimuleApp</class>
    <class kind="struct">CimuleApp::QueuedLogLine</class>
    <class kind="class">CamuleGuiBase</class>
    <class kind="class">CamuleGuiApp</class>
    <member kind="define">
      <type>#define</type>
      <name>theApp</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>f85ad3d4c99cc37fc8c203ca7ec6956a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMULE_APP_BASE</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>2955cd8ead43cfe582c08cf5f912e881</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONNECTED_ED2K</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>b9215438037b5fdf64a9e4ad82b82635</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONNECTED_KAD_NOT</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>9b6d459f6f6ca4bdfa6e8197df469b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONNECTED_KAD_OK</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>11110b6c6bc4f7e75818025e13f1417f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CALL_APP_DATA_LOCK</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>6abfe24227ea294c4faf1ece263ba35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>APPState</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>42e83d2ee9e96d3d98b6adc56d3ab1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APP_STATE_RUNNING</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>42e83d2ee9e96d3d98b6adc56d3ab1ffc48327d4fb44855237ecf12064f470d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APP_STATE_SHUTINGDOWN</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>42e83d2ee9e96d3d98b6adc56d3ab1ff0b0fc9ab8180bb689b749d4c33a2529b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APP_STATE_STARTING</name>
      <anchorfile>imule_8h.html</anchorfile>
      <anchor>42e83d2ee9e96d3d98b6adc56d3ab1ff069ea743539d6ec6999807f5909a8c6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>iMule.xpm</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>iMule_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>iMule_xpm</name>
      <anchorfile>iMule_8xpm.html</anchorfile>
      <anchor>9cac18b1fedd0e81a2a7dbca7425c3d2</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amuled.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imuled_8cpp</filename>
    <class kind="class">CSocketSet</class>
  </compound>
  <compound kind="file">
    <name>amuleDlg.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imuleDlg_8cpp</filename>
    <class kind="struct">SkinItem</class>
    <member kind="define">
      <type>#define</type>
      <name>wxCLOSE_BOX</name>
      <anchorfile>imuleDlg_8cpp.html</anchorfile>
      <anchor>2d65b3190850686bf65daabec30482ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ClientItemNumber</name>
      <anchorfile>imuleDlg_8cpp.html</anchorfile>
      <anchor>438d74e54e97b7a8804dca584abcbc5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amuleDlg.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imuleDlg_8h</filename>
    <class kind="class">CimuleDlg</class>
    <member kind="define">
      <type>#define</type>
      <name>MP_RESTORE</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>c9da0b39adefa73a541cf3d96158e6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MP_CONNECT</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>f389226aca39fbb0a48ca0414666bfaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MP_DISCONNECT</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>c614cf0e91ece54d484175a1bbeaede6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MP_EXIT</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>62dd61c20113fddb544788d765e82993</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SIZE_X</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>f0cb7f0e04d3da9265c23a6ea6a3bb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SIZE_Y</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>db5709a6b4ca96a2477163e0f3c4e166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ClientSkinEnum</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Green_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15d73c5753536e8dd67193b0df2286548b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Red_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1524b7348ee0d7cc9fea6669fbddc12d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Yellow_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1589e15aa68c1e1e3599a2d423a9c72604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Grey_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1518966d95248dd7e1a0f4d028cd3022a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_White_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d158042260daf75b8faf77e944ffc38a7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_ExtendedProtocol_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d154409fc4f24ee16ba5dc0eb3d147d35b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_SecIdent_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d154f25e7b12a9499e51eedb71e34b659ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_BadGuy_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1553d60a91929879179e61a725ffc737b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_CreditsGrey_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d156c98e0d807406d8c86d7ad22ff9e5170</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_CreditsYellow_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d151e81ab7b5cb79945be3a8b3ef16665a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Upload_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d157b82caabecde6f50f110ce0cd6750c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Friend_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15f1f96c6458e51568b4ea1953ae1890fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_eMule_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15afcc7e1ccc12157bf70fe2fa27a5f6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_mlDonkey_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1516b38ecd07ce2666b1a0326110e82854</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_eDonkeyHybrid_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15b05c75fbfff96fed351a9d469a8f636b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_iMule_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15a26fde7b932b163e7754cdec2f0ff31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_lphant_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15a46b4ca32e7eff6b41795afe8834c2ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Shareaza_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15ace6366f33b70299599024bfe345134c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_xMule_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15124c4f0b9d53401f908e51ef01bcd8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_Unknown</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d159c4649f5a87a2c332b4af8e74eac70f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_InvalidRating_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1544a0438e5ff8aa458a97cd75da7540c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_PoorRating_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15b342ab36f00faf420dce87ab3c2632e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_GoodRating_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d1501c9c02bf7add53e6472e3b0580c12d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_FairRating_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d154b6606b561d1594451149294f6e1503e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_ExcellentRating_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d155b778dd789c8a91f5cf49a9be0c704b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client_CommentOnly_Smiley</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d157b8cbd68aba3afd2f56704c65b41c972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_SKIN_UNUSED</name>
      <anchorfile>imuleDlg_8h.html</anchorfile>
      <anchor>504babe86b7864e2cc45e38b1c2c7d15beb3fde968a4dd799ec632c1ba0df110</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleIPV4Address.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>imuleIPV4Address_8h</filename>
    <class kind="class">imuleIPV4Address</class>
  </compound>
  <compound kind="file">
    <name>inetdownload.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>inetdownload_8h</filename>
    <member kind="variable" static="yes">
      <type>static unsigned char</type>
      <name>inetDownload</name>
      <anchorfile>inetdownload_8h.html</anchorfile>
      <anchor>6e365750d347deb7639308f86cbd6754</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InternalEvents.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>InternalEvents_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>InternalEvents.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>InternalEvents_8h</filename>
    <class kind="class">CMuleInternalEvent</class>
    <member kind="define">
      <type>#define</type>
      <name>EVT_MULE_INTERNAL</name>
      <anchorfile>InternalEvents_8h.html</anchorfile>
      <anchor>f935a6c2ff5d6b0679a1a644cfaa69ae</anchor>
      <arglist>(event, id, func)</arglist>
    </member>
    <member kind="typedef">
      <type>void(wxEvtHandler::*</type>
      <name>MuleInternalEventFunction</name>
      <anchorfile>InternalEvents_8h.html</anchorfile>
      <anchor>032adb057980c46ec62d2b0350528321</anchor>
      <arglist>)(CMuleInternalEvent &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IPFilter.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>IPFilter_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>CreateDummyFile</name>
      <anchorfile>IPFilter_8cpp.html</anchorfile>
      <anchor>ea148f86bad17df809571ba76dfe8cdb</anchor>
      <arglist>(const wxString &amp;filename, const wxString &amp;text)</arglist>
    </member>
    <member kind="variable">
      <type>const wxChar *</type>
      <name>ipfilter_files</name>
      <anchorfile>IPFilter_8cpp.html</anchorfile>
      <anchor>70cddbf1c9c8d1ae8cff5dbbb72a0808</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IPFilter.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>IPFilter_8h</filename>
    <class kind="class">CIPFilter</class>
    <class kind="struct">CIPFilter::destObject</class>
  </compound>
  <compound kind="file">
    <name>KadDlg.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>KadDlg_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>KadDlg.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>KadDlg_8h</filename>
    <class kind="class">CKadDlg</class>
    <member kind="typedef">
      <type>struct UpdateInfo</type>
      <name>GraphUpdateInfo</name>
      <anchorfile>KadDlg_8h.html</anchorfile>
      <anchor>7ee525ab8703293e23872f4e5b708c33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Defines.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Defines_8h</filename>
    <namespace>Kademlia</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHTOLERANCE</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>1393f7591850ccf7d21fe07bbb86b661</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KBASE</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>62841cc683af6ccd78ef0f3ada2c622a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KK</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>f785e033fe89e7d7aeebfdb8eb3c27a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALPHA_QUERY</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>723ba317c419b5784031abd30c8c3904</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_BASE_EXPONENT</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>a36ddefabd56ea39afc3e47da7d9880c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_JUMPSTART</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>ceed794c0e4fbd4799aedd6bcac11e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HELLO_TIMEOUT</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>171a154cb30f8407e5a9e21ba1aa2a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>9dd8cb2709d78710bd42fa23df470139</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHFILE_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>9f5eff5d81e1a3d740bb8cdf851e2309</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHKEYWORD_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>a962ba0475ee9b0921df6cd1ab214123</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHNOTES_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>2289288ca4c8efe114743d4de1cbfd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHNODE_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>bdf076906abfafc0be92a99c2321923b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHNODECOMP_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>84d04d4133cad6d8c008299c8752a14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHSTOREFILE_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>17af15a523defcd1320da60a1a9e2153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHSTOREKEYWORD_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>da5b2cf96c4d1dd251b1399257332213</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHSTORENOTES_LIFETIME</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>39266017bc652cbf21f63003818583dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHFILE_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>cff0e074bac66b7172d878d84eeedbc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHKEYWORD_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>679d8f96c46938f4d1d8376f453829c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHNOTES_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>1f3400d55280e526d140e6057e549400</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHSTOREFILE_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>805533ed8428ffff703e9af939c8fc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHSTOREKEYWORD_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>c18d0a07792a1353495d006e304d6b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHSTORENOTES_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>34f034f738504678ec9196fe7d6737b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHNODECOMP_TOTAL</name>
      <anchorfile>Defines_8h.html</anchorfile>
      <anchor>92c4c7e2c970630b9a463506e967b6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>K</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>b880c1473cacb79259e4dc34cb49b4c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Entry.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Entry_8cpp</filename>
    <namespace>Kademlia</namespace>
  </compound>
  <compound kind="file">
    <name>Entry.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Entry_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CEntry</class>
  </compound>
  <compound kind="file">
    <name>Error.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Error_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CKademliaError</class>
    <member kind="define">
      <type>#define</type>
      <name>ERR_SUCCESS</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>008b2c6c21b8dba016f9375dc979ef2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_UNKNOWN</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>60d04c865fd58d86758894edca38bf30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_WINSOCK</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>e419690c023710f7804976b4a272c830</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_TCP_LISTENER_START_FAILURE</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>28bf15f4a891cec0d855035cd4964a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_UDP_LISTENER_START_FAILURE</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>18f1fea53f144c4118f2188accb0dbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_READ_ONLY</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>755153a75088553d26a5603bd73d7188</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_WRITE_ONLY</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>5aafd5740a3becf035fb53c434440481</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_END_OF_FILE</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>30fe85e9b2acbc799c01aae93fe1cafe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_BUFFER_TOO_SMALL</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>cea7fb2fadcde0b5346711ee7e32e808</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_CREATE_SOCKET_FAILED</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>e9feeeab211da9ec016f097c57d6e6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_CREATE_THREAD_FAILED</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>ffc62780268e106fb3bbd5de82861897</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_CREATE_HANDLE_FAILED</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>5b108c927a3723522aed5faec7231fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_LISTEN_FAILED</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>b07a4b8e1e7fd31202db9564e8064d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_QUEUE_FULL</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>f5f36eb1fb00fec21b59f9144ecb6026</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR_NO_CONTACTS</name>
      <anchorfile>Error_8h.html</anchorfile>
      <anchor>c7a748fa53005b8e0d1e8b8916a6e114</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Indexed.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Indexed_8cpp</filename>
    <member kind="function">
      <type>bool</type>
      <name>SearchTermsMatch</name>
      <anchorfile>Indexed_8cpp.html</anchorfile>
      <anchor>a9f2064a5ba353fe3bb06f84cb524836</anchor>
      <arglist>(const SSearchTerm *pSearchTerm, const Kademlia::CEntry *item)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Indexed.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Indexed_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="struct">KeyHash</class>
    <class kind="struct">SrcHash</class>
    <class kind="struct">Load</class>
    <class kind="struct">SSearchTerm</class>
    <class kind="class">Kademlia::CIndexed</class>
    <member kind="typedef">
      <type>std::map&lt; Kademlia::CUInt128, Kademlia::CEntry &gt;</type>
      <name>CSourceKeyMap</name>
      <anchorfile>Indexed_8h.html</anchorfile>
      <anchor>4a615602f9accdef840cd9a1b5a92de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CSourceKeyMap::iterator &gt;</type>
      <name>CSourceKeyList</name>
      <anchorfile>Indexed_8h.html</anchorfile>
      <anchor>616dcb794304be6d43627600ce41c79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; Kademlia::CUInt128, KeyHash &gt;</type>
      <name>KeyHashMap</name>
      <anchorfile>Indexed_8h.html</anchorfile>
      <anchor>5c9f02298cdc565979651bfb7c44e9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; Kademlia::CUInt128, SrcHash &gt;</type>
      <name>SrcHashMap</name>
      <anchorfile>Indexed_8h.html</anchorfile>
      <anchor>332cb0bf609cc5f54ab5ca916182c311</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; Kademlia::CUInt128, Load &gt;</type>
      <name>LoadMap</name>
      <anchorfile>Indexed_8h.html</anchorfile>
      <anchor>b4d098e8a9fd02ed5d9fde955a1223ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Kademlia.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Kademlia_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>KadGetKeywordHash</name>
      <anchorfile>Kademlia_8cpp.html</anchorfile>
      <anchor>3bb4b1f7e61f8d2a5ee6eb3024e5e014</anchor>
      <arglist>(const wxString &amp;rstrKeyword, Kademlia::CUInt128 *pKadID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Kademlia.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Kademlia_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CKademlia</class>
    <member kind="define">
      <type>#define</type>
      <name>KADEMLIA_VERSION</name>
      <anchorfile>Kademlia_8h.html</anchorfile>
      <anchor>4b50bf325459e59e1a24afece6b28dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; CRoutingZone *, CRoutingZone * &gt;</type>
      <name>EventMap</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>e76b71b4848b039c3943f242434d45f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KadGetKeywordHash</name>
      <anchorfile>Kademlia_8h.html</anchorfile>
      <anchor>3bb4b1f7e61f8d2a5ee6eb3024e5e014</anchor>
      <arglist>(const wxString &amp;rstrKeyword, Kademlia::CUInt128 *pKadID)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>KadGetKeywordBytes</name>
      <anchorfile>Kademlia_8h.html</anchorfile>
      <anchor>f2f404654889fac6913c347c5bac336f</anchor>
      <arglist>(const wxString &amp;rstrKeywordW)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Prefs.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Prefs_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Prefs.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Prefs_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CPrefs</class>
  </compound>
  <compound kind="file">
    <name>Search.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Search_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEBSTR</name>
      <anchorfile>Search_8cpp.html</anchorfile>
      <anchor>2c1692f919ee36ca19d31772c9ba3a5e</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Search.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>Search_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CSearch</class>
  </compound>
  <compound kind="file">
    <name>SearchManager.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>SearchManager_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEBSTR</name>
      <anchorfile>SearchManager_8cpp.html</anchorfile>
      <anchor>2c1692f919ee36ca19d31772c9ba3a5e</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>InvKadKeywordChars</name>
      <anchorfile>SearchManager_8cpp.html</anchorfile>
      <anchor>ae493ce42e9093dc0fab75383ab98b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchManager.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>SearchManager_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CSearchManager</class>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_IMAGE</name>
      <anchorfile>SearchManager_8h.html</anchorfile>
      <anchor>c45bac61dc0958752a2a834a493c6ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_AUDIO</name>
      <anchorfile>SearchManager_8h.html</anchorfile>
      <anchor>21d6c2a588797f4828523dcaef9d4d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_VIDEO</name>
      <anchorfile>SearchManager_8h.html</anchorfile>
      <anchor>1b0ae8c0072fcb01cb0d652908e8ee7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_DOC</name>
      <anchorfile>SearchManager_8h.html</anchorfile>
      <anchor>6bd83df17a4715aab6eeefa96d488e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCH_PRO</name>
      <anchorfile>SearchManager_8h.html</anchorfile>
      <anchor>b2bab80d5ca61cedc60452e425a15447</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; wxString &gt;</type>
      <name>WordList</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>2db16fa7facaac8308f8b7a2ab3d2218</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; CUInt128, CSearch * &gt;</type>
      <name>SearchMap</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>29a7f99c93afe01c938cd577012fe33a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KademliaUDPListener.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/net/</path>
    <filename>KademliaUDPListener_8cpp</filename>
    <member kind="function">
      <type>const unsigned int &amp;</type>
      <name>detailslen</name>
      <anchorfile>KademliaUDPListener_8cpp.html</anchorfile>
      <anchor>00fa78402a534d6177f57acc0b726197</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxChar *</type>
      <name>InvKadKeywordChars</name>
      <anchorfile>KademliaUDPListener_8cpp.html</anchorfile>
      <anchor>de32537a35c35ba3478461f392f874cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KademliaUDPListener.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/net/</path>
    <filename>KademliaUDPListener_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CKademliaUDPListener</class>
  </compound>
  <compound kind="file">
    <name>Contact.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>Contact_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Contact.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>Contact_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CContact</class>
  </compound>
  <compound kind="file">
    <name>Maps.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>Maps_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Maps.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>Maps_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::ContactList</class>
    <member kind="typedef">
      <type>std::map&lt; CUInt128, CContact * &gt;</type>
      <name>ContactMap</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>c9a867ff2d74d6dc948c8832f29e532d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CUInt128 &gt;</type>
      <name>UIntList</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>f01388245405f95cbd9c440bb305c153</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; CUInt128 &gt;</type>
      <name>UIntSet</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>be588fbb7d33a986cb5da26841b34abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; CContact * &gt;</type>
      <name>ContactSet</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>0e1d2a5c6ce350b4191d30777119b8c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RoutingBin.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>RoutingBin_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>RoutingBin.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>RoutingBin_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CRoutingBin</class>
  </compound>
  <compound kind="file">
    <name>RoutingZone.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>RoutingZone_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CONTACT_FILE_LIMIT</name>
      <anchorfile>RoutingZone_8cpp.html</anchorfile>
      <anchor>71dc5091b589586f13827c067fe62ba3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RoutingZone.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>RoutingZone_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CRoutingZone</class>
  </compound>
  <compound kind="file">
    <name>LittleEndian.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/utils/</path>
    <filename>LittleEndian_8cpp</filename>
    <namespace>Kademlia</namespace>
    <member kind="function">
      <type>uint16</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>897a294f9c275127fd55d5bc63ce41a3</anchor>
      <arglist>(uint16 val)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>2557ee34d63b1b8af988df12d40a0428</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>29ef8aab91aed825c0542f374b15947e</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LittleEndian.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/utils/</path>
    <filename>LittleEndian_8h</filename>
    <namespace>Kademlia</namespace>
    <member kind="function">
      <type>uint16</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>897a294f9c275127fd55d5bc63ce41a3</anchor>
      <arglist>(uint16 val)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>2557ee34d63b1b8af988df12d40a0428</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>29ef8aab91aed825c0542f374b15947e</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UInt128.cpp</name>
    <path>/media/brun/progs/iMule/src/kademlia/utils/</path>
    <filename>UInt128_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>SWAP_ULONG_LE</name>
      <anchorfile>UInt128_8cpp.html</anchorfile>
      <anchor>ab07ffb395372781b6cb734354a7f99f</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UInt128.h</name>
    <path>/media/brun/progs/iMule/src/kademlia/utils/</path>
    <filename>UInt128_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">Kademlia::CUInt128</class>
  </compound>
  <compound kind="file">
    <name>kadNodesListView.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>kadNodesListView_8cpp</filename>
    <member kind="function">
      <type>int wxCALLBACK</type>
      <name>MyCompareFunction</name>
      <anchorfile>kadNodesListView_8cpp.html</anchorfile>
      <anchor>995a080dbeacfb59df2513e772294359</anchor>
      <arglist>(long item1, long item2, long WXUNUSED(sortData))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>kadNodesListView.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>kadNodesListView_8h</filename>
    <class kind="class">KadNodesListView</class>
  </compound>
  <compound kind="file">
    <name>KnownFile.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>KnownFile_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>KnownFile.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>KnownFile_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">CFileStatistic</class>
    <class kind="class">CAbstractFile</class>
    <class kind="class">CKnownFile</class>
    <member kind="define">
      <type>#define</type>
      <name>PS_READY</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>f96e18c8366de557488cca4a83d4e713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_EMPTY</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>eb9678d3ae2d7c2246bbec8a65d7b1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_WAITINGFORHASH</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>42c6780424d81cc4d623cf1f1d194c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_HASHING</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>7631f99fbda03eae3ec81ba3e6adbc3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_ERROR</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>8c3476c579cf14e836f5a99a0f32e6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_INSUFFICIENT</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>8d022b410089b167385ee1baff970df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_UNKNOWN</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>b89e1a288fa956be96bdfeddb301ec2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_PAUSED</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>039b3652f774459d62b71ffb630a3a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_COMPLETING</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>e088cab229c906f552b1cc2a2447a3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PS_COMPLETE</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>883b599110c371a7f75e101378b5429c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_VERYLOW</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>e5b4488aaf1bf3fbf53a3891ab8557d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_LOW</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>182b1194327b5ba792a5c83431bea075</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_NORMAL</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>c39da31576a3df7f719d82922c0f6ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_HIGH</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>796fd32b5234b59df585a1b9308a71ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_VERYHIGH</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>945c1ae78c4d652bde94476f74f6cfc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_AUTO</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>430638011cad3ffa0f6a0684bb7146dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR_POWERSHARE</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>439b92ca8bcd52395cb043180e58ac8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; Kademlia::CEntry &gt;</type>
      <name>CKadEntriesList</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>c74ddb74c49c34f4aa36de1552a69df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WX_DECLARE_OBJARRAY</name>
      <anchorfile>KnownFile_8h.html</anchorfile>
      <anchor>6ff0a2fe7c32512760d17f72ab1997fc</anchor>
      <arglist>(CMD4Hash, ArrayOfCMD4Hash)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KnownFileList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>KnownFileList_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>KnownFileList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>KnownFileList_8h</filename>
    <class kind="class">CKnownFileList</class>
  </compound>
  <compound kind="file">
    <name>Format.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>Format_8cpp</filename>
    <member kind="function">
      <type>bool</type>
      <name>isTypeChar</name>
      <anchorfile>Format_8cpp.html</anchorfile>
      <anchor>53fe2e794f19f5f74703eccd9d361c4f</anchor>
      <arglist>(wxChar c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Format.h</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>Format_8h</filename>
    <class kind="class">CFormat</class>
    <member kind="define">
      <type>#define</type>
      <name>GCC_VERSION</name>
      <anchorfile>Format_8h.html</anchorfile>
      <anchor>dbba0f726fc66d7100916c683b7568ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MD5Sum.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>MD5Sum_8cpp</filename>
    <class kind="struct">MD5_CTX</class>
    <member kind="define">
      <type>#define</type>
      <name>S11</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>51398c0e5541164ad4d6615880073305</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S12</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>1ec499cd0e54ecc28c2ac2afea5b038e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S13</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>aeec90429105fb54d853dd4fc7027a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S14</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>78342b0ccde2ed12fdf19a113cc266cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S21</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>b6d5354f647a0e7592a1f051fc8377b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S22</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>ddad30455da936bc1879ee9c72b46d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S23</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>6321a8b29628936f76e9e78cf5bda95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S24</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>0c09eb77d30a0d5f9154914147b86c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S31</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>ef26590f8a880ee6f4a158168defcd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S32</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>1d512424dd8a91e0a5bcc98563f33914</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S33</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>1c854214533f6220e859b0063196abb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S34</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>f6472be1d535970afee8e5266a74aa07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S41</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>b674ba129e588da55d1d494e1cf3c15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S42</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>268ef1a49114a94b931cc6b313e3cd1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S43</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>5aaa7121f39650d472746942ca68f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S44</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>6a3989af72b55d169bd73a66f8620aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>96d73bbd7af15cb1fc38c3f4a3bd82e9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>d96b7cf3182ce2ba85e5a7a93b12c441</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>e42219072d798876e6b08e6b78614ff6</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>c0eafdc9ee161b71e7af98af736952fd</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTATE_LEFT</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>7417fd4e875360c0533fa5b412cdab49</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FF</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>0a143972cb6c4fe16f0ffa8a3d41ebf3</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GG</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>685f32faa2a66e743850b990a13b8bfa</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HH</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>8b9f1c4778df01ef970b87dbe5541dc5</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>II</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>d26626e5efb37b2dadef4e88e35e4329</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char *</type>
      <name>POINTER</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>73204e40637f83518fb695362ea084a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>UINT2</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>b18da08528aeee3049c5fd4885aa289e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>UINT4</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>f1cbb0f0cb7fe002843db8f21cc307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MD5Init</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>43e334cd23b7e92d1ee2f8b26071b1f0</anchor>
      <arglist>(MD5_CTX *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MD5Update</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>14327f23c04b2ba9526920d67fbcc5af</anchor>
      <arglist>(MD5_CTX *, const unsigned char *, unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MD5Final</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>4d0e4f16069f15e42f92028772aa7dc9</anchor>
      <arglist>(unsigned char[16], MD5_CTX *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MD5Transform</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>aaa1a49bc3e1cf0e5a5e0e4c6ee6b221</anchor>
      <arglist>(UINT4[4], const unsigned char[64])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Encode</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>076da82855c975e9625df41dc733a7aa</anchor>
      <arglist>(unsigned char *, UINT4 *, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Decode</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>e368420814c11471f08f459cda091bbb</anchor>
      <arglist>(UINT4 *, const unsigned char *, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MD5_memcpy</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>4290e5078aa4bb323e29797a7ec1de1c</anchor>
      <arglist>(POINTER, POINTER, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MD5_memset</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>c035f00da554c2ef462e7bfd43b940f4</anchor>
      <arglist>(POINTER, int, unsigned int)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static unsigned char</type>
      <name>PADDING</name>
      <anchorfile>MD5Sum_8cpp.html</anchorfile>
      <anchor>ee6f420120b0fbc0fb096cb61655cec4</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MD5Sum.h</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>MD5Sum_8h</filename>
    <class kind="class">MD5Sum</class>
  </compound>
  <compound kind="file">
    <name>MuleDebug.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>MuleDebug_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>TOO_VERBOSE_BACKTRACE</name>
      <anchorfile>MuleDebug_8cpp.html</anchorfile>
      <anchor>df5d53f7564b83924f8b99bf0f61fb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnUnhandledException</name>
      <anchorfile>MuleDebug_8cpp.html</anchorfile>
      <anchor>549d68e64dba70bf448be4a20fad4473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InstallMuleExceptionHandler</name>
      <anchorfile>MuleDebug_8cpp.html</anchorfile>
      <anchor>c8ad151bcaf2687e45bc9ca51a90c59d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>get_backtrace</name>
      <anchorfile>MuleDebug_8cpp.html</anchorfile>
      <anchor>a1b1d44d825b83f67d6e109a002cd3f0</anchor>
      <arglist>(unsigned WXUNUSED(n))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_backtrace</name>
      <anchorfile>MuleDebug_8cpp.html</anchorfile>
      <anchor>1a368f70aa067ca41fe9adb7f64fca65</anchor>
      <arglist>(unsigned n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleDebug.h</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>MuleDebug_8h</filename>
    <class kind="class">CMuleException</class>
    <class kind="struct">CRunTimeException</class>
    <class kind="struct">CInvalidParamsEx</class>
    <class kind="struct">CInvalidStateEx</class>
    <class kind="struct">CInvalidPacket</class>
    <member kind="define">
      <type>#define</type>
      <name>_MULE_THROW</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>b3bd0e8ca869ced1654db81118503e87</anchor>
      <arglist>(cond, cls, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_CHECK_THROW</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>1f3167bb07e4e2d3ad021da57cefc888</anchor>
      <arglist>(cond, cls, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_VALIDATE_STATE</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>490a1d1146226b124c3ac5831b265438</anchor>
      <arglist>(cond, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_VALIDATE_PARAMS</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>f3c58b595975fd4fbdf9fa6ad16a34fc</anchor>
      <arglist>(cond, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_ASSERT</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>b28647120c2514f4cef879918b60a8ba</anchor>
      <arglist>(cond)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_ASSERT_MSG</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>1cf94c26d7454bfb5511fb14d0c6ec37</anchor>
      <arglist>(cond, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_FAIL</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>f2fb8d4eb61c3940b40a92ae8ccdfa16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_FAIL_MSG</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>fa796f5dd7ecd14323d554e3edd12ee5</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_CHECK</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>d9847d15fe5bf636e76d45d85afafb87</anchor>
      <arglist>(cond, retValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_CHECK_MSG</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>00116911e47b9aa39fd47106f178c54d</anchor>
      <arglist>(cond, ret, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULE_CHECK_RET</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>92cebfa5c63e50ef0b357bd2797f5ddd</anchor>
      <arglist>(cond, msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InstallMuleExceptionHandler</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>c8ad151bcaf2687e45bc9ca51a90c59d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnUnhandledException</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>549d68e64dba70bf448be4a20fad4473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_backtrace</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>1a368f70aa067ca41fe9adb7f64fca65</anchor>
      <arglist>(unsigned n)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>get_backtrace</name>
      <anchorfile>MuleDebug_8h.html</anchorfile>
      <anchor>30e97ffc0b0e1efa5a0d1368c5931b26</anchor>
      <arglist>(unsigned n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StringFunctions.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>StringFunctions_8cpp</filename>
    <member kind="function">
      <type>wxString</type>
      <name>URLEncode</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>e6cdd27fd03861023bce333077f8e05a</anchor>
      <arglist>(const wxString &amp;sIn)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>TruncateFilename</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>358cea2865ac5e5f665207fafb891b6e</anchor>
      <arglist>(const wxString &amp;filename, size_t length, bool isFilePath)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CleanupFilename</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>e4077d36a0740e7b59a138f49e894ec6</anchor>
      <arglist>(const wxString &amp;filename, bool keepSpaces, bool fat32)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>StripSeparators</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>8dd9ee23cfc70e6a8f3ea1e2d5bf03d0</anchor>
      <arglist>(wxString path, wxString::stripType type)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>JoinPaths</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>142e6cd1c2ecfc6220a0454ace84fd1d</anchor>
      <arglist>(const wxString &amp;path, const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>wxChar</type>
      <name>HexToDec</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>5e5891faec158857a7949ff81b81fc04</anchor>
      <arglist>(const wxString &amp;hex)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>UnescapeHTML</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>52aaedf0c0af3423f63c1beeadf69a17</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>validateURI</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>ae6f98bc33c6f46fe4abaed2759c59c1</anchor>
      <arglist>(const wxString &amp;url)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static byte</type>
      <name>base16Chars</name>
      <anchorfile>StringFunctions_8cpp.html</anchorfile>
      <anchor>f7a4c0cb39d0705a338c5e02a97868f2</anchor>
      <arglist>[17]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StringFunctions.h</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>StringFunctions_8h</filename>
    <class kind="class">CSimpleTokenizer</class>
    <member kind="typedef">
      <type>const wxWX2MBbuf</type>
      <name>Unicode2CharBuf</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>2cf83b086121692c1dfed08f1f783eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const wxMB2WXbuf</type>
      <name>Char2UnicodeBuf</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>901063494d651de898eac508a33f8d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EUtf8Str</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>146e79c0c2b7f2eb78bbd3f8bc028190</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utf8strNone</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>146e79c0c2b7f2eb78bbd3f8bc02819041b4ff93be9da0de73a4fb5580901397</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utf8strOptBOM</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>146e79c0c2b7f2eb78bbd3f8bc028190f74e3fd14c0969c35cd7412a815ad383</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utf8strRaw</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>146e79c0c2b7f2eb78bbd3f8bc0281905542bd2e524cf63cacc9bc5379dff019</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxCSConv</type>
      <name>imuleConv</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>ab7bf011b2475288c7bca9b66fe4ea31</anchor>
      <arglist>(wxT(&quot;iso8859-1&quot;))</arglist>
    </member>
    <member kind="function">
      <type>Unicode2CharBuf</type>
      <name>unicode2char</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>c9926a09ca7dac3fcd2b728d3fcf82b1</anchor>
      <arglist>(const wxChar *x)</arglist>
    </member>
    <member kind="function">
      <type>Char2UnicodeBuf</type>
      <name>char2unicode</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>9aaa97794869aa8d4c0804f463cf6ddd</anchor>
      <arglist>(const char *x)</arglist>
    </member>
    <member kind="function">
      <type>Unicode2CharBuf</type>
      <name>unicode2UTF8</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>77bf678e81652d0286c7033233989a94</anchor>
      <arglist>(const wxChar *x)</arglist>
    </member>
    <member kind="function">
      <type>Char2UnicodeBuf</type>
      <name>UTF82unicode</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>c3741fe3cacc2b36bf9a4caac7b633b4</anchor>
      <arglist>(const char *x)</arglist>
    </member>
    <member kind="function">
      <type>const wxCharBuffer</type>
      <name>char2UTF8</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>9ad6eb08aecbad21f529ea1de1eefe9f</anchor>
      <arglist>(const char *x)</arglist>
    </member>
    <member kind="function">
      <type>const wxCharBuffer</type>
      <name>UTF82char</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>fe4f04b36e53a730794b2e0e31ea1d38</anchor>
      <arglist>(const char *x)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>MakeStringEscaped</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>eb22ad64061caa59b501f97079b172c4</anchor>
      <arglist>(wxString in)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>MakeFoldername</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>2cf102f64198a655ff70586d0e263ef0</anchor>
      <arglist>(wxString path)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>nstrdup</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>0c52f6a17f35017c2d4e492aff3c3399</anchor>
      <arglist>(const char *src)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>StrToLong</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>3c203128bc36c7fd38dfdd0c1e91c395</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>StrToULong</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>6053765a7fd6845c6c508069071900aa</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long long</type>
      <name>StrToULongLong</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>1f374b8100f174c7f94bf53b23dc053a</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetRawSize</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>6e61f5100e9321b04072e67a1709755b</anchor>
      <arglist>(const wxString &amp;rstr, EUtf8Str eEncode)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>TruncateFilename</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>50673d70941578bd2cc4caf05b8c1f9b</anchor>
      <arglist>(const wxString &amp;filename, size_t length, bool isFilePath=false)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CleanupFilename</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>f6060a25faf6eb99aed00734241e068c</anchor>
      <arglist>(const wxString &amp;filename, bool keepSpaces=true, bool fat32=false)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>StripSeparators</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>8dd9ee23cfc70e6a8f3ea1e2d5bf03d0</anchor>
      <arglist>(wxString path, wxString::stripType type)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>JoinPaths</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>142e6cd1c2ecfc6220a0454ace84fd1d</anchor>
      <arglist>(const wxString &amp;path, const wxString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>URLEncode</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>e6cdd27fd03861023bce333077f8e05a</anchor>
      <arglist>(const wxString &amp;sIn)</arglist>
    </member>
    <member kind="function">
      <type>wxChar</type>
      <name>HexToDec</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>5e5891faec158857a7949ff81b81fc04</anchor>
      <arglist>(const wxString &amp;hex)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>UnescapeHTML</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>52aaedf0c0af3423f63c1beeadf69a17</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>validateURI</name>
      <anchorfile>StringFunctions_8h.html</anchorfile>
      <anchor>ae6f98bc33c6f46fe4abaed2759c59c1</anchor>
      <arglist>(const wxString &amp;url)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECCodes.h</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECCodes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>EC_CURRENT_PROTOCOL_VERSION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>3f4ac40e4f0a09de79f213d31520b64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_FLAG_ZLIB</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>7ee6e75fa6c9d2d0c89603d875ef5362</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_FLAG_UTF8_NUMBERS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>193635c30f3104f75dbb7104f6043b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_FLAG_HAS_ID</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>6b962619199a2f80c9e5307f12f5f650</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_FLAG_ACCEPTS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>21158f090f9bdf3bae36eb7226bb924f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_FLAG_UNKNOWN_MASK</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>65280592eb9513e090f84f08bb8bfc93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_CATEGORIES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>5d29a773c689d8e0d464afc2aa9a8866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_GENERAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>843e8408bbbfa47ad81ad6ba7462615a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_CONNECTIONS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e1c618312059d7d9aa94fb699510338c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_MESSAGEFILTER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>965b3cb2a7d366c7e986835a8e629d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_REMOTECONTROLS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>015e7a27d9006404a5a248c2683c6bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_ONLINESIG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>28f894e26d2a6f9a2f57b0c7d5cc46a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_SERVERS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>f0855c4f638811511b58bac28e9cef29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_FILES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>1c9688c4f13b9ceffebdec312c1eb008</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_SRCDROP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>8aac0faa118fca83feb3f38645be83a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_DIRECTORIES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>08d4b18a47ba29455de24c4409e9b8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_STATISTICS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>30fd2eb4945aa968f0c1f03091f13fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_SECURITY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>2ee322c77e34bd104b755c6bef175d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_CORETWEAKS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>f373ff6260fa218118b156e5e053b058</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_PREFS_I2PCONNECTION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>3877a06fbb76a5de17b342338b4277d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>ec_opcode_t</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>65571e57f94f221e1515340618fd53d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>ec_tagname_t</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>56603187e735d7fe89d2485a6874e0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>ec_taglen_t</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>fdacd1c4b11f01e35074cb9986248aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_NOOP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d413917465d0f83b377b748e03283d82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_AUTH_REQ</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dac8139a9c734094954e46c9b4a6cfab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_AUTH_FAIL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d23959ced54bee5e9ca480f130527b8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_AUTH_OK</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4da2b7a744bb649d0895cc79654c3d3c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_FAILED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d831419cc4c6e49eedb5bbfa5e777ac6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_STRINGS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d870137f2fbf4410dfdbb90ef56e0b278</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_MISC_DATA</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d102b4c3307020ee3227691075a1c0008</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SHUTDOWN</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4df98007457bb69b90b85d31f06b4b21d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_ED2K_LINK</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d81775af0e63616ce4f8b25781f83df8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_STAT_REQ</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d2cff1655866c67aec395030e91ffa4e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_CONNSTATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dc6b10cab3a49bf9d96eac2378f19409d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_STATS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dc21f56fb2b9f44bf30c58874a4e7f676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_DLOAD_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d20c8ed9898a9e5ae0e000d64446d8c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_ULOAD_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d9dc59582b243672841139174ae8ba27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_WAIT_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d2f18b9fd8ab1ba4e3a142d13b001e6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_SHARED_FILES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d3d704a2f0b4e3822fa1a547a36bcecf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SHARED_SET_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d17310a1c9ab5b118b969482839ab043d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_REMOVE_NO_NEEDED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d987f25e82cc8893197af892ea2b3f0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_REMOVE_FULL_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d9854f6614eb37e6a34c4fc74a8a980ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_REMOVE_HIGH_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dbad9252e4b60067adc464543879f68ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_CLEANUP_SOURCES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dcf05b24ef3c4f43d2b9ce3c5d6db2f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_SWAP_A4AF_THIS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dbce722912f4b8ac1f9f9291e18b3d4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_SWAP_A4AF_THIS_AUTO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d56c7889e62b6c8b8c70f2a2aec5175eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_SWAP_A4AF_OTHERS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d8bde937db8e225c673bf08b68ca69ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_PAUSE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d5e0b62aa345a9c3f6641c8f9531ce59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_RESUME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dc710ef5b0d540ab4289fe9633d87536c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_STOP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d8089c4f33f0d20b099651863faf6e15f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_PRIO_SET</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dd4f21910eb2cd8637b4377c7d01ac05d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_DELETE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4df130968382ae659de6b055ea042f6d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_PARTFILE_SET_CAT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d54b0963838c56bfbfee88ec6e9cea036</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_DLOAD_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dca93de3c3132c22cb9034466aeffaa0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_ULOAD_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4da601fac32a96e4039e40771794d59259</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_WAIT_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d700f6b69278e90caf060c682491c3502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SHARED_FILES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d8d98f299a5742179e653903ffd3eac59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SHAREDFILES_RELOAD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d58837bc04a19a6608417c78be555e45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SHAREDFILES_ADD_DIRECTORY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d45e391ef817ee352f9e665cb87108dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_RENAME_FILE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d21201b2f7c83a6315b76ea6b6d50f1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SEARCH_START</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4de6455b578d5baa9e219705fe8f15bf5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SEARCH_STOP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d801ce9d4054a506e57c364806d7d47f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SEARCH_RESULTS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d94f488d47824ff086e8afdc4753a12d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SEARCH_PROGRESS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d0035055dfd9ea7b859ca849dd457a655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_DOWNLOAD_SEARCH_RESULT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4de092e263d96256980cc1e1071210299a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_IPFILTER_RELOAD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d89e2bac8cb62bbb8bf2a8de0209fa391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_SERVER_LIST</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d35b05e52e4b4d618d701ad54e4d71ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVER_LIST</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d7f70030f15c9d87be19d5099b409ac9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVER_DISCONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d72d7ea5bde705abdbfdcfdaf0ea75192</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVER_CONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d4fb5926f5710b6b73f58ede977de1ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVER_REMOVE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d66dd091cd65fdf884c6fe9ed84eccaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVER_ADD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d04aff0be759f473daaab04af7bab8f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVER_UPDATE_FROM_URL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dd46238eb65189b221666cca8ca18491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_ADDLOGLINE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4db08dd4c1498af7a8cba247da658a11cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_ADDDEBUGLOGLINE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d9213cc6e65da4e46fa6d19a3ed079d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_LOG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d5579c1136ab7d5d5689e7deaa6673d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_DEBUGLOG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d7500f0185f5ce5bbe55e5cba44346b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_SERVERINFO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d95ccb7f1529fd63d3f44c6233a8c3710</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_LOG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4da6ba6c686518fde228d9e24f31a19298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_DEBUGLOG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d230708a19bc7ccf39a281335cfb48438</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SERVERINFO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4de69e8633ac86fb7f2530e2a91a863481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_RESET_LOG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dd08d297475b46aec953dd0990788faa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_RESET_DEBUGLOG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d15a123d27e4154406488c5c4da9dca37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_CLEAR_SERVERINFO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d1464de1abc9f042ecdbb609f40ff8720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_LAST_LOG_ENTRY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d86060db9ecd62e42983f80f8eac1d546</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_PREFERENCES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d82ff6c3553ae46d79c8d7ea5564d1535</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_SET_PREFERENCES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d793b0f036b6ce51044bed8d8f0179041</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_CREATE_CATEGORY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d1b4eb2d21f2ae31df44d0503d9b63275</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_UPDATE_CATEGORY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dbd7e380642766fa703df5e735c6c6884</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_DELETE_CATEGORY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dfd7386c9a59c4c3912798e2c1de37560</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_STATSGRAPHS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4db42a5a61a63729da0c27b84c8daefd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_STATSGRAPHS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4daab0eb789282bd15e73a690d4c79c91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_GET_STATSTREE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4ded68c0603fb98cd41312bdcf10b94afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_STATSTREE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4d1aa9c356cb7dc3b50b37d884eafd03cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_KAD_START</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dde71d185d0896cee7849da7cc47e5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_KAD_STOP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4dce86d8dd340d96b535ec83141b919add</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_CONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4df1a657087fe6160eddf8f135cee6fbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_OP_DISCONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>16af7b253440dadd46a80a4b9fddba4db3017baa09abea1ac4f5f93aa11e3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STRING</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253ff4cdff7033ff9f3a12db6de2525af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PASSWD_HASH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2525d73c8f714a96666a8ee2841a34cbcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_NAME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251b1f50324642f71f2ba53511462d8e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_VERSION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25ac42596e83c471bc354cf1e11c667dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_MOD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e0309bde5164988bbcf9c204f2c7296c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PROTOCOL_VERSION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255382ea037fbe96cfceaf17ff4aff550e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_VERSION_ID</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e0ceaa6487538b4d80ce60c8c6ec2d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_DETAIL_LEVEL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25699ff4d42090ae01af368253d9f47ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONNSTATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25ffacdad8dc1ebb2129deffacfada3f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_ED2K_ID</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a257d03bcb68c3f083979d264c60c131f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_UL_SPEED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25220cc172c95a950e1af93220618942ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_DL_SPEED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25430f232b0ccee32d38f55ca57539f2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_UL_SPEED_LIMIT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251d07bfd791cc06f95efed76ac91cd410</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_DL_SPEED_LIMIT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2560fd5b6cbc1e8f6969023ee40fdba4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_UP_OVERHEAD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25228880bcf6b09a9eb7bd2fa9d85959d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_DOWN_OVERHEAD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2571c58887834fb3ca2c9ad1ea3ab0d39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_TOTAL_SRC_COUNT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251a6f77d394b3aee9c4a21376dbd174b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_BANNED_COUNT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2507dacf4c4acd82ca63cb9b97c948ce5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATS_UL_QUEUE_LEN</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b9f58573e46d639e61eacc2c643442ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259f170133a1071778c5479b1199d7dca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_NAME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25f7a80651d16127633f4b83a26a9e28d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_PARTMETID</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25c556fdb1015c4485125bc71275b2cbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SIZE_FULL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254a8281370f561d0a83450575a6175ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SIZE_XFER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259c409119facf8747ab985b19378af733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SIZE_XFER_UP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25239bd7ed1a7add19d7ef824119b20355</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SIZE_DONE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25ecea52705233ad9b4e5a1ee59a0bf17b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SPEED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b9d3a0c1451e8d372fa1025503346aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_STATUS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254a60b687399906a77897a0432475d66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2560a39b781183b008a1df96b1354f4db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SOURCE_COUNT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e9387ec950b863c0afa39c714bcc1239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SOURCE_COUNT_A4AF</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253d20f98c64bd0b2dac6bc4ccf0745bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SOURCE_COUNT_NOT_CURRENT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256a4cd50a345d10c4a15f819aa4e91011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_SOURCE_COUNT_XFER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d42bb639ca2e37c3db733c3019570db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_ED2K_LINK</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256c49172090b004effa51fdda9c343af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_CAT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25252990cd2576379882d8c29e8a2ce382</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_LAST_RECV</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255cf6203966aa3954d7dc6de1bc5ae4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_LAST_SEEN_COMP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255d1d30011c0058c7405a956c9665f321</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_PART_STATUS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e9a78374f083838ad74a7358cdbea41d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_GAP_STATUS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e21cce7e068dae30d65e62604b1b6665</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PARTFILE_REQ_STATUS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b1850f19f83259e08ab564de3a1daa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a258f591e3f82e7538e276aee9a16cccc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE_XFERRED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253137e97eed20459fc5694cf3ac9caea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE_XFERRED_ALL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25aa8a20df29674eef60b0bfa8114a6fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE_REQ_COUNT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25c4c7b7684fdd9c67b46bf7bcb192b0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE_REQ_COUNT_ALL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a250585c9081f01395bf03afddea0b6cfb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE_ACCEPT_COUNT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25fa05aca4b5726fd7980b6ac07ad6aacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_KNOWNFILE_ACCEPT_COUNT_ALL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254e0a95f01f2209337fcec166a74e0e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25253ad9b20af7b1a00eab38cdb274c541</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_NAME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253efa17b5a15dc2ba10c7389a72cd7fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_DESC</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b86eeb3df3e86e4141022436f1206cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_ADDRESS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25bbd1cf51bcf5a4e9d596096532ec6292</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_PING</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256b1c12b5dbb766e0ba572c8bac992752</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_USERS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25bcc9d5d3009379059961c56480c3ea71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_USERS_MAX</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259ed6976785f2988c561224e6caf18a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_FILES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253013b387e5f849dd5f9af3d84a68329e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25405b101f535b186143218f40f8fe0430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_FAILED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255132a005034a68d9e6d960fd2482ffc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_STATIC</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2522cd086490878f3406dde3ad75e9f601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVER_VERSION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259665d264af6802ab38e90c80ebd5e004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_UPDOWN_CLIENT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25f69192cb55c4f0261a97dec6025eb7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_SOFTWARE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25460bdb7c31c8a7e4b7dba321b6a860c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_SCORE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25567e301a5c152aa3c12e615e3d27ebc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_HASH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d02bd569a3b7c2d1af1b2d48c81dae24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_FRIEND</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d2392ebdfe07f515352f1ff6a0ae7ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_WAIT_TIME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a257087ddf130ae5596aaa53b5dc317dbeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_XFER_TIME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256bdf129745730497d3ad98717b7f6799</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_QUEUE_TIME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2588157e41396174fe1b6f3673587d9268</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_LAST_TIME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2508f01e2803d7556f01377dbbefa08c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_UPLOAD_SESSION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b1b069c0f08a28267f86825b5d4c0e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_UPLOAD_TOTAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b8335198d058038dcd7f9fd1783ac914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_DOWNLOAD_TOTAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e4739b3234ded8d807ad92d83db53efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_STATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2536abb66140cab2839f2b17cc4360085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_UP_SPEED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25fbe9c707e50bd5bdc954fefa1a044fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_DOWN_SPEED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d0311c13f9d1c72e32f2607d7c9c8fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CLIENT_FROM</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d212803f42fe25b23f36ec9529b3fb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCHFILE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25a04200b6d4dac08875ef7ae927edfdb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_TYPE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254d7ab0a88a5df6918068895bf037502c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_NAME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d3d1e113c3cb49db5d0968755ffba2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_MIN_SIZE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25d217b2f9be11eaab1e3de6fff4913eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_MAX_SIZE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a257adae4281d000fb32f329addf29c0153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_FILE_TYPE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25413e34184453a1e2abd54421c0a54307</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_EXTENSION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256bf2477fb6b31c6e78e7e8be3dd6ce41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_AVAILABILITY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2526270950a50936b0a3c8f0658975ff2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SEARCH_STATUS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e17597b44efdb99dcfae3b94bdf5211e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SELECT_PREFS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259d7f38bf6ee04f5dac19d7cb7a672da4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_CATEGORIES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25680c095093e9cc09edce6920915a7bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CATEGORY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25c0691695e79855eb10006c63e2d286fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CATEGORY_TITLE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254e32940eea227518586df59cb55ef6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CATEGORY_PATH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259024bf4a3e2b9ffd54d80f4eb14758d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CATEGORY_COMMENT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a250f0e44b7c1049613858ef7d58b5cc599</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CATEGORY_COLOR</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25a8334074e2ca9422e8370a2ded40778b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CATEGORY_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252ceb53605b98d56b1f5978b500a2f749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_GENERAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25ed2fddcae48ba25df1c7f9ae9bb54447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_USER_NICK</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2537fba21b49eac8e92ef262c67d4dc2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_USER_USERHASH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2595ae2d196c232e9852c4e1a78ee07f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_CONNECTIONS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a258230fcbac9ca58878142527138dcdd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_DL_CAP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253358df324c9464266c2e6be9ac633511</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_UL_CAP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b183f2e5dd8200be9fa172c17858e5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_MAX_DL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255319ff5e7000fe887c1756a9b05660ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_MAX_UL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254cd64a53a8fe07213c8290d638611a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_SLOT_ALLOCATION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25bd3046c576990aeaa0bddf9c13afebce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_UDP_DISABLE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259dab37a6b3cf91b2088e25f93cda7e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_MAX_FILE_SOURCES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2543cb678ffa808307ebaedc36469e1890</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_MAX_CONN</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e6ac1488b3ed098fa8baea84685782af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_AUTOCONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25c53a42a059b544f27af01f9d28e67e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CONN_RECONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a250177d047a3b265e719a20efc448de4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_NETWORK_ED2K</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25bd329563fda2f558037088a7910805c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_NETWORK_KADEMLIA</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2502090a6dd2bee341bba0d9dce5570d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_I2PCONNECTION</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253d1a43c1741d5390d20617a98888dd10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVER_DYNIP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25684b2adb389f57cfddc3f93e65f405b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVER_I2PTCPPORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255f5a4ebeff8e7191b392a23464620e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVER_I2PUDPPORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25441de131fcdcadcc1cbe1a16033f488f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVER_ISDYNIP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255860b2b0397c493baa2894487818e1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVERIP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25551bcffcee416b2dff28461936f80307</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVERPORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25895c91080c4773a0a40b3667bd669ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SAMPORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25cf6e7d0e2e9a5e83961662b85ee1ec54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_PROXYPORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2525f963016aee9bfddc325cd074f8fec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_SERVERINTERNAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25cf1f97eb1a0297f5bb5c4aaeaddeff11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_INBOUNDHOPS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25abff70d9e3544e8f7b88baab4309c304</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_OUTBOUNDHOPS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252d9ff2db47ec614fd504ef9557cf76c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PPROP_INBOUND_BANDWIDTH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25cf67ddb07d9a0e9b2b83a225852f768f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PPROP_OUTBOUND_BANDWIDTH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25713df55d5f387b4e5f1126f2692b90ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PPROP_INBOUND_BURST_BANDWIDTH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b552797eb8e01dd89a6650a765b5c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PPROP_OUTBOUND_BURST_BANDWIDTH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2542a89b6b2082c43d9c6b09ca71c80f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_BANDWIDTHSHAREPERCENTAGE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2501cbb34b24511a20af94b9d0f8ee1c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_I2PCONN_CLIENTNAME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a259643f4f40787b8ad7339b5903c4922b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_MESSAGEFILTER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2508b4e80010a0826189edeba4b85e98a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_MSGFILTER_ENABLED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2507930e4b5ff8855511011c3c84633b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_MSGFILTER_ALL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251b10dd7095f54245f49f9568c6c57430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_MSGFILTER_FRIENDS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25089298f3f3e624a310fe027d9d49118c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_MSGFILTER_SECURE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e45d3a00036d4b35b974e9f92c3bb89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_MSGFILTER_BY_KEYWORD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a258688a3c2cc347e444ee6740a7f082b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_MSGFILTER_KEYWORDS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25240887b711cd565911ffb567a6fa486f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_REMOTECTRL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256d8352a9bef63481a6a1be66eeb6ca24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_WEBSERVER_AUTORUN</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25a447f5a2e45a6b73453661e96b9da864</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_WEBSERVER_PORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a255b6205b95ade58b719796cac090c36b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_WEBSERVER_GUEST</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a258d261f9b2ebf2920244fc92b9f495cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_WEBSERVER_USEGZIP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25b7c3c88673c70d21824a9dc9dda98530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_WEBSERVER_REFRESH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a256d861fdef3afe93f2626d42fbdea073c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_WEBSERVER_TEMPLATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2525b4b9a802a8ffbd3aa2cc0f02f02317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_ONLINESIG</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25152ca5f0eab78500f921e5e311a483a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_ONLINESIG_ENABLED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2527b03c83641c3b387457b77c135b3f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_SERVERS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25902275c83b09008ae2dceed4ab69d375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_REMOVE_DEAD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251dd9e491314b942630d11e45b459a8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_DEAD_SERVER_RETRIES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25a937f3893d5d326903ea9850d80ddb6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_AUTO_UPDATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2521da427cc60f3845136169fa97d9632f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_URL_LIST</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e056c91844fa55f989adf1cad13faaeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_ADD_FROM_SERVER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25652e724d1b0957236d23d7de0b8716f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_ADD_FROM_CLIENT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25779b534708e3c5c165c081f6e5ca6718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_USE_SCORE_SYSTEM</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2551f45a9f5586500a34f16eaa8dec0ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_SMART_ID_CHECK</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25cd27b4ac36e9af65bd82f4892a987d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_SAFE_SERVER_CONNECT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252cba95c4a89284fe92a8530f8f8ac9d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_AUTOCONN_STATIC_ONLY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2562e9a8eb91c6c4cfdbbc79bb82dd6d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SERVERS_MANUAL_HIGH_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25968dc9228d883af8d14b2232f3481d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_FILES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251ce63873f2bf05343ac3b5e55f8286ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_ICH_ENABLED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25dda839797141027814f49de535e8adbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_AICH_TRUST</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2594bfabdda65f4b0b314a7fca072e2634</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_NEW_PAUSED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25db252a88d4b43067fae43778dab14798</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_NEW_AUTO_DL_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252df70936002430e1320c2ec50438a3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_PREVIEW_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254c0fcc2dac8913b0cdaff9cc5b8f2dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_NEW_AUTO_UL_PRIO</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2570a530d0bd27d35542300b6c7d0ace54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_UL_FULL_CHUNKS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252d3c5c6116a05e2c04adf521805bc106</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_START_NEXT_PAUSED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253de46a124d1c555754a2a43b66ee2bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_RESUME_SAME_CAT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25af9170656ca4e4a474d69603231a573e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_SAVE_SOURCES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25211086a07ca6a57b9e981f762015fa2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_EXTRACT_METADATA</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a253d9abd04bf9a03b3f3d9c7495200e61d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_ALLOC_FULL_CHUNKS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25fad8bd69fde63a7c643276f547f6ef49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_ALLOC_FULL_SIZE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a257be525944adfab3c62ba26cd280a4e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_CHECK_FREE_SPACE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2553ba62048cc34343c2d6a0a3df79ffa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_FILES_MIN_FREE_SPACE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25ed432427cca866ba06a263898bef1733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_SRCDROP</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a251f736f3b2d8903b6ba19dc2d0e8ad9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SRCDROP_NONEEDED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a250f2904f05465a20900ea71687c143e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SRCDROP_DROP_FQS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25aa84cc8a1d198e371272d15b23abe933</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SRCDROP_DROP_HQRS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25f63229a5c3f4cd4faf3a1faa5d4b3915</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SRCDROP_HQRS_VALUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254dcc2a26b79abf1071d2e02536e38731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SRCDROP_AUTODROP_TIMER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a258a5a798e23e62b80317cafde853498f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_DIRECTORIES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254ef0f3f8158fe40cdf0ac79d4da134f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_STATISTICS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25268ac6e2dfad0505a854accaecb46477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_SECURITY</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e860124a467b3028ecce50d6c0daa506</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SECURITY_CAN_SEE_SHARES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252c09b80834949be88ccd90b29bcb0054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SECURITY_FILE_PERMISSIONS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25682211a3e355cdd0a6d7a28d65e13746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SECURITY_DIR_PERMISSIONS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25c1bbffb78224a615fe9ed4bdc9d2ed2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_IPFILTER_ENABLED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252b4414e275f0e98d69cc5f5ea181a98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_IPFILTER_AUTO_UPDATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25cc1d182b30cebc219fa656b5a172be8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_IPFILTER_UPDATE_URL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2583ea60f1ed22b7c3c5b908d9f634cddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_IPFILTER_LEVEL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a254c4c65e5de5999dce257b15bc7885735</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_SECURITY_USE_SECIDENT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e91c846bd661cf9a86df7a2e3189c24c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_PREFS_CORETWEAKS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25aaef5e9a829cedabe2ec08b5fe54f7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CORETW_MAX_CONN_PER_FIVE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a250840d4b64787190ed38a77e63d291dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CORETW_VERBOSE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25e32418be6db44dcafd763c8b3efc7e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CORETW_FILEBUFFER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25be3f2c41dd7308f98c525ea35e17479c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CORETW_UL_QUEUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2581fd5991294e4c0a2f2ad4a2700eed0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_CORETW_SRV_KEEPALIVE_TIMEOUT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25fe2b051f605f8bf064d83a16a718efd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_LOG_TO_STATUS</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25545599df3a26a0d876a0dca63465f1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATSGRAPH_WIDTH</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a257dbaa84b13565c3f11de442775f35487</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATSGRAPH_SCALE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2542c504d9c48ecd2ca5f95af724285aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATSGRAPH_LAST</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25c6c73ef65b8585e55eb74a2d4dd6c459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATSGRAPH_DATA</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25f5cbbdb300aa1e0e55cd0f1cd169e18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATTREE_CAPPING</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2575b87fd9eae1ed61b378081613487263</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STATTREE_NODE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a2568cbebdc0fbe15a885d018ae2ade5717</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STAT_NODE_VALUE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a252d224faefbd2124689c88314b398952c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_TAG_STAT_VALUE_TYPE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>ba01db17f4a2bfbc3db60dc172972a25f673b377d7d42c7981523692e95dd0dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EC_DETAIL_LEVEL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e645cad2699ced4a40fe0cbd00c1f823</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_DETAIL_CMD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e645cad2699ced4a40fe0cbd00c1f8231fa05c20cbfad7af06981e38100a72f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_DETAIL_WEB</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e645cad2699ced4a40fe0cbd00c1f823e61e7646e33c6595c3a66890fdfb238d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_DETAIL_FULL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e645cad2699ced4a40fe0cbd00c1f823489dfabe4c1b047b8727fd8a8a047efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_DETAIL_UPDATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e645cad2699ced4a40fe0cbd00c1f823929ad6e5cb02c166ade0223052bc6e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_DETAIL_INC_UPDATE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e645cad2699ced4a40fe0cbd00c1f82316777fd324c93122b083cddb1349b530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EC_SEARCH_TYPE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>2ef197ff6129430dabf28953b2086b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_SEARCH_LOCAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>2ef197ff6129430dabf28953b2086b8cc9e0d59fa03733eb4d5e186350cea865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_SEARCH_GLOBAL</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>2ef197ff6129430dabf28953b2086b8ccbfdc09deb7fe8e39f4d07309a537c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_SEARCH_KAD</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>2ef197ff6129430dabf28953b2086b8cede3469b17fd95f5699837813b4618e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_SEARCH_WEB</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>2ef197ff6129430dabf28953b2086b8c45eeceb3a4028d5e7f70caa59a14b672</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EC_STATTREE_NODE_VALUE_TYPE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_INTEGER</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c0ad9cb14a268edf0858949f9678e68e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_ISTRING</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c7b180dd9e0548074ec2cd3d2b05d76f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_BYTES</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c52139c45e072a7df8394f1e724f03791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_ISHORT</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654cfefec763937f1d764b462ed53886a8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_TIME</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c67b02865b49205da7c081657f48a8427</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_SPEED</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654cca74c0bdcd23b9a6becf2b2ef28ae1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_STRING</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c7dc879386e531c24d6c5ebd3aa471c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EC_VALUE_DOUBLE</name>
      <anchorfile>ECCodes_8h.html</anchorfile>
      <anchor>e785bb4f1da279b4ed7249e4f4bc654c1f3ea3aff402ddec03202dba969ef0b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECFileConfig.h</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECFileConfig_8h</filename>
    <class kind="class">CECFileConfig</class>
    <member kind="function">
      <type>wxString</type>
      <name>FinalizeFilename</name>
      <anchorfile>ECFileConfig_8h.html</anchorfile>
      <anchor>80dcfb257e8f87d0528c4a03329a3812</anchor>
      <arglist>(const wxString filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECPacket.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECPacket_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ECPacket.h</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECPacket_8h</filename>
    <class kind="class">EC_IPv4_t</class>
    <class kind="class">CECTag</class>
    <class kind="struct">CECTag::NullTagConstructorSelector</class>
    <class kind="class">CECEmptyTag</class>
    <class kind="class">CECPacket</class>
  </compound>
  <compound kind="file">
    <name>ECSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECSocket_8cpp</filename>
    <class kind="struct">utf8_table</class>
    <class kind="class">CECSocketHandler</class>
    <member kind="define">
      <type>#define</type>
      <name>EC_SOCKET_BUFFER_SIZE</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>42aa2d9a634345312ef7c7a1502a5a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_COMPRESSION_LEVEL</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>bc7b692b33ca1c726eb903c67dfb5c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_MAX_UNCOMPRESSED</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>9d33c805d95c94b190170ea79a832fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__attribute__</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>9d373a9b65ff25b2db84c07394e1c212</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECSOCKET_SENDPACKET</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>e96c200792af0e83628d7c1967f19211</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECSOCKET_RECEIVEDPACKET</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>b8f9babd9472d03dec048c98b22f3fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECSOCKET_RECEIVEDDATA</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>47ca410dc2ddb53141b22449132bd80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EC_SOCKET_HANDLER</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>62e284a0250ea8543cf178516d494b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_mbtowc</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>c8de8218169af84b9c471c60d0584cfa</anchor>
      <arglist>(wchar_t *p, const unsigned char *s, int n) __attribute__((__visibility__(&quot;internal&quot;)))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_wctomb</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>654773c06d46e505729e99115c2214f0</anchor>
      <arglist>(unsigned char *s, wchar_t wc, int maxlen) __attribute__((__visibility__(&quot;internal&quot;)))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_mb_remain</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>f8cd255836fa1779e1c725caa8d362df</anchor>
      <arglist>(char c) __attribute__((__pure__))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_mbtowc</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>da3d3bb297e9825bc8cecfc7947d05b1</anchor>
      <arglist>(uint32 *p, const unsigned char *s, int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>utf8_wctomb</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>252c06435da9f04756dc9fda775f431d</anchor>
      <arglist>(unsigned char *s, uint32 wc, int maxlen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowZError</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>a0b65c6518edf3af25e24d4c82d15d3d</anchor>
      <arglist>(int zerror, z_streamp strm)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static struct utf8_table</type>
      <name>utf8_table</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>645c5345c7f80dbfedc32aede8571f5e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CECSocketHandler</type>
      <name>g_ECSocketHandler</name>
      <anchorfile>ECSocket_8cpp.html</anchorfile>
      <anchor>aeea863d82bd3e7bee8b48307283a9eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECSocket.h</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECSocket_8h</filename>
    <class kind="class">CQueuedData</class>
    <class kind="class">CECSocket</class>
  </compound>
  <compound kind="file">
    <name>ECSpecialTags.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECSpecialTags_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>FormatValue</name>
      <anchorfile>ECSpecialTags_8cpp.html</anchorfile>
      <anchor>3d84f1cf0aa1aa46f15f033dc96d293a</anchor>
      <arglist>(CFormat &amp;format, const CECTag *tag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ECSpecialTags.h</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>ECSpecialTags_8h</filename>
    <class kind="class">CValueMap</class>
    <class kind="class">CEC_Category_Tag</class>
    <class kind="class">CEC_Prefs_Packet</class>
    <class kind="class">CEC_Server_Tag</class>
    <class kind="class">CEC_ConnState_Tag</class>
    <class kind="class">CEC_PartFile_Tag</class>
    <class kind="class">CEC_SharedFile_Tag</class>
    <class kind="class">CEC_UpDownClient_Tag</class>
    <class kind="class">CEC_SearchFile_Tag</class>
    <class kind="class">CEC_Search_Tag</class>
    <class kind="class">CEC_StatTree_Node_Tag</class>
  </compound>
  <compound kind="file">
    <name>RemoteConnect.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>RemoteConnect_8cpp</filename>
    <member kind="function">
      <type></type>
      <name>DEFINE_LOCAL_EVENT_TYPE</name>
      <anchorfile>RemoteConnect_8cpp.html</anchorfile>
      <anchor>a30c00ea7bd16326fa57c1b37e2333b9</anchor>
      <arglist>(wxEVT_EC_CONNECTION)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RemoteConnect.h</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>RemoteConnect_8h</filename>
    <class kind="class">CECPacketHandlerBase</class>
    <class kind="class">CECLoginPacket</class>
    <class kind="class">CRemoteConnect</class>
    <class kind="class">wxECSocketEvent</class>
  </compound>
  <compound kind="file">
    <name>b64codec.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>b64codec_8h</filename>
    <namespace>base64</namespace>
    <class kind="struct">base64::decoder</class>
    <class kind="struct">base64::decoder::base64_decodestate</class>
    <class kind="struct">base64::encoder</class>
    <class kind="struct">base64::encoder::base64_encodestate</class>
  </compound>
  <compound kind="file">
    <name>CI2PAddress.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CI2PAddress_8cpp</filename>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>INVALID_TAG</name>
      <anchorfile>CI2PAddress_8cpp.html</anchorfile>
      <anchor>1aa36404ea2304a74474d9b36dd24e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>VALID_TAG</name>
      <anchorfile>CI2PAddress_8cpp.html</anchorfile>
      <anchor>c941d519420c791ad05c3fdff9b33e2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>ALIAS_TAG</name>
      <anchorfile>CI2PAddress_8cpp.html</anchorfile>
      <anchor>c829b0f5aa3c33b99b6367cd7ba22274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>COMPLETE_FILE_TAG</name>
      <anchorfile>CI2PAddress_8cpp.html</anchorfile>
      <anchor>b0323bc501d3b73f56a9885f4c38f8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>INCOMPLETE_FILE_TAG</name>
      <anchorfile>CI2PAddress_8cpp.html</anchorfile>
      <anchor>4d539c324a98337a56584c0b9b221dd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CI2PAddress.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CI2PAddress_8h</filename>
    <class kind="class">CI2PAddress</class>
    <member kind="define">
      <type>#define</type>
      <name>PUBKEY_LEN</name>
      <anchorfile>CI2PAddress_8h.html</anchorfile>
      <anchor>891e1afffc00f522f78d6ec20f7cca2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BASE64_PUBKEY_LEN</name>
      <anchorfile>CI2PAddress_8h.html</anchorfile>
      <anchor>c643fc3e2d39d9b7d5e19b9b24251463</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>char</type>
      <name>sam_pubkey_t</name>
      <anchorfile>CI2PAddress_8h.html</anchorfile>
      <anchor>82fbdd102e52fe541fffa8f8f6e1dc19</anchor>
      <arglist>[BASE64_PUBKEY_LEN+1]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CI2PRouter.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CI2PRouter_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>CI2PRouter.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CI2PRouter_8h</filename>
    <class kind="class">CI2PRouter</class>
  </compound>
  <compound kind="file">
    <name>CI2PRouterThread.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CI2PRouterThread_8java</filename>
    <class kind="class">CI2PRouterThread</class>
  </compound>
  <compound kind="file">
    <name>CMuleLogger.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CMuleLogger_8java</filename>
    <class kind="class">CMuleLogger</class>
  </compound>
  <compound kind="file">
    <name>CMuleLoggerImpl.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CMuleLoggerImpl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>CSamLauncher.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CSamLauncher_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>CSamLauncher.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CSamLauncher_8h</filename>
    <class kind="class">CSamLauncher</class>
  </compound>
  <compound kind="file">
    <name>CSamSession.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CSamSession_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>SAM_HELLO_CMD</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>9fa9c59a04b1b880c613528090492385</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_HELLO_REPLY</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>229ae8f6543c56704e76b9862c8e3d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_OK</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>0c9a735d901bc39e178ae16588bf495e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_DD</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>2957a58b13c2ab22ef6d47b5a1ff6032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_I2E</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>df88c19339f543fadadf6c1ba95a7070</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_IK</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>7f7c2546316da8f3aef8a8469c66eb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_OK</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>0c9a735d901bc39e178ae16588bf495e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_DD</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>2957a58b13c2ab22ef6d47b5a1ff6032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_I2E</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>df88c19339f543fadadf6c1ba95a7070</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_SESSTATUS_REPLY_IK</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>7f7c2546316da8f3aef8a8469c66eb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>privateDumpMemToStr</name>
      <anchorfile>CSamSession_8cpp.html</anchorfile>
      <anchor>b2d1368b0c593692aad999d5ec5aed33</anchor>
      <arglist>(const void *buff, int n, const wxString &amp;msg, bool ok=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CSamSession.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>CSamSession_8h</filename>
    <class kind="class">CSamSession</class>
    <class kind="class">CSamSession::exception</class>
    <class kind="class">CSamSession::buff_t</class>
    <class kind="class">CSamSession::write_buff_t</class>
    <class kind="struct">CSamSession::UnknownStreamId</class>
    <class kind="struct">CSamSession::ErrorInReading</class>
    <class kind="struct">CSamSession::ErrorInWriting</class>
    <class kind="class">CSamSession::FlagSetter</class>
    <class kind="struct">CSamSession::ReadCtx</class>
    <class kind="struct">CSamSession::ParseCtx</class>
    <class kind="struct">CSamSession::Read2Ctx</class>
    <class kind="struct">CSamSession::WriteCtx</class>
    <member kind="define">
      <type>#define</type>
      <name>SAM_CMD_LEN</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>2e86c36b72b035a7afa0d6b024a2d537</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_DGRAM_PAYLOAD_MAX</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>bafb2a8aed03595b261be76135ec8908</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_LOGMSG_LEN</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>c46e67c4d5eb24d128d4b716b66343a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_NAME_LEN</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>d20cdb56809b20e0b3ab50c5d6bee6ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_STREAM_PAYLOAD_MAX</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>c3341f58dd4555e121e925c202529117</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_RAW_PAYLOAD_MAX</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>e0984924d0ddae4e1071b37c6e860c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAM_REPLY_LEN</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>9e63d7d1887dedfdcc550ad320929c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cr_context</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>943b0b210757a1dd75b38bbab2daa422</anchor>
      <arglist>(Ctx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cr_start</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>ef36056d37d5a07eb5fe20dad70c73e3</anchor>
      <arglist>(ctx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cr_redo</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>1d7e929fd524bd3ae95f40525b9b0f16</anchor>
      <arglist>(ctx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cr_return</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>010f146c258a939dfc273c7b326cf258</anchor>
      <arglist>(x, ctx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cr_end</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>95f83910e248278126607704dcf38cce</anchor>
      <arglist>(ctx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>cr_reinit</name>
      <anchorfile>CSamSession_8h.html</anchorfile>
      <anchor>d8b2ae67a58d9139fe68eb12605b2775</anchor>
      <arglist>(ctx)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>I2PRouter.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>I2PRouter_8java</filename>
    <class kind="class">I2PRouter</class>
  </compound>
  <compound kind="file">
    <name>JConversions.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>JConversions_8cpp</filename>
    <member kind="function">
      <type>wxString</type>
      <name>toString</name>
      <anchorfile>JConversions_8cpp.html</anchorfile>
      <anchor>7ac0499084ab31c8823ce3b072beb0b1</anchor>
      <arglist>(jstring orig)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>toString</name>
      <anchorfile>JConversions_8cpp.html</anchorfile>
      <anchor>35b5d5da6e4747bdc4c2b4fa653b9a83</anchor>
      <arglist>(net::i2p::data::Destination *d)</arglist>
    </member>
    <member kind="function">
      <type>jstring</type>
      <name>toJstring</name>
      <anchorfile>JConversions_8cpp.html</anchorfile>
      <anchor>647b9a628e6e87fbc90bb9b8dab3cc50</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JConversions.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>JConversions_8h</filename>
    <member kind="function">
      <type>wxString</type>
      <name>toString</name>
      <anchorfile>JConversions_8h.html</anchorfile>
      <anchor>cc4394ec5c4460f04f0007d30e263f21</anchor>
      <arglist>(net::i2p::data::Destination d)</arglist>
    </member>
    <member kind="function">
      <type>java::lang::String *</type>
      <name>toJstring</name>
      <anchorfile>JConversions_8h.html</anchorfile>
      <anchor>cb34d87126bb85ae545d04bb7cc1e6c4</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>myMutexLocker.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>myMutexLocker_8cpp</filename>
    <member kind="typedef">
      <type>std::pair&lt; wxMutex *, unsigned long &gt;</type>
      <name>mutexThread</name>
      <anchorfile>myMutexLocker_8cpp.html</anchorfile>
      <anchor>43463f9a7be59bc5024a627b4208a784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; mutexThread, const char * &gt;</type>
      <name>s_locked</name>
      <anchorfile>myMutexLocker_8cpp.html</anchorfile>
      <anchor>2fda54c85163289d2f61702ceea36351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>s_lockedMutex</name>
      <anchorfile>myMutexLocker_8cpp.html</anchorfile>
      <anchor>e83d8203a02fe88a913cd194e3da6c37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>myMutexLocker.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>myMutexLocker_8h</filename>
    <class kind="class">myMutexLocker</class>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT_LOCK</name>
      <anchorfile>myMutexLocker_8h.html</anchorfile>
      <anchor>ef515672804920c7ea4b4166d510eafa</anchor>
      <arglist>(locker, mutex, func)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_BUFF_LOCK</name>
      <anchorfile>myMutexLocker_8h.html</anchorfile>
      <anchor>f3359132ec13a93ebe13d99cd1a2faea</anchor>
      <arglist>(wb, func)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT_LOCKED</name>
      <anchorfile>myMutexLocker_8h.html</anchorfile>
      <anchor>25dd316cae73f8e88021e7dab1f61624</anchor>
      <arglist>(mutex, msg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test-socket.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test-socket_8h</filename>
    <class kind="class">MyFrame</class>
    <class kind="class">Testeur</class>
    <member kind="define">
      <type>#define</type>
      <name>MAX_MSG_SIZE</name>
      <anchorfile>test-socket_8h.html</anchorfile>
      <anchor>17e333794ae761cd55ec6fd6fc0f1bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_QUIT</name>
      <anchorfile>test-socket_8h.html</anchorfile>
      <anchor>80155586fa275b28773c9b203f52caba200bc30d95d6e452452deba3d5fe18a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_ABOUT</name>
      <anchorfile>test-socket_8h.html</anchorfile>
      <anchor>80155586fa275b28773c9b203f52cabaeca1b7594ad539c1d682fcc9e6c36463</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_ID</name>
      <anchorfile>test-socket_8h.html</anchorfile>
      <anchor>80155586fa275b28773c9b203f52cabacc9d7d342c77b23067cdb9f0a900fa2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOCKET_ID</name>
      <anchorfile>test-socket_8h.html</anchorfile>
      <anchor>80155586fa275b28773c9b203f52cabab5b3d71cd1175e133aa39d74924ffac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVER_TEST</name>
      <anchorfile>test-socket_8h.html</anchorfile>
      <anchor>80155586fa275b28773c9b203f52caba71e3ea9df48ac216025e22efbbe32349</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test_8java</filename>
    <class kind="class">test</class>
  </compound>
  <compound kind="file">
    <name>test2.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test2_8cpp</filename>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>test2_8cpp.html</anchorfile>
      <anchor>e66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test3.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test3_8cpp</filename>
    <class kind="class">myApp</class>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>test3_8cpp.html</anchorfile>
      <anchor>a8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>test3_8cpp.html</anchorfile>
      <anchor>a93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test4.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test4_8cpp</filename>
    <class kind="class">myApp</class>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>test4_8cpp.html</anchorfile>
      <anchor>a8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>test4_8cpp.html</anchorfile>
      <anchor>a93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_APP</name>
      <anchorfile>test4_8cpp.html</anchorfile>
      <anchor>9eed58861a9d7cff195cf2efcf4284aa</anchor>
      <arglist>(myApp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IMPLEMENT_APP</name>
      <anchorfile>test4_8cpp.html</anchorfile>
      <anchor>76a6b7e49382965436e46a85ab51b38e</anchor>
      <arglist>(myApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test4j.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test4j_8java</filename>
    <class kind="class">test4j</class>
  </compound>
  <compound kind="file">
    <name>test5.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test5_8cpp</filename>
    <class kind="class">myApp</class>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>test5_8cpp.html</anchorfile>
      <anchor>a8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>test5_8cpp.html</anchorfile>
      <anchor>a93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_APP</name>
      <anchorfile>test5_8cpp.html</anchorfile>
      <anchor>9eed58861a9d7cff195cf2efcf4284aa</anchor>
      <arglist>(myApp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IMPLEMENT_APP</name>
      <anchorfile>test5_8cpp.html</anchorfile>
      <anchor>76a6b7e49382965436e46a85ab51b38e</anchor>
      <arglist>(myApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test5j.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test5j_8java</filename>
    <class kind="class">test5j</class>
  </compound>
  <compound kind="file">
    <name>test6.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test6_8cpp</filename>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>test6_8cpp.html</anchorfile>
      <anchor>e66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test7-socket.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>test7-socket_8cpp</filename>
    <class kind="class">MyApp</class>
    <member kind="function">
      <type></type>
      <name>IMPLEMENT_APP</name>
      <anchorfile>test7-socket_8cpp.html</anchorfile>
      <anchor>3bb12aa9b12c0e07b7f235e6cb35cc65</anchor>
      <arglist>(MyApp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wxI2PDatagramSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PDatagramSocket_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxI2PDatagramSocket.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PDatagramSocket_8h</filename>
    <class kind="class">wxI2PDatagramSocket</class>
    <class kind="class">wxI2PDatagramSocket::CDatagramMessage</class>
  </compound>
  <compound kind="file">
    <name>wxI2PEvents.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PEvents_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxI2PEvents.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PEvents_8h</filename>
    <class kind="class">CI2PSocketEvent</class>
    <member kind="define">
      <type>#define</type>
      <name>wxI2PSocketEventHandler</name>
      <anchorfile>wxI2PEvents_8h.html</anchorfile>
      <anchor>8b9645e281e02c71cbcffd20b0f5f964</anchor>
      <arglist>(func)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVT_I2PSOCKET</name>
      <anchorfile>wxI2PEvents_8h.html</anchorfile>
      <anchor>3ba211c5dcde1532a8a27edb0b63ed3c</anchor>
      <arglist>(id, func)</arglist>
    </member>
    <member kind="typedef">
      <type>void(wxEvtHandler::*</type>
      <name>wxI2PSocketEventFunction</name>
      <anchorfile>wxI2PEvents_8h.html</anchorfile>
      <anchor>d9fa01bf41db054db895ae6daafbc8e7</anchor>
      <arglist>)(CI2PSocketEvent &amp;)</arglist>
    </member>
    <member kind="typedef">
      <type>void(wxEvtHandler::*</type>
      <name>I2PSocketEventFunction</name>
      <anchorfile>wxI2PEvents_8h.html</anchorfile>
      <anchor>4cd5778e3b15c630144d559bca331083</anchor>
      <arglist>)(CI2PSocketEvent &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_LOCAL_EVENT_TYPE</name>
      <anchorfile>wxI2PEvents_8h.html</anchorfile>
      <anchor>bff2d25aef66c12b49a9e4546f37f286</anchor>
      <arglist>(wxEVT_I2PSOCKET,-1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wxI2PSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocket_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxI2PSocket.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocket_8h</filename>
    <class kind="class">wxI2PSocket</class>
  </compound>
  <compound kind="file">
    <name>wxI2PSocketBase.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocketBase_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxI2PSocketBase.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocketBase_8h</filename>
    <class kind="class">wxI2PSocketBase</class>
    <class kind="struct">wxI2PSocketBase::Behavior</class>
  </compound>
  <compound kind="file">
    <name>wxI2PSocketClient.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocketClient_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxI2PSocketClient.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocketClient_8h</filename>
    <class kind="class">wxI2PSocketClient</class>
  </compound>
  <compound kind="file">
    <name>wxI2PSocketServer.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocketServer_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxI2PSocketServer.h</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxI2PSocketServer_8h</filename>
    <class kind="class">wxI2PSocketServer</class>
  </compound>
  <compound kind="file">
    <name>WxStringWriter.java</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>WxStringWriter_8java</filename>
    <class kind="class">WxStringWriter</class>
  </compound>
  <compound kind="file">
    <name>wxStringWriterImpl.cpp</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>wxStringWriterImpl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>listctrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>listctrl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>listctrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>listctrl_8h</filename>
  </compound>
  <compound kind="file">
    <name>ListenSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ListenSocket_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ListenSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ListenSocket_8h</filename>
    <class kind="class">CListenSocket</class>
  </compound>
  <compound kind="file">
    <name>Logger.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Logger_8cpp</filename>
    <class kind="struct">LogEntry</class>
    <member kind="function">
      <type>void</type>
      <name>PushEntry</name>
      <anchorfile>Logger_8cpp.html</anchorfile>
      <anchor>ffe6332558fbb1cab1d9b34bdb740862</anchor>
      <arglist>(GUI_Event_ID event, bool critical, const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>LogEntry *</type>
      <name>PopEntry</name>
      <anchorfile>Logger_8cpp.html</anchorfile>
      <anchor>4ec7627e46467b12c4c81747d051bd7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CDebugCategory</type>
      <name>g_debugcats</name>
      <anchorfile>Logger_8cpp.html</anchorfile>
      <anchor>70cba8f5702ed0f92c4347c2a928213e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>categoryCount</name>
      <anchorfile>Logger_8cpp.html</anchorfile>
      <anchor>b9099c35477fcd04936f6f8b4cdf9741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::deque&lt; LogEntry * &gt;</type>
      <name>s_backLog</name>
      <anchorfile>Logger_8cpp.html</anchorfile>
      <anchor>63008d9380001e98ffdb60a841a410d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxMutex</type>
      <name>s_mutex</name>
      <anchorfile>Logger_8cpp.html</anchorfile>
      <anchor>6756b750e4916bee675df9bd30940858</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Logger.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Logger_8h</filename>
    <class kind="class">CDebugCategory</class>
    <class kind="class">CLogger</class>
    <class kind="class">CLoggerTarget</class>
    <member kind="define">
      <type>#define</type>
      <name>AddDebugLogLineM</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>d0fbee446535048e8e385e48623ddbdf</anchor>
      <arglist>(critical, type, string)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AddLogLineM</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>a97f0abfcf8b4a773683fd690832909b</anchor>
      <arglist>(critical, string)</arglist>
    </member>
    <member kind="enumeration">
      <name>DebugType</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logGeneral</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff17be87535b0a2af00f2e5b203c335ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logHasher</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff117879f698a6c435a5ac5170d16c56dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logClient</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffd1e6875bb98319ff68364fa27bcae92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logLocalClient</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffe99196f651baabec86150dff529bc134</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logRemoteClient</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff310128d5547b1860aa30b53308ce8d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logPacketErrors</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff5fb52cfec3ca4a2adf6e0c5ae1bfc02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logCFile</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff9f397d37e69a5c87b4deb06438b4acd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logFileIO</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff571adc5312e5aa0fb8f6f5834719c9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logZLib</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff049267e11fbf4f62b6abfa40b44c6d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logAICHThread</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff36af9f99572b5c455fd921ccf503cf8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logAICHTransfer</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff647ffc0a6df9c78d14b7fd947dc2e7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logAICHRecovery</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff034833e4af6e0ef6785fa4243d11eb64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logListenSocket</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffc9619c151a47a881d6f3e235b0a8fa2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logCredits</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffd3aabe908a68d1190bb0ed75817f728f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logClientUDP</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff881fada40e570e44e83a49f6837e5372</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logDownloadQueue</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff6ad69d301d34a63a364eb7fa7a204bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logDestFilter</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffa7fc2a7446ca34a01bfd18a25cf37644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKnownFiles</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff356040c7ddffc7def7b0e132902b74e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logPartFile</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffda532c459d03a43f0ab53d31db598a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logSHAHashSet</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffa05397d5f65ae230f6e189400cc95ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logServer</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff2ddb357da136673e1aab81ed34afdc96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logProxy</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff6178141ae75d899c4db84056b6e865bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logSearch</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff70931a66c4116e23731101c17bb7460b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logServerUDP</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffaad3a20fc727a7c97165f9cc4a134129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logClientKadUDP</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff820b7c61aa503d52f39f6df52be10650</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKadSearch</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff5eabbec6275b786e63641e51a0b21582</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKadRouting</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff6c9bd51d3cc48124bf4fb0d9ec2db071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKadIndex</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffc2ed3c820726d5fe12c3516201f986f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKadMain</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffec2ae19d431252d120b2de93844fad00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKadPrefs</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffc412d46409aaf2d3127d7e1d7966466b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logPfConvert</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffa3c741e42a86f4d81d1e01cee2d46589</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logMuleUDP</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff3b6b4ac7ee896058c44ac41fac8dc23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logED2KLink</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff645796b1955fee07c07aaf6368097c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PDatagramSocket</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffbb7cc1a3c12cc569eddb3ee6e7f5a70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PEvents</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff287e00abd76381482c8f1438356d5687</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PSocketClient</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff95f7b732c064cade29682c0feb281d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PSocketBase</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff5cfb8cc198a93e85042e4670063735d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PRouter</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff7061c32bda273ff00cb069ff2488a756</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PSocketServer</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595fff8c8b6b68283e225341e70486cdeedd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PSocket</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffae38257153cd38ce83291db9838d7b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PSocketReadThreads</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595fffa2d1099e8e89800397e9ce7d6066af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PSocketWriteThreads</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffc2849e76b69f90b6d612fd574fe14ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logAddress</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff3bdce4f7ab15e842aa276a2b9d4da3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logMyMutex</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffe7ddc163ed615911997b207fc7ce0626</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logCTag</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff72e8c2c987ece352689033bc0799b5d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logI2PClient</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffc151efea8bec852aef01cdb412dd263f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logWxEvents</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff4c5e94a83b35c008423764f2382b0270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logKadSourceCount</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff07832f62b8b40220d3c9ef8830556f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logSamLauncher</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff2bef9f000ed7f8034bd09d7a8485da7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logSamSession</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ff249355a7fe7f35d1c5e9fdc280a9dca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>logSamStream</name>
      <anchorfile>Logger_8h.html</anchorfile>
      <anchor>0d1ccb95e0d402406ae03812fcb595ffb9524a3b485bf70788cebb78d43599b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>make_ed2k_link.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>make__ed2k__link_8cpp</filename>
    <class kind="class">make_ed2k_link</class>
    <member kind="function">
      <type></type>
      <name>DECLARE_APP</name>
      <anchorfile>make__ed2k__link_8cpp.html</anchorfile>
      <anchor>f30f9c9c1711206e2d93931f3f8c96ad</anchor>
      <arglist>(make_ed2k_link)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IMPLEMENT_APP</name>
      <anchorfile>make__ed2k__link_8cpp.html</anchorfile>
      <anchor>e0c829f8e7eb3e76849d76cae577e8ed</anchor>
      <arglist>(make_ed2k_link)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MD4Hash.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MD4Hash_8h</filename>
    <class kind="class">CMD4Hash</class>
    <member kind="variable">
      <type>const size_t</type>
      <name>MD4HASH_LENGTH</name>
      <anchorfile>MD4Hash_8h.html</anchorfile>
      <anchor>ae86cb7a3260e39eccf2ed35c7d8b0e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemFile.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MemFile_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>MemFile.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MemFile_8h</filename>
    <class kind="class">CMemFile</class>
  </compound>
  <compound kind="file">
    <name>MuleGifCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleGifCtrl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>MuleGifCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleGifCtrl_8h</filename>
    <class kind="class">MuleGifCtrl</class>
    <member kind="variable">
      <type>const int</type>
      <name>GIFTIMERID</name>
      <anchorfile>MuleGifCtrl_8h.html</anchorfile>
      <anchor>4834feac2e04257c744c370dea3131c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleListCtrl_8cpp</filename>
    <member kind="function" static="yes">
      <type>static wxImageList</type>
      <name>imgList</name>
      <anchorfile>MuleListCtrl_8cpp.html</anchorfile>
      <anchor>d70efc915c4f8615de7192ff105f64c1</anchor>
      <arglist>(16, 16, true, 0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleListCtrl_8h</filename>
    <class kind="class">CMuleListCtrl</class>
    <member kind="define">
      <type>#define</type>
      <name>wxLC_OWNERDRAW</name>
      <anchorfile>MuleListCtrl_8h.html</anchorfile>
      <anchor>4c2f27438b31e89513725b66b71d4243</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleNotebook.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleNotebook_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>MuleNotebook.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleNotebook_8h</filename>
    <class kind="class">CMuleNotebook</class>
    <member kind="define">
      <type>#define</type>
      <name>EVT_MULENOTEBOOK_PAGE_CLOSED</name>
      <anchorfile>MuleNotebook_8h.html</anchorfile>
      <anchor>527f5fc1e1ea590022997851be10200c</anchor>
      <arglist>(id, fn)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVT_MULENOTEBOOK_ALL_PAGES_CLOSED</name>
      <anchorfile>MuleNotebook_8h.html</anchorfile>
      <anchor>72c1f337b8404fb51e52edf98d1805f6</anchor>
      <arglist>(id, fn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleTextCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleTextCtrl_8cpp</filename>
    <member kind="enumeration">
      <name>CMTC_Events</name>
      <anchorfile>MuleTextCtrl_8cpp.html</anchorfile>
      <anchor>810da93e27a0e6a1e1476a7e727a441b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMTCE_Cut</name>
      <anchorfile>MuleTextCtrl_8cpp.html</anchorfile>
      <anchor>810da93e27a0e6a1e1476a7e727a441b279d8c28385680f9b8af0b3ea9758c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMTCE_Copy</name>
      <anchorfile>MuleTextCtrl_8cpp.html</anchorfile>
      <anchor>810da93e27a0e6a1e1476a7e727a441b622b774f03451d882a68da682c0678ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMTCE_Paste</name>
      <anchorfile>MuleTextCtrl_8cpp.html</anchorfile>
      <anchor>810da93e27a0e6a1e1476a7e727a441bc3f734baa85f3e357a761d144b3236f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMTCE_Clear</name>
      <anchorfile>MuleTextCtrl_8cpp.html</anchorfile>
      <anchor>810da93e27a0e6a1e1476a7e727a441b854074a97578e6e1355fae789423fe70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMTCE_SelAll</name>
      <anchorfile>MuleTextCtrl_8cpp.html</anchorfile>
      <anchor>810da93e27a0e6a1e1476a7e727a441b87e9679bd62d43cd1c34769227181c09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleTextCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleTextCtrl_8h</filename>
    <class kind="class">CMuleTextCtrl</class>
  </compound>
  <compound kind="file">
    <name>MuleTrayIcon.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleTrayIcon_8cpp</filename>
    <member kind="enumvalue">
      <name>TRAY_MENU_INFO</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea8253bad151c54c02d534fc4d6d6f16e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_CLIENTINFO</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea3e3f0c400a3bf3d1705f44ad1f69bf5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_CLIENTINFO_ITEM</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea698ea7bb87bcf09c5b2c2a082c1e7ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_DISCONNECT</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1eab90ccee5a82aea7eaa1f492ec9670942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_CONNECT</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea69c3424f39a3c03018f608df45a73dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_HIDE</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea35146b1ffb1c2fb4287464f89e69bd7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_SHOW</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1eac3994d158de57da654dcb45a291f10b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_MENU_EXIT</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1eabb259c64cbeb6936d5e4828e95ed1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_ITEM1</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea0a8c9edcbce446708bdc44ed5e8e7fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_ITEM2</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea1d4d37468cdf62fdd6ecb56edaa7d48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_ITEM3</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea626a118608750b66f1dff462cd27eb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_ITEM4</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1eac3de16a83324fdcb1e111896eb2b3d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_ITEM5</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea679f62d7f129cb4b8c85a914a9c76c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPLOAD_ITEM6</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea16e1096367acb8062c8d54621b138b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_ITEM1</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea367b4937c6a02a5390bd42718a5920af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_ITEM2</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea3e0b6da5d81966c6678d39f4d392efa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_ITEM3</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea1ffc16b394ffdcde9e3ee8873d068c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_ITEM4</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea0884ed0ad0f48942193cfa36f9b966c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_ITEM5</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea2c8e08184f81a9009210bd7f9e3bf55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOWNLOAD_ITEM6</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>6b7b47dd702d9e331586d485013fd1ea8672779670e8db9a5f334921096060ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetSpeedFromString</name>
      <anchorfile>MuleTrayIcon_8cpp.html</anchorfile>
      <anchor>36421c68313ad54836718da6c443ed0c</anchor>
      <arglist>(wxString label)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleTrayIcon.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleTrayIcon_8h</filename>
    <class kind="class">CMuleTrayIcon</class>
    <member kind="enumeration">
      <name>TaskbarNotifier</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TBN_NULL</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1d2e2a731501a9ca325a3ba1c88a97b2d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TBN_CHAT</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1dc424850d3c7f8a1812c32f949331f856</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TBN_DLOAD</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1d92a62e5b8ccc658a91b018768d0fbd98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TBN_LOG</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1d9496b84de7ad1eee14a8ade51f5922d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TBN_IMPORTANTEVENT</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1db73c1470a248e4668f2dcfc3fb55b176</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TBN_NEWVERSION</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>5ffea0e8f117be9cc679f8c19f0dbe1d1c2b430bbaec6ed78ef9bc76566443b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_ICON_DISCONNECTED</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>f9bdc3014f3d54c426b6d2df10de49603486948690b649a90d0592a21a745712</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_ICON_LOWID</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>f9bdc3014f3d54c426b6d2df10de4960c30e09f2bef676f1e1bb9b22b9a7c134</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRAY_ICON_HIGHID</name>
      <anchorfile>MuleTrayIcon_8h.html</anchorfile>
      <anchor>f9bdc3014f3d54c426b6d2df10de4960e1c2f8f283f855d65ab8c8573efea8b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleUDPSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleUDPSocket_8cpp</filename>
    <member kind="function" static="yes">
      <type>static wxUint16</type>
      <name>packetHash</name>
      <anchorfile>MuleUDPSocket_8cpp.html</anchorfile>
      <anchor>ef2752ea61ba579382ac475232528b54</anchor>
      <arglist>(const char *buf, int size)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned</type>
      <name>UDP_BUFFER_SIZE</name>
      <anchorfile>MuleUDPSocket_8cpp.html</anchorfile>
      <anchor>b9bb7d47f9bc14373cefb6435bd49189</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MuleUDPSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>MuleUDPSocket_8h</filename>
    <class kind="class">CMuleUDPSocket</class>
    <class kind="struct">CMuleUDPSocket::UDPPack</class>
  </compound>
  <compound kind="file">
    <name>muuli_wdr.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>muuli__wdr_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>__WDR_EURO__</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>f408cff180855c38453577d0e4c60c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>muleDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>d184c906f4567a40983d1be870d41a76</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>serverListDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>d1bbd83f4fd14489f7e65e926719b9fa</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>searchDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>39244d2aa4563761cf262536a0dfeea6</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>transferTopPane</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>7685b029d863064447e24b1489cccd58</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>transferBottomPane</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>bc43cc30f3efdd602a0e7329c5111ef7</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>messagePage</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>9f4085aa109691526f1b42be9da06492</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>fileDetails</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>97a20317a4af6bf734e3717e3918c740</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>commentDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>b5305206ed6b3761d824a95a1ad015db</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>commentLstDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>929696c9b0435ae3df2369162fdf6f2f</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>downloadDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>ec2091daf6d8cda26a87935f46c828d9</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>addFriendDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>0484c0ff4834450e227220c42b3b6b25</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>sharedfilesDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>e8b3d7c1db8cbe1b172a9b435e3bc6ba</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>statsDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>97ec7ab89bb67f43490f4463dfc644a1</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>clientDetails</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>4fd030c98cd7722c46dd048ecb170714</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesGeneralTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>a818cb51a08cb3967827fe825139198e</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesConnectionTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>89e3d4559f10287be3706574c8d2241c</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesI2PConnectionTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>d969ec703c6351e2fd16977285118e3e</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesServerTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>3897a3e8dfb4f6b51c3286d9ab9f331d</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesFilesTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>73d9b024b5a9fb0df4066296fc4ca228</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesDirectoriesTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>5721970595e2ff79f6f0b799b3472f23</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesStatisticsTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>d799523921d76332e700cfa4b31c037b</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesNotifyTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>a5aa207c3968363826fc54993f5cded6</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesimuleTweaksTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>ded089bd5ee6da051687ff09027c190a</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesGuiTweaksTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>bf39117ee25cd055059b4e36dc4b1d24</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesSourcesDroppingTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>e031aa33f2000f1b0ce332c485a28b71</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesRemoteControlsTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>067eb543cc819e86a78a2983bbba0609</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>preferencesDlgTop</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>569cbd92279b184f0c08cb2f09087ff3</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>CategoriesEditWindow</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>62250b33c035df36ea3a2daff1722329</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>transferDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>6e663a01102991e4ebbe031514154aa7</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>ServerInfoLog</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>bd60c846e35b4c1a119e473e29852e4e</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>imuleLog</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>f4546d7ded19c8234533be8345a64234</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>serverListDlgUp</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>6da4e28e1e02d7b9af23c7662dc28cdd</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>serverListDlgDown</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>989e82ae10e6e288b057d84b08cc2496</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>LocaleWarning</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>1e724c920f152689cdfb978d58b1e52d</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>ED2K_Info</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>0fd1f0829b7c9a03852e795067265dfe</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesSecurityTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>4953a4015770900aa8563bb752e28657</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesOnlineSigTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>9032fc58d09f0b5cefb1794cd148094d</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesMessagesTab</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>4bce246846381a1369fefba0f2ac801d</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>CoreConnect</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>a680a84f2a13aebb21465349ea8654e3</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesDebug</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>e254e6716c4b1272d49b17bd226e5823</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>convertDlg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>2cb6e0eb3242ebae0ad89db134f87fd6</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>Kad_Info</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>acccd34df43fe59832b3245462f60dcb</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>NetDialog</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>1ca5e95677f39e13da2abe077ac4aa50</anchor>
      <arglist>(wxWindow *parent, bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muleToolbar</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>1836380b8cc0c1b86bea9db65d0ce5a0</anchor>
      <arglist>(wxToolBar *parent)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>clientImages</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>c8df65c589dffcca98e73d30d0fce904</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>dlStatusImages</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>3e16ee7fc500f718d4cec768a9ac0e46</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>connImages</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>9e22345144da1a93c28c3d336f6bf6b2</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>moreImages</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>4caca63463612f247dab5c333eaa8a8a</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>imuleSpecial</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>43024eca9949d8ad4b49eac9c477f8d3</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>connButImg</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>3dd59e520653b104917a2afa88c1b9ec</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>imuleDlgImages</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>973c3c4ae9859fc40e83ea3b7f50aef2</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_dlgcnt</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>36a72bc5942570b1e000f3e93a8033c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>contentSizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>3eef999cc8e0822ef2b14de6587277b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_fed2klh</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>1bed27e1b45dc7a8f2e8d039196c7014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_searchdlgsizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>1c51ad2ff2ca5fff15f0b660d2dfa3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_searchsizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>5475591bdd119612b49faa6909c96f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_extendedsizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>fa9ffd2eada40c8cf9670186a7dfab0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_filtersizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>18369b7f9ea1e8600be419bcba708283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>transfer_top_boxsizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>635516ae583763c5cfa3d38c22a1297f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>queueSizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>7f4dea777c92fb4bc0beb4a53fbb82b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_clientlistHeader</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>8dd5c09f0b71dfaf04530572ac5302ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_FD_X0</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>0e9cd13a4c615367bac24c230089a39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_FD_X6</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>7299ed3456bc10537ba83f0597c4bab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_FD_ICH</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>b3b1d67b7964fadab1415530ca1ae3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>testSizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>0b732e120177bb9d55aeea12633c1028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_MISC_OPTIONS</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>6c60d27a537a77b49cb05c4886409f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>prefs_main_sizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>ebfdcceabb952a5c2e24bd27d33dbff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>prefs_sizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>1d831d2876ca5fb9fed444e9a07d63f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_CURJOB</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>28d96ddc33fa849ae404c4e1332777b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>netSizer</name>
      <anchorfile>muuli__wdr_8cpp.html</anchorfile>
      <anchor>9b174bd9d9f4dd6259441d4d80f735e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>muuli_wdr.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>muuli__wdr_8h</filename>
    <member kind="function">
      <type>wxSizer *</type>
      <name>muleDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>07c7da178f4db1515fe3fe3c549afcdf</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>serverListDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ed9215862d03d7b14d8d310e5885ba3e</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>searchDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1dcc3d9c99b1c2e1aae3a209e1befa7e</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>transferTopPane</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>15e29b78d74129b8846bdf6d00f7f960</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>transferBottomPane</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6508b085f2978144e4c5e2162debd475</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>messagePage</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cfdc1cd87fb984657d2ae531d53c5c66</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>fileDetails</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4d29fee363663c10f34284a3ca672ab0</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>commentDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ea06f9b61c03add88bfefba8d8e165f0</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>commentLstDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0acc2f32a696c22cc8379ba0e315c89d</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>downloadDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b2a9c2f6c25f40c316644974f9ea6318</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>addFriendDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f74a6e388f95e592e8750c2cd1a68a6c</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>sharedfilesDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>eb631d9d09904c197aa0bb0f3dc3f3df</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>statsDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d6e2ed15ad654112dc93d80334e9af6c</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>clientDetails</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>515f5ea3e61c4bb4e285e0fdb83e0966</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesGeneralTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a7331dbf531853ef0f218f732feda8f1</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesConnectionTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e62cccd6c25e0af7b68c1f597cac2143</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesServerTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>59f3e57910d971d3ae9f9081251a8b9c</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesFilesTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>051435685d86b12c99c69311618376cf</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesDirectoriesTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>51bb2815fe340a92494475c15889d54e</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesStatisticsTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f70d09f45fd33138bd9a2e54ea7e0ddd</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesNotifyTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cfcc62ff82fc94b05d4aa869aca538bf</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesimuleTweaksTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e1c7da465b85c887ad87203df169617f</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesGuiTweaksTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4cd5c05bc6bd035509aac44c7635aa64</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesSourcesDroppingTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>aa5836eb015f218c4dc29863d912e560</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesRemoteControlsTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>010e305f323bac7aea81eaf5f5b081b9</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>preferencesDlgTop</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c47389cade2b452608ee6b6fba3e2e3c</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>CategoriesEditWindow</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>98bd2a6d8d98cfca32674587514d3bdd</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>transferDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>646da6a64b4bac0f56a4d478d4be0858</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>ServerInfoLog</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1924c29324d4e419de41328d147dd768</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>imuleLog</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cc85b3154c5e27769db6f1f45e719d6e</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>serverListDlgUp</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>78e37ee8511a18d64a98114946869efa</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>serverListDlgDown</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cccc836a2329e153d0f9d15405c7d41e</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>LocaleWarning</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>23a5f4a3c8a1066ba46bd4a8b8c6578d</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>KadDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5d70eb0e8f21755e5c723ea94dc06e56</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>ED2K_Info</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>64bf91d3d5b957875101ba1abc5aa3e8</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesSecurityTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>421a161442523160ee1b41fc4fa31c1c</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesOnlineSigTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>edb56e02609346fe2eed66fbd02369f5</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesMessagesTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1ea1bbdd378051f6fd6a6633c36ad4ae</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>CoreConnect</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0ddc1138e7ddf913f048963e160aba6b</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesDebug</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c2df1cf2009d584895e40653fb888e5f</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>convertDlg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>774460a16c8a9f36e5aa4ba404177265</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>Kad_Info</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>984e22ea2c84427e6b9ea04c36216844</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>NetDialog</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1f4fc72e049720fb27e723368105b5c9</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muleToolbar</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1836380b8cc0c1b86bea9db65d0ce5a0</anchor>
      <arglist>(wxToolBar *parent)</arglist>
    </member>
    <member kind="function">
      <type>wxSizer *</type>
      <name>PreferencesI2PConnectionTab</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>10cf925f819570bad4c4f04ac5fd710c</anchor>
      <arglist>(wxWindow *parent, bool call_fit=TRUE, bool set_sizer=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>clientImages</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c8df65c589dffcca98e73d30d0fce904</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>dlStatusImages</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3e16ee7fc500f718d4cec768a9ac0e46</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>connImages</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9e22345144da1a93c28c3d336f6bf6b2</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>moreImages</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4caca63463612f247dab5c333eaa8a8a</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>imuleSpecial</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>43024eca9949d8ad4b49eac9c477f8d3</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>connButImg</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3dd59e520653b104917a2afa88c1b9ec</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap</type>
      <name>imuleDlgImages</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>973c3c4ae9859fc40e83ea3b7f50aef2</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_dlgcnt</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>36a72bc5942570b1e000f3e93a8033c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>contentSizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3eef999cc8e0822ef2b14de6587277b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_fed2klh</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1bed27e1b45dc7a8f2e8d039196c7014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_TEXTCTRL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d8c00f4d2462436d3ba38d0bc2b250e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTON_FAST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>45fc80f7d375174f8bf425e78dac19ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SHOWSTATUSTEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>14796ba0668fbb826800d876c42f0f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_TEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3aefa9f25bc2c1201630dca10b0252b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_LINE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5f853243a669a6ebbb8f408d82b3b5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_STATICBITMAP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f3199b6f2cb204152e851a8a7d070bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SRV_SPLITTER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>970786d057bcba083f0f4c9dd2633f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_searchdlgsizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1c51ad2ff2ca5fff15f0b660d2dfa3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_searchsizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5475591bdd119612b49faa6909c96f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SEARCHNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7f7cc6343ad0657f94e1d9f5277e3aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SEARCH_RESET</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>47a935191044582d0b7e776589b161a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SEARCHTYPE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e52d9bd3025593c49d72ce0eded5182e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXTENDEDSEARCHCHECK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f06c17b3059fbe807f9d467ef406fc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FILTERCHECK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fab717594a9da818d2eadd7da67a9821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_extendedsizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fa9ffd2eada40c8cf9670186a7dfab0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TypeSearch</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>454b79e6133e7274c7b40930bff265da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_AUTOCATASSIGN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c73107105a2d8a3d8dcef03d34ef07f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EDITSEARCHEXTENSION</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0189661aee1b3e1abdcde04d35bbd514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPINSEARCHMIN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>eafc566f17b763cb32111a1810540c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SEARCHMINSIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>faa809baac2261b9b44363518341630d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPINSEARCHMAX</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9c7c2d470035201603b95f3ce233536b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SEARCHMAXSIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>15bf7e824d50b3f8604aaa83dc989f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPINSEARCHAVAIBILITY</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>420add6712018d141d0730fb52278030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_filtersizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>18369b7f9ea1e8600be419bcba708283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_FILTER_TEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6c6febd1502409b903c5f7d9079eb9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_FILTER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>31743c22ba19fa9d97bc23e29a3ea35a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_FILTER_INVERT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bef35814319a525007aa50a857b38403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_FILTER_KNOWN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>acc62ecd3777b31ed4394734db4a67a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STARTS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>41b8b964f73eddb2af8827a04669ae58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CANCELS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e6b5a3849cb48ea795ccbb1b32c8661d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SDOWNLOAD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c695f75c84ac5caf8a11fa512b5c591b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CLEAR_RESULTS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5243344ce42100f93043b04985b32069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_NOTEBOOK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>512ef489c33a3354503ef11fe64bb051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SEARCHPROGRESS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>09f6cb9394aa7dbf1aede66a5c18905d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>transfer_top_boxsizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>635516ae583763c5cfa3d38c22a1297f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BTNCLRCOMPL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>278b8ca1e68e3eab9a005a0b28f27c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CATEGORIES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3a346cd6734f4532a7f043876ae46c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DLOADLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>50226b681814414dd3325d5a5f114ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>queueSizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7f4dea777c92fb4bc0beb4a53fbb82b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>s_clientlistHeader</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8dd5c09f0b71dfaf04530572ac5302ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CLIENTTOGGLE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9832c9dc5442472f529282a76b6175c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BTNSWITCHUP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>14419477523069bf8e0ed49cd2d0a6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CLIENTCOUNT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a3473e0bc117f73accb2e8244c1210a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CLIENTLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1889bc59ecaf730e55446a32dc797bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_FRIENDLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ba15913745705a146138f190aca16d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CHATSELECTOR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>721a4bc383380f129bba945961b03fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CMESSAGE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ae7bde7d1a6527be02fea49e0a0a4ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CSEND</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>db164cacd0007fe315e9e6c84339757b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CCLOSE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>40b8a9665888a13a15c4fe1176a83333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_FD_X0</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0e9cd13a4c615367bac24c230089a39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X1</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3a44dbda5163f09789f9df651e50354f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6008cb2a94b2494b975f5d5ca55e5680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fa5e1db604ceb6d1a60ebbbf8a6ba08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_METFILE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5dbbb17bb073e8161acb2239893976ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>54ad737e72e93116b43f7d78c76d6f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FHASH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>422987d95db4f3c8f173f140009226f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X4</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a2ef9aaa8eb8d89a20909024dc525ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FSIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>67239942e55e09e81697331892bc444b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X5</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9ceed418a35f379a786ff072b085aa3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PFSTATUS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3e4d05f0bbe914ecb8584d8005b41905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X15</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d8f665c28740526881d8335b616ee566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_LASTSEENCOMPL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>65a9fbee5f8e010916ef7c939836f709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_FD_X6</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7299ed3456bc10537ba83f0597c4bab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X7</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5691495442720f7397fbaa7dea31f400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SOURCECOUNT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e862d9da4e8b76a77ec8357d16960ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X10</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3f18a61046d3e7d25b390fae38d78edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SOURCECOUNT2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6c0abfd33da722af791308946c8b1642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X9</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>56973ad7be5fab3632358c5ce77cc26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PARTCOUNT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>54a789646cb0bac888054b598207844c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X11</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>58f59e061a26bd228e673d151a7a53fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PARTAVAILABLE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1467a77964d99910ec44e481fb336b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X13</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bb67a49153cece3ab9195250c4c9cb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_DATARATE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0dd936b7850f092072aa8b28db04b351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X14</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>276ee7837093f34ebb88246cd8650baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TRANSFERED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>57474c31be301e8a2047df72931b94c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_X12</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f8376b137e286ce9222080ffc1a843a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_COMPLSIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>831bde9f855de8e50373e119c130052f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PROCCOMPL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d5a796ad325a35683fcdbb38b7cdf38b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_FD_ICH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b3b1d67b7964fadab1415530ca1ae3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_LSTATS1</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c7233e8f1cbcf9bd23ddea4c293da3c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_STATS1</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0c08b4564afb39e63f55595690594ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_LSTATS2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fc8f092a3bea759a3b076db5cb4e7951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_STATS2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>369950fa1ff141c3515df786db6c61de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_LSTATS3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5e7ebd860acfc51052086b98dc705244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FD_STATS3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b86fd252043236da70714ef29fe421a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_LISTCTRLFILENAMES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6902183af772c555e56df6e1bf9b7647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TAKEOVER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1d46c6a17693da25a467d9d7d02b5969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BUTTONSTRIP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>03fdf1a70704fcdac3d60984098ae408</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FILENAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>00b17b848acad46ba8474ada0e5201ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_RENAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>25d100368fa5eef06afca505e086c829</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CLOSEWNDFD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cd1f3f5d4a9d9a7f9fb91026132d465a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CMTBT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>32f90e094ca30287cbaac21dda8f0465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CMT_TEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a8931bc5e3b971eef4bebc5e94812667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FC_CLEAR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3f4ffee4d41718138a1a285cd7a9a481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_RATELIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9425e514078a3c76271a9d322c31aa36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDCOK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a29c084cb282495b41ba99b4050ce71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDCCANCEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>70e004aaadbd8d449459da2dc85b10cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_LST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b05a0ca933463270e72e56a77e73d619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CMSTATUS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>869411f0c45b0323e893b62e7f76dc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDCREF</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f71ce471a173694b7f2033b50b0b8ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ANIMATE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a9fc739918ae7d67fa2ada2f6f72c223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_HTTPDOWNLOADPROGRESS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>03a69b439d6947dacaca9a29ccc9891b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_DOWNLOADSIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5b3fcad5123fb5f62317762ac4ef3b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_HTTPCANCEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b9aed473e61b04c4b56aa70deac0268d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DESTADDRESS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3ebe0da8bec2c321117fb0053cde91e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_USERNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>69e2bf7b9f69df732d37465738d47c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_USERHASH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0e5693e7d03dac2445e93f0e96d43961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ADDFRIEND</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>18387586fbdc5ba35449393543bf70f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CLOSEDLG</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>87f940bbbbfc3f5eda0d37e32d395086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BTNRELSHARED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2861eebaa90977c2fde4ae5addda8fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SHFILELIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f12cd13366d4953286fa0695645f5b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SREQUESTED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d6d5e12a71684c0903a1ce26c9b8d3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_GAUGE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3ba382811cd8221974933ef808f63cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SREQUESTED2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4c7637441a20c6dfb0235d400ec2c644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SACCEPTED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4512ae2420f56ef13fd502718c828300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SACCEPTED2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>de3d092767f16eeabb28eceeed97751c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STRANSFERED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0597c5484833914849f17084edd940b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STRANSFERED2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6701849482c9006f4c27d1672e21f0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>testSizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0b732e120177bb9d55aeea12633c1028</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DLOADSCOPE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f7ff62c0ac827ef2579d25021b1322ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_C0</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>32ff72d63d69f992b6782eb1e5a87d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_C0_3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5b7ecc1c6db00dba25e87f8082b36505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_C0_2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e0bcecd2b5da2a18c6f8ea4f08d1030b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ULOADSCOPE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f79439787bebc5b824fdeef478091a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_C1</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bc8e3d464babbef9fc0a7f0ae1fccdbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_C1_3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7587542eedab43b91a7c005c7fec0ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_C1_2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>94c706b761754e7aa4a14c5e4f77d086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_OTHERS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>147d1b25186a1e4df48ec7083e1577af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_S3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d9e602445352780b9a0c33d566f83a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_S0</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ea1affb87ae9a48fbfc35d945ff1ba2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ACTIVEC</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bc79e58ceab0da811325fe313a2b841d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_S1</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>97ca073672f8edadd7cf1f13b80117d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_TREECTRL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>35f9e3777c8c955c3d3b777551236a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>16bfee12b15a4798cc466a1f944c83e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DHASH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b7fd17bcac27f5b86be8e159d4b1801d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DSOFT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>00e7d4547e3992089c2b1f0dd8006a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DVERSION</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>598101aa34b81e9d794f68684688f7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DID</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>24c5a6f565d99838f83b8ebfffe8ae54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DSIP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>10e46465bf7109ecd8d20f599722a714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DSNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>305e4c0f0bf8ca6ec8e98a2954452b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DDOWNLOADING</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f786c67647e8764d81e6948d3c0fe0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DAVDR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>76156c401e30c0b75b38f06f8b4346a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DAVUR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>799f548470bd956eaf38504ae3f5da9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DDOWN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f9d2bd16fa6d5c11aa1c12a45a066dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DDUP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>aa6be0e4b805bd4aabec96ef1cc55364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DDOWNTOTAL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ac78265d4a76f0e1ba94a4a261b73077</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DUPTOTAL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e6fcfdb4bbd4e4fefff46316e912546f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DRATIO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2e9d04c1207b796cd4cb612fee6d324e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CDIDENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1944830f59bafb0d21058e2ed51a84cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DRATING</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6111f93b3e6b9657df7b9e0be57e6b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DSCORE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8cdaaa24db3d846fa77854abc7e32b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CLOSEWND</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>693a1e23e66f7df30d177850cb7f3621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_NICK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>163e1c568e3231f5bde20461de92abc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_LANGUAGE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f1e64fb285cfc70d46717ed647cdd269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_MISC_OPTIONS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6c60d27a537a77b49cb05c4886409f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_NEWVERSION</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>abcd06f170e810eb2c6b9ee73f1bd082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STARTMIN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>00400f5e7bd476e8e8aabf86579f5d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PERUSERCONF</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>833a5b5fa4643cd80996895dd7f78104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXIT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>293e320c076764d31c5e536c2579bfbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ENABLETRAYICON</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>46de3a5914d3e8a413fa346b136c4e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MINTRAY</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>15f905543ef6f51f238b719284eb1f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TOOLTIPDELAY_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d11a9c12b5a8d06487a170a65c351968</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TOOLTIPDELAY</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>adf507088fb33ca2a1048292b24e0507</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BROWSER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>38d470bb8278fe1e40d47cd247a654a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_CUSTOMBROWSETEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>87f6ccec47fcab7517b48df7e8c16ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BROWSERSELF</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>587fdbe386547b231e75295db70d2f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SELBROWSER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>27bb942dad494239241d09ffffea7b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BROWSERTABS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f9226e5b15594b8a052cf2ebc59c44e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_DLIMIT_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d32105619f589443bd072aa28912f58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXDOWN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>742fdbd9a9b1dde5e470a7b38dc7df60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_KBS1</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5e51e8d31f62841c088d11b516b2f49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ULIMIT_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7916f0cbab1eae42114eff48120a8862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXUP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e3e2f646f897c2e3e83365580d27d09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_KBS4</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9e8be3d4eadfbdfe8ef57025b5be7659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLOTALLOC</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c7235c9d3cde7d937c0ac29a076206cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_DCAP_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>eeecd80e9bb107d611b2a93fb69ae278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_DOWNLOAD_CAP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>07c099065da63942c43aeb4a35f8ab28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_KBS2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5d99414ab92be27477d2af29eec0f7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_UCAP_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>466dd3cc549305254bed3e73fb14cbd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_UPLOAD_CAP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fc0965927720971510a939b96657fce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_KBS3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0ea840821eafa9813668b0326f272719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXSRCHARD_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2d22b625a3c1c254231a3f7fa667fb71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXSOURCEPERFILE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5875f1053cb3990955b261de77fda82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXCONLABEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7ee6af179da9195a82795ce15e9f876a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXCON</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>19b45bfb01148f5020b72ce8376717f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_NETWORKED2K</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2e335cc8a11238e99e2a08bec6c9cdf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_NETWORKKAD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>356a12f4b66d8e12724babab799f40f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AUTOCONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>900ad4825c503662480bf4027dd4b2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_RECONN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e1f0e1944ed52c49370bfeb1201105e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SHOWOVERHEAD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f560ed6e1bd7e3a72b8730947f7593cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_REMOVEDEAD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7d77a34c34258c68df14ce46f8c44314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SERVERRETRIES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>75a5e7368d888900ebe7482048a4bfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_RETRIES_LBL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8235cf6b2a8a0953333e252dca9d4fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AUTOSERVER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3fbd3bfadfdfd4f4bff1af84c9177047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EDITADR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c0cdefcfdae5c6a71a81704bda1b8d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_UPDATESERVERCONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3d09c17ccef5183cbbb5d206c963b91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_UPDATESERVERCLIENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b4fdb98996d20fe044e6ab2bd6341532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SCORE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6e27c57514d64b618cbe2f9568514c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SMARTIDCHECK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2ebe029d4be8f406ee836cfd0c746053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SAFESERVERCONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>840a142ea2334850136de7252072f9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AUTOCONNECTSTATICONLY</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4f9a7dceb6ce2142923450c054ba8ba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MANUALSERVERHIGHPRIO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b1d76a2c735db012c9b68022a3f4e88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ICH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>39eb013a73700a8b654d9e9ccf2dd5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AICHTRUST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6dada0cdb6f5da216249fdcdea033f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ADDNEWFILESPAUSED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>395e08cd22116788c06134ed3a5ca879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_DAP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ccfe8361ca99810e5d42dca16eb9f9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PREVIEWPRIO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>563a4aa70b58d7985c9bcbfded0f9881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_UAP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d2760ebfab18a556889a7976a9d9e842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FULLCHUNKTRANS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8116d05aa1ded5478a938838aed92fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STARTNEXTFILE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ea58cfab2aac0613d44bcc9b1e11f638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STARTNEXTFILE_SAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4d1cf6a6afbfe3bd1cbb42c6789ed6d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SRCSEEDS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>acc129aa83011df8ea7f80aa164c3e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CHECKDISKSPACE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>50c422587ff8da0d48addadbafc4195a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_MINDISKTEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6644b0aeb011bcf26faab5cb2e7a2189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MINDISKSPACE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a4130baaf2b2eb03e51afa989a5b21fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ONCMPLT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3de716fc7a80c57753afd9270d5fd27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ONCMPLT_TEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>863c4c8c5da30cb67122651659798e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_INCFILES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7187e86395f7bc439bf40a98b624a753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SELINCDIR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>965ecb08df639dc792dd32f0f19f916e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TEMPFILES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c168fd2d94f10cc5cbb8444532e3893f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SELTEMPDIR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a274e41f1790390168eca9ed5d1644ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SHARESELECTOR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e4fb7bf1b18f7c3a576388d31d37fb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SHAREHIDDENFILES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0dcb168bc3e00d0a4a002cb59f0f8e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_VIDEOPLAYER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ff7cc392fc2860537009ab076f65a6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BROWSEV</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>82c0729acfa09b3892fedaccbbd1a2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_VIDEOBACKUP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e3f99dd6e3a5abd6c56d7be97f61b4ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDERINFO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b272fed7191cc81f661bc3e4b780db25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a86522d70791942ed40451efad6cd1db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDERINFO3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6d96b818a78aabd0be6e9803716c3246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDER3</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>625df33f04e9c4deaf701528a23085a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDERINFO4</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3f0c11f5e70f668146a3b860c533a527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDER4</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>43e0d23bcb993e69e460e828d23789b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PREFCOLORS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3f45c46968c45d56b78e587cd65a874f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_COLORSELECTOR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fff67b82a6626db225921144474d5bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_COLOR_BUTTON</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d0b69e2835134ab760f68a906eed1283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDERINFO2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>80e9cee0423128d2e144214e7737a164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SLIDER2</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>37c707e884fb8d4481ee8ea4ba85f22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CLIENTVERSIONS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c2cb5a37ef6c06fda4b50e3662827bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_USESOUND</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9802680de0a4dd4ab59090e5f16d2c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EDIT_TBN_WAVFILE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8fae4ac15f66669beed2dd8a7f90c4b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BTN_BROWSE_WAV</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1bff163c47fd713e588c909e33c3ce45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_ONLOG</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e6d945c22a425c7803cd14e872541c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_ONCHAT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>27127725979ed06bf5e48c6847f73f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_POP_ALWAYS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0b83ea1596f0955f553bb0e69a7298b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_ONDOWNLOAD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3241172dac37a57b884278195570920f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_ONNEWVERSION</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2a8d6e49a1e46b298eabc0677e57540c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CB_TBN_IMPORTATNT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>968221d0a0d547625606ac623a55f374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SENDMAIL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8c8d8e843eb1e1ccb6abb28cb11c4bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SMTP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c2a1851cf2f5b7e226f68fe5b15a4f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EMAIL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3690a73ff637b080106a340c46c7ba10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WARNING</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>92cd0d2470f893d224612d2101284705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STATIC</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7a2e9d441cc75c40d2199aacd6e922d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXCON5SECLABEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fc4cb97a3fc0e25de8001b9b829ff8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MAXCON5SEC</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>61df10343504beacd8990246df6c4a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FILEBUFFERSIZE_STATIC</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2d45c23bf2e5c891c1a2bf7acb23f3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FILEBUFFERSIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d97b73bb9fd0565a51f4ee96dcc21bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_QUEUESIZE_STATIC</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>de606c362ea1274cc02275fbf0c171ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_QUEUESIZE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e2bf86c2187566423249f94ca1a2cfbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SERVERKEEPALIVE_LABEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>dfb4c2e2ae4127101042b32c3616ea7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SERVERKEEPALIVE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fcd8b9756c9726abfce7fe45047a1a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PERCENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>2c6197178b5b13ddf8bc4d0cd75bd865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PROGBAR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7ff69c5d143ffb36550abcb4d806cfb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_3DDEP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a98761b0f6fe455d09ee40fd2a24545a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_3DDEPTH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9c8a759d23523a197b25a9cbee657fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FLAT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7eb1e5223c3caf819c64e8cba196c1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ROUND</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>53e8e8d37999dd0d5f5c248a51bd6dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_USESKIN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>042d23eac0e872f0e86557ffe4a70ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SKINFILE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>02d2e29b4bf2f625172608a77302b190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SELSKINFILE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bf1007b16d0f398171b2eb4beda9e50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AUTOSORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fa352558221dcb6eb68c181a848f89aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_FED2KLH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f570d9749c74c3ec5b211f0535c6c955</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXTCATINFO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>51b6339de72144f593a6fcb706510317</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SHOWRATEONTITLE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f4115110684e596ad152ac982d5d30e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_VERTTOOLBAR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b482ffaf70d1ff5de02527edac27caf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_NNS_HANDLING</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d5227826bcb7af095b916b78cd5a964c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ENABLE_AUTO_FQS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d4371e07dd5001c804f0ef6298d515f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ENABLE_AUTO_HQRS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9fbe445b44e86ec7543a1a875479117b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_HQR_VALUE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6cba8bdc5598dd06d51641ea90c9f4f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AUTO_DROP_TIMER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e3dcee6f4e5172b1b47d2ef3b566a433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ENABLE_WEB</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9e924cab8dcdbdbd3a52a64ed3405aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WEB_PORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c74968926a161e9d119d9b8651ac3a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WEB_REFRESH_TIMEOUT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3677cc09411d6777513f9c8b3a9ff9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WEB_GZIP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0ddbc46497ef55d0176446c46f0eb103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ENABLE_WEB_LOW</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>53f25b05e015cbc72bc259090102545d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WEB_PASSWD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1890f6d969f2c104e83ef8deda49f0fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WEB_PASSWD_LOW</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f0106d13b8727ff18350e3fccadfc457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WEBTEMPLATE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>704ccac60cc5cfacccc504c25f2f8bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXT_CONN_ACCEPT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>21c38ee178a12d5a44afe7ec5f4ef3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXT_CONN_IP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>edd5c385b7194a78361f82cfb56550a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXT_CONN_TCP_PORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>dc56e2d254eef16608c43606a0c4e969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_EXT_CONN_PASSWD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1b597ab5c8d91b232c214d95583227c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>prefs_main_sizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ebfdcceabb952a5c2e24bd27d33dbff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>prefs_sizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1d831d2876ca5fb9fed444e9a07d63f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_PREFSLISTCTRL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>19226326878c8d484eceb134727fd2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_PREFS_OK_TOP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>44ccf07b9a8b867878f3a0bfde97632e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_PREFS_CANCEL_TOP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f9409e67d74b7318259754e50acb009f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STATIC_TITLE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1f60653074695ef2373c2bd8835c4960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_TITLE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f1c0d516411bb11e2678e075a4aa5a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STATIC_COMMENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>252a91ee553fa521e50a2560637fc6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_COMMENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>97f642c3b782ef1715f5e8ef740b3b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STATIC_INCOMING</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>079025feba9742125f97dcd1c47b4f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_INCOMING</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>21db6ad064f737c271ef3f068eb4ea4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_BROWSE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d0a0a45908837fe1f052a6d83bf45631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STATIC_PRIO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>77d8ab3c25e2005c0a15ae6446bc09d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_PRIOCOMBO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d6ac9c87a5a278238d6e644e3723219d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_STATIC_COLOR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4e52663cb17c1f6a0e3a332163ccb417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BOX_CATCOLOR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d0a2636a3988e9d83e5b31128edf25ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CATCOLOR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cb95bf617d703b913b4495c4a60f488b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SPLATTER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>96887fca49937242744094da4aefac7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SERVERINFO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>eb33e17e1ef28992cff3c1b21635d606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BTN_RESET_SERVER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ca7de46157adbd1223ef29ee39258b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_LOGVIEW</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9b36eab6acd937192a49fd1ed7b4ad56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BTN_RESET</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>17b44b59fd5266bcdfa88b7401f15657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_UPDATELIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fc347f9a43feb6e88ff1d413c8afab03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SERVERLISTURL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d25d35e3d73f52aa4d21e45550b4664a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SERVERNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>85a17d8d625f93bb317c53705a724d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SDEST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b290c8f7ffbfe44da59518deb2baea99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ADDTOLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b99323d549f6d4712af88600f4dbcb62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ED2KDISCONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8c156f286468cd29f7ff02e940fc686a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SERVERLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d572a009d3daa71d9bdf10fe0c6bffc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_SRVLOG_NOTEBOOK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b5654eb3d855aeb29f93c6c4457669c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_LOCALETEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a0c49ad68f97723aa2f0744a28adefbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_OK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>459774b4f3c74632536e3bcc761381ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_LOCALENEVERAGAIN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>74963f9c1401f6728e98a1ea86b75391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_UPDATEKADLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>374172bcd65b37116537d3d1b7e7db80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_NODESLISTURL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6d867ccfff805f7acf6d9f6446a8ca45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_KADSCOPE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7638f9935b1e03093f55f1ed47308757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_NODE_DEST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bf1f8ba169a60a3a86587f16e36cf089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_MYDESTTOCLIPBOARD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>0baabb01e2749d180ded284b5f021aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_NODECONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>edfae70c7feab18d0bd6a755c76cef60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_KNOWNNODECONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>547c3e0bd9de0fe02fbf2a03a659b457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_KADDISCONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>99edab9eaf9027a376aa626c5910bf1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_STATICTEXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c4ab48245ce3b306d64aeda56cb3011b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ED2KINFO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>10e179f4ddbec354f180024c96bbb1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SEESHARES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9d376ea095fa1aca58d4ca7035c37252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPIN_PERM_FU</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>571aadbfa9fff783356cd72fa600c8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPIN_PERM_FG</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1b88bb1cbb7da2d1ec62992f2cb11f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPIN_PERM_FO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5221ad575fc99efe6aadbc8b677a20d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPIN_PERM_DU</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fdd4280c1f9b1d3a3ba2b8fe60fc88f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPIN_PERM_DG</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f7af57a5ff05b6c891bca4afe21d9872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SPIN_PERM_DO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>17773cb539c1b25ebdc6976126f47903</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_IPFONOFF</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e0cc18852b2f2aa93ca839f41a90b7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_IPFRELOAD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>defcc5509cc983d7692ae167a0660d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_AUTOIPFILTER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9637693d02ecc2c25c0b8c9e1d37153c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_IPFILTERURL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b483b2eea9d7c768174816e735b3d1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_IPFILTERUPDATE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>4852a659d801f50a07a4f2409650d5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_IPFILTERLEVEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ba5e89a68b28b49c6bdcfda920c25775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SECIDENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fe57702a11971eea6ee0175296046192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ONLINESIG</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>387a2468edb69a312f18584f906d59c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_OSUPDATE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a56c19f1ceb43d804387711dbd72e58e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_OSDIR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d06b1a510139fdde085cb24073cbcc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_SELOSDIR</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>fe85751d76551827e5be0c485fcbb686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MSGFILTER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>11d4e5dde1f64fed18f7498870b245f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MSGFILTER_ALL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>aafe36127b60319ba32b4c5dfaca8096</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MSGFILTER_NONFRIENDS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d1e9ba9123fb7e8f1cfb220c855e9ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MSGFILTER_NONSECURE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>013e922ac10b6d0b6a4e5fef20cb004c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MSGFILTER_WORD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a8e48a028ec9da081a02909f9168e3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_MSGWORD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c698e831d73cf22ea83d895a11f556c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_REMOTE_HOST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>35046c2193630ab48ea856aba8ccd2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_REMOTE_PORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e2ce34feefef329edec519432e16b37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_EC_LOGIN</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d185174adf1cae921cbf68b855ab2549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_EC_PASSWD</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>851f31915ecbfabc6e6fe0d63c88794a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_EC_SAVE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>843985535fbc322d5af94f5393ff4492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_VERBOSEDEBUG</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>46e8c453cb670876aacdf8324a919f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_DEBUGCATS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e55669f46781b3ab422fd54f59a3ff32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>IDC_CURJOB</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>28d96ddc33fa849ae404c4e1332777b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CONV_PB_LABEL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>3cdd19633f5e63e574340f25b085e5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CONV_PROZENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>603e0defdae4f0201cac7a78b5d4a798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CONV_PB_CURRENT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bd3d13b56dbce9d7e48009283a8945e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_JOBLIST</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>08e2fb12dc7603435d2ae180b7512657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_ADDITEM</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ea982c1c6fcc09845f9b30c73cb1061a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_RETRY</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>29c77e9c74d0c6052bb17a58e9e97851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_CONVREMOVE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8df938817aae8c7c1705f917d289e533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_STATICETXT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>a45dbc4e5e65f2d4a74e3dcf44a46bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_KADINFO</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>f04d6b2f2a1b7a02da177d6d11b7ae8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *</type>
      <name>netSizer</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>9b174bd9d9f4dd6259441d4d80f735e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_NETNOTEBOOK</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>57d577f0a82834f09c22e921204507b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONCONNECT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d0e34cf47301a9ac8504266e5ed2103f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONNETWORKS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>eac6d1c35a68ec8c6c849fdd8e9adb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONSEARCH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>cb9446db22ce522a5f1846846b1d93b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONTRANSFER</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>6c3d185c87a5f5fd2c44aff144129116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONSHARED</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>8e24d3c94956ee5db048640e973a395e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONMESSAGES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>bc36f00d8c3c1c8ba0b88a4da8101983</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONSTATISTICS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d4a1a680e91d395a84b375edac2ccd7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONNEWPREFERENCES</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>334d86a993442013d7738ad2f2686bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_BUTTONIMPORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>420ffc569861d55770521f2aa83d6c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ID_ABOUT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>e32762444146d9f136308f8be9b1e61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVERIP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>39971a35ee2b80d1987213f0fac0de43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVERPORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>d53023c0784d3fc035f48056df325142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSAMPORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>42dd97c24995be50e7638b23b532a243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PPROXYPORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>20ed1e6bd25d0a3ec4a7b98fa969ef94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVERINTERNAL</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>33dbccabe3572b8e2fa3f9d16acf7903</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PINBOUNDHOPS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>394b981be3d8f97d1b4ba414a792a967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2POUTBOUNDHOPS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b578e5db83a0dcde506619893204ef83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PBANDWIDTHSHAREPERCENTAGE</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b69f77735aa5b4fd55cc9d14cfd3b8b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PCLIENTNAME</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7189207512004d972ef09d4d95184e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVER_ISDYNIP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1b83b67db24de99e260e06d14f7f59e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVER_DYNIP</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>5f00938d57e2c5be188ffc89d3ccd41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVER_I2PTCPPORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>13015580fd1c549f9d406454bc978abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PSERVER_I2PUDPPORT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ab177263ab2cac8eb0de2f900402c4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PPROP_INBOUND_BANDWIDTH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>b87f7e1319db0158d402a4830aecccd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PPROP_OUTBOUND_BANDWIDTH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>c2238a1099ad3df831dc32f1c451a861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PPROP_INBOUND_BURST_BANDWIDTH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>ce418f1eef00169c4e38a1f02882c2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_I2PPROP_OUTBOUND_BURST_BANDWIDTH</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>1cb25cc3a78a787d3bf9ba543b30a7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_KEEPKADCONTACTS</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>7326563f82028450eeb15d0909cd0e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>IDC_WRITEMYSELFTONODESDAT</name>
      <anchorfile>muuli__wdr_8h.html</anchorfile>
      <anchor>934c13ba2e7ce83f0c4c07c89bcc9a19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NetworkFunctions.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>NetworkFunctions_8cpp</filename>
    <class kind="struct">IPRange</class>
    <class kind="struct">filter_st</class>
    <member kind="function">
      <type>bool</type>
      <name>StringIPtoUint32</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>6f507c5d1cae33ca99c896d84b9d4b7d</anchor>
      <arglist>(const wxString &amp;strIP, uint32 &amp;Ip)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>StringHosttoUint32</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>37b134013b1c9456cb7544009bf16ad9</anchor>
      <arglist>(const wxString &amp;Host)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetupFilter</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>5ae5d211cda1938ed6aaa1530a13c508</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const IPRange</type>
      <name>ranges</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>8d9319289989590d8983a99efee3bd05</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>number_of_ranges</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>632f41ba29abe679a5132792f881ae1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static filter_st</type>
      <name>filters</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>8d0e3e64332bcbe9bc3bb4d82caee6cc</anchor>
      <arglist>[number_of_ranges]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>filterSetup</name>
      <anchorfile>NetworkFunctions_8cpp.html</anchorfile>
      <anchor>01c85087daea921f0023e8ac9ab00a10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NetworkFunctions.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>NetworkFunctions_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>HIGHEST_LOWID_ED2K_KAD</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>f7562f6a50249901066bcffebe6269c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Uint32toStringIP</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>0ed9a5fbb40e0660b69b2604e6abd079</anchor>
      <arglist>(uint32 ip)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Uint32_16toStringIP_Port</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>7db5af9df0b974c4b6899bc5d6d5bf37</anchor>
      <arglist>(uint32 ip, uint16 port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StringIPtoUint32</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>6f507c5d1cae33ca99c896d84b9d4b7d</anchor>
      <arglist>(const wxString &amp;strIP, uint32 &amp;Ip)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>StringIPtoUint32</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>6fcc552c4de76850b295cc2d94432bca</anchor>
      <arglist>(const wxString &amp;strIP)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>StringHosttoUint32</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>37b134013b1c9456cb7544009bf16ad9</anchor>
      <arglist>(const wxString &amp;Host)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsGoodDest</name>
      <anchorfile>NetworkFunctions_8h.html</anchorfile>
      <anchor>102fdeb63c074738c08573002e2027e2</anchor>
      <arglist>(const CI2PAddress &amp;Dest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Observable.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Observable_8h</filename>
    <class kind="class">CObserver</class>
    <class kind="class">CObservable</class>
  </compound>
  <compound kind="file">
    <name>ObservableQueue.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ObservableQueue_8h</filename>
    <class kind="class">CQueueEvent</class>
    <class kind="class">CObservableQueue</class>
    <class kind="class">CQueueObserver</class>
  </compound>
  <compound kind="file">
    <name>OPCodes.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OPCodes_8cpp</filename>
    <member kind="function">
      <type>wxString</type>
      <name>opstr</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>cc078887f507d46aca7b8e3fb81cdea2</anchor>
      <arglist>(int prot, int op)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>kadopstr</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>0154c3468e6973c0cfb326af85f07003</anchor>
      <arglist>(int op)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>opstr</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>1ea7a4c5f593cffa7872d990ae51b0c5</anchor>
      <arglist>(int op)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>tagnameStr</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>d2238a75ca9b68cd1280cfc77ac7dc47</anchor>
      <arglist>(int tag)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>tagtypeStr</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>472c3e4becdfd8b8c85c58d3d87d7783</anchor>
      <arglist>(int tag)</arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_RESULTS</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>2de2894c20ee59ef5970b94e60524247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_CLIENTCONNECTIONTRY</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>f8089c40fd4a43567ef24e9077cd2335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MIN_REQUESTTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>63539576a592bdb9c1150bcfd9fdff92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>FILEREASKTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>7109e0dc99cc6db2f8c3e952594782d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CONNECTION_TIMEOUT</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>3377c5c7f00952eb08e95f9d65b1781e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>DOWNLOADTIMEOUT</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>ed94576bf3cb74a4372016c822bddd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SERVERREASKTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>bbeb9c1baf78a3ed78f4dc098f245367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVERREASKTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>7a69d0ec0728c226697e0d7c70f98205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SOURCECLIENTREASKS</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>e83b1b14cc730f46be2c6230b41c4de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SOURCECLIENTREASKF</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>5055dd52ba636eb0ddfd47d5efbcd6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAASKTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>9aff1531491b9a1c161b9b5ef199e40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALFILE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>74555c0e2a15bb524892a482a694fc84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREASKTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>63926c07c87c146dcc27bd0a5ac8d87e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAPUBLISHTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>2f7473fe57a91d34474004aa593d4a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALSTORENOTES</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>947bcd8dcab870d5480ac283a0d854a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALSTORESRC</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>03bc3683472fbf8dc3f3013da2161e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALSTOREKEY</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>4924773dc8cd927b64fcf5ea0905ade0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREPUBLISHTIMES</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>3fe913ddc3e14a32fbeb8c55c14dcb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREPUBLISHTIMEN</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>1d076b4ca2c8b9a137d3104251dcc046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREPUBLISHTIMEK</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>91a698d820766c2524a99b1f3c6bc688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIADISCONNECTDELAY</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>5f20700497d2f3dc7ceba1d5ddd3014b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXINDEX</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>7ec399877033861e11fcc3147d13a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXENTRIES</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>368120c4dbadbef190d8d4913a18adb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXSOUCEPERFILE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>6a96bd5924fcdce10f1c15eeba277e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXNOTESPERFILE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>b3966429386f962383377f6da819b17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>ED2KREPUBLISHTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>ad165a96affe1386dd1c70bec0eeeede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MINCOMMONPENALTY</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>950075f5df1ba960ab682ccec848f862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVERSTATTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>13848b781d2a6277a9e8945bddbccc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVSTATREASKTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>ac170516a1cf2f3513bfd986aa85f12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVERPORT</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>f7a04523e6931f614e9f96eb86397df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPMAXQUEUETIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>a0c8472d53c949fb5caf66cf2a6ce7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>RSAKEYSIZE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>559b90b9682052ba4298209da51144fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_SOURCES_FILE_SOFT</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>6f9cd7f802c63711f82554e31dd35f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_SOURCES_FILE_UDP</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>7707253a2168cbcef70a3032391f0d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SESSIONMAXTRANS</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>3a40eaf06fecb489ad57f52cd232a3a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SESSIONMAXTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>a79ba400fa8d910e10a2e141861ac926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXFILECOMMENTLEN</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>e31131331d33fd72bf7a4f50315ea8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MIN_UP_CLIENTS_ALLOWED</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>672ee62a88f1bed039d013345f854c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXCONPER5SEC</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>cf4f8b18e08928a7fa8286659f65246c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXCON5WIN9X</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>14ac21251e7f9fec0fece2a72daaed64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UPLOAD_CHECK_CLIENT_DR</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>61ddbb812e15b469d799ee18ca2009ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UPLOAD_LOW_CLIENT_DR</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>3e88148c4abc37adc843654484916744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UPLOAD_CLIENT_DATARATE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>d9aaeb904aa45e5577f3fe10484c8ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_UP_CLIENTS_ALLOWED</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>c8c36100eae35a34b10773ade9b7e939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CONSERVTIMEOUT</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>24d475c55b1ee7b64035ea3e79fe8c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>RARE_FILE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>f425d4db2105dd7608c637af3d4c82c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>BADCLIENTBAN</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>12bec00d09790a09b6b47e3663717a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_PURGEQUEUETIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>7aadeacc49107c6c11ba046d114c432c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>PURGESOURCESWAPSTOP</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>3b8da4caa3083f986e07df31fb105c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CONNECTION_LATENCY</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>647217989dc0ed4d33c8e21e868c19c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SOURCESSLOTS</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>94a9b8f4a8e08672b9b8d4cb23e5ee90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MINWAIT_BEFORE_DLDISPLAY_WINDOWUPDATE</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>cc1aa119e1251cacadd36e9e05e4352f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXAVERAGETIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>1871cddf40009889a429aacc3720342a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CLIENTBANTIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>1e2f88e5574ede80329fc95d3efb81f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>TRACKED_CLEANUP_TIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>16d644fa51a3e408b626fc3d0515dd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KEEPTRACK_TIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>52e68c142627669c28fd91304b7f41ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CLIENTLIST_CLEANUP_TIME</name>
      <anchorfile>OPCodes_8cpp.html</anchorfile>
      <anchor>724974c59ef12b42c7727ef4eb0d9035</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OPCodes.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OPCodes_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SEC2MS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>efbe7d4c53c0318c3269c135005f7bd9</anchor>
      <arglist>(sec)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN2MS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d58485679daf8d5287784efc996d007b</anchor>
      <arglist>(min)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HR2MS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>31ee116ad014d66bda8e3cffe8b39b1f</anchor>
      <arglist>(hr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DAY2MS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>a687ab287fb401cfec0f7537e0e4ad28</anchor>
      <arglist>(day)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>f95a79d9f813764acd3f1592640ea953</anchor>
      <arglist>(sec)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN2S</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2a36d8b006a8458d0228070c83b0c6ad</anchor>
      <arglist>(min)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HR2S</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>59e5309d68e8996a17285b675db6e07c</anchor>
      <arglist>(hr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DAY2S</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>9f79787b5cc675119a8edee619bc4f6f</anchor>
      <arglist>(day)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CURRENT_VERSION_SHORT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>87b4fd8fb5cf1501e1ecdc02adbfff50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMULE_PROTOCOL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>c4dced05c0a35b6403dcc3bef1e2664f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOD_VERSION_LONG</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>fd4a4c4d3c42d175b2e0e1c526d63767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_MJR</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d949dbfd7293a2f2fbd2698f66f75194</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_MIN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>3c09dd27c2dd41139a7eca7b93ee768c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_UPDATE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b6613ce697b616739be4145a2a87120d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EDONKEYVERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>46f7eb9383c16015842a8644fc1059f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PREFFILE_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>404e0d6163078968ab83e67ba0f8a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARTFILE_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>716094ab4f932fc9c43f6687db4f99f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARTFILE_SPLITTEDVERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>313dc4f7cafa8be9dab6aae5af980352</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CREDITFILE_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>fcbd53019dbca13dc194e44f8487b89f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPILE_DATE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>a0e094a25208bdc852130f3234e53208</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPILE_TIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>84e65840129c552b0b359ba326092270</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAGSIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b445df36cd168d6fd588f2eea7263da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MET_HEADER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7efc33e26d9ab0d99a61ade0e7f15893</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INV_SERV_DESC_LEN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>1d64316dffccca5989524366404593d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OP_INCOMPLETE_SHARED_FILES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>203200f46315287d0161cf6286a324f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAG_FLAGS_COMPLETEFILE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2e1788f52cffe550f7e3df88af5e8da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_INVALID</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4d066cf55eeda64f0d1a524248426a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_HASH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>c3c52b24a6f77c53bdd86d29eb95d687</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STRING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>dfccec9d25d5cafd3c0c4255b5201014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_UINT32</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>80b89ce6fb326c6b0c45e93ea65b52b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_FLOAT32</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2b150fc84ec6b467fc4a1a307e563886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_BOOL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ecfac434c7f09aa7398f2f3aa3b2841e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_BOOLARRAY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>bd2f4dd5c94726599b201bbe4228aa89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_BLOB</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>065741782410bd06643cd42ff7da0bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_UINT16</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>cfdebc5f2338a0428148de1c04d65718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_UINT8</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>fc4960853cefc914543bef4bdfea4582</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_BSOB</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2b0ba904cadf58d64d69ba8e54e242fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR1</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>a3df7449efe6fdace6947471a1b5c76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR2</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>0cc4a66a357ce3f6214bcfae50da4aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR3</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4db2057057ef7175aaf660528d765745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR4</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b96cf226fec477b9bcbcf2665b3ad7d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR5</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>59917c1c98c1ef3137ccca95b365c61e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR6</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>00e6c9456cebbb0f543bfcffe93bd4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR7</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>20476a6be416f58c72c8a1091b37d050</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR8</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>77b0f9902125420b7d283b2cbc4f5d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR9</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e51c3d35463e7228184d476e40c1f9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR10</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>84abda236e0ebe1ce5d8e8874eaa768b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR11</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ebf204766a0126f4675bb90736287808</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR12</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>33cff285d210a2658e2938b4c9899d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR13</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>5083b613491dbed449888970cf2153dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR14</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>19468518e87b33bd490d41cffb3f8a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR15</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7a83b98a4c36f4501c90843f98e02b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR16</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>aa2e1513016038b0866e2522d7fc5ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR17</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>0544dc0b602d7ba51eb5c6c8d96816bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR18</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e372242b7d100b69a98ebcb73301cc5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR19</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>69d6d0a6fc2076eb86b07f769cbe8da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR20</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>53e55776e588ea1ae51b612280f86532</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR21</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>93c822639bd9885d4c5dea280ef1fcfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_STR22</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>79ebff8d3e11653fa147f65a602b8b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_ADDRESS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>6dbc80c825016fd8142f756c9f431635</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_UINT64UINT64</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>238d7813ca792847f2991a8283d02cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAGTYPE_UINT64</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>89eca398b7af67a4993a5e42fe590f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_AUDIO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>76c6738c305bbe47fd57dc9b0553c8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_VIDEO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d2f4ba635210cfa684fbde56ea182f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_IMAGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>dea50deedab2086a468932ea9dd29a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_DOCUMENT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>58107062ab19dab21292811fd2c525a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_PROGRAM</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d853acfed460e9967b45cb1d88607698</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_ARCHIVE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>85048bc73eaa77356dd7e953833800dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2KFTSTR_CDIMAGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>eb1da0d066a5ab58bd924c4cb95001fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2K_SEARCH_OP_EQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>9aab6dd57920655f4ae00a9cdb6ea838</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2K_SEARCH_OP_GREATER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>99f38ca7cd0f54e6b8f539477c1ba0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2K_SEARCH_OP_LESS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>c54ac3410089b229a6f3de1c5930252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2K_SEARCH_OP_GREATER_EQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>dc869b073d813cd5546e8b8373001727</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2K_SEARCH_OP_LESS_EQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>532bf5f4d05d05bd318afd84d612a825</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ED2K_SEARCH_OP_NOTEQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b82bdca07275e239efdb0cf60e74645d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KAD_SEARCH_OP_EQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>8b8eb17b875bfdcee996278085603068</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KAD_SEARCH_OP_GREATER_EQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d2c7fb81a20d38deeb20477cf1299ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KAD_SEARCH_OP_LESS_EQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>56e4b1057131b0b246103d1c09abb293</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KAD_SEARCH_OP_GREATER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>f49e1ba2155fd9d180e741953ea49308</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KAD_SEARCH_OP_LESS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>8937f0d7a708a0fbbbf6776fff107a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KAD_SEARCH_OP_NOTEQUAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>191db37761bd4d7cfbd24ad5ee082b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISKSPACERECHECKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>bc551ac5338dedb344cbc50b7fb43d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LISTENSOCKET_HANDLER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409f89a4c03faf571302d010897ca54fc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENTTCPSOCKET_HANDLER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e4092b215449eb0ee96fd4aa4a84e61bc6b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVERUDPSOCKET_HANDLER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e4095cec15d3dadc449684294cf09bf463a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SERVERSOCKET_HANDLER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409bb9ccd6a5f4e1ed7c445edcd6efcb021</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENTUDPSOCKET_HANDLER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e4095848609c46c2d7e398336c17e25b35ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXY_SOCKET_HANDLER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409772789ed92b86d584fcd062838cd6601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_CORETIMER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409d45f251e1d94b94af77109eb5e94eefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_GUITIMER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409a895e9438b2f093fc70582df727b9185</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TM_DNSDONE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409ce538fb40a0967ed036b92b6c847f1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TM_SOURCESDNSDONE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e409f0aa6d60d78e52740653802f073b1092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TM_TCPSOCKET</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e40982115598a6f2cca3b0142547210f26e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TM_UDPSOCKET</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>db49720dc49f7d4e4cf9adbf2948e40957c4138f24fdb2a74475904ac1cea1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EClientSoftware</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_CDONKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5850aa2140b08d74364be1f8e1c751cc370</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_LXMULE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585eefe96784dd642c06e86ee1129b81ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_EMULE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585979d78a53c3e07af26fffe30c19bac18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_SHAREAZA</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5855a3c368255a0dc2bff19d1f3b27019e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_EMULEPLUS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585029f275982c764dc6e5fef6b10cc2347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_HYDRANODE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5854bc0428804f12a3a4d656a3c4c7d8b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_IMULE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5851d5f7aa1ad671580aace54df4568b850</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_NEW2_MLDONKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d58584c3dde36f4d9002ddf0491affafe305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_LPHANT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585a5f6adc5c76096af0be63b09caea056f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_NEW2_SHAREAZA</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585339623d3b8c9176c1c900d4b080df3ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_EDONKEYHYBRID</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585d506ab1f8b1a928c374f2af3da9ac333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_EDONKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5855bad1457b9b3932a37aa95efd2dc3473</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_MLDONKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5855aea16b8a3c8d50799445e72c5b6a72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_OLDEMULE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585f1bd2364435f45d2b3caad6df17d5af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_UNKNOWN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5855e4f7fec40c2dd892bcfc7ff6d0d6fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_NEW_SHAREAZA</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5851c6d95f321a304d7d3fc85f38ce8bca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_NEW_MLDONKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d5859226ea348b22c32ebe8533d5670914a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SO_COMPAT_UNK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>afc530028372763b404ebe838202d585ddcd2c383e156a6e98651033f4cc7dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FileConstants</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4c533e5983934c665ff2ee7fb862a3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARTSIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4c533e5983934c665ff2ee7fb862a3ddff9215cdd017e6d5261aae74cbc8781f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_FILE_SIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4c533e5983934c665ff2ee7fb862a3dd8f4fa91b01527835b46df1224df8dd28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLOCKSIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4c533e5983934c665ff2ee7fb862a3ddfd515c7fb9d66a3cd970fdca0034e125</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMBLOCKSIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4c533e5983934c665ff2ee7fb862a3ddf45a2ffae40bf3e0605eeabf353f3d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Protocols</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_EDONKEYHEADER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bf152a875feb9c38b60e817323c9b16688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_EDONKEYPROT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bf03ae9c489329a00613fc591b3eeeb12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PACKEDPROT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bf010eabc1deed2b8f2800b559d1db4e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_EMULEPROT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bfc7ec376383643077d24ad902cb555153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_KADEMLIAHEADER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bfc6e05a53b7d61156b5283f28dbf972f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_KADEMLIAPACKEDPROT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bfb5e8d31feb54865b95397f6b8c79c852</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_MLDONKEYPROT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>88edc355ac5a7d5efb13b7442cad39bf344e8cbacea02b7f51e0f05e3a469365</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>OP_Codes</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_LOGINREQUEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2299b216ce6524a050db2e9bdfa5d8adc15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REJECT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2290b53b03e4ec5049efcde9f79e9e8d8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GETSERVERLIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229938c474cb07fd6dbb6c4d6d9593a69b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_OFFERFILES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229685d65187681f28b314575ae72c49030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SEARCHREQUEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229fa627c51c306395fa2f2f04e4107c78f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_DISCONNECT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229035047ad38be708e22287b62078a68b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GETSOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229abf65556f3cea35055b097b6276e2251</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SEARCH_USER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22953206e8597627fdf99f82c7655f9dd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CALLBACKREQUEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229c894e957f3ae329de7a7630e519c13d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_QUERY_MORE_RESULT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2290f18182b4e9519eca8b9a478a73629cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVERLIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291f6b062baea333367c0c934762d2dd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SEARCHRESULT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229714c3da4c4cd2db1122887e967bacd42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVERSTATUS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22988a7875a121821c99b364c77e37cfe68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CALLBACKREQUESTED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2298c8825dbf83cf687f53f423b0c20bd50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CALLBACK_FAIL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22922715760447832b7d7411269b888d2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVERMESSAGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229d391e5000cd5e97834659486f842e060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_IDCHANGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22974bf2b4b2ed9f1fae00d35a71664c631</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVERIDENT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2295e2fa46db9deed0d8e6d954cd47414e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_FOUNDSOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22998d79255fa02ab0c80605e23167b2fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_USERS_LIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2295c2d575d4e839f33287f6c2923fa15fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBGETSOURCES2</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229d0caf44bd708306fc5bee4b1d840a9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBSERVSTATREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229de33b30dd93e243462b5d1d4c04a9513</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBSERVSTATRES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229ecf58e08b24d5903c5bceea1d6b997ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBSEARCHREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229694375906554ed8dd8e9a450889cfa81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBSEARCHRES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22931a4f3f1cc79f195ff79a745cc9f090d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBGETSOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229ab4078975f148b5b0913beb94996dc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBFOUNDSOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229dbbecb584c6a8f1082403ff82f5d5b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_GLOBCALLBACKREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229909b125f36a47cd995c21e75280f8751</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVER_LIST_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229c7afdbd1735cd7428c64147aa8b73d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVER_LIST_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229fe2b2742a0f2fec7c897153239bda879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVER_DESC_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229d286143b7ff3cd72f603012bbdeef5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVER_DESC_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229c6031367d77508d7fe7c09b924ef9837</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SERVER_LIST_REQ2</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22981b9cfb33d717917226685555fb9a6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_HELLO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229d7bc872cff8418424e577be883713186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SENDINGPART</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2297ba0bfca7e8719788bea669ca0c292db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REQUESTPARTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229c679ff80e137fc66d8f5aad6766e7e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_FILEREQANSNOFIL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229bc6b2c479d517fcd6d3eba5989054e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_END_OF_DOWNLOAD</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22948230ad514ba6fa471aaa00fe09efa16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDFILES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229b6f777ee955b87fb69a0c82f705ca468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDFILESANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22932653c4c7b1edc03d0cd156b45bec619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_HELLOANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229ad3a7affffe7cf5108630b3b55118d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CHANGE_CLIENT_ID</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2295641b51146c0afc60153762bc1f1ddd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_MESSAGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22912d7b0a029ac7615e5f039cab83cc8fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SETREQFILEID</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2296160d0ef4217ddedced0567f75c82280</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_FILESTATUS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229f8ccb6610fcfdb3d0766fdadc3727575</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_HASHSETREQUEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229a39842a8871e39317b85b8399cf151ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_HASHSETANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2292431d5230a63960d03621940dc3c4804</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_STARTUPLOADREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291968915f601e5aad09485578294968e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ACCEPTUPLOADREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229a24ee42c82d5a23c261757c9a0e186eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CANCELTRANSFER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291a5dc412f2a2251cce9d1cd54a1f8696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_OUTOFPARTREQS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22952830901b4f402b8e2cebc3944d182c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REQUESTFILENAME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2296898ff945346617a169bef1f1bff6ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REQFILENAMEANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229f58a37b8783f853268973a0668acef26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CHANGE_SLOT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2294b4e09b3cbc90b95deb84d59797c3676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_QUEUERANK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2299835a91e77903a9403c4fea87991e8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDDIRS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229eaa90e933b58e331696454e702b444a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDFILESDIR</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22938bff401725dfb782553d1c722e9ae42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDDIRSANS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291937605cf4159d3c66e62ebd03711d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDFILESDIRANS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22954025c225272d5bdf9d2ce850637ac40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ASKSHAREDDENIEDANS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22991d8ae77bf143191829572d5d7b8bad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_EMULEINFO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229b621db432ba64e8ee97ef8578a2e52fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_EMULEINFOANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229da08b1c532eaa966a3742e426c7b2ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_COMPRESSEDPART</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2295c109078fec313a0d2affae3c0de54dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_QUEUERANKING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2293ec521a0f8167db8ba3e5682c59cc061</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_FILEDESC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229cbed5b424e00bf4c07f7cb7c988f17b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_VERIFYUPSREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229b8844ca58d6883b3736dc0ec246ee3a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_VERIFYUPSANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22934807889719523200039ce42678286a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_UDPVERIFYUPREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229b70cf2bfafb85cb3b0f884bfafc886ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_UDPVERIFYUPA</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229f6a5e0f65d0fefe5ccf21d0f7cf60200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REQUESTSOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229b2dee181126cbc1df623860ada59b509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_ANSWERSOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2295576b4c61927756f9847c230fa82272c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PUBLICKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2296cd16d77a8fbcf0419221ef5ad8d4e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SIGNATURE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291dfbaddff59c6a63b80f0ac3c024323e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_SECIDENTSTATE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291b760052a1a338eb4b4d53162522b4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REQUESTPREVIEW</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2295128ad6d133bafdd162081c543e3443b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PREVIEWANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229ecdc053878bad1ab44d283d67876c680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_MULTIPACKET</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee22984b8cbe557104c9a2d593e24456ae237</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_MULTIPACKETANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2294a4b3b91143ffaed896c33ea82a9a275</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PEERCACHE_QUERY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229cebc051c8ccec1371b1c06100d997f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PEERCACHE_ANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2298040d43e6fa3d542293c2f59df0f9eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PEERCACHE_ACK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2293610b305a2c4d4c178f8a2f47e7f041e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PUBLICIP_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229ffdee5357820ccef0ee08c31cdfd2a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PUBLICIP_ANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229d3f57351e0169e30d3fb15f738cf2aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_CALLBACK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2293c5655f043e981f3932e90c6d22c562f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_AICHREQUEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229243dfcf4a44d8c392a19608fa8264aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_AICHANSWER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2299b2a023bd561a90144696e643d26f062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_AICHFILEHASHANS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229dcf3abf545d8184913b0551cecba0f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_AICHFILEHASHREQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2291f4ac74de154119bbd8421f5da2ef53a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REASKFILEPING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229c3a83a48d11aef2c491464998d8171a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_REASKACK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2299accbf868369f66717f9d73f026bf9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_FILENOTFOUND</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2296f7f96d37960f5be8cc35057ef81c107</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_QUEUEFULL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee2293f46131b8d26ab66521997ac43f90e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OP_PORTTEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edb4b6ceda325706614afd82e59ee229e4a98d32f3e064d00579b9c178c39962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>KAD_Opcodes</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_BOOTSTRAP_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56ddf7b04750599350cf8ab83ba6c54328</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_BOOTSTRAP_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56bf2c09b85ac48587f2c6b822e7c4d38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_HELLO_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56b5ce4fc554e1b318ecffaf1e2d1d1971</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_HELLO_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56da1f8b8bec7bc6acbc3f941b1a8e6112</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56514935e03a7ed50d622121697c7cd153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d5623537295648e2e4a3251382b4fdcd71c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_SEARCH_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56116c25ea3eca01ef56b9afd2d1ddc416</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_SEARCH_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56c0adaa97c9dfa493a8e1a8900b8a5078</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_SRC_NOTES_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56e21a2f2c917111c28e19511a70e71b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_PUBLISH_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56a7931f04251348efd0b9a5aeb173c513</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_PUBLISH_RES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d567d4714202bb6e589c0123842fe65c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_PUB_NOTES_REQ</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56bb50efbdb4a2465637819df5ee90d2a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_FIND_NODE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56a41c017d7a2b7b2dd8150b745f93d086</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_FIND_VALUE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d56a6021e7971af7f6603925cc4028e9aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KADEMLIA_STORE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e64ecf1c25ecd85a989fd2373ec43d562d8b23df5cb04527f5292063eaf00a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TAG_Codes</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_SERVERNAME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dc2bcbb5089e290160a8bf1e4629b9b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_DESCRIPTION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df63ec1f7e6ce9e36e06a7f618f85d206</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_PING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7573d88c04217799586383d857ea63cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_PREFERENCE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df1601522e8d9e4e767069ea50d2555f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_FAIL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7ba6b07904a683caad7e9de017e9082c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_USERS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d79ae83c6ed0c98ff9b4490298d812505</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_FILES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23da41432e9874b5784431c15959cee9d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_DYNIP</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d78650fb19c330214d2d2da34f11ea23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_LASTPING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df07b63776e74759d8be5ed1ad4bb4592</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_MAXUSERS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23da9c3b9b6df1f548f1b699459a5512415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_SOFTFILES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d9caec0adae477e72d3dbbc3fe2cf8187</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_HARDFILES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d06250e1346e1a2231da28112704a82fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df2cdce29eec4b3fe3db6692d60a431e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_UDPFLAGS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df2733414cc7550c965f276198678c054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ST_AUXPORTSLIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d4474546f65841bda21a83ba249d746cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_NAME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d354e59951c7c62fbe8b2d58ce32b8fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23db65f676a0d0a75e401af6ca412e65522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_SERVER_FLAGS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d91fbdab0dc8b3d2fafdf5d7289a1b1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_EMULECOMPAT_OPTIONS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d77ca2d55805818b61fb75c6293d19c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_EMULE_MISCOPTIONS1</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d6f5d6db3b5967cc454800a5978935014</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_EMULE_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dadec0a7bad80f4d7bfab89961d0476d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_DEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d46fa2b504273c612fd6e9f62dec583c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CT_EMULE_MISCOPTIONS2</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d0d4f017b019441e7fa82e188bf071600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_COMPRESSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dcca5e7212a42022db53561ac14a9e2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_UDPDEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d3aeb5475ecf47fa3b388dff46c019f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_UDPVER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d1767a0eef3737965ac4e65c2097acaa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_SOURCEEXCHANGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dad669ed88e48291db1b810f9d579c0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_COMMENTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d60be737b6bca2659837c57c6ef133359</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_EXTENDEDREQUEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d8c0bcc40b30295a388bcfc46bc709a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_COMPATIBLECLIENT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d546d70cf65d2e8e91756bfc0c46bc5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_FEATURES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d4cc06965da1ac0038e60dd2827790dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_MOD_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d104a0b73bad3952c8a2f4fd689751718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_FEATURESET</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dd4a1fa3d84618b6dd64a7fd2bf6f4b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ET_OS_INFO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d53f7912b497f15104eda1976f01bf378</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FILENAME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d8e9be60d8e9e636a9879bc44592b04b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FILESIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dc41f2845ae08dd1883b58a8099673562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FILETYPE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d218cb7e7f0a8b978c7ec4266c1071544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FILEFORMAT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7b4e4c03ede2911bd973bee4bbfa828c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_LASTSEENCOMPLETE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7d0bd8b7258adee14490bdb08c633f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PART_PATH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d8fe4d08a9e9179fcb3cbd9ff26592e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PART_HASH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23da5b6987bb4f5b5691e8a86381565d036</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_TRANSFERED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d0ec411e97ea8f4f8576647511e9b8cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GAP_START</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7cb04f5b888c9795af982824cd02c0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_GAP_END</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d1e80cc4e98e8ba2297cea75134b59478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DESCRIPTION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d8f89ce2ec68e06981138862e8fc16fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d4d1fdef3a90fc61f96cec677b7bd323f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FAIL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dd53f589798a27368a062f0dad79a28b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PREFERENCE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23da83c73723777416f25cbe9989e439f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_VERSION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dfaffe498d9152aadbaabe9ae2edb2b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PARTFILENAME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dcb70aa53224da3aec82a29a5923b2919</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PRIORITY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d963999a6d0e4afb51e4cfa354ed87b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_STATUS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d54ff1e12490c00d24a516ca09df9eb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_SOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d38f305b3efb9d1ab0e54cbb988c52cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_QTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d62fb48b0d7cdb64f32f2a2fbf711d050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PARTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dd2620e73cfe687b530f16609d113766e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DLPRIORITY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d1ef1e7230bde832aa0da3a1546c5b4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ULPRIORITY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23db71a4fbabb01ba895501f8445a30080b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_KADLASTPUBLISHKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d47a8a589a27aef00ba9c165883cb111a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_KADLASTPUBLISHSRC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dd314431e750b314b117171e53bafd9df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FLAGS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d8cc4529da2799874dd6c0e5d318cabf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DL_ACTIVE_TIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d4ed3b9ea9927e69067505d3b8e401178</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_CORRUPTEDPARTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df2a7a5a6609ab66373b291dffeee3481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_DL_PREVIEW</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d5a94ca8045e66e8a6d00985b81214fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_KADLASTPUBLISHNOTES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dcec8a00e7042be0302c0397da98b681f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_AICH_HASH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7f83a50e00158cbb597daf8e99b8411c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_COMPLETE_SOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23da3ea2527a995b66d40922a8a233c21fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_COLLECTION</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dade0924ae887dfd26d75d74ad33afc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_PERMISSIONS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d1ad9acf37ee9f708002b99a9dadabc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ATTRANSFERED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23db87933527cfca2b2baee5d1cd92cad74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ATREQUESTED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d1c4f62dcf9a4dc67b68d426eef6276df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ATACCEPTED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23df489b2d8ae4d990e3cb8f7c787b551d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_CATEGORY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dc71d1f14dff41e5faa7530f1bd3fceaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_ATTRANSFEREDHI</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d9411a7797e14eadd02b3299678928bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MEDIA_ARTIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23de802940de016bfc1b3ed40d39ba77b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MEDIA_ALBUM</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dfefc2412f22b2bb23692d131a6765297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MEDIA_TITLE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dda4918f9e28839e102da314b8b1df08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MEDIA_LENGTH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d10ff71c22a9f25a625a16494e214457d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MEDIA_BITRATE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dbf359bf50a88ccb8c2291c7f35ea6924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_MEDIA_CODEC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d0149da6118f49fc67ac749b639263130</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_FILERATING</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23d7f0f06d44086325d26edfa3e707408e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_SERVERDEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23dda79706b6df01205238e2402e8a78d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_SOURCEUDEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23da0ee0bd43984da1d35d15de1ffee3f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_SOURCEDEST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23ddeaa8c2f05a7e1e22818161966ec4831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAG_SOURCETYPE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b9ecacea3e9c434541811f284a3aa23deeafca5e6e2e8bb016fb749cb2431722</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_MESSAGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f942dc4d8c2a112d8d277edaa70f2fcd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_DETAIL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9f3983bb300dde54dd9f40705e573b9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_ADDFRIEND</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f99a380d065bd8e4a3bfb83c155752ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_REMOVEFRIEND</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f914573a35d5d823dfe75454d01392af37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SHOWLIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9606b66ca04d44e2aa271d82473c3bb33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_FRIENDSLOT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9bac4ab90fa417e53b1ba12f7a664a21d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CHANGE2FILE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f98524d3c74549c39695e08cd7ec8fd85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CANCEL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f94a38b69350cb5927f9ea5b6a9d643bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_STOP</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f923f1b687236601b5841bbbdf9c34d83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_RESUME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9168ecefaebc389dd325d9f2050cdb2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PAUSE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f92b4e99fda6acb34832e959508f1296c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CLEARCOMPLETED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f99ad35ca4747897cf4c24bf0704e0a6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_VIEW</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9ed85d4b163a6324716b6fb353a4cfbb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SENDMESSAGE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9703166babc5b0d5092a9633a7c305172</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_WS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f96e930a09d3cbbe45123efa3f1ccff4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_RAZORSTATS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9cf7145a0b14e785e9bffa9faf37eb5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_GETCOMMENTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9d6e21407006989d958f700d987b2927f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CMT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9b1e5127c285b513f7883b4936e16a16e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PRIOVERYLOW</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9364d867b7f8514c417a448eed06a42be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PRIOLOW</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9be9750bc9dbf92c218d2f33aec7e263b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PRIONORMAL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f917c177c21e49f9d36821cf72b7af1b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PRIOHIGH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f933425afbf25daa0fb4456a4d646c0a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PRIOVERYHIGH</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9f933b6a86aadcea37e5ef60d9f91c3a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_POWERSHARE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f94fcfa7c9986cd80d24fe16381d9f3ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_PRIOAUTO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9efc286d7419fbda3ecc4fcfb2d78057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_GETED2KLINK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f99c32c897a752530f6e9736afd05306c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_GETSOURCEED2KLINK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f99270a454011b0efef7678a7c341e46d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_GETHOSTNAMESOURCEED2KLINK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f90c200ba02df9e1039feda61b2aaa17c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_GETAICHED2KLINK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9122dc8bb6b86405817229b62caf8c467</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_METINFO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f98b49580f1646843cf0e1535af559b7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CONNECTTO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f952488e0386acda576f5ce53a7d39844d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_REMOVE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f96f08bdf0860fdb77dfeb8456ccaf4036</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_REMOVEALL</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f99901a9c06f9532e06335a06ca7ce1df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_UNBAN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f90a82d5ec642cd5d0acdbf915d6c0258c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_ADDTOSTATIC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f949e22a07f987fd3708d416aa3212753f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_REMOVEFROMSTATIC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9b8b15027e30be2d9d2616ae0c3fb8e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_VIEWFILECOMMENTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9dc09a670fda9aeed5070522d00f2409f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CAT_ADD</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9dc29f12e0d4bd328f6cfeb43ce35bfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CAT_EDIT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9ace723d83e03f08d66387cbe90ffcc16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CAT_REMOVE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9067a14e94bc28edf3176a4f0f8123245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_TOOGLELIST</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f948d4e203b4929372ea4d70e98b2c3067</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CLOSE_TAB</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9b56c51152aaecaf3bf0ac2f2235e04bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CLOSE_ALL_TABS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f90947ba06d7779d30aa6ce218204133c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CLOSE_OTHER_TABS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9b85f2dc0c1de56fed7e2fe32b79f3443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_RENAME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f95a0c86760ab110b7f039e58bc27ba25b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_DROP_NO_NEEDED_SOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9ca94caa08ab574ebf8ee4aca30b6a530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_DROP_FULL_QUEUE_SOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9245c2128c6531597364361f6f9017862</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_DROP_HIGH_QUEUE_RATING_SOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f923460e72a8686657106146b1279b96ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CLEAN_UP_SOURCES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9dda5806980dd57af9613d037b45ef3cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SWAP_A4AF_TO_THIS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9e88f547b2bfdbe9ca917ed5912dcd4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SWAP_A4AF_TO_THIS_AUTO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9a04f01f0f0a8965399034fdd25026494</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SWAP_A4AF_TO_ANY_OTHER</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f912fa72d99842b481eae1c40a6f427dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_MENU_PRIO</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f94af19d4e207dcf65308c86ea7137554b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_MENU_EXTD</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f920027984dcc0515204a998092d62bc15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_MENU_CATS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f941b74685b2eae9a813f0b16c32c37bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_1</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9e8d60f5e427ee5f212f706881781ce51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_2</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f975981da95687bfda66d718a1fe8bafcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_3</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9fe1d76f94168b19cc60ad61fbe5a9783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_4</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f93253e8c491e4bfdc5eaaf876d3dc1b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_5</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f95dfe937061c6be6200e6e1f1e347f6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_6</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f93d24957055407b0994182f9e8211cfa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_7</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f99da69d640dcc7bd8c901e7fca247a646</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_8</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9e356aca7fc9de40c165db892309eada8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_9</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9067ef4c798170dce02ee64ec91c0a2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_10</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9c3b0c049e7048e8fdd3f48ba8ced87fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_11</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f96d73feceba95bf23eb1da85a5825e7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_12</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f939dfe382dbb90d8a88b907f74516a833</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_13</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f924056cf3813208bdf0d147c02fe787d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_14</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f9282577d50f06bda49fd4bcb73f8eea3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_LISTCOL_15</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f94343c6b3c108d1c8625278a814083092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_ASSIGNCAT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f989414ece1cafa7526648e0fe6973bc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_CAT_SET0</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f97ffeecd3934d5e47e558a0b0d73170fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SWITCHCTRL_0</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f92ec95f11dcf86c454f6bed11cdc15909</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MP_SWITCHCTRL_9</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ae05225933a42f81e7c4a9fb286596f962b926d41d2045b42d05959bad2c6881</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>opstr</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2efbf25596d0558dd766bc3e95a027ba</anchor>
      <arglist>(int prot)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>kadopstr</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>0154c3468e6973c0cfb326af85f07003</anchor>
      <arglist>(int op)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>opstr</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>cc078887f507d46aca7b8e3fb81cdea2</anchor>
      <arglist>(int prot, int op)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>tagnameStr</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d2238a75ca9b68cd1280cfc77ac7dc47</anchor>
      <arglist>(int tag)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>tagtypeStr</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>472c3e4becdfd8b8c85c58d3d87d7783</anchor>
      <arglist>(int tag)</arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_RESULTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2de2894c20ee59ef5970b94e60524247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_CLIENTCONNECTIONTRY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>f8089c40fd4a43567ef24e9077cd2335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CONNECTION_TIMEOUT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>3377c5c7f00952eb08e95f9d65b1781e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>FILEREASKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7109e0dc99cc6db2f8c3e952594782d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SERVERREASKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>bbeb9c1baf78a3ed78f4dc098f245367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVERREASKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7a69d0ec0728c226697e0d7c70f98205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SOURCECLIENTREASKS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e83b1b14cc730f46be2c6230b41c4de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SOURCECLIENTREASKF</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>5055dd52ba636eb0ddfd47d5efbcd6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAASKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>9aff1531491b9a1c161b9b5ef199e40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALFILE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>74555c0e2a15bb524892a482a694fc84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREASKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>63926c07c87c146dcc27bd0a5ac8d87e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAPUBLISHTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>2f7473fe57a91d34474004aa593d4a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALSTORENOTES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>947bcd8dcab870d5480ac283a0d854a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALSTORESRC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>03bc3683472fbf8dc3f3013da2161e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIATOTALSTOREKEY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>4924773dc8cd927b64fcf5ea0905ade0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREPUBLISHTIMES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>3fe913ddc3e14a32fbeb8c55c14dcb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREPUBLISHTIMEN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>1d076b4ca2c8b9a137d3104251dcc046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAREPUBLISHTIMEK</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>91a698d820766c2524a99b1f3c6bc688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIADISCONNECTDELAY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>5f20700497d2f3dc7ceba1d5ddd3014b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXINDEX</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7ec399877033861e11fcc3147d13a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXENTRIES</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>368120c4dbadbef190d8d4913a18adb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXSOUCEPERFILE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>6a96bd5924fcdce10f1c15eeba277e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KADEMLIAMAXNOTESPERFILE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>b3966429386f962383377f6da819b17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>ED2KREPUBLISHTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ad165a96affe1386dd1c70bec0eeeede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MINCOMMONPENALTY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>950075f5df1ba960ab682ccec848f862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVERSTATTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>13848b781d2a6277a9e8945bddbccc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVSTATREASKTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ac170516a1cf2f3513bfd986aa85f12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPSERVERPORT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>f7a04523e6931f614e9f96eb86397df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UDPMAXQUEUETIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>a0c8472d53c949fb5caf66cf2a6ce7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>RSAKEYSIZE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>559b90b9682052ba4298209da51144fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_SOURCES_FILE_SOFT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>6f9cd7f802c63711f82554e31dd35f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_SOURCES_FILE_UDP</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7707253a2168cbcef70a3032391f0d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>SESSIONMAXTRANS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>3a40eaf06fecb489ad57f52cd232a3a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SESSIONMAXTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>a79ba400fa8d910e10a2e141861ac926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXFILECOMMENTLEN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>e31131331d33fd72bf7a4f50315ea8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MIN_UP_CLIENTS_ALLOWED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>672ee62a88f1bed039d013345f854c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXCONPER5SEC</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>cf4f8b18e08928a7fa8286659f65246c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXCON5WIN9X</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>14ac21251e7f9fec0fece2a72daaed64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UPLOAD_CHECK_CLIENT_DR</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>61ddbb812e15b469d799ee18ca2009ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UPLOAD_LOW_CLIENT_DR</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>3e88148c4abc37adc843654484916744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>UPLOAD_CLIENT_DATARATE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>d9aaeb904aa45e5577f3fe10484c8ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_UP_CLIENTS_ALLOWED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>c8c36100eae35a34b10773ade9b7e939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>DOWNLOADTIMEOUT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>ed94576bf3cb74a4372016c822bddd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CONSERVTIMEOUT</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>24d475c55b1ee7b64035ea3e79fe8c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>RARE_FILE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>f425d4db2105dd7608c637af3d4c82c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>BADCLIENTBAN</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>12bec00d09790a09b6b47e3663717a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MIN_REQUESTTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>63539576a592bdb9c1150bcfd9fdff92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAX_PURGEQUEUETIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>7aadeacc49107c6c11ba046d114c432c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>PURGESOURCESWAPSTOP</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>3b8da4caa3083f986e07df31fb105c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CONNECTION_LATENCY</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>647217989dc0ed4d33c8e21e868c19c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>SOURCESSLOTS</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>94a9b8f4a8e08672b9b8d4cb23e5ee90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MINWAIT_BEFORE_DLDISPLAY_WINDOWUPDATE</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>cc1aa119e1251cacadd36e9e05e4352f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>MAXAVERAGETIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>1871cddf40009889a429aacc3720342a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CLIENTBANTIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>1e2f88e5574ede80329fc95d3efb81f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>TRACKED_CLEANUP_TIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>16d644fa51a3e408b626fc3d0515dd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>KEEPTRACK_TIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>52e68c142627669c28fd91304b7f41ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxUint32</type>
      <name>CLIENTLIST_CLEANUP_TIME</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>724974c59ef12b42c7727ef4eb0d9035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned</type>
      <name>UNLIMITED</name>
      <anchorfile>OPCodes_8h.html</anchorfile>
      <anchor>edca84955986368a224deb8aaca20f99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OScopeCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OScopeCtrl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>OScopeCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OScopeCtrl_8h</filename>
    <class kind="class">COScopeCtrl</class>
    <class kind="struct">COScopeCtrl::PlotDataStruct</class>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>OScopeCtrl_8h.html</anchorfile>
      <anchor>070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TIMER_OSCOPE</name>
      <anchorfile>OScopeCtrl_8h.html</anchorfile>
      <anchor>1177d57c5e378bbafc62d9ae3551a651</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OtherFunctions.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OtherFunctions_8cpp</filename>
    <class kind="class">CED2KFileTypes</class>
    <member kind="define">
      <type>#define</type>
      <name>BASE16_LOOKUP_MAX</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>6251268208be869d83e1d37a487bc55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; wxString, EED2KFileTypeClass &gt;</type>
      <name>SED2KFileTypeMap</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>45b06a5939c93242abf708eac56bb23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SED2KFileTypeMap::value_type</type>
      <name>SED2KFileTypeMapElement</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>65a3dfada81c3cfbac60493e78887ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastItoXBytes</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>1762eee90e976f297ebf896afe462b51</anchor>
      <arglist>(uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastItoIShort</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>5fefba61341828df7056e9a572e19a0d</anchor>
      <arglist>(uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastItoSpeed</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>2fbac8ed817c5da7ddb5a4cd466506ba</anchor>
      <arglist>(uint32 bytes)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastSecondsToHM</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e91e9d21bb1a397c46e8a555f785db3c</anchor>
      <arglist>(uint64 count, uint16 msecs)</arglist>
    </member>
    <member kind="function">
      <type>FileType</type>
      <name>GetFiletype</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>bfd5aebfc622a0dcbcfd68265a3e7b7e</anchor>
      <arglist>(const wxString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFiletypeDesc</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>030b4aeeaf170da75a09ec476bf8cd3e</anchor>
      <arglist>(FileType type, bool translated)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFiletypeByName</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>f6e7221ea29f8e3de186dce75c8eb827</anchor>
      <arglist>(const wxString &amp;filename, bool translated)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmptyFile</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>250a3d526851ec43400e1316900e5f72</anchor>
      <arglist>(const wxString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxConnections</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>51f780f15f339dd8a48615d15be71b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetRateString</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e6446d0fd4d96c63ec3105f8aeb263bc</anchor>
      <arglist>(uint16 rate)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTypeSize</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>783341b5a7c9e800a179da3144bc6379</anchor>
      <arglist>(uint8 type)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>EncodeBase16</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>bcd828c1263ccf6b56a8f2ec23de69aa</anchor>
      <arglist>(const unsigned char *buffer, unsigned int bufLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase16</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>81ad7e8895b0d75078f99bafaa810ae5</anchor>
      <arglist>(const wxString &amp;base16Buffer, unsigned int base16BufLen, byte *buffer)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>EncodeBase32</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>714c4e2ef758e05a99d8d8f1186f7b6f</anchor>
      <arglist>(const unsigned char *buffer, unsigned int bufLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase32</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>99460afef3cfc7053f7ed509c9d4b004</anchor>
      <arglist>(const wxString &amp;base32Buffer, unsigned int base32BufLen, unsigned char *buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString</type>
      <name>to_b64</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>16cf81a36826d917edbdce3a1a4ef245</anchor>
      <arglist>(wxT(&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;))</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>EncodeBase64</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>41d16b5829da58f36722e5968621d607</anchor>
      <arglist>(const char *pbBufferIn, unsigned int bufLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase64</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>b4804554266cc1ef04eb7214e0a7d606</anchor>
      <arglist>(const wxString &amp;base64Buffer, unsigned int base64BufLen, unsigned char *buffer)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetCatTitle</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>73fd140c498555040cb3b2a5393520a3</anchor>
      <arglist>(int catid)</arglist>
    </member>
    <member kind="function">
      <type>int wxCMPFUNC_CONV</type>
      <name>Uint16CompareValues</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e3d2346543c45252f973db1c5d8eb76c</anchor>
      <arglist>(uint16 *first, uint16 *second)</arglist>
    </member>
    <member kind="function">
      <type>EED2KFileType</type>
      <name>GetED2KFileTypeID</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>96311ebad30f5199efaa7e8006eaf751</anchor>
      <arglist>(const wxString &amp;strFileName)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetED2KFileTypeSearchTerm</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>91012532deb046f0bf424f8171912208</anchor>
      <arglist>(EED2KFileType iFileID)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFileTypeByName</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>526bb36f0d2057878c9d6cdda3cedda8</anchor>
      <arglist>(const wxString &amp;strFileName)</arglist>
    </member>
    <member kind="function">
      <type>EED2KFileType</type>
      <name>GetED2KFileTypeSearchID</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>6c506d0c7c2d29594dff8762bcd1b142</anchor>
      <arglist>(EED2KFileType iFileID)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>DumpMemToStr</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>52db3c30832a4229f2f3768b84e492af</anchor>
      <arglist>(const void *buff, int n, const wxString &amp;msg, bool ok)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpMem</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>3e4b6659df30b47afd70b9fa241ea635</anchor>
      <arglist>(const void *buff, int n, const wxString &amp;msg, bool ok)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpMem_DW</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e51396ee30395d640d1fdb590e065fbe</anchor>
      <arglist>(const uint32 *ptr, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MilliSleep</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>0f3d61c4a91ec93ec63cbb5985db8d23</anchor>
      <arglist>(uint32 msecs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveFolder</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>d87b2bcc03568afa4b8af693d9d63b66</anchor>
      <arglist>(const wxString &amp;oldPath, const wxString &amp;newPath, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveConfigFile</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>1f676b34b961a253be5b897e64f25f0c</anchor>
      <arglist>(const wxString &amp;oldConfigName, const wxString &amp;newConfigName, wxString oldConfigDir, wxString newConfigDir, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RelocateConfiguration</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>96bcb65e6295ded3fdd16f78004dba1e</anchor>
      <arglist>(const wxString &amp;oldPath, const wxString &amp;newPath, const wxString &amp;oldConfigFile, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckConfig</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>1b26f19b041f3e1363d04c02c541f093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetLocaleDir</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>0627df967e0ce9d9a4361a9f099fa59e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitCustomLanguages</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>037c625cb3d42d474f5a15fdcccc228b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitLocale</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>33e699b2b30eb98b52c00e2d8e9b3b33</anchor>
      <arglist>(wxLocale &amp;locale, int language)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrLang2wx</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e5bdd53c806e851b510ed954c6a7a9b9</anchor>
      <arglist>(const wxString &amp;language)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>wxLang2Str</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>b07c6e96f7862e7603bc2a60ffdf9a38</anchor>
      <arglist>(const int lang)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLocaleAvailable</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>1a93c789e26b6f55a482c3e602b9ec22</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxChar</type>
      <name>base16Chars</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>fa878587c1ae5ed8e792e9e6aa2ac407</anchor>
      <arglist>[17]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxChar</type>
      <name>base32Chars</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>c8047996d36dbd5533f49135ffe1fe0a</anchor>
      <arglist>[33]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxChar</type>
      <name>base16Lookup</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e90df4afdbbd6d9b4c27b2f97042baa3</anchor>
      <arglist>[BASE16_LOOKUP_MAX][2]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>g_fUseCRLF</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>cc6a95d27ebd9c22d3bb1cc7282da2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static unsigned int</type>
      <name>g_nCharsPerLine</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>b7dec0a97b234d198dddf370665bf760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxString</type>
      <name>strHeaderLine</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>64307de7b9237f6e86e8a17eadd02370</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static SED2KFileTypeMap</type>
      <name>ED2KFileTypesMap</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>27419c5f272074f8b4be710c1ce72db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CED2KFileTypes</type>
      <name>theED2KFileTypes</name>
      <anchorfile>OtherFunctions_8cpp.html</anchorfile>
      <anchor>e7c5a88a5a82bdfa4219fe9a24ba7fee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OtherFunctions.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OtherFunctions_8h</filename>
    <class kind="class">EED2KFileTypeClass</class>
    <class kind="class">CConfigDir</class>
    <class kind="class">CMutexUnlocker</class>
    <member kind="define">
      <type>#define</type>
      <name>CastChild</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>d3e9a648f9d301ec7dbf786cba0842e4</anchor>
      <arglist>(IdOrName, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CastByID</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>aa6c75af49169e9dcf952386f9cb8ed1</anchor>
      <arglist>(ID, parent, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CastByName</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>d0d5629f7a776148a8648fa6ff7617e5</anchor>
      <arglist>(Name, parent, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRSIZE</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>6f3d4709b348c8e91c8f84448c195f69</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>itemsof</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>4a3594d325c1a801a3bcdbf7dca8ec71</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELEMENT_COUNT</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>340b881eec9b1950beab8ca83bfc5555</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>wxLANGUAGE_CUSTOM</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>c63acfaa97d3a80814ffbcc05a6b9b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>wxLANGUAGE_ITALIAN_NAPOLITAN</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>1ba9e1f512865ff8b42030de00b6004d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FileType</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftAny</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c3691586f3e0eb49533a2e1a34eaf0673b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftVideo</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c3f2ead7de5c2707303b3ef76076b10dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftAudio</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c3be78b2d7c9a8a9c667d2e0d8c2126b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftArchive</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c38f8096998c16ecc6a8aeced489eb9c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftCDImage</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c312a98cabed1771e488f89436240f1c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftPicture</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c3042c63b031b141c0224f4895cb7eff8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftText</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c3e0ce61efa0ac034c3e2b5865c9360a93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ftProgram</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2c794c5c13ab4dd7e65bad031dbe41c36531e86c96dae73d6c4ac00df8397f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EED2KFileType</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_ANY</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6f74ed26c949c3aff5466f41d21230a36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_AUDIO</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6f8785c50a9f103b9d628896e61d21a6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_VIDEO</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6f80a1ac66622b8b1a08a4f5c8037dc3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_IMAGE</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6fa1366fb21a060fd4aae515ecab9abbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_PROGRAM</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6fbb18961d288491b24c1900ad3a3e9f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_DOCUMENT</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6f898da43a3c1495d6db0321de1143f0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_ARCHIVE</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6fa1111c8dc5d371e2c4b0678568ee7b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ED2KFT_CDIMAGE</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e2e2fc7eed0951c3da958a7ab1c78f6f35c41764890a0d71e4f3f96895dddce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CmpAny</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>4b96c48daa6f6d0b21d05a8c199f0ad3</anchor>
      <arglist>(const TYPE &amp;ArgA, const TYPE &amp;ArgB)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CmpAny</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>5e070574ef017fc60f06588e46fc329a</anchor>
      <arglist>(const wxString &amp;ArgA, const wxString &amp;ArgB)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CmpAny</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>293d55c33f5d7eaad931a4368eabbbb4</anchor>
      <arglist>(const wxChar *ArgA, const wxChar *ArgB)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>EraseFirstValue</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>c940dba545c2d410d517711345c651e8</anchor>
      <arglist>(LIST &amp;list, const ITEM &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>EraseValue</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>18d977eb04bc096fdff523f072a05b59</anchor>
      <arglist>(LIST &amp;list, const ITEM &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>EncodeBase16</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>bcd828c1263ccf6b56a8f2ec23de69aa</anchor>
      <arglist>(const unsigned char *buffer, unsigned int bufLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase16</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>980f048b89ff0003f53c41f36ddc2050</anchor>
      <arglist>(const wxString &amp;base16Buffer, unsigned int base16BufLen, unsigned char *buffer)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>EncodeBase32</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>714c4e2ef758e05a99d8d8f1186f7b6f</anchor>
      <arglist>(const unsigned char *buffer, unsigned int bufLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase32</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>99460afef3cfc7053f7ed509c9d4b004</anchor>
      <arglist>(const wxString &amp;base32Buffer, unsigned int base32BufLen, unsigned char *buffer)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>EncodeBase64</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>4bc624513dfb7f6ee086eeda1cfbd8a3</anchor>
      <arglist>(const char *buffer, unsigned int bufLen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase64</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>b4804554266cc1ef04eb7214e0a7d606</anchor>
      <arglist>(const wxString &amp;base64Buffer, unsigned int base64BufLen, unsigned char *buffer)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastItoXBytes</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>1762eee90e976f297ebf896afe462b51</anchor>
      <arglist>(uint64 count)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastItoIShort</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>4f2adc84fb5a13893bec9cc14f3140cb</anchor>
      <arglist>(uint64 number)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastItoSpeed</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>2fbac8ed817c5da7ddb5a4cd466506ba</anchor>
      <arglist>(uint32 bytes)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CastSecondsToHM</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>b79b4e2588583abf1af1dc501e494fc6</anchor>
      <arglist>(uint64 seconds, uint16 msecs=0)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTypeSize</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>783341b5a7c9e800a179da3144bc6379</anchor>
      <arglist>(uint8 type)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetRateString</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e6446d0fd4d96c63ec3105f8aeb263bc</anchor>
      <arglist>(uint16 rate)</arglist>
    </member>
    <member kind="function">
      <type>FileType</type>
      <name>GetFiletype</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>bfd5aebfc622a0dcbcfd68265a3e7b7e</anchor>
      <arglist>(const wxString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFiletypeDesc</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>45cb2953e6bdb39a5f77a1c2603927f9</anchor>
      <arglist>(FileType type, bool translated=true)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFiletypeByName</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>66adb0835036e28e8be7f61712bb8ca6</anchor>
      <arglist>(const wxString &amp;filename, bool translated=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmptyFile</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>250a3d526851ec43400e1316900e5f72</anchor>
      <arglist>(const wxString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxConnections</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>51f780f15f339dd8a48615d15be71b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetCatTitle</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>73fd140c498555040cb3b2a5393520a3</anchor>
      <arglist>(int catid)</arglist>
    </member>
    <member kind="function">
      <type>int wxCMPFUNC_CONV</type>
      <name>Uint16CompareValues</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e3d2346543c45252f973db1c5d8eb76c</anchor>
      <arglist>(uint16 *first, uint16 *second)</arglist>
    </member>
    <member kind="function">
      <type>EED2KFileType</type>
      <name>GetED2KFileTypeID</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>96311ebad30f5199efaa7e8006eaf751</anchor>
      <arglist>(const wxString &amp;strFileName)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetED2KFileTypeSearchTerm</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>91012532deb046f0bf424f8171912208</anchor>
      <arglist>(EED2KFileType iFileID)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFileTypeByName</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>526bb36f0d2057878c9d6cdda3cedda8</anchor>
      <arglist>(const wxString &amp;strFileName)</arglist>
    </member>
    <member kind="function">
      <type>EED2KFileType</type>
      <name>GetED2KFileTypeSearchID</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>6c506d0c7c2d29594dff8762bcd1b142</anchor>
      <arglist>(EED2KFileType iFileID)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>md4cmp</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>74e0cf8709fe2812638ac67fd3dcaffe</anchor>
      <arglist>(const void *hash1, const void *hash2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md4clr</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>4ee34a886753aeba4a778cff254c82b7</anchor>
      <arglist>(void *hash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md4cpy</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>9f812ff980606794a0436dfc73761046</anchor>
      <arglist>(void *dst, const void *src)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>DumpMemToStr</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>75ca049d23a9129b9802cbcf5f40d096</anchor>
      <arglist>(const void *buff, int n, const wxString &amp;msg=wxEmptyString, bool ok=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpMem</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>eeb8e4772e14db675597d7c53adc2a07</anchor>
      <arglist>(const void *buff, int n, const wxString &amp;msg=wxEmptyString, bool ok=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpMem_DW</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e51396ee30395d640d1fdb590e065fbe</anchor>
      <arglist>(const uint32 *ptr, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MilliSleep</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>0f3d61c4a91ec93ec63cbb5985db8d23</anchor>
      <arglist>(uint32 msecs)</arglist>
    </member>
    <member kind="function">
      <type>const long int</type>
      <name>make_full_ed2k_version</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>d3fab7a98446554f545f759cc82eaafe</anchor>
      <arglist>(int a, int b, int c)</arglist>
    </member>
    <member kind="function">
      <type>const long int</type>
      <name>get_full_ed2k_version</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>39dadc532d288dce1519d8400bd069ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckConfig</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>1b26f19b041f3e1363d04c02c541f093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitCustomLanguages</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>037c625cb3d42d474f5a15fdcccc228b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitLocale</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>33e699b2b30eb98b52c00e2d8e9b3b33</anchor>
      <arglist>(wxLocale &amp;locale, int language)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLocaleAvailable</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>1a93c789e26b6f55a482c3e602b9ec22</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StrLang2wx</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>e5bdd53c806e851b510ed954c6a7a9b9</anchor>
      <arglist>(const wxString &amp;language)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>wxLang2Str</name>
      <anchorfile>OtherFunctions_8h.html</anchorfile>
      <anchor>b07c6e96f7862e7603bc2a60ffdf9a38</anchor>
      <arglist>(const int lang)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OtherStructs.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>OtherStructs_8h</filename>
    <class kind="struct">Header_Struct</class>
    <class kind="struct">UDP_Header_Struct</class>
    <class kind="struct">Requested_Block_Struct</class>
    <class kind="struct">Requested_File_Struct</class>
    <class kind="struct">Pending_Block_Struct</class>
    <class kind="struct">Gap_Struct</class>
    <class kind="struct">ServerMet_Struct</class>
    <class kind="struct">TransferredData</class>
    <class kind="struct">Chunk</class>
    <member kind="enumeration">
      <name>DownloadItemType</name>
      <anchorfile>OtherStructs_8h.html</anchorfile>
      <anchor>a65f0e0ddacf67588fee241f9245ae6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_TYPE</name>
      <anchorfile>OtherStructs_8h.html</anchorfile>
      <anchor>a65f0e0ddacf67588fee241f9245ae6f1d55968a1d035b4ae659e3234264a899</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A4AF_SOURCE</name>
      <anchorfile>OtherStructs_8h.html</anchorfile>
      <anchor>a65f0e0ddacf67588fee241f9245ae6fc6839425a89a247cae4c63f084922c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNAVAILABLE_SOURCE</name>
      <anchorfile>OtherStructs_8h.html</anchorfile>
      <anchor>a65f0e0ddacf67588fee241f9245ae6f0f522e991f8379701cc8282158ab50e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AVAILABLE_SOURCE</name>
      <anchorfile>OtherStructs_8h.html</anchorfile>
      <anchor>a65f0e0ddacf67588fee241f9245ae6f1d7d4c0be13d67f6419350c4f47e48f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct Header_Struct</type>
      <name>__packed__</name>
      <anchorfile>OtherStructs_8h.html</anchorfile>
      <anchor>aacd21891cc7c55ab8422e73be2d182b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Packet.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Packet_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Packet.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Packet_8h</filename>
    <class kind="class">CPacket</class>
  </compound>
  <compound kind="file">
    <name>Parser.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Parser_8cpp</filename>
    <class kind="union">YYSTYPE</class>
    <class kind="union">yyalloc</class>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>9f092f5b1dca6a6249fb2c7c8065b031</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON_VERSION</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>72ebd0ca5807efcc6a5ae4fb72dd1553</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSKELETON_NAME</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>50db5aef8c2b6f13961b2480b37f84c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPURE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>9fa797a1f3c4fc9b12d1e4d569612767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLSP_NEEDED</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>bb3943553c2b5e911c89a3ea973d3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>438ebcf2bfac5fd8af5356f3c0305839</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>5b8a11f9c7cf618abf1718ce87f7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>8064ab10fd617cc4f21f43de6bdefa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_NOT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>55a2a2dbeca6900f02410d5d601d41ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>1592616357701bc2ace2e03edf7d1c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDEBUG</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>853b3bfad6d2b2ff693dce81182e0c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR_VERBOSE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>0943f558a560b9b5fa0593d7e36496c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTOKEN_TABLE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>3499e31aa832edc82b632ae811286a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_T</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>7d535939e93253736c6eeda569d24de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_MAXIMUM</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>b4bb7ad82d4a7e2df49ff6a8fb484109</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>86f079016f11f0600f4259f3f03f8d43</anchor>
      <arglist>(msgid)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUSE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>d7d1ef1bbc6adfe69894bc8221f557e1</anchor>
      <arglist>(e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYID</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>0a6ff515042340dd341cf6ca8dd05f2d</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f45042ce56e04d634420d76caeb2ee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_FREE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>1a9dc526fd390d4808252bd631c4c2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC_MAXIMUM</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>7e55d995c7458f2f4af94a426d0adde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMALLOC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>573b05852d8f080c907dfba725773d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFREE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>c8adfd73c006c1926f387feb1eced3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_GAP_MAXIMUM</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>fcd15dd0fa87ffba0371c6d6a0cc9631</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_BYTES</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>40beb355f2cf230a99e2e2bb54909a5a</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYCOPY</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>d6586b145b5cddce4eec46f35d59b1dd</anchor>
      <arglist>(To, From, Count)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_RELOCATE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>c70c64089ec70937293b65ddbd083412</anchor>
      <arglist>(Stack)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFINAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>6419f3fd69ecb6b7e063410fd4e73b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>e67923760a28e3b7ed3aa2cfaef7f9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNTOKENS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>75d260730a6c379a94ea28f63a7b9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNNTS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f54ae9e588f0ecc32eabbfdf1959df10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNRULES</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>ceaba8997dc3867478ae3b816647eb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNSTATES</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>2c387ba2caaade8bf8f78ed30023f79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUNDEFTOK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>926181abd06b6d1df27b6133971c24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXUTOK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f3f5ed4bc4517eff0ef1b17541192a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTRANSLATE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>ad19ee88e33c02c4e720b28f78249bd7</anchor>
      <arglist>(YYX)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPACT_NINF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>62bf0ed0c4360b077071b5cf3177823b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTABLE_NINF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>504faa93b92f37fcc147f68e8d111a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyerrok</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>20bf055e53dc4fd5afddfd752a4d1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyclearin</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>5035d59933b3f5388c44f596145db047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEMPTY</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>e59196b3765411a06cf234cf9bcae2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEOF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>3b1e3628411fabac03abe0a337322016</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYACCEPT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>a6c7a65b580c214b2ea832fd7bdd472e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYABORT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>3bcde0b05b9aa4ec5169092d9d211dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f1eef6197be78122699013d0784acc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFAIL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>383d9671b1abd97e4c6f3708d1ca32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRECOVERING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>d860e18ca4b79fc589895b531bdb7948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBACKUP</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>dfcaf974b837e3efc130377e9837b4fd</anchor>
      <arglist>(Token, Value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTERROR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>d2b58b1851184ddb3b60fede50bc7946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERRCODE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>552f295255821fa7dea11b0237e1d61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRHSLOC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>b2b4f027a2b092ac14ca4464e7b3db60</anchor>
      <arglist>(Rhs, K)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLLOC_DEFAULT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>485d38f93de30679900c9cad6e7f3446</anchor>
      <arglist>(Current, Rhs, N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_LOCATION_PRINT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>52c7d936ca7e6c34687ff71f29b8cfd1</anchor>
      <arglist>(File, Loc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLEX</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>0ea34e09602d1ede033f16ba669ef24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFPRINTF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f3b78184b3e3414afdaf2bbbff4a8bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDPRINTF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f6d6ca80e87922f90264f1a4a802ea04</anchor>
      <arglist>(Args)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SYMBOL_PRINT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>1c510d33cb388afc9411141ba3076a36</anchor>
      <arglist>(Title, Type, Value, Location)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STACK_PRINT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>7a52157fbe194e3a347afc4ef750af77</anchor>
      <arglist>(Bottom, Top)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_REDUCE_PRINT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>49ad456240785266cadae498ddae9310</anchor>
      <arglist>(Rule)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYINITDEPTH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>eb1508a3a38ec5d64c27e8eca25330b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXDEPTH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>14ba2b263c446ffed1c888c4b42ae40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPOPSTACK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>d2f9773cd9c031026b2ef4c1ee7be1be</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>yytype_uint8</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>79c09f9dcfd0f7a32f598ea3910d2206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int8</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>fd56a33ef7e59189deccc83706e0becd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>yytype_uint16</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>00c27c9da5ed06a830b216c8934e6b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int16</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>de5b97f0021a4f6c5922ead3744ab297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParsedSearchExpression</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>b0f4902e2ed11fff415b014ee92367b3</anchor>
      <arglist>(const CSearchExpr *pexpr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>8616bb63f53f0e9aefb6d9bde578e8f5</anchor>
      <arglist>(const char *errstr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>da3aa71c86327d64d1454cf82f40b93e</anchor>
      <arglist>(wxString errstr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_symbol_value_print</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>6c4773dbc22343d565d6773e9817e87e</anchor>
      <arglist>(yyoutput, yytype, yyvaluep) FILE *yyoutput</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yydestruct</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>164f2f81ce9c9677c36ded9ca2a62d5c</anchor>
      <arglist>(yymsg, yytype, yyvaluep) const char *yymsg</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>cd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString</type>
      <name>_astrParserErrors</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>e750d359966530be7cf585880e04614d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yytranslate</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>384fb3797a340a5415c03719ebab9c67</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyprhs</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>b6c180a0e59872e65109539977390a54</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yyrhs</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>afa2998e91fe72a8acc5fed2c4d4d797</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyrline</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>e7dc8646c71a84786de4a96bde8bcfa1</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *const</type>
      <name>yytname</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>b779f3189fbfd3b164b7802b945d619b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr1</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>0c34e3be3d497abf630697f406f3cc62</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr2</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>a6be1bc256e649b3e922410e291bc7a5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yydefact</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>f80f4a4ea9a69eb19837849cc7083c77</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yydefgoto</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>dd50b39c93bd000e59c735788074a427</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yypact</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>5d5f1a7a5182e57a2589f4753bfaddc9</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yypgoto</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>bb1d1e685ef953f65410be5d32544cfe</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yytable</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>8e8b706358f840fb25486045221fc6bd</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yycheck</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>40faef92d80fc0e07e3d399311c5ec88</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yystos</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>bc7e1225b6a8ee7619f19504cbefd97b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yytype</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>1465c81f2e9dcdc181a3494ad4856982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE const *const</type>
      <name>yyvaluep</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>68d115e4c0c1135ed691d1c43076ec97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>yytype_int16 *</type>
      <name>top</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>e9a49b7e804a9095e3ac62afef35e7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyrule</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>6de7eb5d678516ef2f9c0d48ce4e24fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yychar</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>9e2c7c7373b818c86b2df7106a92327c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yylval</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>539b86ee4bb46824a194f22eb69903d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yynerrs</name>
      <anchorfile>Parser_8cpp.html</anchorfile>
      <anchor>0ea9e3b522e448ac462274fe70e1be82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.cpp</name>
    <path>/media/brun/progs/iMule/src/tmp/</path>
    <filename>tmp_2Parser_8cpp</filename>
    <class kind="union">YYSTYPE</class>
    <class kind="union">yyalloc</class>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>9f092f5b1dca6a6249fb2c7c8065b031</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON_VERSION</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>72ebd0ca5807efcc6a5ae4fb72dd1553</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSKELETON_NAME</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>50db5aef8c2b6f13961b2480b37f84c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPURE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>9fa797a1f3c4fc9b12d1e4d569612767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLSP_NEEDED</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>bb3943553c2b5e911c89a3ea973d3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>438ebcf2bfac5fd8af5356f3c0305839</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>5b8a11f9c7cf618abf1718ce87f7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>8064ab10fd617cc4f21f43de6bdefa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>55a2a2dbeca6900f02410d5d601d41ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>1592616357701bc2ace2e03edf7d1c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDEBUG</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>853b3bfad6d2b2ff693dce81182e0c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR_VERBOSE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>0943f558a560b9b5fa0593d7e36496c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTOKEN_TABLE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>3499e31aa832edc82b632ae811286a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_T</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>7d535939e93253736c6eeda569d24de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_MAXIMUM</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>b4bb7ad82d4a7e2df49ff6a8fb484109</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>86f079016f11f0600f4259f3f03f8d43</anchor>
      <arglist>(msgid)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUSE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>d7d1ef1bbc6adfe69894bc8221f557e1</anchor>
      <arglist>(e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYID</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>0a6ff515042340dd341cf6ca8dd05f2d</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f45042ce56e04d634420d76caeb2ee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_FREE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>1a9dc526fd390d4808252bd631c4c2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC_MAXIMUM</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>7e55d995c7458f2f4af94a426d0adde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMALLOC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>573b05852d8f080c907dfba725773d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFREE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>c8adfd73c006c1926f387feb1eced3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_GAP_MAXIMUM</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>fcd15dd0fa87ffba0371c6d6a0cc9631</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_BYTES</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>40beb355f2cf230a99e2e2bb54909a5a</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYCOPY</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>d6586b145b5cddce4eec46f35d59b1dd</anchor>
      <arglist>(To, From, Count)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_RELOCATE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>c70c64089ec70937293b65ddbd083412</anchor>
      <arglist>(Stack)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFINAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>6419f3fd69ecb6b7e063410fd4e73b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>e67923760a28e3b7ed3aa2cfaef7f9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNTOKENS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>75d260730a6c379a94ea28f63a7b9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNNTS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f54ae9e588f0ecc32eabbfdf1959df10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNRULES</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>ceaba8997dc3867478ae3b816647eb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNSTATES</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>2c387ba2caaade8bf8f78ed30023f79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUNDEFTOK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>926181abd06b6d1df27b6133971c24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXUTOK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f3f5ed4bc4517eff0ef1b17541192a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTRANSLATE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>ad19ee88e33c02c4e720b28f78249bd7</anchor>
      <arglist>(YYX)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPACT_NINF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>62bf0ed0c4360b077071b5cf3177823b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTABLE_NINF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>504faa93b92f37fcc147f68e8d111a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyerrok</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>20bf055e53dc4fd5afddfd752a4d1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyclearin</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>5035d59933b3f5388c44f596145db047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEMPTY</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>e59196b3765411a06cf234cf9bcae2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEOF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>3b1e3628411fabac03abe0a337322016</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYACCEPT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>a6c7a65b580c214b2ea832fd7bdd472e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYABORT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>3bcde0b05b9aa4ec5169092d9d211dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f1eef6197be78122699013d0784acc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFAIL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>383d9671b1abd97e4c6f3708d1ca32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRECOVERING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>d860e18ca4b79fc589895b531bdb7948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBACKUP</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>dfcaf974b837e3efc130377e9837b4fd</anchor>
      <arglist>(Token, Value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTERROR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>d2b58b1851184ddb3b60fede50bc7946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERRCODE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>552f295255821fa7dea11b0237e1d61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRHSLOC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>b2b4f027a2b092ac14ca4464e7b3db60</anchor>
      <arglist>(Rhs, K)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLLOC_DEFAULT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>485d38f93de30679900c9cad6e7f3446</anchor>
      <arglist>(Current, Rhs, N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_LOCATION_PRINT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>52c7d936ca7e6c34687ff71f29b8cfd1</anchor>
      <arglist>(File, Loc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLEX</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>0ea34e09602d1ede033f16ba669ef24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFPRINTF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f3b78184b3e3414afdaf2bbbff4a8bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDPRINTF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f6d6ca80e87922f90264f1a4a802ea04</anchor>
      <arglist>(Args)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SYMBOL_PRINT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>1c510d33cb388afc9411141ba3076a36</anchor>
      <arglist>(Title, Type, Value, Location)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STACK_PRINT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>7a52157fbe194e3a347afc4ef750af77</anchor>
      <arglist>(Bottom, Top)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_REDUCE_PRINT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>49ad456240785266cadae498ddae9310</anchor>
      <arglist>(Rule)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYINITDEPTH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>eb1508a3a38ec5d64c27e8eca25330b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXDEPTH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>14ba2b263c446ffed1c888c4b42ae40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPOPSTACK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>d2f9773cd9c031026b2ef4c1ee7be1be</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>yytype_uint8</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>79c09f9dcfd0f7a32f598ea3910d2206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int8</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>fd56a33ef7e59189deccc83706e0becd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>yytype_uint16</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>00c27c9da5ed06a830b216c8934e6b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int16</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>de5b97f0021a4f6c5922ead3744ab297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParsedSearchExpression</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>b0f4902e2ed11fff415b014ee92367b3</anchor>
      <arglist>(const CSearchExpr *pexpr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>8616bb63f53f0e9aefb6d9bde578e8f5</anchor>
      <arglist>(const char *errstr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>da3aa71c86327d64d1454cf82f40b93e</anchor>
      <arglist>(wxString errstr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_symbol_value_print</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>6c4773dbc22343d565d6773e9817e87e</anchor>
      <arglist>(yyoutput, yytype, yyvaluep) FILE *yyoutput</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yydestruct</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>164f2f81ce9c9677c36ded9ca2a62d5c</anchor>
      <arglist>(yymsg, yytype, yyvaluep) const char *yymsg</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>cd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString</type>
      <name>_astrParserErrors</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>e750d359966530be7cf585880e04614d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yytranslate</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>384fb3797a340a5415c03719ebab9c67</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyprhs</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>b6c180a0e59872e65109539977390a54</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yyrhs</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>afa2998e91fe72a8acc5fed2c4d4d797</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyrline</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>e7dc8646c71a84786de4a96bde8bcfa1</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *const</type>
      <name>yytname</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>b779f3189fbfd3b164b7802b945d619b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr1</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>0c34e3be3d497abf630697f406f3cc62</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr2</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>a6be1bc256e649b3e922410e291bc7a5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yydefact</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>f80f4a4ea9a69eb19837849cc7083c77</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yydefgoto</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>dd50b39c93bd000e59c735788074a427</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yypact</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>5d5f1a7a5182e57a2589f4753bfaddc9</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yypgoto</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>bb1d1e685ef953f65410be5d32544cfe</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yytable</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>8e8b706358f840fb25486045221fc6bd</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yycheck</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>40faef92d80fc0e07e3d399311c5ec88</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yystos</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>bc7e1225b6a8ee7619f19504cbefd97b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yytype</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>1465c81f2e9dcdc181a3494ad4856982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE const *const</type>
      <name>yyvaluep</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>36e73ff7e44ea7dc5a603e28b48fe033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>yytype_int16 *</type>
      <name>top</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>e9a49b7e804a9095e3ac62afef35e7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyrule</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>6de7eb5d678516ef2f9c0d48ce4e24fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yychar</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>9e2c7c7373b818c86b2df7106a92327c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yylval</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>539b86ee4bb46824a194f22eb69903d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yynerrs</name>
      <anchorfile>tmp_2Parser_8cpp.html</anchorfile>
      <anchor>0ea9e3b522e448ac462274fe70e1be82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.hpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Parser_8hpp</filename>
    <class kind="union">YYSTYPE</class>
    <member kind="define">
      <type>#define</type>
      <name>TOK_STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>438ebcf2bfac5fd8af5356f3c0305839</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>5b8a11f9c7cf618abf1718ce87f7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>8064ab10fd617cc4f21f43de6bdefa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_NOT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>55a2a2dbeca6900f02410d5d601d41ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>1592616357701bc2ace2e03edf7d1c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>f0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yylval</name>
      <anchorfile>Parser_8hpp.html</anchorfile>
      <anchor>539b86ee4bb46824a194f22eb69903d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.hpp</name>
    <path>/media/brun/progs/iMule/src/tmp/</path>
    <filename>tmp_2Parser_8hpp</filename>
    <class kind="union">YYSTYPE</class>
    <member kind="define">
      <type>#define</type>
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>438ebcf2bfac5fd8af5356f3c0305839</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>5b8a11f9c7cf618abf1718ce87f7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>8064ab10fd617cc4f21f43de6bdefa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>55a2a2dbeca6900f02410d5d601d41ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>1592616357701bc2ace2e03edf7d1c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>f0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yylval</name>
      <anchorfile>tmp_2Parser_8hpp.html</anchorfile>
      <anchor>539b86ee4bb46824a194f22eb69903d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartFile.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>PartFile_8cpp</filename>
    <class kind="class">CCompletingThread</class>
    <member kind="define">
      <type>#define</type>
      <name>FIXED_TAGS</name>
      <anchorfile>PartFile_8cpp.html</anchorfile>
      <anchor>b60b28c6b40c8f800b342b3acc752a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SAVED_SOURCES</name>
      <anchorfile>PartFile_8cpp.html</anchorfile>
      <anchor>962d9ea2346eda124030c7e31e0327b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CompleteErrors</name>
      <anchorfile>PartFile_8cpp.html</anchorfile>
      <anchor>2b1b3c15048e42ed00f4e634f21a8001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNEXP_FILE_ERROR</name>
      <anchorfile>PartFile_8cpp.html</anchorfile>
      <anchor>2b1b3c15048e42ed00f4e634f21a8001574459c8c281abd91c6b0109460bd0f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartFile.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>PartFile_8h</filename>
    <class kind="struct">PartFileBufferedData</class>
    <class kind="struct">SFileRating</class>
    <class kind="class">CPartFile</class>
    <member kind="define">
      <type>#define</type>
      <name>BUFFER_TIME_LIMIT</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>64d43883b4777df89fda8e2983ad44ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATES_COUNT</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>846fb0202b2c81d4e9fc2b0a3264591f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARTMET_BAK_EXT</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>fdbd6dc56c27dff64f6a166f06688cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; SFileRating * &gt;</type>
      <name>FileRatingList</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>b79f641420cc3d55b6775c9c42e93bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EPartFileFormat</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PMT_UNKNOWN</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd6bf27bf524a732bd2128700eabf5835ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PMT_DEFAULTOLD</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd6a43d4644d7fc501ba9d8368057ae73b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PMT_SPLITTED</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd65575d2239ff6e1e594790e92d3fcd032</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PMT_NEWOLD</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd66610ab2cfe6d39df0f82d27bce0c9cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PMT_SHAREAZA</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd6127da7e5cc9336a058382c377b013bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PMT_BADFORMAT</name>
      <anchorfile>PartFile_8h.html</anchorfile>
      <anchor>42a860c48e2e304fa8bbeadd995abbd604acfa7c03e51e67cd8a8d28135eba4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartFileConvert.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>PartFileConvert_8cpp</filename>
    <class kind="struct">ConvertJob</class>
    <member kind="enumeration">
      <name>convstatus</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e23732453241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_OK</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e2373245324114e7c10d0141ec3c1f8edff51cb8ccda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_QUEUE</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e23732453241f9fd9618ad8c13fcea5c8eddfdd72528</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_INPROGRESS</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e23732453241e8e7539e57042324fc109abd7ffd4393</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_OUTOFDISKSPACE</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e23732453241f169a11954edc56aa64d780c6b4738f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_PARTMETNOTFOUND</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e237324532415a3fc7722a03d5e0a4b486d793b634ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_IOERROR</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e237324532417385175a3e331eba8b27c1bb964e832c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_FAILED</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e237324532416989952bfb6b3a136cfd9a70514dc3ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_BADFORMAT</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e23732453241b1df818f6ee52f18f38acfc55bd27945</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONV_ALREADYEXISTS</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>828941e2012a10fad376e237324532419a91303bebfec6f365f952320deb8b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>convert_xpm</name>
      <anchorfile>PartFileConvert_8cpp.html</anchorfile>
      <anchor>634a4d78afc59eff3029e4574b8803a5</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartFileConvert.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>PartFileConvert_8h</filename>
    <class kind="class">CPartFileConvertDlg</class>
    <class kind="class">CPartFileConvert</class>
    <class kind="class">CConvertListCtrl</class>
  </compound>
  <compound kind="file">
    <name>chat.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>chat_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>chat_ico_xpm</name>
      <anchorfile>chat_8ico_8xpm.html</anchorfile>
      <anchor>32b603bed0a25763d95dd0f494f8c22c</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mule_Tr_grey.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>mule__Tr__grey_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>mule_Tr_grey_ico</name>
      <anchorfile>mule__Tr__grey_8ico_8xpm.html</anchorfile>
      <anchor>f7d7e5143e534d80d4aa7e3f5dce7b7e</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mule_Tr_grey_big.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>mule__Tr__grey__big_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>mule_Tr_grey_big_ico_xpm</name>
      <anchorfile>mule__Tr__grey__big_8ico_8xpm.html</anchorfile>
      <anchor>8655de4dc5960fa10af26641952bde46</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mule_Tr_yellow.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>mule__Tr__yellow_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>mule_Tr_yellow_ico</name>
      <anchorfile>mule__Tr__yellow_8ico_8xpm.html</anchorfile>
      <anchor>9ec93bed57d9098f20a2ab708a025afa</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mule_Tr_yellow_big.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>mule__Tr__yellow__big_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>mule_Tr_yellow_big_ico_xpm</name>
      <anchorfile>mule__Tr__yellow__big_8ico_8xpm.html</anchorfile>
      <anchor>f2d664e4c5111d673e325490c9ff35db</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mule_TrayIcon.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>mule__TrayIcon_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>mule_TrayIcon_ico</name>
      <anchorfile>mule__TrayIcon_8ico_8xpm.html</anchorfile>
      <anchor>45bb3080fec6271eec06eb8a7873e25e</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mule_TrayIcon_big.ico.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>mule__TrayIcon__big_8ico_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>mule_TrayIcon_big_ico_xpm</name>
      <anchorfile>mule__TrayIcon__big_8ico_8xpm.html</anchorfile>
      <anchor>3f8cb9a2698eab591cb517f39a19d6ad</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sort_dn.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>sort__dn_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>sort_dn_xpm</name>
      <anchorfile>sort__dn_8xpm.html</anchorfile>
      <anchor>08753c8d13bc39c116775a3106f52585</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sort_dnx2.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>sort__dnx2_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>sort_dnx2_xpm</name>
      <anchorfile>sort__dnx2_8xpm.html</anchorfile>
      <anchor>2de26d953898e4166f4354529e396326</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sort_up.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>sort__up_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>sort_up_xpm</name>
      <anchorfile>sort__up_8xpm.html</anchorfile>
      <anchor>f9435f21d18c685a9b1cd0b01bdd1153</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sort_upx2.xpm</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>sort__upx2_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>sort_upx2_xpm</name>
      <anchorfile>sort__upx2_8xpm.html</anchorfile>
      <anchor>5c2c876d0bfe2a105676d7c2bb3fc768</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Preferences.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Preferences_8cpp</filename>
    <class kind="class">Cfg_Tmpl</class>
    <class kind="class">Cfg_Str</class>
    <class kind="class">Cfg_Str_Encrypted</class>
    <class kind="class">Cfg_Int</class>
    <class kind="class">Cfg_Bool</class>
    <class kind="class">Cfg_Counter</class>
    <class kind="class">Cfg_Colour</class>
    <class kind="struct">LangInfo</class>
    <class kind="class">Cfg_Lang</class>
    <member kind="define">
      <type>#define</type>
      <name>NewCfgItem</name>
      <anchorfile>Preferences_8cpp.html</anchorfile>
      <anchor>9f802ae050c356be8e7ef259417f2180</anchor>
      <arglist>(ID, COMMAND)</arglist>
    </member>
    <member kind="function">
      <type>Cfg_Base *</type>
      <name>MkCfg_Int</name>
      <anchorfile>Preferences_8cpp.html</anchorfile>
      <anchor>2dade86c36b32c46fb2c7cb80b6087fb</anchor>
      <arglist>(const wxString &amp;keyname, TYPE &amp;value, int defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TranslatedSort</name>
      <anchorfile>Preferences_8cpp.html</anchorfile>
      <anchor>cd4578dbf13836ad75cbfbdb57e1d5f2</anchor>
      <arglist>(const LangInfo &amp;a, const LangInfo &amp;b)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static LangInfo</type>
      <name>imuleLanguages</name>
      <anchorfile>Preferences_8cpp.html</anchorfile>
      <anchor>822560b290883cb231ba904946cd4822</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Preferences.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Preferences_8h</filename>
    <class kind="struct">Category_Struct</class>
    <class kind="class">Cfg_Base</class>
    <class kind="class">CPreferences</class>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_COL_SIZE</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>718739a3649acd40805d8716d8c4bf93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CPreferences</type>
      <name>thePrefs</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>fd2edd752887163340b4309f47c2e084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EViewSharedFilesAccess</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>5e9248a01a497c9acb141a228fac6c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vsfaEverybody</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>5e9248a01a497c9acb141a228fac6c2cbf66406d8bd4f75512d2ce7edebf3ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vsfaFriends</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>5e9248a01a497c9acb141a228fac6c2c00c7db88bae344cebd21e9a4575def51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vsfaNobody</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>5e9248a01a497c9acb141a228fac6c2c3a9a04938397da2d542c2dc519a89c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>cntStatColors</name>
      <anchorfile>Preferences_8h.html</anchorfile>
      <anchor>d4aa8e0515fd45c20f9f33b92906cd22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PrefsUnifiedDlg.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>PrefsUnifiedDlg_8cpp</filename>
    <class kind="struct">PrefsPage</class>
    <member kind="variable">
      <type>PrefsPage</type>
      <name>pages</name>
      <anchorfile>PrefsUnifiedDlg_8cpp.html</anchorfile>
      <anchor>ef24b0aecbfaa25e201faebcc76a7ae3</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PrefsUnifiedDlg.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>PrefsUnifiedDlg_8h</filename>
    <class kind="class">PrefsUnifiedDlg</class>
  </compound>
  <compound kind="file">
    <name>Proxy.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Proxy_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Proxy.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Proxy_8h</filename>
    <class kind="class">CProxyData</class>
    <member kind="enumeration">
      <name>CProxyType</name>
      <anchorfile>Proxy_8h.html</anchorfile>
      <anchor>d6323053acc2f54806632f83259abcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXY_NONE</name>
      <anchorfile>Proxy_8h.html</anchorfile>
      <anchor>d6323053acc2f54806632f83259abcb21bbb106786334f020a3e7c7f4d1347b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXY_SOCKS5</name>
      <anchorfile>Proxy_8h.html</anchorfile>
      <anchor>d6323053acc2f54806632f83259abcb2f45a1b49e307c4f78722bf1c665a91c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXY_SOCKS4</name>
      <anchorfile>Proxy_8h.html</anchorfile>
      <anchor>d6323053acc2f54806632f83259abcb2518f6bfda8ed150ecb905d7b80220615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXY_HTTP</name>
      <anchorfile>Proxy_8h.html</anchorfile>
      <anchor>d6323053acc2f54806632f83259abcb2932d6ba5e2a09616c115ffb2248d1869</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXY_SOCKS4a</name>
      <anchorfile>Proxy_8h.html</anchorfile>
      <anchor>d6323053acc2f54806632f83259abcb252503772e13f277ea9f4a2f72c5ee94f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RangeMap.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>RangeMap_8h</filename>
    <class kind="struct">CRangeMapHelper</class>
    <class kind="struct">CRangeMapHelper&lt; void &gt;</class>
    <class kind="class">CRangeMap</class>
    <class kind="class">CRangeMap::iterator_base</class>
    <member kind="typedef">
      <type>CRangeMap&lt; void &gt;</type>
      <name>CRangeSet</name>
      <anchorfile>RangeMap_8h.html</anchorfile>
      <anchor>c5357f6108fd56c830c475f95db5c83d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RLE.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>RLE_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>RLE.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>RLE_8h</filename>
    <class kind="class">RLE_Data</class>
    <class kind="class">PartFileEncoderData</class>
  </compound>
  <compound kind="file">
    <name>SafeFile.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SafeFile_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_BOM</name>
      <anchorfile>SafeFile_8cpp.html</anchorfile>
      <anchor>0756c9e28c46420af3880a93a6307b24</anchor>
      <arglist>(size, x)</arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>BOMHeader</name>
      <anchorfile>SafeFile_8cpp.html</anchorfile>
      <anchor>a02bd3b7c52c1d441f9daaf7a75f1b32</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SafeFile.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SafeFile_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">CFileDataIO</class>
    <class kind="struct">CSafeIOException</class>
    <class kind="struct">CEOFException</class>
    <class kind="struct">CIOFailureException</class>
  </compound>
  <compound kind="file">
    <name>Scanner.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Scanner_8cpp</filename>
    <class kind="struct">yy_buffer_state</class>
    <class kind="struct">yy_trans_info</class>
    <member kind="define">
      <type>#define</type>
      <name>YY_INT_ALIGNED</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>1ae16e642a197fa4948998525813c6f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_SCANNER</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3c3d1ef92e93b0bc81d7760a73d5c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MAJOR_VERSION</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>243ca1d30872935faf05ea5118ed6fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MINOR_VERSION</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>90f9d458829400869e47efb68a865677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_SUBMINOR_VERSION</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c676bd06869180ea493e9b6d7c078dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_BETA</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>9465c9986fdda27730c9dff8d16a0887</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT8_MIN</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>adcf2a81af243df333b31efa6461ab8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT16_MIN</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>d4e9955955b27624963643eac448118a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT32_MIN</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>688eb21a22db27c2b2bd5836943cdcbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT8_MAX</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>af7f29f45f1a513b4748a4e5014ddf6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT16_MAX</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c58f2c111cc9989c86db2a7dc4fd84ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT32_MAX</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>181807730d4a375f848ba139813ce04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT8_MAX</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>eb4e270a084ee26fe73e799861bd0252</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT16_MAX</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3ea490c9b3617d4479bd80ef93cd5602</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT32_MAX</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b5eb23180f7cc12b7d6c04a8ec067fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyconst</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>a2f1a918be586b44bf08126bde2d7cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NULL</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>8e0bcf8f8a5b613ea583347f8bc31cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SC_TO_UI</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>f1185350b7a92cf8aa5324c68850c8a6</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b766bbbee08d04b67e3fe599d6900873</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>8e14785f9eab7a997d659b25af9584c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTATE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>32b5b960944f946b192d54f672569cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STATE_EOF</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b3077e60914fc54dcc55ecae1ce9700b</anchor>
      <arglist>(state)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEW_FILE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>0406739e64fb5750cf995d2ae68ce69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER_CHAR</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b866a64da164ed2d4d444df1ef1fc9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUF_SIZE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e7e51116e747d3390e7a6cfc6532834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STATE_BUF_SIZE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c2f8b6fccdc516d96b02ac09a4dc01bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_CONTINUE_SCAN</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>df4b0db227e07782e28ade353a7ba7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_END_OF_FILE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>7f71d7fa2c403eb4b2f38cb9536f3c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_LAST_MATCH</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>d1a0b5ebcabffe388e9e9ebb2619c1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_LESS_LINENO</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>12e5f3a76911433480bca7f4edba6119</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e65cb72d09db0abdc4b8e8c4d533ab14</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>unput</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>448a4e9041a09588332733c6846c770c</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NEW</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>53579db42834b88199458993912c646d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NORMAL</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>609d19f40900ecc2a5f812d9388c21fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_EOF_PENDING</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>d689d97c15e807a6116ace7a420cea57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_CURRENT_BUFFER</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>a093d500a6330d06d8e4760c494fac33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_CURRENT_BUFFER_LVALUE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>817a6a24af62508b5a35f4bed5f56a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLUSH_BUFFER</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c5d478d90ea9a2ecd43d579067a2e89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_new_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b7eb911e18655f2f78e63afe5a8a4a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_interactive</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c56eb96366c08862bf0efe5d83d1fc4c</anchor>
      <arglist>(is_interactive)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_bol</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>12e30d13a76a94e78010db9996d39c50</anchor>
      <arglist>(at_bol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_AT_BOL</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>71ca89b3656acd0552f14949a571560b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yywrap</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>d35c8efbce4ce6e59d2b4be1d6865e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SKIP_YYWRAP</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e1ef5933028cbc587d31328e53d11a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yytext_ptr</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>790a191a93ef4d3b8c0bb43fd7480052</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DO_BEFORE_ACTION</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>cc3486d769af4e4b2820346a0093cc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NUM_RULES</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e558785bb896e090901c2b905f6790c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b2708fd42cff29ce6a0a52b91bea40d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REJECT</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>835f10dd1ab4bf9a80c4cd80ee6e3058</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yymore</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>745d37b5e002b2e5f93ad42ea7b554be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_MORE_ADJ</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>68792d73820bc46a71d3d4e613f0b977</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RESTORE_YY_MORE_OFFSET</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>56858d18c7eda4f53664496ef566f651</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEVER_INTERACTIVE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>15b85de192a189d5a31cdd518e001e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_INPUT</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>39af38ac405deed6539e56f111305da5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FATAL_ERROR</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>57580477713f30e37b30bc1de2d6e064</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INITIAL</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>a3d063564f6ab16f6d408b8369d0e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_EXTRA_TYPE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>26938d921de835f6183c02e54cf08828</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_READ_BUF_SIZE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>ab1491ceccb1c95c14320b2903773a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>ad1dc60a04a1d8cfc8b3ded13601e361</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyterminate</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c3286b18a2e91b4571b97df96a118e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START_STACK_INCR</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>227e75c43b9e0cd41529974230be7e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL_IS_OURS</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>7682c8d9cec0859408d2421fbe4a5570</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e5b01ac2fa5a6ad5fb97559638abe686</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BREAK</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3cc40a460ad7df816678bcc05241e84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RULE_SETUP</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>690504b662e4281515bf12722df178ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_EXIT_FAILURE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e93e67b85c44f6bd31ead14a552a35c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e65cb72d09db0abdc4b8e8c4d533ab14</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTABLES_NAME</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>828cc83270f8f5bb1688e14dd4e28128</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signed char</type>
      <name>flex_int8_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>7b0840dff4a2ef1702118aa12264b2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>flex_int16_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>2e73b2c75126814585525fb2e9d51159</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>flex_int32_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>838ce943cf44ef7769480714fc6c3ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>flex_uint8_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>0fac5ea484f64e75dbe6eba4aa61750c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>flex_uint16_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c50cdb9eefbef83a1cec89e3a7f6e1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>flex_uint32_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>36869712de12820c73aae736762e8e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct yy_buffer_state *</type>
      <name>YY_BUFFER_STATE</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>4e5bd2d129903df83f3d13effaf8f3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>yy_size_t</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>a14cc3d400000eef0cd40225fd790cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>YY_CHAR</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>1f324b3cb0839eeb90145f0274e6946e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>yy_state_type</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>9ba7c416f135b0f0c1f4addded4616b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b657ddef65d43cc3ab8dfc2cad0ac5b8</anchor>
      <arglist>(FILE *input_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_switch_to_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3098c48a74ef8fd852f7dd4b3331cbce</anchor>
      <arglist>(YY_BUFFER_STATE new_buffer)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_create_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>5bc6f1a5f7812508f425b08283f13ae8</anchor>
      <arglist>(FILE *file, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_delete_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e6ac796aa6c45d433a4b89bf45e6e9dc</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_flush_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>2f59cc88e85e5455c62e4ef7ce095ea8</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yypush_buffer_state</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>4bf8969e5234aef8b46cce9a67a62724</anchor>
      <arglist>(YY_BUFFER_STATE new_buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yypop_buffer_state</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>6201ab6be4687a1ebc3120602d05e35a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yyensure_buffer_stack</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>2e9898ec03e594f5a82387c787776ef6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_load_buffer_state</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c6bf96bd2d347c04367b8111abcd0dca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_init_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>f4a399540c15d953f8b01085bfdc93ea</anchor>
      <arglist>(YY_BUFFER_STATE b, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>f81595b30c0da73f9034ffb511db6388</anchor>
      <arglist>(char *base, yy_size_t size)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_string</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>ff5cfd2eb6bb46cdfa10a03b294d78a4</anchor>
      <arglist>(yyconst char *yy_str)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_bytes</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>740e4f0abc17205bf25d0da1864fe7b0</anchor>
      <arglist>(yyconst char *bytes, int len)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>yyalloc</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>7da304d8ef6c688c0835d35296fe61c2</anchor>
      <arglist>(yy_size_t)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>yyrealloc</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>bcb4148bc13fe254059384c2fdf472b7</anchor>
      <arglist>(void *, yy_size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyfree</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>70f82d43d4797bb2a50f7678ddbfbda5</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_get_previous_state</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>d7a179bfb29968916da20ca16f6ab370</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_try_NUL_trans</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>45a1e65d8dcd5cb30c5d315c91800a5f</anchor>
      <arglist>(yy_state_type current_state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>yy_get_next_buffer</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3b3b5f60f720da3f621223997266498c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_fatal_error</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>ea4ced6513a1062621f055dd066ca4dd</anchor>
      <arglist>(yyconst char msg[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>8616bb63f53f0e9aefb6d9bde578e8f5</anchor>
      <arglist>(const char *errstr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>da3aa71c86327d64d1454cf82f40b93e</anchor>
      <arglist>(wxString errstr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ReadLexBuff</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>cc4aeea744be9b567db47ad3324a1f79</anchor>
      <arglist>(char *pcBuff, int &amp;riResult, size_t uMaxSize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FatalLexError</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>d30c8045318e9ad7439476c4f41ef43a</anchor>
      <arglist>(yyconst char msg[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>yy_init_globals</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>599b60cd059cf60e89cc49953dc708d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yyunput</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>25685b4fb49203fb391287f312948be4</anchor>
      <arglist>(int c, char *buf_ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>input</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>171692544b8e065853e387755849a433</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>9a7bd1b3d14701eb97c03f3ef34deff1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_fatal_error</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>12c5d8d5dfa7df9a6c67764585dfce77</anchor>
      <arglist>(yyconst char *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyget_lineno</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3ac85cdab63967ff82c7534d35a42fe6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>yyget_in</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>eeecf71423549a8e165cddd5a824160b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>yyget_out</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e2c4c4681bb3d385b213511d0b3b59fd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyget_leng</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>81867b0419accbe7b3c2d59ffb203da9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>yyget_text</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c8dd6bf3779328f280aa7f7aa8106514</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyset_lineno</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>1c7624d0fc3e3afd1b59fc43650845d0</anchor>
      <arglist>(int line_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyset_in</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c698f6825e37dd98360acae6539ac464</anchor>
      <arglist>(FILE *in_str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyset_out</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>8530eddd2ebe60de741148bad39517a5</anchor>
      <arglist>(FILE *out_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyget_debug</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>4d4e3dd7e6f1d795e01b61794b31ac34</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyset_debug</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b3f8bbc1a79980c2b2cc042905ab0411</anchor>
      <arglist>(int bdebug)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex_destroy</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b596ae57cdabfb4b298edf3dde7cdf04</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LexInit</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>4cfe873deaa90a97e88df6476ab415f5</anchor>
      <arglist>(const wxString &amp;pszInput)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LexFree</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>548319968b5801ff23004c100ef25edb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyleng</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>1b5865350b5ca5c1d69f429c2a652953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>87a127afa8f6c307fbfba10390675406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyout</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>296847b42b0baa62e2af36cb79f3c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_t</type>
      <name>yy_buffer_stack_top</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e54779a12769204c826899d0531e40e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_t</type>
      <name>yy_buffer_stack_max</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>437cdcd878686881404e320fd941929c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static YY_BUFFER_STATE *</type>
      <name>yy_buffer_stack</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>34b6ab3a3061471b6604dba48e47a101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char</type>
      <name>yy_hold_char</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>13f78e763996d2d86c85b45cbe146282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_n_chars</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>a86c122f2050dbfd365fcf547e6fc1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_c_buf_p</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>de8fc57d3529bff56440a4f3e9c29586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_init</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>eae6dabf9dcc4769518ecf054181b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_start</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>2e1e1d9ee4610a6679d49ed8194b00af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_did_buffer_switch_on_eof</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>57edb4569f96dcfce9deaff0eb6a6412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yylineno</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>5e36364965360da7b7cdfc2188e0af84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>35b96d819f6a8f8638894c429e68b02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int16_t</type>
      <name>yy_accept</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>ef57aa9886f7b21ea6c3062def673851</anchor>
      <arglist>[57]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int32_t</type>
      <name>yy_ec</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>c6dfb8e0e130a1bb6e9cdd547a1f4344</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int32_t</type>
      <name>yy_meta</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>3ee0c25c7450b3e64f151e69cd38706c</anchor>
      <arglist>[18]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int16_t</type>
      <name>yy_base</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>262c238025a08855f99c7a490ab94fac</anchor>
      <arglist>[58]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int16_t</type>
      <name>yy_def</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>6c0580cb0c82484aaafa5939196e33f8</anchor>
      <arglist>[58]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int16_t</type>
      <name>yy_nxt</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>4b5026a6fd427a934cc3f1bc4bb3748f</anchor>
      <arglist>[388]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst flex_int16_t</type>
      <name>yy_chk</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>e08f536f6aa6019f99ccd0d1d7cba1a7</anchor>
      <arglist>[388]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yy_state_type</type>
      <name>yy_last_accepting_state</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>1e8856234732c99be24858b0073e1297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_last_accepting_cpos</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>fc6bef71feb2394eb5291e710139dfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_flex_debug</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>7411c3bab9eca1afee90113c2d22da37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>_pszLexBuff</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>b1aab6985dc32bb69951b26aaa1ae339</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>_pszLexStr</name>
      <anchorfile>Scanner_8cpp.html</anchorfile>
      <anchor>30f79ca8b914673b8b2917f9d1df698f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Scanner.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Scanner_8h</filename>
    <class kind="struct">yy_buffer_state</class>
    <member kind="define">
      <type>#define</type>
      <name>yyHEADER_H</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>50f8b5644457bb401a144e9258658d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyIN_HEADER</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>61b73a0217f7aa5a44ece66df0d2fb15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_INT_ALIGNED</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>1ae16e642a197fa4948998525813c6f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_SCANNER</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>3c3d1ef92e93b0bc81d7760a73d5c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MAJOR_VERSION</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>243ca1d30872935faf05ea5118ed6fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MINOR_VERSION</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>90f9d458829400869e47efb68a865677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_SUBMINOR_VERSION</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>c676bd06869180ea493e9b6d7c078dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_BETA</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>9465c9986fdda27730c9dff8d16a0887</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT8_MIN</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>adcf2a81af243df333b31efa6461ab8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT16_MIN</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>d4e9955955b27624963643eac448118a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT32_MIN</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>688eb21a22db27c2b2bd5836943cdcbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT8_MAX</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>af7f29f45f1a513b4748a4e5014ddf6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT16_MAX</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>c58f2c111cc9989c86db2a7dc4fd84ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT32_MAX</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>181807730d4a375f848ba139813ce04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT8_MAX</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>eb4e270a084ee26fe73e799861bd0252</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT16_MAX</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>3ea490c9b3617d4479bd80ef93cd5602</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UINT32_MAX</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>b5eb23180f7cc12b7d6c04a8ec067fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyconst</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>a2f1a918be586b44bf08126bde2d7cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yywrap</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>de1e2db9970733fbc3d9fecd09ce9771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SKIP_YYWRAP</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>e1ef5933028cbc587d31328e53d11a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yytext_ptr</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>790a191a93ef4d3b8c0bb43fd7480052</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_EXTRA_TYPE</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>26938d921de835f6183c02e54cf08828</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_READ_BUF_SIZE</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>ab1491ceccb1c95c14320b2903773a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START_STACK_INCR</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>227e75c43b9e0cd41529974230be7e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL_IS_OURS</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>7682c8d9cec0859408d2421fbe4a5570</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>e5b01ac2fa5a6ad5fb97559638abe686</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signed char</type>
      <name>flex_int8_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>7b0840dff4a2ef1702118aa12264b2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>flex_int16_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>2e73b2c75126814585525fb2e9d51159</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>flex_int32_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>838ce943cf44ef7769480714fc6c3ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>flex_uint8_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>0fac5ea484f64e75dbe6eba4aa61750c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>flex_uint16_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>c50cdb9eefbef83a1cec89e3a7f6e1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>flex_uint32_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>36869712de12820c73aae736762e8e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct yy_buffer_state *</type>
      <name>YY_BUFFER_STATE</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>4e5bd2d129903df83f3d13effaf8f3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>yy_size_t</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>a14cc3d400000eef0cd40225fd790cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>b657ddef65d43cc3ab8dfc2cad0ac5b8</anchor>
      <arglist>(FILE *input_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_switch_to_buffer</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>3098c48a74ef8fd852f7dd4b3331cbce</anchor>
      <arglist>(YY_BUFFER_STATE new_buffer)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_create_buffer</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>5bc6f1a5f7812508f425b08283f13ae8</anchor>
      <arglist>(FILE *file, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_delete_buffer</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>e6ac796aa6c45d433a4b89bf45e6e9dc</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_flush_buffer</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>2f59cc88e85e5455c62e4ef7ce095ea8</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yypush_buffer_state</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>4bf8969e5234aef8b46cce9a67a62724</anchor>
      <arglist>(YY_BUFFER_STATE new_buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yypop_buffer_state</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>6201ab6be4687a1ebc3120602d05e35a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_buffer</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>f81595b30c0da73f9034ffb511db6388</anchor>
      <arglist>(char *base, yy_size_t size)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_string</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>ff5cfd2eb6bb46cdfa10a03b294d78a4</anchor>
      <arglist>(yyconst char *yy_str)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_bytes</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>740e4f0abc17205bf25d0da1864fe7b0</anchor>
      <arglist>(yyconst char *bytes, int len)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>yyalloc</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>48e81b6f60f5f21fcaca3cc542e6c9f2</anchor>
      <arglist>(yy_size_t)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>yyrealloc</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>843d874fed23c395a8f12c2d9c666557</anchor>
      <arglist>(void *, yy_size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyfree</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>70f82d43d4797bb2a50f7678ddbfbda5</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>9a7bd1b3d14701eb97c03f3ef34deff1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyleng</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>1b5865350b5ca5c1d69f429c2a652953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>46af646807e0797e72b6e8945e7ea88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyout</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>296847b42b0baa62e2af36cb79f3c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yylineno</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>5e36364965360da7b7cdfc2188e0af84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>Scanner_8h.html</anchorfile>
      <anchor>d9264b77d56b6971f29739e2bda77f51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchDlg.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchDlg_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>ID_SEARCHLISTCTRL</name>
      <anchorfile>SearchDlg_8cpp.html</anchorfile>
      <anchor>98d9c86f2e2826426d6cbe0a00845b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxCommandEvent</type>
      <name>nullEvent</name>
      <anchorfile>SearchDlg_8cpp.html</anchorfile>
      <anchor>2150c9934de0f5742a767b1d4c08f797</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchDlg.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchDlg_8h</filename>
    <class kind="class">CSearchDlg</class>
  </compound>
  <compound kind="file">
    <name>SearchExpr.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchExpr_8h</filename>
    <class kind="class">CSearchExpr</class>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHOPTOK_AND</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>da318e51956fcd181789ff85b3e4145e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHOPTOK_OR</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>a8eb957b9dce78212bf6675147c742fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEARCHOPTOK_NOT</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>55f5e7ed146c784ae46f68d4be9eadfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ESearchOperators</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>2a0fed59eba74d8678ef1b4810e6651e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCHOP_AND</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>2a0fed59eba74d8678ef1b4810e6651e479bf7ac2181ce84d359a38d5d2ede44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCHOP_OR</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>2a0fed59eba74d8678ef1b4810e6651ee23481109a357a7bcfa7f9e888a61fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEARCHOP_NOT</name>
      <anchorfile>SearchExpr_8h.html</anchorfile>
      <anchor>2a0fed59eba74d8678ef1b4810e6651e978f92231d2715445bc760077d445349</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchList_8cpp</filename>
    <class kind="class">CSearchExprTarget</class>
    <class kind="class">CmpFiles</class>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>cd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>8616bb63f53f0e9aefb6d9bde578e8f5</anchor>
      <arglist>(const char *errstr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>da3aa71c86327d64d1454cf82f40b93e</anchor>
      <arglist>(wxString errstr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ParsedSearchExpression</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>b0f4902e2ed11fff415b014ee92367b3</anchor>
      <arglist>(const CSearchExpr *pexpr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxString</type>
      <name>s_strCurKadKeyword</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>5695fa261c258170d064b2d528397c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CSearchExpr</type>
      <name>_SearchExpr</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>83d6951bb5896c13d47cc9440f1ed4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString</type>
      <name>_astrParserErrors</name>
      <anchorfile>SearchList_8cpp.html</anchorfile>
      <anchor>e750d359966530be7cf585880e04614d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchList_8h</filename>
    <namespace>Kademlia</namespace>
    <class kind="class">CGlobalSearchThread</class>
    <class kind="class">CSearchFile</class>
    <class kind="class">CSearchList</class>
    <member kind="enumeration">
      <name>SearchType</name>
      <anchorfile>SearchList_8h.html</anchorfile>
      <anchor>15cc00b2ac3048d3b89959ced9ba0520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalSearch</name>
      <anchorfile>SearchList_8h.html</anchorfile>
      <anchor>15cc00b2ac3048d3b89959ced9ba0520cedf804818cb83cfa17c689b28a45715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GlobalSearch</name>
      <anchorfile>SearchList_8h.html</anchorfile>
      <anchor>15cc00b2ac3048d3b89959ced9ba0520cd2b28f262fcf15c443b4de16c1d736a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KadSearch</name>
      <anchorfile>SearchList_8h.html</anchorfile>
      <anchor>15cc00b2ac3048d3b89959ced9ba0520ea80bedb2d1e8ea989d8f4da2ad721e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchListCtrl_8cpp</filename>
    <member kind="enumeration">
      <name>SearchListColumns</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>62fbe995360513f2f7d8a5450f35b132</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SEARCH_COL_NAME</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>62fbe995360513f2f7d8a5450f35b132a26da32a3e56871fdfa526be10f17d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SEARCH_COL_SIZE</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>62fbe995360513f2f7d8a5450f35b132f2e66dc348c0346bbb291e257324718a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SEARCH_COL_SOURCES</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>62fbe995360513f2f7d8a5450f35b132c82a8cadd197e679d211e0b7f5851258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SEARCH_COL_TYPE</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>62fbe995360513f2f7d8a5450f35b1320cda549070a1ca617b89d642840c8eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SEARCH_COL_FILEID</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>62fbe995360513f2f7d8a5450f35b1322cd5f71198a35c83dd81ef537e133e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxImageList</type>
      <name>s_imgList</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>1a2f4b0e79adcfdb526fa4a711908cbb</anchor>
      <arglist>(16, 16, true, 0)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>s_ratingOffset</name>
      <anchorfile>SearchListCtrl_8cpp.html</anchorfile>
      <anchor>40f2c152380878485d65112b3284f41f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SearchListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SearchListCtrl_8h</filename>
    <class kind="class">CSearchListCtrl</class>
  </compound>
  <compound kind="file">
    <name>Server.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Server_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Server.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Server_8h</filename>
    <class kind="class">CServer</class>
    <member kind="define">
      <type>#define</type>
      <name>SRV_TCPFLG_COMPRESSION</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>302695556abd99111ac94572985996cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_TCPFLG_NEWTAGS</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>a7dced1ea900c242e90e604062bf05f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_TCPFLG_UNICODE</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>9be97496e7cc8c061120e7c839a4b169</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_TCPFLG_RELATEDSEARCH</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>f1aacf97ea30562373883db92c065a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_TCPFLG_TYPETAGINTEGER</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>9edab13c23e6caa8ecae0398b4700a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_UDPFLG_EXT_GETSOURCES</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>18c1779fea64ef19625751101569bbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_UDPFLG_EXT_GETFILES</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>69c81d45946b08bb926bd348db311ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_UDPFLG_NEWTAGS</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>122c87ccdebbd6312b85861b5002dc3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_UDPFLG_UNICODE</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>7e1445cb5e09922b641942d6b2478918</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_UDPFLG_EXT_GETSOURCES2</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>9915e6b1e690e1696b0daf8b4366dbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_PR_LOW</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>233742853e5ee5e67b7bbdcc940d0cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_PR_NORMAL</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>a0720d39552850c168ea4e282200bcf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_PR_HIGH</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>eee789f0209c98de80cd812e3b84fd48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_PR_MAX</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>215af7046d232da9bfcb7803fed4494a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_PR_MID</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>33b4bd0e5cc0dce30dbb2e854ac1f279</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SRV_PR_MIN</name>
      <anchorfile>Server_8h.html</anchorfile>
      <anchor>140cf709243200ccbd94b8a476880dfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerConnect.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerConnect_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>CAPABLE_ZLIB</name>
      <anchorfile>ServerConnect_8cpp.html</anchorfile>
      <anchor>c55d01b832999c56eb28ef5239fe0c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAPABLE_IP_IN_LOGIN_FRAME</name>
      <anchorfile>ServerConnect_8cpp.html</anchorfile>
      <anchor>00ff94123be3e1ffa9fe4166557a2cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAPABLE_AUXPORT</name>
      <anchorfile>ServerConnect_8cpp.html</anchorfile>
      <anchor>4e03375e0ce6e4476a417d49d847c6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAPABLE_NEWTAGS</name>
      <anchorfile>ServerConnect_8cpp.html</anchorfile>
      <anchor>0a5935782d60ab436f8746de607fce3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAPABLE_UNICODE</name>
      <anchorfile>ServerConnect_8cpp.html</anchorfile>
      <anchor>8eba85db72325a2141b9b2f9dcb61703</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerConnect.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerConnect_8h</filename>
    <class kind="class">CServerConnect</class>
    <member kind="define">
      <type>#define</type>
      <name>CS_FATALERROR</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>2fc378d9630632745bf7c223f1a2de72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_DISCONNECTED</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>548b088e304ad4207a42109043592698</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_SERVERDEAD</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>e24582e7213687d27d05ef665871c034</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_ERROR</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>c7d4cd3503d8ec75659294625431ee0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_SERVERFULL</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>6e35163d071bbdc4b847fa318a1aee7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_NOTCONNECTED</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>48e7cb5e63539ac1794d6e3c7376da8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_CONNECTING</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>e7d8bdf45b5d4bf0a2fd9af2ef4ffe23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_CONNECTED</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>b70e129bd0a14acc276695d7c27a7bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_WAITFORLOGIN</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>ed39cecbcaed040bb26149bd8dd6da9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CS_RETRYCONNECTTIME</name>
      <anchorfile>ServerConnect_8h.html</anchorfile>
      <anchor>e6e8ac34f60618cad8b402dd9304467c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerList_8cpp</filename>
    <class kind="struct">ServerPriorityComparator</class>
  </compound>
  <compound kind="file">
    <name>ServerList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerList_8h</filename>
    <class kind="class">CServerList</class>
  </compound>
  <compound kind="file">
    <name>ServerListCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerListCtrl_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>SYSCOLOR</name>
      <anchorfile>ServerListCtrl_8cpp.html</anchorfile>
      <anchor>8441a92e36d0cc5f9809329f907d1a0c</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerListCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerListCtrl_8h</filename>
    <class kind="class">CServerListCtrl</class>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_NAME</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>87c29d57b15d307fe5565c47a30f2a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_ADDR</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>5d9a23e5ee8a71b57fa57ddeea0bae64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_DESC</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>9e03716f6bb8a659a354d5417cc27096</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_PING</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>472e53fed850d243bc7860dc109d56d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_USERS</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>1dc59229d65059ecf5818d9699186428</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_FILES</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>5cda5c8b14612d5472c80c9efcc08f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_PRIO</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>5de66d4404078f44942d15d719ff8bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_FAILS</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>458cb9749d19abd73ab64bae40924e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_STATIC</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>5224b7f46985ebd827281068bd4a0e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_SERVER_VERSION</name>
      <anchorfile>ServerListCtrl_8h.html</anchorfile>
      <anchor>c1b8ae9859f3b4b0a625f3b5379fbabd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerSocket_8cpp</filename>
    <class kind="class">CServerSocketHandler</class>
    <member kind="variable" static="yes">
      <type>static CServerSocketHandler</type>
      <name>g_serverSocketHandler</name>
      <anchorfile>ServerSocket_8cpp.html</anchorfile>
      <anchor>568a5e19a28e8629e39de6a25488a698</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerSocket_8h</filename>
    <class kind="class">CServerSocket</class>
  </compound>
  <compound kind="file">
    <name>ServerUDPSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerUDPSocket_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ServerUDPSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerUDPSocket_8h</filename>
    <class kind="class">CServerUDPSocket</class>
    <class kind="struct">CServerUDPSocket::ServerUDPPacket</class>
  </compound>
  <compound kind="file">
    <name>ServerWnd.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerWnd_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>ServerWnd.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ServerWnd_8h</filename>
    <class kind="class">CServerWnd</class>
  </compound>
  <compound kind="file">
    <name>SHA.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SHA_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>SHA_LITTLE_ENDIAN</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>f9a6bb33f90c1d8c9cc96f58b94da6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA_BIG_ENDIAN</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>927f1d06c8acd0e4fa5184019223d8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLATFORM_BYTE_ORDER</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>f1fc6f24fa4e3d41f5e584cfed2c88dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>rotl32</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>9187080df465eee5b8e06dd238ca9960</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>swap_b32</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>6241284c981a2c70cc838bb9a1a9a4df</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA1_MASK</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>fbc99afb091d773b295dad5d4d36cfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ch</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>19ff9e8264567df11d6d130afa745c93</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>parity</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>39392e9ae4479d297b3adc03d227e93c</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>maj</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>90fc2751b148c381a7a7ca44817c54f8</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>rnd</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>bebfd5f223eb168e1c5ac654fd00de3f</anchor>
      <arglist>(f, k)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static uint32</type>
      <name>mask</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>012bf30836dd73342885a8e91ea1d491</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static uint32</type>
      <name>bits</name>
      <anchorfile>SHA_8cpp.html</anchorfile>
      <anchor>e73a027066efb348a1dfa34910bd7787</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SHA.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SHA_8h</filename>
    <class kind="class">CSHA</class>
    <member kind="define">
      <type>#define</type>
      <name>SHA1_BLOCK_SIZE</name>
      <anchorfile>SHA_8h.html</anchorfile>
      <anchor>4be887a15639aa78e6a129b9c8f4d2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHA1_DIGEST_SIZE</name>
      <anchorfile>SHA_8h.html</anchorfile>
      <anchor>3ba9296b223f1b3c710d6b812fd860e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SHAHashSet.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SHAHashSet_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>MINUNIQUEIPS_TOTRUST</name>
      <anchorfile>SHAHashSet_8cpp.html</anchorfile>
      <anchor>6492bd179740014ac96ff47281352ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINPERCENTAGE_TOTRUST</name>
      <anchorfile>SHAHashSet_8cpp.html</anchorfile>
      <anchor>78db20b523cefe626412589a6f8b3cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY</name>
      <anchorfile>SHAHashSet_8cpp.html</anchorfile>
      <anchor>3675cf895544424c921cf6f8f5e91887</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TESTSIZE</name>
      <anchorfile>SHAHashSet_8cpp.html</anchorfile>
      <anchor>c02f4a0e47c4e71ab1bf7642288586f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SHAHashSet.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SHAHashSet_8h</filename>
    <class kind="class">CAICHHash</class>
    <class kind="class">CAICHHashAlgo</class>
    <class kind="class">CAICHHashTree</class>
    <class kind="class">CAICHUntrustedHash</class>
    <class kind="class">CAICHRequestedData</class>
    <class kind="class">CAICHHashSet</class>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>2b4054af9a8f1ec4104846747ded1675</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KNOWN2_MET_FILENAME</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>4a7494e1e92e3e4c4d3a34d6992c8113</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CAICHRequestedData &gt;</type>
      <name>CAICHRequestedDataList</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>4829b8bda4fbec1f1db186bb14e08bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EAICHStatus</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AICH_ERROR</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f3b377eef8f706fa17801f8a1ef11c5762</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AICH_EMPTY</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f38db45c5bc8f2d7b2f04ddf302382b51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AICH_UNTRUSTED</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f3b27106e15de13d21a652fadd390d819a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AICH_TRUSTED</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f3f732bdbfc2c5736b30301f9ec0ae1482</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AICH_VERIFIED</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f3d6e7b11a8c1fdc78e0ccefc09b3a580a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AICH_HASHSETCOMPLETE</name>
      <anchorfile>SHAHashSet_8h.html</anchorfile>
      <anchor>c597956e9b535b3ee2a574e8a03708f35f9b2fe567f2fc1738001175395ccf7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SharedFileList.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SharedFileList_8cpp</filename>
    <class kind="class">CPublishKeyword</class>
    <class kind="class">CPublishKeywordList</class>
    <member kind="typedef">
      <type>std::deque&lt; CKnownFile * &gt;</type>
      <name>KnownFileArray</name>
      <anchorfile>SharedFileList_8cpp.html</anchorfile>
      <anchor>66c7917a6aa1e56ded2cd7675c58803e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>ReadyPath</name>
      <anchorfile>SharedFileList_8cpp.html</anchorfile>
      <anchor>357cb794556b3195f9d8a8684b7c15ee</anchor>
      <arglist>(const wxString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckDirectory</name>
      <anchorfile>SharedFileList_8cpp.html</anchorfile>
      <anchor>7446517085daeaff6e8171ec0a7d426b</anchor>
      <arglist>(const wxString &amp;a, const wxString &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetRealPrio</name>
      <anchorfile>SharedFileList_8cpp.html</anchorfile>
      <anchor>85af1c6ca76505717297a39686d58f02</anchor>
      <arglist>(uint8 in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SortFunc</name>
      <anchorfile>SharedFileList_8cpp.html</anchorfile>
      <anchor>d8ae586697342c0e6e9c4c6115e2b377</anchor>
      <arglist>(const CKnownFile *fileA, const CKnownFile *fileB)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SharedFileList.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SharedFileList_8h</filename>
    <class kind="class">CSharedFileList</class>
    <member kind="typedef">
      <type>std::map&lt; CMD4Hash, CKnownFile * &gt;</type>
      <name>CKnownFileMap</name>
      <anchorfile>SharedFileList_8h.html</anchorfile>
      <anchor>a8381d4ed8de4046b65d21b27df0c148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SharedFilesCtrl.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SharedFilesCtrl_8cpp</filename>
    <member kind="enumeration">
      <name>SharedFilesListColumns</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_NAME</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540ce97dabde2e374ad2730507bb1b5028d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_SIZE</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540cb7a8e8403c168de435bad10f8a370598</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_TYPE</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c4246b4949230301d14af70b9cf28a942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_PRIO</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540cf44adea3d72c558a02bf986414e8f744</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_ID</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540cb15d15a8cda04dca11644666d0602155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_REQ</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c05c8d40a0d1c182054b8f678714a61a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_AREQ</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c48d400ea0af126bc8b22b925125599d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_TRA</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c117bc27dc194b3e0b7ccac818721f147</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_RTIO</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c11031182d9cbeeb30864642fb1e4e335</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_PART</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c5b24504d4f32a9718fb113cc9d8f4fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_CMPL</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c9a701a1b233acd04edbac306e956f0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ID_SHARED_COL_PATH</name>
      <anchorfile>SharedFilesCtrl_8cpp.html</anchorfile>
      <anchor>3d35ddf9411f9aa4be13db632fb9540c822faf8253a98ddf08436c5201c4c39e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SharedFilesCtrl.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SharedFilesCtrl_8h</filename>
    <class kind="class">CSharedFilesCtrl</class>
  </compound>
  <compound kind="file">
    <name>SharedFilesWnd.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SharedFilesWnd_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>SharedFilesWnd.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>SharedFilesWnd_8h</filename>
    <class kind="class">CSharedFilesWnd</class>
  </compound>
  <compound kind="file">
    <name>StateMachine.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>StateMachine_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StateMachine.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>StateMachine_8h</filename>
    <class kind="class">CStateMachine</class>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>t_sm_state</name>
      <anchorfile>StateMachine_8h.html</anchorfile>
      <anchor>608689a4c255ec189431255400e3b3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>t_sm_event</name>
      <anchorfile>StateMachine_8h.html</anchorfile>
      <anchor>1dfe995baf36657e12875af8d1de9c60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Statistics.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Statistics_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>round</name>
      <anchorfile>Statistics_8cpp.html</anchorfile>
      <anchor>6ea10f4260b54a61665ead26cb995ba3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetSoftID</name>
      <anchorfile>Statistics_8cpp.html</anchorfile>
      <anchor>b9a9c5124b5128600e0b69887be0d838</anchor>
      <arglist>(uint8 SoftType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SupportsOSInfo</name>
      <anchorfile>Statistics_8cpp.html</anchorfile>
      <anchor>ace290883bd0ca70e45765fa73d65785</anchor>
      <arglist>(unsigned clientSoft)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetIdFromString</name>
      <anchorfile>Statistics_8cpp.html</anchorfile>
      <anchor>a4f581d1fca498c75303e89de8ae931a</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Statistics.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Statistics_8h</filename>
    <class kind="struct">UpdateInfo</class>
    <class kind="struct">HistoryRecord</class>
    <class kind="class">CPreciseRateCounter</class>
    <class kind="class">CStatTreeItemRateCounter</class>
    <class kind="class">CStatTreeItemPeakConnections</class>
    <class kind="class">CStatistics</class>
    <member kind="typedef">
      <type>struct UpdateInfo</type>
      <name>GraphUpdateInfo</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>a43ddc419cb7db612169bca02d23e7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct HistoryRecord</type>
      <name>HR</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>29f495891c8f6fbcfa61cdad394fc534</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CStatistics</type>
      <name>theStats</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>5c46dd1e4db1ee3cebd808c7b52e1312</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>StatsGraphType</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>63663fbb7d4c84b4ba1a77ca52f230d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH_INVALID</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>63663fbb7d4c84b4ba1a77ca52f230d6d958c4023a91fa01870f729acfcc030c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH_DOWN</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>63663fbb7d4c84b4ba1a77ca52f230d6b4ab8359b823c7d83be45d8dafa8cf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH_UP</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>63663fbb7d4c84b4ba1a77ca52f230d69dccd00aaca9ad5f4642c477f3746e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH_CONN</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>63663fbb7d4c84b4ba1a77ca52f230d62218ce063ed5672bf616b9dde6ba631b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH_KAD</name>
      <anchorfile>Statistics_8h.html</anchorfile>
      <anchor>63663fbb7d4c84b4ba1a77ca52f230d69f6d75a1359ae8364835cf65c2ecd212</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StatisticsDlg.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>StatisticsDlg_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>StatisticsDlg.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>StatisticsDlg_8h</filename>
    <class kind="class">CStatisticsDlg</class>
    <member kind="typedef">
      <type>struct UpdateInfo</type>
      <name>GraphUpdateInfo</name>
      <anchorfile>StatisticsDlg_8h.html</anchorfile>
      <anchor>7ee525ab8703293e23872f4e5b708c33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StatTree.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>StatTree_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>a_brackets_b</name>
      <anchorfile>StatTree_8cpp.html</anchorfile>
      <anchor>882c9675f9118a4fec490d8363a602a7</anchor>
      <arglist>(a, b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StatTree.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>StatTree_8h</filename>
    <class kind="class">CStatTreeItemBase</class>
    <class kind="class">CStatTreeItemSimple</class>
    <class kind="class">CStatTreeItemCounter</class>
    <class kind="class">CStatTreeItemNativeCounter</class>
    <class kind="class">CStatTreeItemHiddenCounter</class>
    <class kind="class">CStatTreeItemUlDlCounter</class>
    <class kind="class">CStatTreeItemCounterMax</class>
    <class kind="class">CStatTreeItemPackets</class>
    <class kind="class">CStatTreeItemPacketTotals</class>
    <class kind="class">CStatTreeItemTimer</class>
    <class kind="class">CStatTreeItemAverage</class>
    <class kind="class">CStatTreeItemAverageSpeed</class>
    <class kind="class">CStatTreeItemRatio</class>
    <class kind="class">CStatTreeItemReconnects</class>
    <class kind="class">CStatTreeItemMaxConnLimitReached</class>
    <class kind="class">CStatTreeItemTotalClients</class>
    <member kind="define">
      <type>#define</type>
      <name>VIRTUAL</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>6dd04ec3fff7c731cc71d6796699d902</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CStatTreeItemBase * &gt;::iterator</type>
      <name>StatTreeItemIterator</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>e112039c51485b728ccaa76dd56ce273</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EStatTreeFlags</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stNone</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c203d0db7f0824b99e7f7b443fc20ea80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stSortChildren</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c2b76c36dc759dc5df1b6900a60cd2360f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stShowPercent</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c2c118d1459257ad8a8719c85fe278e4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stHideIfZero</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c2b8a240c44ec2274acf0bc2be50667e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stSortByValue</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c24af9a51410c2cb224c79eeb6b69d4b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stCapChildren</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>4c45cb65446952630a4b747aa53684c228edd6a48c575f1feed19a99d05670d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EValueType</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>822b8f07cccd7f16e908ad6057284708</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtUnknown</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>822b8f07cccd7f16e908ad6057284708cd357630ae0ef37f194c322b8e7aaa89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtString</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>822b8f07cccd7f16e908ad605728470888d9e538d77b2d23571ff3079b14e626</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtInteger</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>822b8f07cccd7f16e908ad60572847082faad51ef55f760396d7ba0f117c35b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>vtFloat</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>822b8f07cccd7f16e908ad60572847082dde9d0564f21ee871eadd6a45fc59db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EDisplayMode</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>52741520f9fb5da67dcd921164954c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dmDefault</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>52741520f9fb5da67dcd921164954c1b6d7fecb765fe685112884d9390323b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dmTime</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>52741520f9fb5da67dcd921164954c1b9149413d1595a636bb47af32707ec485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dmBytes</name>
      <anchorfile>StatTree_8h.html</anchorfile>
      <anchor>52741520f9fb5da67dcd921164954c1bed64a54f2f2b52b26dd718b41c92193b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tag.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Tag_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>_DEBUG_TAGS</name>
      <anchorfile>Tag_8cpp.html</anchorfile>
      <anchor>3cae204ee5bf69123f496d637bf8aa5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_TAG_TYPE</name>
      <anchorfile>Tag_8cpp.html</anchorfile>
      <anchor>49be19d224b4267d427cfbd06cd73a6d</anchor>
      <arglist>(check, expected)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tag.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Tag_8h</filename>
    <class kind="class">CTag</class>
    <class kind="struct">CTag::U64U64</class>
    <class kind="struct">TagList</class>
    <member kind="function">
      <type>int</type>
      <name>CmpED2KTagName</name>
      <anchorfile>Tag_8h.html</anchorfile>
      <anchor>a363fb98ab11a9378492e7668bbc85f5</anchor>
      <arglist>(const char *pszTagName1, const char *pszTagName2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertED2KTag</name>
      <anchorfile>Tag_8h.html</anchorfile>
      <anchor>c7656aebf21c1ef23cb67f0f2edac344</anchor>
      <arglist>(CTag *&amp;pTag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteOptED2KUTF8Tag</name>
      <anchorfile>Tag_8h.html</anchorfile>
      <anchor>d9b0bd5abf8838725cd9b9c80cfb0cdb</anchor>
      <arglist>(CFileDataIO *data, const wchar_t *pwsz, uint8 uTagName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextClient.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>TextClient_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>APP_INIT_SIZE_X</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>124814814b3cd180efe054838c80f03f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>APP_INIT_SIZE_Y</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5869f7442a6b737b18f53dca804e6ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>theApp</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>f85ad3d4c99cc37fc8c203ca7ec6956a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_STATUS</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f51ed004ab0091bfad7a0aad4e65eb865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_RESUME</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f27838f5f80d38bd298b383222afeb715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_PAUSE</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f210d14ff70e31560dbd1fdca62e12102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_CANCEL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f004b362f1443a72e3ff7f382e26fc1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_CONNECT</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fb3533d24ff0ffca72acc1c3f8becb458</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_CONNECT_ED2K</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f81c9760204220484979e5836f373a530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_CONNECT_KAD</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f3b9d9ea4791fabbb124f562411fb0201</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_DISCONNECT</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f107b6a6a93fcf955485c7997d72c46e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_DISCONNECT_ED2K</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fbcd904e6a0f7c16cf682d69b084f67de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_DISCONNECT_KAD</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fc9d82164271e88831c5692265b10ccff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_RELOAD_SHARED</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f2e52f133d20966530cab942ffddd8595</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_RELOAD_IPFILTER</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f717f8693f9bd22ee3db0da970a4dad83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SET_IPFILTER_ON</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fbba1dd8ac999adf9fe36e980339b9f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SET_IPFILTER_OFF</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f8bf416af39b1667fe13c2131281b3c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SET_IPFILTER_LEVEL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fe42f9d246900a5e3cecd7a89dd8c9b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_GET_IPFILTER</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f58c9d48795d8105455978db77c1a181b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_GET_IPFILTER_STATE</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f72982ffb59fc44886c824fa3ff7c2774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_GET_IPFILTER_LEVEL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fe4d3701f7b4b1cae67746579962c4c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SHOW_UL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181ffc4a11819532eb257253d7f85919c0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SHOW_DL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f49432a2bc0d5abfeb2a7ed24a59ac914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SHOW_LOG</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f73a9c58bf5a5cf14826b59b4f7c3210a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SHOW_SERVERS</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f56fde6e7b534a336107767668f6db974</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SHOW_SHARED</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f0269c2c146bcf4d99ad4d93583f55641</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_RESET_LOG</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fc24caf1a5371350b28d2dfe9a0f7b7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SHUTDOWN</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f1e233d262c90c707dd2e9036c4309c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_ADDLINK</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f56958edff33298d0c144343ac3436102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SET_BWLIMIT_UP</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f912ce9fe2d299c068355bea61a578fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SET_BWLIMIT_DOWN</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fd3d14d9695e46274220c7835c90f2b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_GET_BWLIMITS</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f1575c9cabdd684829aea11a84dd1e6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_STATTREE</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fef458acc586f32973209bffd7d32512f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SEARCH</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181fa9334f9ef960556d6856efafbac8bd37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SEARCH_GLOBAL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f3e39ed2d498c37c4fc8b3ca1d5f67e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SEARCH_LOCAL</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181faac8b5f07ee08d11b0d5008e27170b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SEARCH_KAD</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f3c19d4564e88b0404707dc059db49f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SEARCH_RESULTS</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f0ddc5c74fc8c76906322766666fe7cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SEARCH_PROGRESS</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f9fde52367858498833e16525bb57ab72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_DOWNLOAD</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f21517c9db4e02974e7d836e714260587</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CMD_ID_SET_IPFILTER</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>5d76b81b0ad4c19007a781d4edb8181f10916de3b08e48177627c5c1283584a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>StatTree2Text</name>
      <anchorfile>TextClient_8cpp.html</anchorfile>
      <anchor>d830cbc80c0fb49d3cdf9e8de93ef942</anchor>
      <arglist>(CEC_StatTree_Node_Tag *tree, int depth)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TextClient.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>TextClient_8h</filename>
    <class kind="class">SearchFile</class>
    <class kind="class">CimulecmdApp</class>
    <member kind="typedef">
      <type>std::map&lt; unsigned long int, SearchFile * &gt;</type>
      <name>CResultMap</name>
      <anchorfile>TextClient_8h.html</anchorfile>
      <anchor>a8a4f2c4fede50ae43433b339151628b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>ECv2_Response2String</name>
      <anchorfile>TextClient_8h.html</anchorfile>
      <anchor>eac44657ddd9b26cdfa379175b2e07f1</anchor>
      <arglist>(CECPacket *response)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ThrottledSocket.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>ThrottledSocket_8h</filename>
    <class kind="struct">SocketSentBytes</class>
    <class kind="class">ThrottledControlSocket</class>
    <class kind="class">ThrottledFileSocket</class>
  </compound>
  <compound kind="file">
    <name>Timer.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Timer_8cpp</filename>
    <class kind="class">CTimerThread</class>
  </compound>
  <compound kind="file">
    <name>Timer.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Timer_8h</filename>
    <class kind="class">CTimer</class>
  </compound>
  <compound kind="file">
    <name>TransferWnd.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>TransferWnd_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>TransferWnd.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>TransferWnd_8h</filename>
    <class kind="class">CTransferWnd</class>
  </compound>
  <compound kind="file">
    <name>Types.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>Types_8h</filename>
    <class kind="struct">sRECT</class>
    <member kind="define">
      <type>#define</type>
      <name>wxSUBRELEASE_NUMBER</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>9e231e40864a0f1dcc2ccc5180c4a5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>wxCHECK_VERSION_FULL</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>666af9e0a9939d0aff83078ebf682ab3</anchor>
      <arglist>(major, minor, release, subrel)</arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>int8</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>9d29437bbd2066ff470a22533d110a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>uint8</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>33a5e996e7a90acefb8b1c0bea47e365</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>int16</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>e9794ced33376f900e9e70cfb39a419c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>uint16</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>c2a9e79eb120216f855626495b7bd18a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>int32</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>bbff394a3e4c2f6a39824ed1e32acaf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>uint32</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>cbd4acd0d29e2d6c43104827f77d9cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>int64</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>5f6850033cab5e36ba4aa2879c265b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>uint64</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>bc0f5bc07737e498f287334775dff2b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int8_t</type>
      <name>sint8</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>3e55e6174885a377573f0f04b8be2e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int16_t</type>
      <name>sint16</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a961e2cfd0d472f8870c6032a6773e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>sint32</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>5d039451549422729e7e13cc53be7528</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>sint64</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>4a4dc5c711b664e54ebabbb396e2a9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>byte</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>b8ef12fab634c171394422d0ee8baf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>bool</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>1062901a7428fdd9c7f180f5e01ea056</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct sRECT</type>
      <name>RECT</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>0c3baa97746971df4fe9856f9ac0f6cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WX_DEFINE_ARRAY_SHORT</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>d2b0b40528a405b1292f86276d187545</anchor>
      <arglist>(uint16, ArrayOfUInts16)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>EmptyString</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>30ba44072537ff6489419d784e26ea34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>updownclient.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>updownclient_8h</filename>
    <class kind="class">CUpDownClient</class>
    <class kind="struct">CUpDownClient::TransferredData</class>
    <class kind="struct">CUpDownClient::A4AFStamp</class>
    <member kind="define">
      <type>#define</type>
      <name>US_UPLOADING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>81b0bee56863756eac714ea48009feb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>US_ONUPLOADQUEUE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>8b9b00aadbd9fa8e5bf02f04afab83ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>US_CONNECTING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>71fb9d9cf56c60b322f539d97ed3a60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>US_PENDING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>fafe86bd7bfd372363be3b4d23186f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>US_BANNED</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>17e510a6b21f2b5fe86e1d5cefc1783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>US_ERROR</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>18da93130837ff6291faa412f2c1a7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>US_NONE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>8af94ba4e48006960c56f4707b5ec0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKE_CLIENT_VERSION</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65bb20ec8fc9d49dffc768bc87f671e2</anchor>
      <arglist>(mjr, min, upd)</arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; bool &gt;</type>
      <name>BitVector</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>0d5545ad0067ab1953138e89d2976381</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EDownloadState</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f456909</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_DOWNLOADING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f456909400915e01f09a93dce832aaeca024d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_ONQUEUE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f45690953ae893cfa39e3b8383ad36af67fa800</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_CONNECTED</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f4569092ee14ed29717be1c770e95f5c8a54484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_CONNECTING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f4569094385d9a4979a83f65f90901c263e260e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_REQHASHSET</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f456909ccabdbc74bfcdf65a818d8ea857c00a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_NONEEDEDPARTS</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f45690995375b4a789c705dcae402ff76d3fffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_TOOMANYCONNS</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f456909813494149eadcd6aa07cc4032c83d9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_TOOMANYCONNSKAD</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f456909242cef51e921de6c272226ff908847cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_BANNED</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f45690918e8e1e3a47ef03ea46fbb4f78e07944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_ERROR</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f456909e65d5c2844015910512fbbb1154b2e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_NONE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f4569097c568dd37665684d045c4d40b0553a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DS_REMOTEQUEUEFULL</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>65c7414b5edf8c1835445f620f45690989baf353e5026dc922e3a0bbe9e01170</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MS_NONE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>ac34dfe6c6b73b43a4656c9dce041034689d3553216f7896dc80473adc463c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MS_CHATTING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>ac34dfe6c6b73b43a4656c9dce041034e643ba18f5c429acf649ef22498918ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MS_CONNECTING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>ac34dfe6c6b73b43a4656c9dce04103472c961fe74860b2a68d3cfa01f7a5af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MS_UNABLETOCONNECT</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>ac34dfe6c6b73b43a4656c9dce041034ef1a99bd4f9ef899f294277d45f0a75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ESourceFrom</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b032</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_NONE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b032437041d0d75837cefd8367c59b2e872b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_LOCAL_SERVER</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b0322e6b4e8b81544f55fabc6c57af210774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_REMOTE_SERVER</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b0327ea5ee50e83c825caff279218548c17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_KADEMLIA</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b032183edfc4d058aae1b55f8d89a2b97270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_SOURCE_EXCHANGE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b0328d27698bcfda7b5f81af91df2b17412e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_PASSIVE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b032b8417b3d1059f2817c6bcc84e8bd3315</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_LINK</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b032a9d9209bf1562ce0afe214518dc44276</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SF_SOURCE_SEEDS</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>648a02f58b5ee92195f1b6fddc94b03242c7eb020f9db380bd4cef286e39af84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ESecureIdentState</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>5e2030471b3d9363f5ca69dff65e877a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_UNAVAILABLE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>5e2030471b3d9363f5ca69dff65e877a6f6c0c3a5c8a557790eaf75016fcd216</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_ALLREQUESTSSEND</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>5e2030471b3d9363f5ca69dff65e877a6230ed585e639531a0f1e99e26edf472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SIGNATURENEEDED</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>5e2030471b3d9363f5ca69dff65e877a54e24483ff480d916ae265dd42edfe75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_KEYANDSIGNEEDED</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>5e2030471b3d9363f5ca69dff65e877a2e967359be66cc5ffc74c6feab46e505</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EInfoPacketState</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>f6f69d9aedacd938674fd428dea6a158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IP_NONE</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>f6f69d9aedacd938674fd428dea6a1580f86e6c8478f4206031e46232468f660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IP_EDONKEYPROTPACK</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>f6f69d9aedacd938674fd428dea6a1582918ac36a26c93b057c3b35773bdfb83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IP_EMULEPROTPACK</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>f6f69d9aedacd938674fd428dea6a158741253e8d4fdc4a0c93ece78143348ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IP_BOTH</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>f6f69d9aedacd938674fd428dea6a158abaf30b41537c1ff5f1d1fa5a52eb9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ClientState</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>8d4a6786d6193f0e6245c44e4a7bb4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CS_NEW</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>8d4a6786d6193f0e6245c44e4a7bb4a0188b0986986c22b6e705f14849bed64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CS_LISTED</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>8d4a6786d6193f0e6245c44e4a7bb4a0b5dcdd9e6b020b8b6c3b0daa1c66bc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CS_DYING</name>
      <anchorfile>updownclient_8h.html</anchorfile>
      <anchor>8d4a6786d6193f0e6245c44e4a7bb4a0150ea72ae0a807531aadd4c0fc11a5b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UploadBandwidthThrottler.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>UploadBandwidthThrottler_8cpp</filename>
    <member kind="variable">
      <type>const uint32</type>
      <name>_UI32_MAX</name>
      <anchorfile>UploadBandwidthThrottler_8cpp.html</anchorfile>
      <anchor>5c331e374709f96b99ba14aad551f899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const sint32</type>
      <name>_I32_MAX</name>
      <anchorfile>UploadBandwidthThrottler_8cpp.html</anchorfile>
      <anchor>4ad0a8163ad5f2583072af03b534822a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint64</type>
      <name>_UI64_MAX</name>
      <anchorfile>UploadBandwidthThrottler_8cpp.html</anchorfile>
      <anchor>4c3d2f65d575e3e943596e802145e41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const sint64</type>
      <name>_I64_MAX</name>
      <anchorfile>UploadBandwidthThrottler_8cpp.html</anchorfile>
      <anchor>a7ad4f0815a121da30ed58adf832715a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UploadBandwidthThrottler.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>UploadBandwidthThrottler_8h</filename>
    <class kind="class">UploadBandwidthThrottler</class>
  </compound>
  <compound kind="file">
    <name>UploadClient.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>UploadClient_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>UploadQueue.cpp</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>UploadQueue_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>UploadQueue.h</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>UploadQueue_8h</filename>
    <class kind="class">CUploadQueue</class>
  </compound>
  <compound kind="file">
    <name>alc.xpm</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/</path>
    <filename>alc_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>alc</name>
      <anchorfile>alc_8xpm.html</anchorfile>
      <anchor>e7dad026aea33e43074e7b8d5280460b</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alc.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alc_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>alc.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alc_8h</filename>
    <class kind="class">alc</class>
  </compound>
  <compound kind="file">
    <name>alcc.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alcc_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>alcc.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alcc_8h</filename>
    <class kind="class">alcc</class>
    <member kind="define">
      <type>#define</type>
      <name>unicode2char</name>
      <anchorfile>alcc_8h.html</anchorfile>
      <anchor>d87143782bd5a6b08fcfcc199f97ef1d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>char2unicode</name>
      <anchorfile>alcc_8h.html</anchorfile>
      <anchor>e32ac297e069f642bf36da43930cd92e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxCSConv</type>
      <name>imuleConv</name>
      <anchorfile>alcc_8h.html</anchorfile>
      <anchor>ab7bf011b2475288c7bca9b66fe4ea31</anchor>
      <arglist>(wxT(&quot;iso8859-1&quot;))</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxCmdLineEntryDesc</type>
      <name>cmdLineDesc</name>
      <anchorfile>alcc_8h.html</anchorfile>
      <anchor>d771f03e891169a0dff49d51582a53e0</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>alcframe.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alcframe_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>alcframe.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alcframe_8h</filename>
    <class kind="class">AlcFrame</class>
  </compound>
  <compound kind="file">
    <name>alcpix.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alcpix_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>alcpix.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>alcpix_8h</filename>
    <class kind="class">AlcPix</class>
  </compound>
  <compound kind="file">
    <name>bithelp.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>bithelp_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>rol</name>
      <anchorfile>bithelp_8h.html</anchorfile>
      <anchor>28f59d6cc7ca29725b37efd74f235ccb</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ror</name>
      <anchorfile>bithelp_8h.html</anchorfile>
      <anchor>07e1a680bf05987b4707f6560c0c64e0</anchor>
      <arglist>(x, n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ed2khash.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>ed2khash_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>unicode2char</name>
      <anchorfile>ed2khash_8cpp.html</anchorfile>
      <anchor>d87143782bd5a6b08fcfcc199f97ef1d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>char2unicode</name>
      <anchorfile>ed2khash_8cpp.html</anchorfile>
      <anchor>e32ac297e069f642bf36da43930cd92e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxCSConv</type>
      <name>imuleConv</name>
      <anchorfile>ed2khash_8cpp.html</anchorfile>
      <anchor>ab7bf011b2475288c7bca9b66fe4ea31</anchor>
      <arglist>(wxT(&quot;iso8859-1&quot;))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ed2khash.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>ed2khash_8h</filename>
    <class kind="class">Ed2kHash</class>
  </compound>
  <compound kind="file">
    <name>md4.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>md4_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>MD4_F</name>
      <anchorfile>md4_8cpp.html</anchorfile>
      <anchor>96bed362152db9442fc92e5873fb0bf5</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MD4_G</name>
      <anchorfile>md4_8cpp.html</anchorfile>
      <anchor>7a583d04871d7da9cfe7aea173f9a8b6</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MD4__H</name>
      <anchorfile>md4_8cpp.html</anchorfile>
      <anchor>0b2e19eaed08a92f48a9269ace631a12</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MD4_FF</name>
      <anchorfile>md4_8cpp.html</anchorfile>
      <anchor>ada822feca435a09d739672a11ae3163</anchor>
      <arglist>(a, b, c, d, x, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MD4_GG</name>
      <anchorfile>md4_8cpp.html</anchorfile>
      <anchor>a788cb2753af1df4482a279740eb92ef</anchor>
      <arglist>(a, b, c, d, x, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MD4_HH</name>
      <anchorfile>md4_8cpp.html</anchorfile>
      <anchor>6e99ae72d36d71e87d60b271bb4a9e5b</anchor>
      <arglist>(a, b, c, d, x, s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>md4.h</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>md4_8h</filename>
    <class kind="class">MD4</class>
    <class kind="struct">MD4::MD4Context</class>
    <member kind="typedef">
      <type>bool(*</type>
      <name>MD4Hook</name>
      <anchorfile>md4_8h.html</anchorfile>
      <anchor>36d9f094452d185b95e578c5f9fa6288</anchor>
      <arglist>)(int percent)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>MD4_HASHLEN_BYTE</name>
      <anchorfile>md4_8h.html</anchorfile>
      <anchor>8726ff2fa22078bc24bdf28b8bb00e89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>BUFSIZE</name>
      <anchorfile>md4_8h.html</anchorfile>
      <anchor>52546e87126cdd0cb15f58bdaf69505a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>PARTSIZE</name>
      <anchorfile>md4_8h.html</anchorfile>
      <anchor>a1632437258f6251515b80186b29bd2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>index.php</name>
    <path>/media/brun/progs/iMule/src/utils/amps/</path>
    <filename>utils_2amps_2index_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$completelangs</name>
      <anchorfile>utils_2amps_2index_8php.html</anchorfile>
      <anchor>d40ee0456870328b69e82a309f73076c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$values</name>
      <anchorfile>utils_2amps_2index_8php.html</anchorfile>
      <anchor>ffc45c6ace2eeb3f300b054dbf9592b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$temp</name>
      <anchorfile>utils_2amps_2index_8php.html</anchorfile>
      <anchor>0d57fb0317e19ec798aa625381ebf342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$ret</name>
      <anchorfile>utils_2amps_2index_8php.html</anchorfile>
      <anchor>ffd9e3eb0aad0a7ca42912cd925f148c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>index.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>webserver_2chicane_2index_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>webserver_2chicane_2index_8php.html</anchorfile>
      <anchor>33ecd95c512561b90fef7baaad1f3a59</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cat2idx</name>
      <anchorfile>webserver_2chicane_2index_8php.html</anchorfile>
      <anchor>07057dc27cc4ab2edb78b3c5a1565c7d</anchor>
      <arglist>($cat)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>webserver_2chicane_2index_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>webserver_2chicane_2index_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>webserver_2chicane_2index_8php.html</anchorfile>
      <anchor>39b77b45f40150a2b70be14cbc74874b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad1__</name>
      <anchorfile>webserver_2chicane_2index_8php.html</anchorfile>
      <anchor>2507c0ef5648c9279c1ec231ff9d82b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>index.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>webserver_2default_2index_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>webserver_2default_2index_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cat2idx</name>
      <anchorfile>webserver_2default_2index_8php.html</anchorfile>
      <anchor>07057dc27cc4ab2edb78b3c5a1565c7d</anchor>
      <arglist>($cat)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>webserver_2default_2index_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>webserver_2default_2index_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdalign=leftclass=tabs &gt;&lt; form &gt;&lt; inputtype=&quot;button&quot;value=&quot;ed2k:&lt;inputtype=&quot;button&quot;value=&quot;Logout&quot;onClick=&apos;self.location.href=&quot;login.php&quot;&apos;&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>webserver_2default_2index_8php.html</anchorfile>
      <anchor>0d8c3e2567e153c0524c4b62acc5e10f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ca.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>ca_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>ca_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>de.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>de_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>de_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>en.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>en_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>76fc960c90e9db351f33bad9af05927e</anchor>
      <arglist>[&quot;kadonmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>6c584035371a70500593b97f6c22375d</anchor>
      <arglist>[&quot;kadfwmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>01308d476fb03e955b35119a0fdfbf63</anchor>
      <arglist>[&quot;kadoffmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>2744fbb72a289d0b7614d05f3da69e40</anchor>
      <arglist>[&quot;kadstatus&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>5b2ca016360dd96d90987a27c72ba78a</anchor>
      <arglist>[&quot;kadfw&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>bab87ff3f8cffae4fc83105e539edf90</anchor>
      <arglist>[&quot;kadon&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>1f2ac732ce2a510cf29e053a84b29e84</anchor>
      <arglist>[&quot;kadoff&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>1ca69ca23d39b27c8e25e11199ee4ef2</anchor>
      <arglist>[&quot;ed2kstatus&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>en_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>es.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>es_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>es_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>eu.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>eu_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>eu_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fi.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>fi_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fi_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fr.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>fr_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>fr_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hu.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>hu_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>hu_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>it.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>it_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>it_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nl.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>nl_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>nl_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pl.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>pl_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pl_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pt.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>pt_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>76fc960c90e9db351f33bad9af05927e</anchor>
      <arglist>[&quot;kadonmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>6c584035371a70500593b97f6c22375d</anchor>
      <arglist>[&quot;kadfwmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>01308d476fb03e955b35119a0fdfbf63</anchor>
      <arglist>[&quot;kadoffmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>2744fbb72a289d0b7614d05f3da69e40</anchor>
      <arglist>[&quot;kadstatus&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>5b2ca016360dd96d90987a27c72ba78a</anchor>
      <arglist>[&quot;kadfw&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>bab87ff3f8cffae4fc83105e539edf90</anchor>
      <arglist>[&quot;kadon&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>1f2ac732ce2a510cf29e053a84b29e84</anchor>
      <arglist>[&quot;kadoff&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>1ca69ca23d39b27c8e25e11199ee4ef2</anchor>
      <arglist>[&quot;ed2kstatus&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pt_BR.inc</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>pt__BR_8inc</filename>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>cb4bee6768106cef84624757ca8a64f8</anchor>
      <arglist>[&quot;dayabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>9549d9a1563fad317f94ac8eb66f04c8</anchor>
      <arglist>[&quot;hourabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>b8fd52b8b806c4562a1f6c08a7155cb1</anchor>
      <arglist>[&quot;minabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>28bc824a2252c570efed6b2a16583fdf</anchor>
      <arglist>[&quot;secabbr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>151a1f2bb9b6c9a5f57bc701d91e969e</anchor>
      <arglist>[&quot;runtimemsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>0ca29bd135fc375143a8d383b88cc3d3</anchor>
      <arglist>[&quot;norunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>6c3d6231834a35e215861d949bfd53bc</anchor>
      <arglist>[&quot;connmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>7e5750a72efff70f9934147c89225a05</anchor>
      <arglist>[&quot;highidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>c598203434c5fc5cf663fb9c50f65410</anchor>
      <arglist>[&quot;lowidmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>c4c760998e3ea1bb9959f948dbacc3e2</anchor>
      <arglist>[&quot;offrunmsg&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>7df40b3d4b501bc8f376e8c756c311b7</anchor>
      <arglist>[&quot;imulerun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>cd2af250b1f18d02493c652b3f4e9741</anchor>
      <arglist>[&quot;imulenorun&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>c4cd9d71e50c1f07ab6ec12797755019</anchor>
      <arglist>[&quot;sharedfiles&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>9868d6acf62207f2f5480038ea576356</anchor>
      <arglist>[&quot;na&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>e76624419dede0e89a177a279924e7fe</anchor>
      <arglist>[&quot;rx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>1147670dadc9ad987e00839722e5196d</anchor>
      <arglist>[&quot;tx&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>d957620627ae2e3ea12a59402c65b271</anchor>
      <arglist>[&quot;queuedclients&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>952fbc15282f233d5720ff2b306a5db6</anchor>
      <arglist>[&quot;transrate&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>6ed18ed0e8b5582d94ecc80c754a281e</anchor>
      <arglist>[&quot;gigabytes&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>d3ae46e4937b01a9fa9d670ec3887c9b</anchor>
      <arglist>[&quot;client&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>bb658bcfcf60feef0c8d982c0400f714</anchor>
      <arglist>[&quot;status&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>fba42f50cc04fb3c9d9c3df91e6a59a7</anchor>
      <arglist>[&quot;nick&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>474ec3e6eab94fc318aebab01059fb7b</anchor>
      <arglist>[&quot;localtime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>aa44a1819ca4e0a15adbc9f62b427d77</anchor>
      <arglist>[&quot;rxspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>a1569887fbe312de763fa8d8680df150</anchor>
      <arglist>[&quot;txspeed&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>9d97a29304273878119c643fd99ddd0a</anchor>
      <arglist>[&quot;rxtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>9953f3fa7afef15d32538bed69f2d0e6</anchor>
      <arglist>[&quot;txtotal&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>be6a22055417394ccdd6d1cedef94e6c</anchor>
      <arglist>[&quot;osversion&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>9c84d6e440b86c5e402e44fb639b3991</anchor>
      <arglist>[&quot;hostuptime&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>7b34e22241d7ac097519403f1b36ca6c</anchor>
      <arglist>[&quot;servername&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>89b800e66d513b40adaf0dbeab28ce5e</anchor>
      <arglist>[&quot;serveraddr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>cb2c5019bdd2b9334863370e8632f107</anchor>
      <arglist>[&quot;ed2klink&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>f41861d037f63a5db259bb185bedee98</anchor>
      <arglist>[&quot;general&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>49a6c240a5fa5e6a2ce8d4290781aa2d</anchor>
      <arglist>[&quot;server&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>4164ce4ac1ace42a1353c74113f4fc0a</anchor>
      <arglist>[&quot;signature&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>443322c2ae01169cf1638276b2d795fb</anchor>
      <arglist>[&quot;connecting&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>57acf71aa4b79bcec697d4c723762724</anchor>
      <arglist>[&quot;online&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>375daafa8f95f7c216f904387b647555</anchor>
      <arglist>[&quot;offline&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>46069312b4b70f7a7ee20bb21d05ca49</anchor>
      <arglist>[&quot;language&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>e23a40f3a7f850e7835c49745a2c6f16</anchor>
      <arglist>[&quot;submit&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>f36e6eb48d736c1cc0592016cece7be8</anchor>
      <arglist>[&quot;sigfileerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>f360e1eed708f065fdabca2333c0f637</anchor>
      <arglist>[&quot;baseimgerr&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$text</name>
      <anchorfile>pt__BR_8inc.html</anchorfile>
      <anchor>462814053fa84b6df7eb910b51caf20c</anchor>
      <arglist>[&quot;iconerr&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cas.c</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>cas_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>usage</name>
      <anchorfile>cas_8c.html</anchorfile>
      <anchor>bc9a1525018da38e567dfb48be4c8b5c</anchor>
      <arglist>(char *myname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cas_8c.html</anchorfile>
      <anchor>0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configfile.c</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>configfile_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>writeconfig</name>
      <anchorfile>configfile_8c.html</anchorfile>
      <anchor>295c20b5ec93e3e295e28e19a1a049c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>readconfig</name>
      <anchorfile>configfile_8c.html</anchorfile>
      <anchor>e158360b470a32d728e05dd9d6f7d958</anchor>
      <arglist>(CONF *config)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configfile.h</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>configfile_8h</filename>
    <class kind="struct">CONF</class>
    <member kind="define">
      <type>#define</type>
      <name>IMG_TEXTLINES</name>
      <anchorfile>configfile_8h.html</anchorfile>
      <anchor>69ee2b4ba60aced2cd66f4c61b42a32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>writeconfig</name>
      <anchorfile>configfile_8h.html</anchorfile>
      <anchor>295c20b5ec93e3e295e28e19a1a049c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>readconfig</name>
      <anchorfile>configfile_8h.html</anchorfile>
      <anchor>e158360b470a32d728e05dd9d6f7d958</anchor>
      <arglist>(CONF *config)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions.c</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>functions_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>CAS_DIR_SEPARATOR</name>
      <anchorfile>functions_8c.html</anchorfile>
      <anchor>ae386fdedd98eaa324fbc119fbb476e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_path</name>
      <anchorfile>functions_8c.html</anchorfile>
      <anchor>e35c6b4c0c78244cd048063a64fd7fb8</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>convbytes</name>
      <anchorfile>functions_8c.html</anchorfile>
      <anchor>de0bef2645b9d49d8251b755528d2d2a</anchor>
      <arglist>(char *input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>functions_8c.html</anchorfile>
      <anchor>4e2eb619ebecb86ff7c51f0fca4cfd10</anchor>
      <arglist>(char *tmpl, const char *search, const char *replace)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>timeconv</name>
      <anchorfile>functions_8c.html</anchorfile>
      <anchor>db7cb10eff319a888185ed78cca579ad</anchor>
      <arglist>(char *input)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>functions.h</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>functions_8h</filename>
    <member kind="function">
      <type>char *</type>
      <name>get_path</name>
      <anchorfile>functions_8h.html</anchorfile>
      <anchor>e35c6b4c0c78244cd048063a64fd7fb8</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>convbytes</name>
      <anchorfile>functions_8h.html</anchorfile>
      <anchor>de0bef2645b9d49d8251b755528d2d2a</anchor>
      <arglist>(char *input)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>timeconv</name>
      <anchorfile>functions_8h.html</anchorfile>
      <anchor>db7cb10eff319a888185ed78cca579ad</anchor>
      <arglist>(char *input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>functions_8h.html</anchorfile>
      <anchor>4e2eb619ebecb86ff7c51f0fca4cfd10</anchor>
      <arglist>(char *tmpl, const char *search, const char *replace)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graphics.c</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>graphics_8c</filename>
  </compound>
  <compound kind="file">
    <name>graphics.h</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>graphics_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>createimage</name>
      <anchorfile>graphics_8h.html</anchorfile>
      <anchor>e7250e28aa540c4a708b457f8e5319cb</anchor>
      <arglist>(CONF *config, char *lines[6])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>html.c</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>html_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>create_html</name>
      <anchorfile>html_8c.html</anchorfile>
      <anchor>800a67057657789a40355bf4539a4820</anchor>
      <arglist>(char *stats[20], char *lines[6], char template[120])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>html.h</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>html_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>create_html</name>
      <anchorfile>html_8h.html</anchorfile>
      <anchor>800a67057657789a40355bf4539a4820</anchor>
      <arglist>(char *stats[20], char *lines[6], char template[120])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lines.c</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>lines_8c</filename>
    <member kind="function">
      <type>void</type>
      <name>CreateLine</name>
      <anchorfile>lines_8c.html</anchorfile>
      <anchor>f2f37f835b374944e5dc876c9e5dbac1</anchor>
      <arglist>(char *lines[], int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendToLine</name>
      <anchorfile>lines_8c.html</anchorfile>
      <anchor>1ffca9ccb8df24a6a33ec5f21b7a9ae3</anchor>
      <arglist>(char *lines[], int line, const char *text)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lines.h</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>lines_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>CreateLine</name>
      <anchorfile>lines_8h.html</anchorfile>
      <anchor>f2f37f835b374944e5dc876c9e5dbac1</anchor>
      <arglist>(char *lines[], int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendToLine</name>
      <anchorfile>lines_8h.html</anchorfile>
      <anchor>1ffca9ccb8df24a6a33ec5f21b7a9ae3</anchor>
      <arglist>(char *lines[], int line, const char *text)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>version.h</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>CAS_VERSION</name>
      <anchorfile>version_8h.html</anchorfile>
      <anchor>ff0956b3ce3880de0ec9419228ddc4bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mkFileSum.c</name>
    <path>/media/brun/progs/iMule/src/utils/</path>
    <filename>mkFileSum_8c</filename>
    <class kind="struct">MD5_CTX</class>
    <member kind="define">
      <type>#define</type>
      <name>S11</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>51398c0e5541164ad4d6615880073305</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S12</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>1ec499cd0e54ecc28c2ac2afea5b038e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S13</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>aeec90429105fb54d853dd4fc7027a54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S14</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>78342b0ccde2ed12fdf19a113cc266cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S21</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>b6d5354f647a0e7592a1f051fc8377b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S22</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>ddad30455da936bc1879ee9c72b46d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S23</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>6321a8b29628936f76e9e78cf5bda95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S24</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>0c09eb77d30a0d5f9154914147b86c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S31</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>ef26590f8a880ee6f4a158168defcd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S32</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>1d512424dd8a91e0a5bcc98563f33914</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S33</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>1c854214533f6220e859b0063196abb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S34</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>f6472be1d535970afee8e5266a74aa07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S41</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>b674ba129e588da55d1d494e1cf3c15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S42</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>268ef1a49114a94b931cc6b313e3cd1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S43</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>5aaa7121f39650d472746942ca68f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S44</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>6a3989af72b55d169bd73a66f8620aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>96d73bbd7af15cb1fc38c3f4a3bd82e9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>d96b7cf3182ce2ba85e5a7a93b12c441</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>e42219072d798876e6b08e6b78614ff6</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>c0eafdc9ee161b71e7af98af736952fd</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTATE_LEFT</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>7417fd4e875360c0533fa5b412cdab49</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FF</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>0a143972cb6c4fe16f0ffa8a3d41ebf3</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GG</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>685f32faa2a66e743850b990a13b8bfa</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HH</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>8b9f1c4778df01ef970b87dbe5541dc5</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>II</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>d26626e5efb37b2dadef4e88e35e4329</anchor>
      <arglist>(a, b, c, d, x, s, ac)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char *</type>
      <name>POINTER</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>73204e40637f83518fb695362ea084a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>UINT2</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>b18da08528aeee3049c5fd4885aa289e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>UINT4</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>f1cbb0f0cb7fe002843db8f21cc307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MD5Init</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>43e334cd23b7e92d1ee2f8b26071b1f0</anchor>
      <arglist>(MD5_CTX *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MD5Update</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>14327f23c04b2ba9526920d67fbcc5af</anchor>
      <arglist>(MD5_CTX *, const unsigned char *, unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MD5Final</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>4d0e4f16069f15e42f92028772aa7dc9</anchor>
      <arglist>(unsigned char[16], MD5_CTX *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCharCode</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>dd0ae50d93b1269f6376f4a64aa258d7</anchor>
      <arglist>(int c)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>e66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MD5Transform</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>aaa1a49bc3e1cf0e5a5e0e4c6ee6b221</anchor>
      <arglist>(UINT4[4], const unsigned char[64])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Encode</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>076da82855c975e9625df41dc733a7aa</anchor>
      <arglist>(unsigned char *, UINT4 *, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Decode</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>e368420814c11471f08f459cda091bbb</anchor>
      <arglist>(UINT4 *, const unsigned char *, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MD5_memcpy</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>4290e5078aa4bb323e29797a7ec1de1c</anchor>
      <arglist>(POINTER, POINTER, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MD5_memset</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>c035f00da554c2ef462e7bfd43b940f4</anchor>
      <arglist>(POINTER, int, unsigned int)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>table</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>c6163b0b2e8d056a3d30d5f19c625e38</anchor>
      <arglist>[][9]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static unsigned char</type>
      <name>PADDING</name>
      <anchorfile>mkFileSum_8c.html</anchorfile>
      <anchor>ee6f420120b0fbc0fb096cb61655cec4</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>linuxmon.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>linuxmon_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>linuxmon.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>linuxmon_8h</filename>
    <class kind="class">LinuxMon</class>
  </compound>
  <compound kind="file">
    <name>onlinesig.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>onlinesig_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>onlinesig.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>onlinesig_8h</filename>
    <class kind="class">OnLineSig</class>
  </compound>
  <compound kind="file">
    <name>wxcas.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcas_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxcas.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcas_8h</filename>
    <class kind="class">WxCas</class>
  </compound>
  <compound kind="file">
    <name>wxcascte.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcascte_8cpp</filename>
    <member kind="function">
      <type>wxString</type>
      <name>GetDefaultimulesigPath</name>
      <anchorfile>wxcascte_8cpp.html</anchorfile>
      <anchor>4c7e3d5b1d6694318f34b05f5c386832</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wxcascte.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcascte_8h</filename>
    <class kind="struct">WxCasCte</class>
    <member kind="function">
      <type>wxString</type>
      <name>GetDefaultimulesigPath</name>
      <anchorfile>wxcascte_8h.html</anchorfile>
      <anchor>4c7e3d5b1d6694318f34b05f5c386832</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wxcasframe.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcasframe_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxcasframe.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcasframe_8h</filename>
    <class kind="class">WxCasFrame</class>
  </compound>
  <compound kind="file">
    <name>wxcaspix.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcaspix_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxcaspix.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcaspix_8h</filename>
    <class kind="class">WxCasPix</class>
  </compound>
  <compound kind="file">
    <name>wxcasprefs.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcasprefs_8cpp</filename>
    <member kind="function">
      <type></type>
      <name>EVT_BUTTON</name>
      <anchorfile>wxcasprefs_8cpp.html</anchorfile>
      <anchor>e62cac62ea25e8973436fb273170a399</anchor>
      <arglist>(ID_CANCEL_BUTTON, WxCasPrefs::OnCancel) void WxCasPrefs</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>wxcasprefs.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcasprefs_8h</filename>
    <class kind="class">WxCasPrefs</class>
  </compound>
  <compound kind="file">
    <name>wxcasprint.cpp</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcasprint_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>wxcasprint.h</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>wxcasprint_8h</filename>
    <class kind="class">WxCasPrint</class>
  </compound>
  <compound kind="file">
    <name>wxcas.xpm</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/</path>
    <filename>wxcas_8xpm</filename>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>wxcas_xpm</name>
      <anchorfile>wxcas_8xpm.html</anchorfile>
      <anchor>0a6b5dc5d40252a0fc85e856bf20371a</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>downloads.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2downloads_8php</filename>
    <member kind="function">
      <type>&lt; tableborder=0align=centercellpadding=4cellspacing=0width=&quot;95%&quot;&gt;&lt; tr &gt;&lt; tdalign=centervalign=middle &gt;&lt; scripttype=&quot;text/javascript&quot;&gt;</type>
      <name>GotoCat</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>1b201189b21a3178b2e7944538ac6868</anchor>
      <arglist>(cat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrioString</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>b31ad0a2e20fd6617d61e1f553b46985</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusString</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>dee06138dea0ea4f723c1a7a728672ea</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>d164c4d1540b3f91f9aeccfdeff017b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad0__</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>d704b74b4964955c94f879b9b1570daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt; fontface=Tahomastyle=&quot;font-size:8pt;&quot;&gt;&lt; tableborder=0align=centercellpadding=3cellspacing=0width=&quot;100%&quot;bgcolor=&quot;#99CCFF&quot;&gt;&lt; tr &gt;&lt; tdclass=&quot;smallheader&quot;style=&quot;background-color:#000000&quot;colspan=&quot;8&quot;&gt;&lt; imgsrc=&quot;arrow_down.gif&quot;&gt;&lt; b &gt; Downloads&lt;?php $downloads=imule_load_vars(&quot;downloads&quot;);echo &apos;&amp;nbsp;(&apos;, count($downloads), &apos;)&apos;;?&gt;&lt;/b &gt;&lt;/td &gt;&lt; tdalign=&quot;right&quot;class=&quot;smallheader&quot;style=&quot;background-color:#000000&quot;&gt;&lt; form &gt;&lt; selectname=&quot;cat&quot;size=&quot;1&quot;onchange=GotoCat(this.form.cat.options[this.form.cat.selectedIndex].value)&gt;</type>
      <name>$all_status</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>860a8e56931ef57957f026d21bb4b384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$downloads</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>83c15e7230e881b7964da6eaa18bd1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$uploads</name>
      <anchorfile>chicane_2downloads_8php.html</anchorfile>
      <anchor>e7e10b5e4db0c9c2fef870aead26b979</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>downloads.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2downloads_8php</filename>
    <member kind="function">
      <type>&lt; tableborder=0align=centercellpadding=4cellspacing=0width=&quot;95%&quot;&gt;&lt; tr &gt;&lt; tdalign=centervalign=middle &gt;&lt; scripttype=&quot;text/javascript&quot;&gt;</type>
      <name>GotoCat</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>1b201189b21a3178b2e7944538ac6868</anchor>
      <arglist>(cat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrioString</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>b31ad0a2e20fd6617d61e1f553b46985</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusString</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>dee06138dea0ea4f723c1a7a728672ea</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdalign=rightclass=tabs &gt;&lt; form &gt;&lt; inputtype=&quot;button&quot;value=&quot;ed2k:&lt;inputtype=&quot;button&quot;value=&quot;Logout&quot;onClick=&apos;self.location.href=&quot;login.php&quot;&apos;&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;fontface=Tahomastyle=&quot;font-size:8pt;&quot;&gt;&lt;/font&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>e32be91b2139946133b586427b46cd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt; fontface=Tahomastyle=&quot;font-size:8pt;&quot;&gt;&lt; tableborder=0align=centercellpadding=3cellspacing=0width=&quot;100%&quot;bgcolor=&quot;#99CCFF&quot;&gt;&lt; tr &gt;&lt; tdclass=&quot;smallheader&quot;style=&quot;background-color:#000000&quot;colspan=&quot;8&quot;&gt;&lt; imgsrc=&quot;arrow_down.gif&quot;&gt;&lt; b &gt; Downloads&lt;?php $downloads=imule_load_vars(&quot;downloads&quot;);echo &apos;&amp;nbsp;(&apos;, count($downloads), &apos;)&apos;;?&gt;&lt;/b &gt;&lt;/td &gt;&lt; tdalign=&quot;right&quot;class=&quot;smallheader&quot;style=&quot;background-color:#000000&quot;&gt;&lt; form &gt;&lt; selectname=&quot;cat&quot;size=&quot;1&quot;onchange=GotoCat(this.form.cat.options[this.form.cat.selectedIndex].value)&gt;</type>
      <name>$all_status</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>860a8e56931ef57957f026d21bb4b384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$downloads</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>83c15e7230e881b7964da6eaa18bd1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$status</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>58391ea75f2d29d5d708d7050b641c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>$file</type>
      <name>link</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>0e052ec5d22a473ef53ebb8c27042178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$uploads</name>
      <anchorfile>default_2downloads_8php.html</anchorfile>
      <anchor>e7e10b5e4db0c9c2fef870aead26b979</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>login.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2login_8php</filename>
  </compound>
  <compound kind="file">
    <name>login.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2login_8php</filename>
  </compound>
  <compound kind="file">
    <name>login.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>php-default_2login_8php</filename>
  </compound>
  <compound kind="file">
    <name>preferences.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2preferences_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$conn_opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>1de99a4381a09a96d3836db9984cc0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$webserver_opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>a13db7570eab346e7d79575b8d129415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>996de03f3be069526637c155ed8fbc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>dceb0b87145bdd9f29631c38f4b4200f</anchor>
      <arglist>[&quot;connection&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>ef8e4d458b57285315e99b234483dd13</anchor>
      <arglist>[&quot;files&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>8897d9bee3a360a24c77abb656a00ff0</anchor>
      <arglist>[&quot;webserver&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$opts</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>2fce6a9b8be45967a21c53a89d006eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$opt_groups</name>
      <anchorfile>chicane_2preferences_8php.html</anchorfile>
      <anchor>383491ce593be528c60efb7e945cd6c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>preferences.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2preferences_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$conn_opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>1de99a4381a09a96d3836db9984cc0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$webserver_opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>a13db7570eab346e7d79575b8d129415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>996de03f3be069526637c155ed8fbc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>dceb0b87145bdd9f29631c38f4b4200f</anchor>
      <arglist>[&quot;connection&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>ef8e4d458b57285315e99b234483dd13</anchor>
      <arglist>[&quot;files&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>8897d9bee3a360a24c77abb656a00ff0</anchor>
      <arglist>[&quot;webserver&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$opts</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>2fce6a9b8be45967a21c53a89d006eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$opt_groups</name>
      <anchorfile>default_2preferences_8php.html</anchorfile>
      <anchor>383491ce593be528c60efb7e945cd6c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2search_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cat2idx</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>07057dc27cc4ab2edb78b3c5a1565c7d</anchor>
      <arglist>($cat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>ef915316f784c9063d942974538301a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad2__</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>14825a36d1bd49554007c359eb92ad7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>chicane_2search_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>search.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2search_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cat2idx</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>07057dc27cc4ab2edb78b3c5a1565c7d</anchor>
      <arglist>($cat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdalign=rightclass=tabs &gt;&lt; form &gt;&lt; inputtype=&quot;button&quot;value=&quot;ed2k:&lt;inputtype=&quot;button&quot;value=&quot;Logout&quot;onClick=&apos;self.location.href=&quot;login.php&quot;&apos;&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>ef915316f784c9063d942974538301a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>default_2search_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>servers.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2servers_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>d86993b9fa9ba558a9e60edd16565a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad3__</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>0721fc009302effaf7242d0e356d95cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt; tableborder=0align=centercellpadding=4cellspacing=0width=&quot;95%&quot;&gt;&lt; tr &gt;&lt; tdalign=centervalign=top &gt;</type>
      <name>$add_server_form</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>b18afeb76d385ae73fb8ba6f36e4d166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>16bb0868a602d533fa8c7585948c696e</anchor>
      <arglist>[&quot;serv_name&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2servers_8php.html</anchorfile>
      <anchor>1ffab98b169b7b068c607cc848bbf115</anchor>
      <arglist>[&quot;serv_users&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>servers.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2servers_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2servers_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>default_2servers_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdalign=rightclass=tabs &gt;&lt; form &gt;&lt; inputtype=&quot;button&quot;value=&quot;ed2k:&lt;inputtype=&quot;button&quot;value=&quot;Logout&quot;onClick=&apos;self.location.href=&quot;login.php&quot;&apos;&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;fontface=Tahomastyle=&quot;font-size:8pt;&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>default_2servers_8php.html</anchorfile>
      <anchor>9c23e80d01374bdec1bb17e90b8c8631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt; tableborder=0align=centercellpadding=4cellspacing=0width=&quot;95%&quot;&gt;&lt; tr &gt;&lt; tdalign=centervalign=top &gt;</type>
      <name>$add_server_form</name>
      <anchorfile>default_2servers_8php.html</anchorfile>
      <anchor>b18afeb76d385ae73fb8ba6f36e4d166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2servers_8php.html</anchorfile>
      <anchor>16bb0868a602d533fa8c7585948c696e</anchor>
      <arglist>[&quot;serv_name&quot;]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2servers_8php.html</anchorfile>
      <anchor>1ffab98b169b7b068c607cc848bbf115</anchor>
      <arglist>[&quot;serv_users&quot;]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>shared.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2shared_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>d8e138e538f6151d83337217705e19f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad4__</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>b507cdd8642ab001e651326b451d8816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>chicane_2shared_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>shared.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2shared_8php</filename>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>default_2shared_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2shared_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>default_2shared_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>default_2shared_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>default_2shared_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stat_graphs.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2stat__graphs_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>chicane_2stat__graphs_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2stat__graphs_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>chicane_2stat__graphs_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>chicane_2stat__graphs_8php.html</anchorfile>
      <anchor>39b77b45f40150a2b70be14cbc74874b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad5__</name>
      <anchorfile>chicane_2stat__graphs_8php.html</anchorfile>
      <anchor>9bb1e3cee2ce90cee6dce9da9b41f72c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stat_graphs.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2stat__graphs_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>default_2stat__graphs_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2stat__graphs_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>default_2stat__graphs_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdalign=leftclass=tabs &gt;&lt; form &gt;&lt; inputtype=&quot;button&quot;value=&quot;ed2k:&lt;inputtype=&quot;button&quot;value=&quot;Logout&quot;onClick=&apos;self.location.href=&quot;login.php&quot;&apos;&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>default_2stat__graphs_8php.html</anchorfile>
      <anchor>0d8c3e2567e153c0524c4b62acc5e10f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stat_tree.php</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>chicane_2stat__tree_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_ident</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>30e5d46c468fba0410a20f357d2a4e20</anchor>
      <arglist>($i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_item</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>9599bb1fded1de94eda6c643c130598e</anchor>
      <arglist>($it, $ident)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_folder</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>65b09c4216b5ac3a76bdcdf94b34e368</anchor>
      <arglist>($key, &amp;$arr, $ident)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdbackground=&quot;main_topbar.gif&quot;align=&quot;center&quot;valign=&quot;middle&quot;class=&quot;tabs_four&quot;&gt;&lt; ahref=&quot;index.php?links=1&quot;&gt;&lt; imgsrc=&quot;arrow_right.gif&quot;align=&quot;absmiddle&quot;&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>39b77b45f40150a2b70be14cbc74874b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ed2k</type>
      <name>__pad6__</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>0afe91764498761d6656be1ccbaba51a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stattree</name>
      <anchorfile>chicane_2stat__tree_8php.html</anchorfile>
      <anchor>de020bd30a3f84fc882174fd8c5c2d5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>stat_tree.php</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>default_2stat__tree_8php</filename>
    <member kind="function">
      <type></type>
      <name>CastToXBytes</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>441bb02ba154e0b7e61ab8b0e64fb87a</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_ident</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>30e5d46c468fba0410a20f357d2a4e20</anchor>
      <arglist>($i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_item</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>9599bb1fded1de94eda6c643c130598e</anchor>
      <arglist>($it, $ident)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_folder</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>65b09c4216b5ac3a76bdcdf94b34e368</anchor>
      <arglist>($key, &amp;$arr, $ident)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stats</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>c61adefb58583938c9b820405ddfa018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>s</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>3691308f2a4c2f6983f2880d32e29c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt;/font &gt;&lt;/td &gt;&lt; tdalign=leftclass=tabs &gt;&lt; form &gt;&lt; inputtype=&quot;button&quot;value=&quot;ed2k:&lt;inputtype=&quot;button&quot;value=&quot;Logout&quot;onClick=&apos;self.location.href=&quot;login.php&quot;&apos;&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>0d8c3e2567e153c0524c4b62acc5e10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stattree</name>
      <anchorfile>default_2stat__tree_8php.html</anchorfile>
      <anchor>de020bd30a3f84fc882174fd8c5c2d5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>footer.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>footer_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$cats</name>
      <anchorfile>footer_8php.html</anchorfile>
      <anchor>5fc80a034107a7e266460c35e48c7a08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-dload.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-dload_8php</filename>
    <member kind="function">
      <type></type>
      <name>MM_nbGroup</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>b82ec92b25e54727997b048065f241e8</anchor>
      <arglist>(event, grpName)</arglist>
    </member>
    <member kind="function">
      <type>&lt;/script &gt;&lt;/head &gt;&lt; scriptlanguage=&quot;JavaScript&quot;type=&quot;text/JavaScript&quot;&gt;</type>
      <name>formCommandSubmit</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>d66074042479681dac31ad06798cbaad</anchor>
      <arglist>(command)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusString</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>dee06138dea0ea4f723c1a7a728672ea</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrioString</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>b31ad0a2e20fd6617d61e1f553b46985</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>i</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>7e98b8a17c0aad30ba64d47b74e2a6c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>j</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>bf2bc2545a4a5f5683d9ef3ed0d977e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>a</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>4124bc0a9335c27f086f24ba207a4912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>n</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>eab71244afb687f16d8c4f5ee9d6ef0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>return</type>
      <name>x</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>69bf0237253cf28a9de66969ab9b2fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/script &gt;&lt; body &gt;&lt; formaction=&quot;imuleweb-main-dload.php&quot;method=&quot;post&quot;name=&quot;mainform&quot;class=&quot;doad-table&quot;&gt;&lt; tablewidth=&quot;100%&quot;border=&quot;1&quot;bgcolor=&quot;#0099CC&quot;&gt;&lt; tr &gt;&lt; tdwidth=&quot;118&quot;height=&quot;20&quot;&gt;&lt; inputtype=&quot;hidden&quot;name=&quot;command&quot;&gt;&lt;/td &gt;&lt; tdwidth=&quot;251&quot;&gt;&lt; tableborder=&quot;0&quot;cellpadding=&quot;0&quot;cellspacing=&quot;0&quot;&gt;&lt; tr &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;pause&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;pause&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;pause&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgname=&quot;pause&quot;src=&quot;pause.jpeg&quot;border=&quot;0&quot;alt=&quot;&quot;onLoad=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;resume&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;resume&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;resume&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgname=&quot;resume&quot;src=&quot;resume.jpeg&quot;border=&quot;0&quot;alt=&quot;&quot;onLoad=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;prioup&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;up&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;up&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgname=&quot;up&quot;src=&quot;up.jpeg&quot;border=&quot;0&quot;alt=&quot;&quot;onLoad=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;priodown&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;down&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;down&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgsrc=&quot;down.jpeg&quot;alt=&quot;&quot;name=&quot;down&quot;width=&quot;50&quot;height=&quot;20&quot;border=&quot;0&quot;onload=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;cancel&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;cancel&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;delete&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgsrc=&quot;delete.jpeg&quot;alt=&quot;&quot;name=&quot;delete&quot;width=&quot;50&quot;height=&quot;20&quot;border=&quot;0&quot;onload=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt;/tr &gt;&lt;/table &gt;&lt;/td &gt;&lt; tdwidth=&quot;532&quot;&gt;&lt; tableborder=&quot;0&quot;cellpadding=&quot;0&quot;cellspacing=&quot;0&quot;&gt;&lt; tr &gt;&lt; td &gt;</type>
      <name>$all_status</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>b2a93392fabb5cf0a11a6821d0f7af43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>target</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>5d2c023108742a1ce78ba9823c06ea35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>&lt;/td &gt;&lt; td &gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>cf94092df586b08c33c16f80efd883e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$downloads</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>83c15e7230e881b7964da6eaa18bd1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$cats</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>5fc80a034107a7e266460c35e48c7a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$filter_cat_result</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>df4c3fb71e5bc83496df77ca5d707e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$uploads</name>
      <anchorfile>imuleweb-main-dload_8php.html</anchorfile>
      <anchor>e7e10b5e4db0c9c2fef870aead26b979</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-kad.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-kad_8php</filename>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-prefs.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-prefs_8php</filename>
    <member kind="variable">
      <type></type>
      <name>$conn_opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>1de99a4381a09a96d3836db9984cc0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$webserver_opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>a13db7570eab346e7d79575b8d129415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>996de03f3be069526637c155ed8fbc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>dceb0b87145bdd9f29631c38f4b4200f</anchor>
      <arglist>[&quot;connection&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>ef8e4d458b57285315e99b234483dd13</anchor>
      <arglist>[&quot;files&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$all_opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>8897d9bee3a360a24c77abb656a00ff0</anchor>
      <arglist>[&quot;webserver&quot;][$i]</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$opts</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>2fce6a9b8be45967a21c53a89d006eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$opt_groups</name>
      <anchorfile>imuleweb-main-prefs_8php.html</anchorfile>
      <anchor>383491ce593be528c60efb7e945cd6c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-search.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-search_8php</filename>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>imuleweb-main-search_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>str2mult</name>
      <anchorfile>imuleweb-main-search_8php.html</anchorfile>
      <anchor>361826582042fbbc61cbca6e29275f0b</anchor>
      <arglist>($str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>cat2idx</name>
      <anchorfile>imuleweb-main-search_8php.html</anchorfile>
      <anchor>07057dc27cc4ab2edb78b3c5a1565c7d</anchor>
      <arglist>($cat)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>imuleweb-main-search_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>imuleweb-main-search_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-servers.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-servers_8php</filename>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>imuleweb-main-servers_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>imuleweb-main-servers_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>imuleweb-main-servers_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$servers</name>
      <anchorfile>imuleweb-main-servers_8php.html</anchorfile>
      <anchor>1596004f2436a1fc9348e2ac52ca4732</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-shared.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-shared_8php</filename>
    <member kind="function">
      <type>&lt;/th &gt;&lt;/tr &gt;</type>
      <name>CastToXBytes</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>bc5134964c8893b4c23eb926facc82ad</anchor>
      <arglist>($size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusString</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>dee06138dea0ea4f723c1a7a728672ea</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrioString</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>b31ad0a2e20fd6617d61e1f553b46985</anchor>
      <arglist>($file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>my_cmp</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>e57995e82803257e282e5fda373ee4c2</anchor>
      <arglist>($a, $b)</arglist>
    </member>
    <member kind="variable">
      <type>&lt;/td &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;prioup&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;up&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;up&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgname=&quot;up&quot;src=&quot;up.jpeg&quot;border=&quot;0&quot;alt=&quot;PrioUp&quot;onLoad=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt; td &gt;&lt; ahref=&quot;javascript:formCommandSubmit(&apos;priodown&apos;);&quot;target=&quot;mainFrame&quot;onClick=&quot;MM_nbGroup(&apos;down&apos;,&apos;group1&apos;,&apos;down&apos;,&apos;&apos;,1)&quot;onMouseOver=&quot;MM_nbGroup(&apos;over&apos;,&apos;down&apos;,&apos;&apos;,&apos;&apos;,1)&quot;onMouseOut=&quot;MM_nbGroup(&apos;out&apos;)&quot;&gt;&lt; imgsrc=&quot;down.jpeg&quot;alt=&quot;PrioDown&quot;name=&quot;down&quot;width=&quot;50&quot;height=&quot;20&quot;border=&quot;0&quot;onload=&quot;&quot;&gt;&lt;/a &gt;&lt;/td &gt;&lt; td &gt; &amp;</type>
      <name>nbsp</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>cf94092df586b08c33c16f80efd883e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_order</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>3a477715e684e8b08f5ee3e5b1837054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$sort_reverse</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>a0f46b2306b9e489a983b5ec27d166b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$shared</name>
      <anchorfile>imuleweb-main-shared_8php.html</anchorfile>
      <anchor>6ba42381f4694c65f00457197aa13446</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>imuleweb-main-stats.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>imuleweb-main-stats_8php</filename>
  </compound>
  <compound kind="file">
    <name>stats.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>stats_8php</filename>
  </compound>
  <compound kind="file">
    <name>stats_tree.php</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>stats__tree_8php</filename>
    <member kind="function">
      <type></type>
      <name>showBranch</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>dcfb7246d17f04b700a189991db12cd6</anchor>
      <arglist>(branch)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>swapFolder</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>737b26007442eaab5eaa4b6562c8276d</anchor>
      <arglist>(img)</arglist>
    </member>
    <member kind="function">
      <type>&lt;/script &gt;&lt; bodyonLoad=&quot;showBranch(&apos;br_Stats&apos;);swapFolder(&apos;fl_Stats&apos;)&quot;&gt;</type>
      <name>print_ident</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>f9db74407698696adacabbfd70001c6d</anchor>
      <arglist>($i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_item</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>9599bb1fded1de94eda6c643c130598e</anchor>
      <arglist>($it, $ident)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>print_folder</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>65b09c4216b5ac3a76bdcdf94b34e368</anchor>
      <arglist>($key, &amp;$arr, $ident)</arglist>
    </member>
    <member kind="variable">
      <type>openImg</type>
      <name>src</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>591f3c2edc976ebc311c9f7ad967f2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>closedImg</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>fb228e8f515569b25c79071ac6c2cbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>$stattree</name>
      <anchorfile>stats__tree_8php.html</anchorfile>
      <anchor>de020bd30a3f84fc882174fd8c5c2d5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_core_lib.cpp</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__core__lib_8cpp</filename>
    <class kind="class">SortElem</class>
    <class kind="struct">PHP_2_EC_OPT_DEF</class>
    <member kind="function">
      <type>void</type>
      <name>php_var_dump</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>159d311ae7a6cf4ecc6a07573ac7f766</anchor>
      <arglist>(PHP_VALUE_NODE *node, int ident, int ref)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_var_dump</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>82d5c98249214b3a0ca64ffa9baf9557</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>347818b312b4f3de91547edaf4b04f8e</anchor>
      <arglist>(const SortElem &amp;o1, const SortElem &amp;o2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_usort</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>f115f31d842e104bfc0d9a4ac633a4d0</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_shared_file_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>6c4696e2861cad87f0ffbe4889ff8231</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_reload_shared_file_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>280f034d200b4fb2f0b13fd921c470a3</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_download_file_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>6384efaed88e08c34eac90e08856281c</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_kad_connect</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>c7b8bc37015d271a165529c27284a68c</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_kad_disconnect</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>0e4a97e273a8db23f936bb426ecb326b</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_add_server_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>8262ae663169365a1582c51cfdfa431f</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_server_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>05f7f9dbd84bb987eb805137c1971de5</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_get_imule_stats</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>118d36039d202d4960e3e64c517fc508</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_get_imule_categories</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>f5020e8ea344bb67bab5b0b7d7b1d187</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_array_int_val</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>c26a07a744934035a3e14664ca0432c0</anchor>
      <arglist>(PHP_VALUE_NODE *array, std::string arrkey, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ec_tag_2_php</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>0cb30ec8e69b6d895bb990dc2105ae78</anchor>
      <arglist>(const CECTag *cattag, PHP_2_EC_OPT_DEF *opts, PHP_VAR_NODE *catvar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_get_imule_options</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>970156b9bb799b39e8aaceec9e259a5e</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>php_2_ec_tag</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>decc5c4170b0e8b9bb18156b51854bf9</anchor>
      <arglist>(CECTag *cattag, PHP_2_EC_OPT_DEF *opts, PHP_VALUE_NODE *catvar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_set_imule_options</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>ca721d98165a2425dcbfbd53cc78b001</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_search_download_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>addc295e280ac64d643d682b22621d2c</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_search_start_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>2de5f0958d2e501d139dd0c737e261af</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_get_log</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>82306d3d4b61f9c06f04ddd76b189075</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_get_serverinfo</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>e02e97895db382721e48c04f9b83b15a</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_ed2k_download_cmd</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>cdbb6ec40add3e8c20c1eed1c8452aa9</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_strlen</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>d568985aa110f39174cf5715f221e204</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_count</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>668fe3d842cc36e7d7bf4a226bc822ad</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_isset</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>41ba817e35fc42142672dfb1d28d8032</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_substr</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>a9a221caf13a1ed75899e14fefd0bfd2</anchor>
      <arglist>(PHP_VALUE_NODE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_obj_array_create</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>07af49a9603d4f9512e0586a05802121</anchor>
      <arglist>(char *class_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_downloads</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>6d80ee716b1938cade6e1bd713ae01b5</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_servers</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>cd842952ad05dc512144499db0b32f4b</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_shared</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>facb12b9af1a9cd01efd5d37d3ac7d16</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_search</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>0f6107b48730e0f0b2dd6a5e7dec4eea</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_uploads</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>976d362c197b3c25d07931e35a95977b</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_stats</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>d2e9b297db9c7f46f935ed151eeb459c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ecstats2php</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>42acd579e7b387f99c3441179c4c3637</anchor>
      <arglist>(CEC_StatTree_Node_Tag *root, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_load_stats_tree</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>32e9a7ee8fd9da789ba5518e54f3fc45</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_native_load_imule_vars</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>f665cb4b82134111aa682d0a8d61cf92</anchor>
      <arglist>(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_download_file_prop_get</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>324c29d7e1278a129146b05ca55ebc14</anchor>
      <arglist>(void *ptr, char *prop_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_upload_file_prop_get</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>e51157222764fcd8348ce0281f088853</anchor>
      <arglist>(void *ptr, char *prop_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_server_prop_get</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>5e87c7df2225275b437b195c2cbb929b</anchor>
      <arglist>(void *ptr, char *prop_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_shared_file_prop_get</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>c299cf91aee943250a39d45472359099</anchor>
      <arglist>(void *ptr, char *prop_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>imule_search_file_prop_get</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>76662dbcbe8670dafc4c8646ead48a0b</anchor>
      <arglist>(void *ptr, char *prop_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_init_core_lib</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>416757dfdaab40cba978abfc7c6d29a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_set_input_buffer</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>0ed22313da6bc348c6577592bee91d1c</anchor>
      <arglist>(char *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_session_vars</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>f5723907a35374171a837737199ef171</anchor>
      <arglist>(char *target, std::map&lt; std::string, std::string &gt; &amp;varmap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_session_vars</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>5802452d81dee0adf52e661ebd126fcf</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;varmap)</arglist>
    </member>
    <member kind="variable">
      <type>PHP_2_EC_OPT_DEF</type>
      <name>g_connection_opt_defs</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>d16e4b32b0bde554b6a71aa33a99f5e5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>PHP_2_EC_OPT_DEF</type>
      <name>g_file_opt_defs</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>243d78a00de42efe732f6627c677084a</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>PHP_2_EC_OPT_DEF</type>
      <name>g_webserver_opt_defs</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>52d5bb839ac9f4622d2e7cd4c418a535</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>PHP_2_EC_OPT_DEF</type>
      <name>g_coretweak_opt_defs</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>773a499a1862695e689c8956b146c860</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>PHP_BLTIN_FUNC_DEF</type>
      <name>core_lib_funcs</name>
      <anchorfile>php__core__lib_8cpp.html</anchorfile>
      <anchor>8bb2e624f1a4e19f8e45499e469d2b7b</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_core_lib.h</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__core__lib_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>php_init_core_lib</name>
      <anchorfile>php__core__lib_8h.html</anchorfile>
      <anchor>416757dfdaab40cba978abfc7c6d29a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_session_vars</name>
      <anchorfile>php__core__lib_8h.html</anchorfile>
      <anchor>f5723907a35374171a837737199ef171</anchor>
      <arglist>(char *target, std::map&lt; std::string, std::string &gt; &amp;varmap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_session_vars</name>
      <anchorfile>php__core__lib_8h.html</anchorfile>
      <anchor>5802452d81dee0adf52e661ebd126fcf</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;varmap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_lexer.c</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__lexer_8c</filename>
    <class kind="struct">yy_buffer_state</class>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_SCANNER</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>3c3d1ef92e93b0bc81d7760a73d5c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MAJOR_VERSION</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>243ca1d30872935faf05ea5118ed6fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MINOR_VERSION</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>90f9d458829400869e47efb68a865677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyconst</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a2f1a918be586b44bf08126bde2d7cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d1c3fde80f461fe055f996f4ec6d4830</anchor>
      <arglist>(proto)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NULL</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>8e0bcf8f8a5b613ea583347f8bc31cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SC_TO_UI</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>f1185350b7a92cf8aa5324c68850c8a6</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>b766bbbee08d04b67e3fe599d6900873</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>8e14785f9eab7a997d659b25af9584c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTATE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>32b5b960944f946b192d54f672569cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STATE_EOF</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>b3077e60914fc54dcc55ecae1ce9700b</anchor>
      <arglist>(state)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEW_FILE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>0406739e64fb5750cf995d2ae68ce69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER_CHAR</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>b866a64da164ed2d4d444df1ef1fc9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUF_SIZE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e7e51116e747d3390e7a6cfc6532834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_CONTINUE_SCAN</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>df4b0db227e07782e28ade353a7ba7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_END_OF_FILE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>7f71d7fa2c403eb4b2f38cb9536f3c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_LAST_MATCH</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d1a0b5ebcabffe388e9e9ebb2619c1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e65cb72d09db0abdc4b8e8c4d533ab14</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>unput</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>448a4e9041a09588332733c6846c770c</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NEW</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>53579db42834b88199458993912c646d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NORMAL</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>609d19f40900ecc2a5f812d9388c21fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_EOF_PENDING</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d689d97c15e807a6116ace7a420cea57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_CURRENT_BUFFER</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a093d500a6330d06d8e4760c494fac33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLUSH_BUFFER</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>c5d478d90ea9a2ecd43d579067a2e89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_new_buffer</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>b7eb911e18655f2f78e63afe5a8a4a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_interactive</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>c56eb96366c08862bf0efe5d83d1fc4c</anchor>
      <arglist>(is_interactive)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_bol</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>12e30d13a76a94e78010db9996d39c50</anchor>
      <arglist>(at_bol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_AT_BOL</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>71ca89b3656acd0552f14949a571560b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_USES_REJECT</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e1333d5a329be491c097ca5037758aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yytext_ptr</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>790a191a93ef4d3b8c0bb43fd7480052</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DO_BEFORE_ACTION</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>cc3486d769af4e4b2820346a0093cc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NUM_RULES</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e558785bb896e090901c2b905f6790c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>b2708fd42cff29ce6a0a52b91bea40d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REJECT</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>835f10dd1ab4bf9a80c4cd80ee6e3058</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yymore</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>745d37b5e002b2e5f93ad42ea7b554be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_MORE_ADJ</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>68792d73820bc46a71d3d4e613f0b977</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RESTORE_YY_MORE_OFFSET</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>56858d18c7eda4f53664496ef566f651</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INITIAL</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a3d063564f6ab16f6d408b8369d0e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLOCK_COMMENT</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>024de1f9d5cacdbe54508f98f837be46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINE_COMMENT</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>14c614b2d3794fc575299a2a2e6f12ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STACK_USED</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d946ddf130c2b13131fa9c3549ff6002</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_READ_BUF_SIZE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>ab1491ceccb1c95c14320b2903773a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>ad1dc60a04a1d8cfc8b3ded13601e361</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_INPUT</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>acfdca45fa4beb8b06172525a53c424a</anchor>
      <arglist>(buf, result, max_size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyterminate</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>c3286b18a2e91b4571b97df96a118e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START_STACK_INCR</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>227e75c43b9e0cd41529974230be7e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FATAL_ERROR</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>c0586b8b0b092d02f4ba7d45abe328f2</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e5b01ac2fa5a6ad5fb97559638abe686</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BREAK</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>3cc40a460ad7df816678bcc05241e84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RULE_SETUP</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>690504b662e4281515bf12722df178ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_EXIT_FAILURE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e93e67b85c44f6bd31ead14a552a35c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>e65cb72d09db0abdc4b8e8c4d533ab14</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="typedef">
      <type>struct yy_buffer_state *</type>
      <name>YY_BUFFER_STATE</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>4e5bd2d129903df83f3d13effaf8f3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>yy_size_t</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a14cc3d400000eef0cd40225fd790cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>YY_CHAR</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>1f324b3cb0839eeb90145f0274e6946e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>yy_state_type</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>9ba7c416f135b0f0c1f4addded4616b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void yyrestart</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d0030daf8055c0afc233a0c34bc12fd6</anchor>
      <arglist>((FILE *input_file))</arglist>
    </member>
    <member kind="function">
      <type>void yy_switch_to_buffer</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a4d8fcf388290ca0a2849fb6120b8bdb</anchor>
      <arglist>((YY_BUFFER_STATE new_buffer))</arglist>
    </member>
    <member kind="function">
      <type>void yy_load_buffer_state</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>7ce4911dd5e52c3035907962a19f426a</anchor>
      <arglist>((void))</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE yy_create_buffer</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a2feac785a778f388f5789c00eccf8c3</anchor>
      <arglist>((FILE *file, int size))</arglist>
    </member>
    <member kind="function">
      <type>void yy_delete_buffer</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>f3396691b9b779b13d6cc623715bb1dd</anchor>
      <arglist>((YY_BUFFER_STATE b))</arglist>
    </member>
    <member kind="function">
      <type>void yy_init_buffer</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>db439e9a28fc4c4ad50eff59cb513eba</anchor>
      <arglist>((YY_BUFFER_STATE b, FILE *file))</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE yy_scan_buffer</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>be2bec50f45200479e22b18dc62fee11</anchor>
      <arglist>((char *base, yy_size_t size))</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE yy_scan_string</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>689b8676764ac30cbf27edfb45c74391</anchor>
      <arglist>((yyconst char *yy_str))</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE yy_scan_bytes</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>0a2ce3902c765bc21ae783522d579223</anchor>
      <arglist>((yyconst char *bytes, int len))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *yy_flex_alloc</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>f9ae8724940d9fb24a1833a9d35e8ba3</anchor>
      <arglist>((yy_size_t))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *yy_flex_realloc</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>924fc81cd906ec1be93e0832d5371a37</anchor>
      <arglist>((void *, yy_size_t))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void yy_flex_free</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>3fd5f45113b804aa19cc90c97515ea8c</anchor>
      <arglist>((void *))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type yy_try_NUL_trans</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>0e41cdaae3095c0b0f5d21bc9d94bbd4</anchor>
      <arglist>((yy_state_type current_state))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void yy_fatal_error</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>7bf00c5eaadb041f8ce0433319e36499</anchor>
      <arglist>((yyconst char msg[]))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_set_input_buffer</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>0ed22313da6bc348c6577592bee91d1c</anchor>
      <arglist>(char *buf, int len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yywrap</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d35c8efbce4ce6e59d2b4be1d6865e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void yyunput</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>0d7dfacabee3edb7770b447c934e0ce5</anchor>
      <arglist>((int c, char *buf_ptr))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void yy_push_state</type>
      <name>YY_PROTO</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>329386e966519e3186a49395249b4cce</anchor>
      <arglist>((int new_state))</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyleng</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>1b5865350b5ca5c1d69f429c2a652953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>46af646807e0797e72b6e8945e7ea88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyout</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>296847b42b0baa62e2af36cb79f3c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static YY_BUFFER_STATE</type>
      <name>yy_current_buffer</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>38d4b4b5964f7d49b4d9e19bf81996df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char</type>
      <name>yy_hold_char</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>13f78e763996d2d86c85b45cbe146282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_n_chars</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>a86c122f2050dbfd365fcf547e6fc1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_c_buf_p</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>de8fc57d3529bff56440a4f3e9c29586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_init</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>eae6dabf9dcc4769518ecf054181b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_start</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>2e1e1d9ee4610a6679d49ed8194b00af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_did_buffer_switch_on_eof</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>57edb4569f96dcfce9deaff0eb6a6412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yylineno</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>5e36364965360da7b7cdfc2188e0af84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d9264b77d56b6971f29739e2bda77f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst short int</type>
      <name>yy_acclist</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>010a6fd5697ea539351a6f7bb8a7daee</anchor>
      <arglist>[303]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst short int</type>
      <name>yy_accept</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>c76a1ee8c3adc1797c803029a8b9ef5d</anchor>
      <arglist>[263]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst int</type>
      <name>yy_ec</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>4e2e250113c8da64ba5e9f8549705477</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst int</type>
      <name>yy_meta</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>d712e756ffae45941f70e8747f87c42e</anchor>
      <arglist>[52]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst short int</type>
      <name>yy_base</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>67cb392a6ff5bdbcdbad119de0bcefa5</anchor>
      <arglist>[271]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst short int</type>
      <name>yy_def</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>7e3d409dafc4b7f13cdb3a9e434c8d1c</anchor>
      <arglist>[271]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst short int</type>
      <name>yy_nxt</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>7766c026f7db4e2f5e0089e332d06e10</anchor>
      <arglist>[386]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yyconst short int</type>
      <name>yy_chk</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>c7d4d79907903603b0b1ace0877e6255</anchor>
      <arglist>[386]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yy_state_type</type>
      <name>yy_state_buf</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>48356a1eab2384889d204d96193495e7</anchor>
      <arglist>[YY_BUF_SIZE+2]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yy_state_type *</type>
      <name>yy_state_ptr</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>4c3dd287eea9d95baae088a0c361cb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_full_match</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>5e9c4a81971d8290d79bdf9d4943565a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_lp</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>ab904e47d61162c162c9f2ed31ee3832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_more_flag</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>6129ee9fdda293cab1800b69a9d89871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_more_len</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>4bdb55a62cfaaf9a9d47fc08f2afc526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_start_stack_ptr</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>34dbf3316e47b7ec6bdc203e4ee87d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_start_stack_depth</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>bc3da050f523ea26b13d241f83ab6540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int *</type>
      <name>yy_start_stack</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>5bcfc454dba790d184c36415bb5dc254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>register char *</type>
      <name>yy_bp</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>31c6a2bd50ae0d22a3354ebbe09e1b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>b7d671599a7b25ca99a487fa341bc33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>file</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>702945180aa732857b380a007a7e2a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>len</name>
      <anchorfile>php__lexer_8c.html</anchorfile>
      <anchor>fed088663f8704004425cdae2120b9b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_parser.c</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__parser_8c</filename>
    <class kind="union">YYSTYPE</class>
    <class kind="union">yyalloc</class>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>9f092f5b1dca6a6249fb2c7c8065b031</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSKELETON_NAME</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>50db5aef8c2b6f13961b2480b37f84c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPURE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>9fa797a1f3c4fc9b12d1e4d569612767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLSP_NEEDED</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>bb3943553c2b5e911c89a3ea973d3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FNUMBER</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>fccb2780f5b2ccf057a3a7bf1adc61c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DNUMBER</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>74659dc8e82c7b105b25f7e95a0a5386</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0f4d394a3ab4e09bff60f714c66dc5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDENT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>096a20e68e4e980b6845ad843ec2c3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VARIABLE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>86626d4d161f4c3958ce1cd99c5b974e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ad1dc60a04a1d8cfc8b3ded13601e361</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXIT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d111e603bbebe5d87f6bc39264ce4733</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c138c68a0709c57bc5f7567abc1558eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DO</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>89f8701562ac09bf5c1e58516124c500</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WHILE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>4e6edb897a7a0bb16aa6d80aef24326a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDWHILE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>7aaa1a6865fcd10349b87ce582a4464f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>6634515171060cf2f7afd70a96cb9bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDFOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>62c7f2ec15cb2bc858f3135f52094880</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOREACH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>7454d4a34d1c455e775211e6c1198fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDFOREACH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5cb03ab7473dc06d59afbf00839ff07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d06c120bb4a679d1c90ce7313f40e3ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDDECLARE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5a523b3f6486190fec2186acf69b1e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>a42a34d8f17233661a75fe8fc1235e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0c33b494a68ce28497e7ce8e5e95feff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNSET</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b0b265b69299aeccfade9365cf04db2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISSET</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3a4325b1e5619df32efd8f9f505e0917</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWITCH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c279a93dfd1f02dac2359cfaa1422b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDSWITCH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>8d85787dbef4f67e9feeb9a6e6c2314b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CASE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f2b30344be261ffe1c5aad12ab1f6f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3da44afeba217135a680a7477b5e3ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BREAK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>be022c8f09db1f0680a92293523f25dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONTINUE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b711666ad09d7f6c0b91576525ea158e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FUNCTION</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ee0cf83ee6d754df700e396da8987f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>6a0e6b80dd3d5ca395cf58151749f5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLASS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>eb04f2e0012cb07d68538599161c9693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERFACE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>efb2aa75be4323fe06eb3ec8394bdfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTENDS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>8d5395ae941e991ee0d577611fe9ef83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMPLEMENTS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>fde0287a7af97faddf3db62583e3511e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OBJECT_OPERATOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5172d0172246901ebd567a25ab05f224</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_ASSIGN</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>24c705572ffe519c7501c90503f39e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ed0a8f83088c41d721066cd5b3b9a00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f579248b8d4c16c0aeba3dff9ee8b10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLASS_SCOPE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>1630e8a92eae808793a4942dd5673683</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>8b43bafee90b30676faae508c21cb8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c1feec5bbec58380d24594d915def7a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SL_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>db3adbf82187297fd8a2ed098900724c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XOR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>2746c6091234cfceb278ac89b5c3a986</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b2409d0d2ca753c9d630879e819717eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AND_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b0af2fa8ba715e401606272940429db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOD_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>dcd5d5a94e1e076ec2168059e6a949a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONCAT_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>bfb03753ad9ee9a58864c74c46054523</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e7d6eefb7fff279057b2e966105f8bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUL_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ea4bdfbce511db152dbb1b2105067e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINUS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>12bb0f38c0b6b0b27f6e78d339ecb6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLUS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>4d83b1a8365c86d6d83c3f7daba9c996</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ea520486c98c694d8f700ad31a0f5ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_XOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b672bad815164951952c19de7e76e201</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f602a2b8c521b4f7e273aecce1495414</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOLEAN_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>1801fc4fafd0817c7db97daf109ecee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOLEAN_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>84c20d2efbc352490c302e2f4ac9bc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NOIDENTICAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>50cafba856627415c5a332873bf6f2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_IDENTICAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f008bd8721abcf114510f3127e9c1c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NOEQUAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>224c3c57d8afe01519a229150adb728c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c2ff44b76741ab79becc51c6a2a1c818</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d26ba5294cc1a733fa8711fb30a0ccd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0d3da14f63d9ecf94c93884d0928b624</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>baed93a16a0cde13f32bc4dc48b96804</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d71aeb03d03709c5072b99cb68c21992</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSTANCEOF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3afe3dd1fdd29781170571dad3b92ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNSET_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>98fde9b8c9d30e2a801fb776a13c58eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOL_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>05a17ce5c3c1a09ba059c2e6de3d37bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OBJECT_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>515a3fe7f5f39d4f3cbe80f3ca5637dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0bed23a140b3bcf614ef415682fa7e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d4660550bcbfd02156c92fff0cb7a907</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOUBLE_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>72c32951e343cbc981c7538257acf4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>699ffb82322d3140a8440268a7ed1cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>fe38ec6126e35e40049e27fdf4586ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f735670d9b1cd3dfa2d927db387f7123</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLONE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5d1b2bfd8f7bc991c358809a6f4f8688</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEW</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b6bca16ed021b1e211fde8669758f199</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELSEIF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>9cd8bdd349a8c9604630be628156d152</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELSE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0a70ee0cbf5b1738be4c9463c529ce72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f7039fb6fb9cb00f8e223a05e1ee436b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PUBLIC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d17d551e31d1828c68acf40684849b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROTECTED</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f0cbb16b703892a6f3be7149dbe7d1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FINAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>7c4c1083e1a62791293d8893fe35a708</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABSTRACT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>fac4c0927892b28c42e3bbb664df5d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATIC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>10b2d890d871e1489bb02b7e70d9bdfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>START_SCRIPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>35278ff84aaa673127feead85116a632</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SCRIPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>385a6f87a3da7523d0707f25d808bdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDEBUG</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>853b3bfad6d2b2ff693dce81182e0c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR_VERBOSE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0943f558a560b9b5fa0593d7e36496c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFREE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c8adfd73c006c1926f387feb1eced3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMALLOC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>573b05852d8f080c907dfba725773d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f45042ce56e04d634420d76caeb2ee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_FREE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>1a9dc526fd390d4808252bd631c4c2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_GAP_MAXIMUM</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>fcd15dd0fa87ffba0371c6d6a0cc9631</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_BYTES</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>40beb355f2cf230a99e2e2bb54909a5a</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYCOPY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d6586b145b5cddce4eec46f35d59b1dd</anchor>
      <arglist>(To, From, Count)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_RELOCATE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c70c64089ec70937293b65ddbd083412</anchor>
      <arglist>(Stack)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFINAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>6419f3fd69ecb6b7e063410fd4e73b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e67923760a28e3b7ed3aa2cfaef7f9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNTOKENS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>75d260730a6c379a94ea28f63a7b9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNNTS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f54ae9e588f0ecc32eabbfdf1959df10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNRULES</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ceaba8997dc3867478ae3b816647eb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNSTATES</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>2c387ba2caaade8bf8f78ed30023f79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUNDEFTOK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>926181abd06b6d1df27b6133971c24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXUTOK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f3f5ed4bc4517eff0ef1b17541192a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTRANSLATE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>ad19ee88e33c02c4e720b28f78249bd7</anchor>
      <arglist>(YYX)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPACT_NINF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>62bf0ed0c4360b077071b5cf3177823b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTABLE_NINF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>504faa93b92f37fcc147f68e8d111a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_T</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>7d535939e93253736c6eeda569d24de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyerrok</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>20bf055e53dc4fd5afddfd752a4d1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyclearin</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5035d59933b3f5388c44f596145db047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEMPTY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e59196b3765411a06cf234cf9bcae2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEOF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3b1e3628411fabac03abe0a337322016</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYACCEPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>a6c7a65b580c214b2ea832fd7bdd472e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYABORT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3bcde0b05b9aa4ec5169092d9d211dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f1eef6197be78122699013d0784acc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFAIL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>383d9671b1abd97e4c6f3708d1ca32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRECOVERING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d860e18ca4b79fc589895b531bdb7948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBACKUP</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>dfcaf974b837e3efc130377e9837b4fd</anchor>
      <arglist>(Token, Value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTERROR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d2b58b1851184ddb3b60fede50bc7946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERRCODE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>552f295255821fa7dea11b0237e1d61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRHSLOC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b2b4f027a2b092ac14ca4464e7b3db60</anchor>
      <arglist>(Rhs, K)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLLOC_DEFAULT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>485d38f93de30679900c9cad6e7f3446</anchor>
      <arglist>(Current, Rhs, N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_LOCATION_PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>52c7d936ca7e6c34687ff71f29b8cfd1</anchor>
      <arglist>(File, Loc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLEX</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0ea34e09602d1ede033f16ba669ef24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFPRINTF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f3b78184b3e3414afdaf2bbbff4a8bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDPRINTF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>f6d6ca80e87922f90264f1a4a802ea04</anchor>
      <arglist>(Args)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SYMBOL_PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>1c510d33cb388afc9411141ba3076a36</anchor>
      <arglist>(Title, Type, Value, Location)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STACK_PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>7a52157fbe194e3a347afc4ef750af77</anchor>
      <arglist>(Bottom, Top)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_REDUCE_PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>49ad456240785266cadae498ddae9310</anchor>
      <arglist>(Rule)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYINITDEPTH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>eb1508a3a38ec5d64c27e8eca25330b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXDEPTH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>14ba2b263c446ffed1c888c4b42ae40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPOPSTACK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e46d1441467efb7ec2e8d80a03f942b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yysigned_char</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d254c139e417f31289532f643a60c17c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>a40b27ae32d6d1ae7160bd6256e08eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>add_statement_2_list</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>3de841ee2369608e36bd64ad3343efdd</anchor>
      <arglist>(PHP_SYN_NODE *list, PHP_SYN_NODE *st)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>add_branch_2_elseif</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d914ffe34ea497a6d2519c3b818fbcdc</anchor>
      <arglist>(PHP_SYN_NODE *list, PHP_SYN_NODE *branch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_stack_print</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>262045fde22ef6d7ec24164db66286c5</anchor>
      <arglist>(short int *bottom, short int *top)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_reduce_print</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>278bd02de3373b86b2e5a0bb392ddc4f</anchor>
      <arglist>(int yyrule)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yysymprint</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>00de08280765bfe4a8884f9b6b62b7db</anchor>
      <arglist>(FILE *yyoutput, int yytype, YYSTYPE *yyvaluep)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yydestruct</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>d9dfa6a565300b75edd5ca82923074e3</anchor>
      <arglist>(char *yymsg, int yytype, YYSTYPE *yyvaluep) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>cd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>yytranslate</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>9319c358b57ff015b5ebd918f15af4a9</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned short int</type>
      <name>yyprhs</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e5b94dae0869b5db63d4c2adf217a494</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const short int</type>
      <name>yyrhs</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>efc6b2ced0ebd393f2c1b0ec5fcb8eff</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned short int</type>
      <name>yyrline</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>969b5e86654076ff100dc1718540bd3f</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *const</type>
      <name>yytname</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b779f3189fbfd3b164b7802b945d619b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>yyr1</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e90b72f7b709a1084d1ac60a543f64ef</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>yyr2</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>812882c4e1db002b5770c23ac6ccf26b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>yydefact</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>485abbf576c9ee64fc6dbdefcdeb467e</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const short int</type>
      <name>yydefgoto</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>327c963d3020f184e8ce47dbc2665f00</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const short int</type>
      <name>yypact</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>223e591fd3a59f6f46e4e1afe9261ede</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const short int</type>
      <name>yypgoto</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>6f7b2fed615504cadcc5fd4d1884efe5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const short int</type>
      <name>yytable</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>5bc5c03e662d9c6919a93cbd8123b462</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const short int</type>
      <name>yycheck</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>e60d3bd7adef08f4ec68c7e37aa01c42</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>yystos</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>c0a4aa73c6301a8b3e166e4e752baae5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yydebug</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>b138aa8e11f58bcdcc7134adf240ea8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yychar</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>9e2c7c7373b818c86b2df7106a92327c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yylval</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>539b86ee4bb46824a194f22eb69903d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yynerrs</name>
      <anchorfile>php__parser_8c.html</anchorfile>
      <anchor>0ea9e3b522e448ac462274fe70e1be82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_parser.h</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__parser_8h</filename>
    <class kind="union">YYSTYPE</class>
    <member kind="define">
      <type>#define</type>
      <name>FNUMBER</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>fccb2780f5b2ccf057a3a7bf1adc61c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DNUMBER</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>74659dc8e82c7b105b25f7e95a0a5386</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>0f4d394a3ab4e09bff60f714c66dc5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDENT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>096a20e68e4e980b6845ad843ec2c3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VARIABLE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>86626d4d161f4c3958ce1cd99c5b974e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>ad1dc60a04a1d8cfc8b3ded13601e361</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXIT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>d111e603bbebe5d87f6bc39264ce4733</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>c138c68a0709c57bc5f7567abc1558eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DO</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>89f8701562ac09bf5c1e58516124c500</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WHILE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>4e6edb897a7a0bb16aa6d80aef24326a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDWHILE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>7aaa1a6865fcd10349b87ce582a4464f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>6634515171060cf2f7afd70a96cb9bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDFOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>62c7f2ec15cb2bc858f3135f52094880</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOREACH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>7454d4a34d1c455e775211e6c1198fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDFOREACH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>5cb03ab7473dc06d59afbf00839ff07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>d06c120bb4a679d1c90ce7313f40e3ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDDECLARE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>5a523b3f6486190fec2186acf69b1e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>a42a34d8f17233661a75fe8fc1235e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>0c33b494a68ce28497e7ce8e5e95feff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNSET</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>b0b265b69299aeccfade9365cf04db2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISSET</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>3a4325b1e5619df32efd8f9f505e0917</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWITCH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>c279a93dfd1f02dac2359cfaa1422b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDSWITCH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>8d85787dbef4f67e9feeb9a6e6c2314b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CASE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f2b30344be261ffe1c5aad12ab1f6f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>3da44afeba217135a680a7477b5e3ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BREAK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>be022c8f09db1f0680a92293523f25dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONTINUE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>b711666ad09d7f6c0b91576525ea158e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FUNCTION</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>ee0cf83ee6d754df700e396da8987f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>6a0e6b80dd3d5ca395cf58151749f5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLASS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>eb04f2e0012cb07d68538599161c9693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERFACE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>efb2aa75be4323fe06eb3ec8394bdfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTENDS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>8d5395ae941e991ee0d577611fe9ef83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMPLEMENTS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>fde0287a7af97faddf3db62583e3511e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OBJECT_OPERATOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>5172d0172246901ebd567a25ab05f224</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_ASSIGN</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>24c705572ffe519c7501c90503f39e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LIST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>ed0a8f83088c41d721066cd5b3b9a00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f579248b8d4c16c0aeba3dff9ee8b10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLASS_SCOPE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>1630e8a92eae808793a4942dd5673683</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>8b43bafee90b30676faae508c21cb8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>c1feec5bbec58380d24594d915def7a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SL_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>db3adbf82187297fd8a2ed098900724c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XOR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>2746c6091234cfceb278ac89b5c3a986</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>b2409d0d2ca753c9d630879e819717eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AND_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>b0af2fa8ba715e401606272940429db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOD_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>dcd5d5a94e1e076ec2168059e6a949a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONCAT_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>bfb03753ad9ee9a58864c74c46054523</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>e7d6eefb7fff279057b2e966105f8bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUL_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>ea4bdfbce511db152dbb1b2105067e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINUS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>12bb0f38c0b6b0b27f6e78d339ecb6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PLUS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>4d83b1a8365c86d6d83c3f7daba9c996</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>ea520486c98c694d8f700ad31a0f5ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_XOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>b672bad815164951952c19de7e76e201</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f602a2b8c521b4f7e273aecce1495414</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOLEAN_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>1801fc4fafd0817c7db97daf109ecee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOLEAN_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>84c20d2efbc352490c302e2f4ac9bc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NOIDENTICAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>50cafba856627415c5a332873bf6f2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_IDENTICAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f008bd8721abcf114510f3127e9c1c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NOEQUAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>224c3c57d8afe01519a229150adb728c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>c2ff44b76741ab79becc51c6a2a1c818</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>d26ba5294cc1a733fa8711fb30a0ccd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>0d3da14f63d9ecf94c93884d0928b624</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>baed93a16a0cde13f32bc4dc48b96804</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>d71aeb03d03709c5072b99cb68c21992</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSTANCEOF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>3afe3dd1fdd29781170571dad3b92ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNSET_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>98fde9b8c9d30e2a801fb776a13c58eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOL_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>05a17ce5c3c1a09ba059c2e6de3d37bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OBJECT_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>515a3fe7f5f39d4f3cbe80f3ca5637dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>0bed23a140b3bcf614ef415682fa7e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRING_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>d4660550bcbfd02156c92fff0cb7a907</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOUBLE_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>72c32951e343cbc981c7538257acf4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>699ffb82322d3140a8440268a7ed1cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>fe38ec6126e35e40049e27fdf4586ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f735670d9b1cd3dfa2d927db387f7123</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLONE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>5d1b2bfd8f7bc991c358809a6f4f8688</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NEW</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>b6bca16ed021b1e211fde8669758f199</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELSEIF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>9cd8bdd349a8c9604630be628156d152</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ELSE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>0a70ee0cbf5b1738be4c9463c529ce72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ENDIF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f7039fb6fb9cb00f8e223a05e1ee436b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PUBLIC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>d17d551e31d1828c68acf40684849b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROTECTED</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f0cbb16b703892a6f3be7149dbe7d1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FINAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>7c4c1083e1a62791293d8893fe35a708</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABSTRACT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>fac4c0927892b28c42e3bbb664df5d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATIC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>10b2d890d871e1489bb02b7e70d9bdfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>START_SCRIPT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>35278ff84aaa673127feead85116a632</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SCRIPT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>385a6f87a3da7523d0707f25d808bdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>f0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96aed8afdbbec5110277334eba1c8d1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ded8a8d44c88f59c76bc60bb60a63db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9780be26c548e285625baea0cba46490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_NOT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9690348178aef87c1ab4964e783497892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOK_ED2K_LINK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa952b72addd322a727c61dbc1280add810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FNUMBER</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d6378e99e4ff0368fc16760bbc74bf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNUMBER</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e03437db5b37ce3e6ea90011a87d6d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ee847e634a4297b274316de8a8ca9921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDENT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e67f7a5df1132dc9f1a0e24b1503d2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VARIABLE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa939031ce5df6f91d3778590d6d644b9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ECHO</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96e074abc1ec6368da315a331ad35c00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXIT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97a10b5d68d31711288e1fe0fa17dbf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9252802eda493fb6b4a279c4452acb547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DO</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bfea6036e64d9c7c773d277a57d2f959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WHILE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93278fd035226215822c903790a1eee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDWHILE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f6fe822bd4613158436644eca87c50b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a809654855caa62449850d9122fd77a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa918062d5e10eae0b2fc5361af64efdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOREACH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9613519a2c802e6ac60e776e0de027e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDFOREACH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cfb8f83110d4102d6b2eb4ec18639354</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECLARE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9aac03d545f909cdcde12ee6a7ae08cec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDDECLARE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bf24c58e8985dc7dab81f7f6f6a33da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b84664ffa026b1a5f43c051cd6fe69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93d044162d972156d897cea80f216b9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fde1bb5ef04b28059e61df449501f1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec1d962808cbb9cf1b89a5cdd6197923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISSET</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c5dc66210e3c1275de308a4ab3f615cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EMPTY</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92f0d18fc0d0fa4a6cd92dc328501874d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SWITCH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa953396ea1193548270407675ea4eeee2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDSWITCH</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d3de88ff8c1d1db99ef014ab076e5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CASE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99c9b14644e9370719a51b7342bbc9c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa988ec7d5086d2469ba843c7fcceade8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BREAK</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99524d094809858b9e4f778763913568a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa949959dd441dcda75d6898cf2c68fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNCTION</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ab8c4d8135967b887502fda4f76deaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9520e09ffec033636dba711f3441cc600</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98dabc58c34c5df57f2151d6f233d6c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERFACE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa956690e5e62dbaca19fd78dcfe5d78544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXTENDS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a42036d5711155c7b0803e2c40be7c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPLEMENTS</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9447f406dca873f1561b806077aee4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_OPERATOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94ff81b02e18c3a88c2f37e957179b69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HASH_ASSIGN</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b42d6b8cae057a69447dcdaa9b41430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa925688e799536738ea469158ef15fd1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91e029fbf0c881b85d80fc8e89b753688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLASS_SCOPE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9042b9997f6cfdd1db927b3262cdde49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9b107229d44d042caa8ab8df4c8acaa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa985cbf84fd741bd43f3d28f6cbaf0db3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a4e633acc4651fd78cbcede2eae995ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XOR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9dee78e4c07da4e6eb0ffda40737c8dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa934b727d4ae357c7d6be4d22235d8992a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa96004fccaa016c56200dab693ebf65559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa92b89f3439a4601d00c5030b476cbbe43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONCAT_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ac35d02555c2ff9e046440852edab082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIV_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9127f1411fc5ad0b6364c924b3a1028c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUL_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95eea5bc0ababe7ea034173373e144811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINUS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90532ef59d83e4b0beac0d659e93360f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94d72584d8246c0b1b3611dee4a40d2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90b9afa58b2a6840f29677cd6028dab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_XOR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa916f5fe1a2c0e967512abdae17298e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOG_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95da5be13feccae3968dbb2f2eaaf4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_OR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa93a7f1fcb9ed805e9f5c0cff7e1ac65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOLEAN_AND</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d9911d16a456d364de7eacbfeeb77ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOIDENTICAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e90f54444fd2c9f804d2de82c3609dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_IDENTICAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa99fb98b6ee4d9af7b48525bb28fea6f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_NOEQUAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa976736f789fc6e5aa5bcf66d8f1e2c7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90c8979e5fac2c1a9188016840420f256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_GREATER_OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9026fa8fc5f817b078461f31324c893bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IS_SMALLER_OR_EQ</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa927c92ff13f85ad20814ec581fe934131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SR</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9f55bee7a30a0b05bb46ebb54e680a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9c4c83bba97ff1d2e6eeed95b312e04a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSTANCEOF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91921505afad6f597b07a8c773123b39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSET_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9659c53a569421115dbc8452bd14ba959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9a6e7b52642bdc34bf0b5952be868d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fab6a5b34c1bc732aee90e7c5962a9bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARRAY_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9023f8a8c45e35ddbf305b6645196e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9d142b0939c6c3f4cf6d39c03407fddcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa91bb935f5d87ff314f052c842333dd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT_CAST</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9cc8045e6224651265549a1ed841eb875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9851043138f8ef49c6eeea75760b69481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97967e4061665d0e072a0c3bffe00ac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLONE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa98ac05165348dbbb5a6012c3ce80ea4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEW</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9ec34b0b90541576a22697631105dc847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSEIF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97c1b80eb0b2bf247042d615eb7d19b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ELSE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa990d649d830ea440c8b8a56c7ef23c426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENDIF</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa95f47414575c8d3b44253ae6edcbda0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PUBLIC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e81e3f79af4b80e22c6b86d63ea397bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROTECTED</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa94eca054070419f48846f93d1e09f2ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIVATE</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa90f0fd409954c4ec858e4cd7594059792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINAL</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9fb43b8264ea4d3dd9957ba1b3fd3f3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSTRACT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa97b62cfe03ccf259e4f0a1be2bf90491f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATIC</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9e55a36a850c67d46b3b3325de7fce0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_SCRIPT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa946dc77e5b504c3beb6976309a2cb607d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>END_SCRIPT</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>15c9f7bd2f0e9686df5d9df4f3314aa9bde393e9de9e7dab9d591ae3f06c4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yylval</name>
      <anchorfile>php__parser_8h.html</anchorfile>
      <anchor>539b86ee4bb46824a194f22eb69903d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_syntree.cpp</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__syntree_8cpp</filename>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_zero_exp_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>dd86522248ac6a15c20970d5ae0b1cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_dnum</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>f37cc42816a542f00e243c7fbcb1d982</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_fnum</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>52e391ae8289297f1e6d2f58b6e0e7b3</anchor>
      <arglist>(float number)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_str</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>8431ab2a1ec01cb8385b3ba6c38819a4</anchor>
      <arglist>(char *s, int unescape)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_int_obj</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>515627ed48c4f88c96631f7b1e31c81c</anchor>
      <arglist>(void *obj)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_exp_1</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>9ef4941327c1e4c9825e36adb48bd8a3</anchor>
      <arglist>(PHP_EXP_OP op, PHP_EXP_NODE *operand)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_exp_2</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>00aaf688880668ac30c6ab0c7eba6b71</anchor>
      <arglist>(PHP_EXP_OP op, PHP_EXP_NODE *left, PHP_EXP_NODE *right)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_exp_2_self</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>6fe51f884e9546ec08ed1b39bb4679f0</anchor>
      <arglist>(PHP_EXP_OP op, PHP_EXP_NODE *self, PHP_EXP_NODE *right)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_known_const</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>2e187f303a3c3a04330070c1f1e24272</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_func_param</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>5049612c8e86667166523e0ec7ea9232</anchor>
      <arglist>(PHP_EXP_NODE *list, PHP_EXP_NODE *var_exp_node, char *class_name, int byref)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_expr_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>2ded615754fb16780e81572bd724a4dd</anchor>
      <arglist>(PHP_STATMENT_TYPE type, PHP_EXP_NODE *expr)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_ifelse_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>d9715f366733cae983ab8bc477adeb0c</anchor>
      <arglist>(PHP_EXP_NODE *expr, PHP_SYN_NODE *then_node, PHP_SYN_NODE *elseif_list, PHP_SYN_NODE *else_node)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_while_loop_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>c735fd1962156e239736a49214edb7b5</anchor>
      <arglist>(PHP_EXP_NODE *cond, PHP_SYN_NODE *code, int do_while)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_for_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>3900c3c1b6a53cd5530add801ae86675</anchor>
      <arglist>(PHP_EXP_NODE *start, PHP_EXP_NODE *cond, PHP_EXP_NODE *next, PHP_SYN_NODE *code)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_foreach_loop_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>e1aa45c3bd6942dfe81939691e2ce2c5</anchor>
      <arglist>(PHP_EXP_NODE *elems, PHP_EXP_NODE *i_key, PHP_EXP_NODE *i_val, PHP_SYN_NODE *code, int byref)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_func_decl_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>8b9fc051bd1ec04bd9ed5df5eebc2cf0</anchor>
      <arglist>(char *name, PHP_EXP_NODE *param_list)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_class_decl_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>508ad2c85d75e9c0424c956f94cb4ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_switch_syn_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>c9b24f17c3886bceead7f1c6501dab49</anchor>
      <arglist>(PHP_EXP_NODE *cond, PHP_EXP_NODE *case_list)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>make_var_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>c923975373332245d2e4c96866072b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>make_array_var</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>67ff9332656c3a851cddb670f910aa09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>get_var_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>ee58cded1340db61d7deb630a8dd28ff</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_var_node</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>09254b9efa7de138b01f91f87e5cc1da</anchor>
      <arglist>(PHP_VAR_NODE *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>func_scope_init</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>dfdae8aa6810b02bcfe147344103d706</anchor>
      <arglist>(PHP_FUNC_PARAM_DEF *params, int param_count, PHP_SCOPE_TABLE_TYPE *scope_map, PHP_VALUE_NODE *arg_array, std::map&lt; std::string, PHP_VAR_NODE * &gt; &amp;saved_vars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>func_scope_copy_back</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>6dee97e1595ee6c5e93206efe0f4bdd1</anchor>
      <arglist>(PHP_FUNC_PARAM_DEF *params, int param_count, PHP_SCOPE_TABLE_TYPE *scope_map, PHP_VALUE_NODE *arg_array, std::map&lt; std::string, PHP_VAR_NODE * &gt; &amp;saved_vars)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_TABLE</type>
      <name>make_scope_table</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>e0885e9068b7b4585c99a4906f1d9049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>switch_push_scope_table</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>7ad0714ad2345fb5950a23c2378c5bea</anchor>
      <arglist>(PHP_SCOPE_TABLE new_table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>switch_pop_scope_table</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>53eb9d8f01124654a1d0b9e987d8f1bf</anchor>
      <arglist>(int old_free)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_scope_table</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>98282e06026dec87ac452c8cc133391e</anchor>
      <arglist>(PHP_SCOPE_TABLE scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_func_2_scope</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>2669a1b960b2f0a70fa2cc6de21baa11</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_SYN_NODE *func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_class_2_scope</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>04a51af60ed7562f386e86cc6d73620d</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_SYN_NODE *class_node)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM *</type>
      <name>make_named_scope_item</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>740011b6846b9e4346a2aadc027afbb4</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM *</type>
      <name>add_var_2_scope</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>faf3cd0951abf7d56c7d4942db0c5020</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_VAR_NODE *var, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM_TYPE</type>
      <name>get_scope_item_type</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>73ae6e057a89f058aba33edd5af8e1ea</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM *</type>
      <name>get_scope_item</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>e301bcca15857e8f3598959e15d30af4</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get_scope_var_name</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>7d6aa47050e0d238650d353e150bc92a</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_VAR_NODE *var)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>array_get_ith_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>4adfc88f154dbee2dfe5b608c1e9f04d</anchor>
      <arglist>(PHP_VALUE_NODE *array, int i)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_get_by_str_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>1563bf909b9c028785cedc9fd9b75e05</anchor>
      <arglist>(PHP_VALUE_NODE *array, std::string key)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_get_by_int_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>496fa6953df007e8e74b9ce807703b7f</anchor>
      <arglist>(PHP_VALUE_NODE *array, int key)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_get_by_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>b8145b0449f92291a6622a1dc499f0ab</anchor>
      <arglist>(PHP_VALUE_NODE *array, PHP_VALUE_NODE *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>array_set_by_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>459a80f16db51ea25b4ceade91bd26a3</anchor>
      <arglist>(PHP_VALUE_NODE *array, PHP_VALUE_NODE *key, PHP_VAR_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>array_add_to_str_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>f510555e05c20a7f1b813329c472908b</anchor>
      <arglist>(PHP_VALUE_NODE *array, std::string key, PHP_VAR_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>array_remove_at_str_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>8d98efe3587fa00aac1fd54800c48c4a</anchor>
      <arglist>(PHP_VALUE_NODE *array, std::string key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>array_add_to_int_key</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>d7e5e76d6015759f2c80e1b54279ee46</anchor>
      <arglist>(PHP_VALUE_NODE *array, int key, PHP_VAR_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_is_key_here</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>4bdb3fc8caa548473179b7248148658d</anchor>
      <arglist>(PHP_VALUE_NODE *array, PHP_VALUE_NODE *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_get_size</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>33ab882544b67ad17df93efb992195f9</anchor>
      <arglist>(PHP_VALUE_NODE *array)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_push_back</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>cd6514e55215d376e5585260e74f9fb7</anchor>
      <arglist>(PHP_VALUE_NODE *array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value_value_assign</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>14440f37ec85de06759912dc73dcd5e6</anchor>
      <arglist>(PHP_VALUE_NODE *dst, PHP_VALUE_NODE *src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>var_node_free</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>03d7ea31956d992a6fc735a26d366fbf</anchor>
      <arglist>(PHP_VAR_NODE *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value_value_free</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>92d08c81530964e8a8717841c4d5f2cb</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_dnum</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>0045d8260db05d98e89e1f207b058665</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_bool</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>a4dc4ecd5bb281a97f2675327668e37d</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_fnum</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>634801c356e7128acb06cc57187b3a31</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_str</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>9c7b08bd075f6304233eca89dc77478f</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_array</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>dd998a9424b5aa9372273ddb96b6b494</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_func_call_exp</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>497b18df534c228d1083253600201047</anchor>
      <arglist>(char *func_name, PHP_EXP_NODE *args)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_func_call_param_list</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>a7e5bed93853ae8023213105f5880d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>func_call_add_expr</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>948da434c4e38b4c784bfd2f3230624d</anchor>
      <arglist>(PHP_VAR_NODE *paramlist, PHP_EXP_NODE *arg, int byref)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_add_native_func</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>4870424a9436ae2c647a0c3910fdef6c</anchor>
      <arglist>(PHP_BLTIN_FUNC_DEF *def)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_add_native_class</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>3286b1bb3071a585b71d887809d7606e</anchor>
      <arglist>(char *name, PHP_NATIVE_PROP_GET_FUNC_PTR prop_get_native_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_engine_init</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>3c1df28e4be74f21f5082c0b13d1672f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_exp_tree_free</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>e9a7429036e5c603479133ae57f8ff26</anchor>
      <arglist>(PHP_EXP_NODE *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_syn_tree_free</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>919c8aee85ac57d74678d8707e52b550</anchor>
      <arglist>(PHP_SYN_NODE *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_engine_free</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>06dc5e83d5686cb2ac6b5e5e33d730bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exp_set_ref</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>7a4dc45249bcc45038fd52813967af5d</anchor>
      <arglist>(PHP_EXP_NODE *expr, PHP_VAR_NODE *var, PHP_VALUE_NODE *key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_expr_eval</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>8093d8aa848ade077eac47dc7a2038ab</anchor>
      <arglist>(PHP_EXP_NODE *expr, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>php_expr_eval_lvalue</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>fd0c3bb930921c02bc9a70159b110d9a</anchor>
      <arglist>(PHP_EXP_NODE *expr)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VALUE_TYPE</type>
      <name>cast_type_resolve</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>b5649d1d90854ab974491367627866ae</anchor>
      <arglist>(PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_eval_compare</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>970258ea0cf6fe32ceb2ac8cc180be09</anchor>
      <arglist>(PHP_EXP_OP op, PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_eval_simple_math</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>10fc469d9de154be191124fc19eb80ad</anchor>
      <arglist>(PHP_EXP_OP op, PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_eval_int_math</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>e2e0c1f294f7dadd965c7ad8c5f14211</anchor>
      <arglist>(PHP_EXP_OP op, PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_run_func_call</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>fd5343fdec1fa8db3a243125e1fa1870</anchor>
      <arglist>(PHP_EXP_NODE *node, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>php_execute</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>7ca9a4a6007976925afb5a6a9ed383e4</anchor>
      <arglist>(PHP_SYN_NODE *node, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_report_error</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>dd18a8ec2e920e07bf3cf2bc680315cb</anchor>
      <arglist>(PHP_MSG_TYPE err_type, char *msg,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>b6252ccfff2b4e36c48809bc102ea481</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>g_syn_tree_top</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>279b01db1ebf2440df9e51aa94492390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_TABLE</type>
      <name>g_global_scope</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>7d5e98ceccca46a515805f152d940cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_TABLE</type>
      <name>g_current_scope</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>a82095928b294aeecb8a85d7f7397cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_STACK</type>
      <name>g_scope_stack</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>97ab282f9c118a514ceaf27d216e4571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>g_known_const</name>
      <anchorfile>php__syntree_8cpp.html</anchorfile>
      <anchor>e490e34d6e33e67f46fae4c5c7a52ca0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>php_syntree.h</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>php__syntree_8h</filename>
    <class kind="struct">PHP_VALUE_NODE</class>
    <class kind="struct">PHP_VAR_NODE</class>
    <class kind="struct">PHP_EXP_NODE</class>
    <class kind="struct">PHP_LIST_ASSIGN_NODE</class>
    <class kind="struct">PHP_FUNC_PARAM_ITEM</class>
    <class kind="struct">PHP_SCOPE_ITEM</class>
    <class kind="struct">PHP_SYN_IF_NODE</class>
    <class kind="struct">PHP_SYN_WHILE_NODE</class>
    <class kind="struct">PHP_SYN_FOR_NODE</class>
    <class kind="struct">PHP_SYN_FOREACH_NODE</class>
    <class kind="struct">PHP_SYN_SWITCH_NODE</class>
    <class kind="struct">PHP_FUNC_PARAM_DEF</class>
    <class kind="struct">PHP_SYN_FUNC_DECL_NODE</class>
    <class kind="struct">PHP_SYN_CLASS_DECL_NODE</class>
    <class kind="struct">PHP_SYN_NODE</class>
    <class kind="struct">PHP_BLTIN_FUNC_DEF</class>
    <member kind="define">
      <type>#define</type>
      <name>PHP_VARFLAG_STATIC</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>346ea0b6959e4bd06000b40a490fe236</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHP_VARFLAG_GLOBAL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>6ed22143bf547c3d70f289d23e065410</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHP_VARFLAG_BYREF</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>39fa3013bc16508a90ff5109f6bc1d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PHP_MAX_FUNC_PARAM</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>ee4f889764e8dc6292c7fc07f9eebf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PHP_EXP_NODE</type>
      <name>PHP_EXP_NODE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>93cb468b7c3b176aa8cb5f42bea239bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PHP_LIST_ASSIGN_NODE</type>
      <name>PHP_LIST_ASSIGN_NODE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>649f33889c32970e088c8e2f727e391f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PHP_FUNC_PARAM_ITEM</type>
      <name>PHP_FUNC_PARAM_ITEM</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>be9525bd36d34e0a75169b06340eb605</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PHP_SYN_NODE</type>
      <name>PHP_SYN_NODE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>315f476849834b8b17f17d7c5deda915</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>PHP_SCOPE_TABLE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>96d8f5fc8e0a85cc3d61f1b843fe1de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>PHP_SCOPE_STACK</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>fec9cc31974363d17adf290c9125a9ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PHP_NATIVE_FUNC_PTR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>3f3c69d73039a4c03d3034ee37412c36</anchor>
      <arglist>)(PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PHP_NATIVE_PROP_GET_FUNC_PTR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>02f5b18bff38f80a68d7daa361ed095e</anchor>
      <arglist>)(void *obj, char *prop_name, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="enumeration">
      <name>PHP_VALUE_TYPE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_NONE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b2631c5623aac24a71595434ac7fd6738bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_INT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b26fd743500808d983597807a7c9b9fb385</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_FLOAT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b26ad2c019533bb52d1b220979bbe6f00d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_STRING</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b2603870de3a4f528540c5b249828561583</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_BOOL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b262b40c82c6c5935662c80085ac3447ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_ARRAY</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b269e8212cf7fd6e430f432fb30ee3459ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_OBJECT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b265a6d0d8ebc14e70d56ae8c1c4fd8637f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_INT_DATA</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b262332f23f521c866754b215a223a52b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_VAL_VAR_NODE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>79f38b4542721a015fe6986ac94e4b26bfc0c52ae39c44a27a1e00c241af86f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PHP_EXP_OP</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_VAR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224863717374fe2bb4569bdfe110cf1ac3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_VAL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224b387f79a7b08ef4a4a5d88a36bf1d0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ASS</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224f98a869bf100c6b9785def273c0e01c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ARRAY_BY_KEY</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da32222499ff4d21d17b8266c885a9a52eeba5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_VAR_BY_EXP</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224af91a8f97f2a98c2b97b8fe84fcd627f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ARRAY</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222243d11d7c3101345f55c374d3859c1e17c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ARRAY_PAIR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224ba0ce876929612a7fca2fa76e7108ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ARRAY_REF_PAIR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224eefa0dde1b9469bd2fce1f33a37648ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_OBJECT_DEREF</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222248a81b044456d58652961efca715c600b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CLASS_DEREF</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224ac9526c691111cef3ade48da19948f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CAST_INT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222249922f40fcb5277cb1b44732cc0c4760c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CAST_FLOAT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224c01bb85a95efd85c3fe9e815cf9594be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CAST_BOOL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222240af88fc18aac2ef056357080acda35f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CAST_STR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224633d11d9bd154f3b2ea8ac2f5776bde5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_MUL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224f3c5caeb3702b58c684a2f90dcea3d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_DIV</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da32222407a8735d1498d75e63120804f0352257</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ADD</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224818ee7aa07797ad89b9c11c8b373f572</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_SUB</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224f224038c7ee7407d58ab6b59ae2ec12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_REM</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222249a81ade9aeaceadf3bf9b15c4a423d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CAT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224ec532f93ee482279ad82ee6bd56a4b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_SHL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224c61b1d37b2a455a8368e4660ef1f3a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_SHR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224bee447c31139ff8568f09bfd56a5afc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_OR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222243e4abddd1cc020ebaa9cdfd01d6b7df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_AND</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222243629c0d846a031442225fe643117ee62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_XOR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224630b041f0822bb5ac29adf96d57e757b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_NOT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224bfbf05541e6c8001898594d5a4421a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LOG_OR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222248a2b3ffeda091ee4a0c3109cebc2d733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LOG_AND</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224774e4130249c71233ab7c3fced25379b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LOG_XOR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222242c504103de39027e35326933e3cfd622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LOG_NOT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224e4c0f034d5a9a881390dceab3e86aa12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_EQ</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224ddd3085a11bf03807f36d7d315471e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_NEQ</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224625ccd1e5ae888e8ec06e09425afa7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_SAME</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224781e6fe808dd2c623af1a38e67ff0928</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_NOT_SAME</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224e7e9ae0ea9bd63dd858e02ee56f99cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_GRT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222244bc9a8b1bdf14e1274f00cd94ab59651</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_GRT_EQ</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222247315e2a36210ac4de8702fd3ab26a975</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LWR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222245263de0a78bb8ec6b4ffd72394f4fbd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LWR_EQ</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224d3991765b045a4e0b5e5516504a4b725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_MUX</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da32222415d4bcb45633e81c7c2192827157ce21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_FUNC_CALL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224d53af17f1c99a040e329fee9c19ef257</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_PRINT</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da3222246af5b0fd81ba11e5a76b4d4ba202c0cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_ECHO</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da32222483e826cc9ccb0f66dc2071e0de741f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_MAKE_REF</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224ed60cf32cdcb70d80c4f3d2932a51dd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_LIST</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224d4dbb2658a04e9dc9a98404d3f840cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_OP_CASE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4da5b60e43da67a253862f31da322224aec294c2f456dbb1d467165e992896c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PHP_SCOPE_ITEM_TYPE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>1f6ab5456834d620902ab42be8d84a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_SCOPE_NONE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>1f6ab5456834d620902ab42be8d84a0d960ebc7d23f590e8aed5c044a39c65ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_SCOPE_VAR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>1f6ab5456834d620902ab42be8d84a0d2fb3cbfa726cbede7668c4e2ac784934</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_SCOPE_FUNC</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>1f6ab5456834d620902ab42be8d84a0df5ee0465cd6640a8f1d629379a7330ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_SCOPE_CLASS</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>1f6ab5456834d620902ab42be8d84a0de278ebb6e4a52f7cc52bd0bc694ecea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_SCOPE_PARAM</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>1f6ab5456834d620902ab42be8d84a0d843bd131feef0d09cb7b31647d7fa542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PHP_STATMENT_TYPE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_EXPR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e420a325010667e5aa508bb26ee518d513f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_IF</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42af492b97e9feeef1bf949469731e604f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_WHILE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e428ea36de23d8c6b46a7efd53f0fc6d495</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_DO_WHILE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42e70b247898f7a4d692e845ec8d40d8e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_FOR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42f7389efc93bf9529396f736833717bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_FOREACH</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e4210f8b564dd3fd907e327daf4e964f58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_SWITCH</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42cf127225b68454e90e09c433461f5522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_CONTINUE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e429aba50d193a55d412b1c23ff74aabb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_BREAK</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42fa7d6ef5326c586033a76fe5e2bd3afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_RET</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42d8fd2b0be9590e47a07bffcd8ef0e94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_FUNC_DECL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e4258a7f94d6e2a40d321fc6ba812ab410c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_CLASS_DECL</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e42f1098ed479d5c18bdae5a2656fa7d4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ST_ECHO</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c6c51f99da341e013d8964607d309e4228e3a5a4c0c7bd9a1668d7e6c1e8699a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PHP_MSG_TYPE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>70e021e535957d5c6fff74e2e6388d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_MESAGE</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>70e021e535957d5c6fff74e2e6388d4c1a7c5d863f8561fb2e5522bc3c77bca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_WARNING</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>70e021e535957d5c6fff74e2e6388d4cdc7cba8353e7218e34c5234fd02c34f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_ERROR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>70e021e535957d5c6fff74e2e6388d4cae7d1cda12c72fd6d59637e9cb1a22ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHP_INTERNAL_ERROR</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>70e021e535957d5c6fff74e2e6388d4c34cd1a7603769042ca4268f93549b0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyerror</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>e339026e36d22be2539212b3d17b581e</anchor>
      <arglist>(char *err)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>cd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_dnum</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>f37cc42816a542f00e243c7fbcb1d982</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_fnum</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>52e391ae8289297f1e6d2f58b6e0e7b3</anchor>
      <arglist>(float number)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_str</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>8431ab2a1ec01cb8385b3ba6c38819a4</anchor>
      <arglist>(char *s, int unescape)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_const_exp_int_obj</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>515627ed48c4f88c96631f7b1e31c81c</anchor>
      <arglist>(void *obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_dnum</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>ac9df28b62f500df2c9fc6a223dd9ef6</anchor>
      <arglist>(PHP_VALUE_NODE *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_fnum</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>471b608e97be9bece1674ad716d5ea4b</anchor>
      <arglist>(PHP_VALUE_NODE *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_str</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>33bcd3cb72ef0671c7c524cbc3987703</anchor>
      <arglist>(PHP_VALUE_NODE *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_array</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c2ea8a5ec92e5770f8d62f274a5ca2a3</anchor>
      <arglist>(PHP_VALUE_NODE *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cast_value_bool</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>bc3f7e9ac43123adc7d0eaa4b154ea3f</anchor>
      <arglist>(PHP_VALUE_NODE *e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value_value_free</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>92d08c81530964e8a8717841c4d5f2cb</anchor>
      <arglist>(PHP_VALUE_NODE *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value_value_assign</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>605e7e60edb536313437bf73e322f657</anchor>
      <arglist>(PHP_VALUE_NODE *src, PHP_VALUE_NODE *dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>var_node_free</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>03d7ea31956d992a6fc735a26d366fbf</anchor>
      <arglist>(PHP_VAR_NODE *var)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_get_by_key</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>b8145b0449f92291a6622a1dc499f0ab</anchor>
      <arglist>(PHP_VALUE_NODE *array, PHP_VALUE_NODE *key)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_get_by_int_key</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>496fa6953df007e8e74b9ce807703b7f</anchor>
      <arglist>(PHP_VALUE_NODE *array, int key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_is_key_here</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4bdb3fc8caa548473179b7248148658d</anchor>
      <arglist>(PHP_VALUE_NODE *array, PHP_VALUE_NODE *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>array_get_size</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>33ab882544b67ad17df93efb992195f9</anchor>
      <arglist>(PHP_VALUE_NODE *array)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>array_push_back</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>cd6514e55215d376e5585260e74f9fb7</anchor>
      <arglist>(PHP_VALUE_NODE *array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>array_add_to_int_key</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>d7e5e76d6015759f2c80e1b54279ee46</anchor>
      <arglist>(PHP_VALUE_NODE *array, int key, PHP_VAR_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>array_set_by_key</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>459a80f16db51ea25b4ceade91bd26a3</anchor>
      <arglist>(PHP_VALUE_NODE *array, PHP_VALUE_NODE *key, PHP_VAR_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>make_array_var</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>67ff9332656c3a851cddb670f910aa09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_exp_1</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>9ef4941327c1e4c9825e36adb48bd8a3</anchor>
      <arglist>(PHP_EXP_OP op, PHP_EXP_NODE *operand)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_exp_2</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>00aaf688880668ac30c6ab0c7eba6b71</anchor>
      <arglist>(PHP_EXP_OP op, PHP_EXP_NODE *left, PHP_EXP_NODE *right)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_exp_2_self</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>6fe51f884e9546ec08ed1b39bb4679f0</anchor>
      <arglist>(PHP_EXP_OP op, PHP_EXP_NODE *self, PHP_EXP_NODE *right)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_known_const</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>2e187f303a3c3a04330070c1f1e24272</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_func_call_exp</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>497b18df534c228d1083253600201047</anchor>
      <arglist>(char *func_name, PHP_EXP_NODE *args)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_func_call_param_list</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>a7e5bed93853ae8023213105f5880d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>func_call_add_expr</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>948da434c4e38b4c784bfd2f3230624d</anchor>
      <arglist>(PHP_VAR_NODE *paramlist, PHP_EXP_NODE *arg, int byref)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_expr_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4e2ebaa7d6daf8362ea8d245406ba1de</anchor>
      <arglist>(PHP_STATMENT_TYPE type, PHP_EXP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_ifelse_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>d9715f366733cae983ab8bc477adeb0c</anchor>
      <arglist>(PHP_EXP_NODE *expr, PHP_SYN_NODE *then_node, PHP_SYN_NODE *elseif_list, PHP_SYN_NODE *else_node)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_while_loop_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c735fd1962156e239736a49214edb7b5</anchor>
      <arglist>(PHP_EXP_NODE *cond, PHP_SYN_NODE *code, int do_while)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_foreach_loop_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>e1aa45c3bd6942dfe81939691e2ce2c5</anchor>
      <arglist>(PHP_EXP_NODE *elems, PHP_EXP_NODE *i_key, PHP_EXP_NODE *i_val, PHP_SYN_NODE *code, int byref)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_for_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>3900c3c1b6a53cd5530add801ae86675</anchor>
      <arglist>(PHP_EXP_NODE *start, PHP_EXP_NODE *cond, PHP_EXP_NODE *next, PHP_SYN_NODE *code)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_class_decl_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>508ad2c85d75e9c0424c956f94cb4ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_func_decl_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>8b9fc051bd1ec04bd9ed5df5eebc2cf0</anchor>
      <arglist>(char *name, PHP_EXP_NODE *param_list)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SYN_NODE *</type>
      <name>make_switch_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c9b24f17c3886bceead7f1c6501dab49</anchor>
      <arglist>(PHP_EXP_NODE *cond, PHP_EXP_NODE *case_list)</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>make_func_param</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>5049612c8e86667166523e0ec7ea9232</anchor>
      <arglist>(PHP_EXP_NODE *list, PHP_EXP_NODE *var_exp_node, char *class_name, int byref)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>make_var_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c923975373332245d2e4c96866072b28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PHP_EXP_NODE *</type>
      <name>get_var_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>ee58cded1340db61d7deb630a8dd28ff</anchor>
      <arglist>(char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_var_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>09254b9efa7de138b01f91f87e5cc1da</anchor>
      <arglist>(PHP_VAR_NODE *v)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_TABLE</type>
      <name>make_scope_table</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>e0885e9068b7b4585c99a4906f1d9049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_scope_table</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>98282e06026dec87ac452c8cc133391e</anchor>
      <arglist>(PHP_SCOPE_TABLE scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>switch_push_scope_table</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>7ad0714ad2345fb5950a23c2378c5bea</anchor>
      <arglist>(PHP_SCOPE_TABLE new_table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>switch_pop_scope_table</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>53eb9d8f01124654a1d0b9e987d8f1bf</anchor>
      <arglist>(int old_free)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scope_reset_nonstatics</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>708f65c763bc8bd65b98a26603160352</anchor>
      <arglist>(PHP_SCOPE_TABLE scope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_func_2_scope</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>2669a1b960b2f0a70fa2cc6de21baa11</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_SYN_NODE *func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_class_2_scope</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>04a51af60ed7562f386e86cc6d73620d</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_SYN_NODE *class_node)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM *</type>
      <name>add_var_2_scope</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>faf3cd0951abf7d56c7d4942db0c5020</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_VAR_NODE *var, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get_scope_var_name</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>7d6aa47050e0d238650d353e150bc92a</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, PHP_VAR_NODE *var)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM_TYPE</type>
      <name>get_scope_item_type</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>73ae6e057a89f058aba33edd5af8e1ea</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>PHP_SCOPE_ITEM *</type>
      <name>get_scope_item</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>e301bcca15857e8f3598959e15d30af4</anchor>
      <arglist>(PHP_SCOPE_TABLE scope, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_engine_init</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>3c1df28e4be74f21f5082c0b13d1672f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_engine_free</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>06dc5e83d5686cb2ac6b5e5e33d730bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_syn_tree_free</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>919c8aee85ac57d74678d8707e52b550</anchor>
      <arglist>(PHP_SYN_NODE *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_exp_tree_free</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>e9a7429036e5c603479133ae57f8ff26</anchor>
      <arglist>(PHP_EXP_NODE *tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>php_execute</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>7ca9a4a6007976925afb5a6a9ed383e4</anchor>
      <arglist>(PHP_SYN_NODE *node, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_expr_eval</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>8093d8aa848ade077eac47dc7a2038ab</anchor>
      <arglist>(PHP_EXP_NODE *expr, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>PHP_VAR_NODE *</type>
      <name>php_expr_eval_lvalue</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>fd0c3bb930921c02bc9a70159b110d9a</anchor>
      <arglist>(PHP_EXP_NODE *expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_eval_simple_math</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>10fc469d9de154be191124fc19eb80ad</anchor>
      <arglist>(PHP_EXP_OP op, PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_eval_int_math</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>e2e0c1f294f7dadd965c7ad8c5f14211</anchor>
      <arglist>(PHP_EXP_OP op, PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_eval_compare</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>970258ea0cf6fe32ceb2ac8cc180be09</anchor>
      <arglist>(PHP_EXP_OP op, PHP_VALUE_NODE *op1, PHP_VALUE_NODE *op2, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_add_native_func</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>4870424a9436ae2c647a0c3910fdef6c</anchor>
      <arglist>(PHP_BLTIN_FUNC_DEF *def)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_add_native_class</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>3286b1bb3071a585b71d887809d7606e</anchor>
      <arglist>(char *name, PHP_NATIVE_PROP_GET_FUNC_PTR prop_get_native_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_run_func_call</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>fd5343fdec1fa8db3a243125e1fa1870</anchor>
      <arglist>(PHP_EXP_NODE *node, PHP_VALUE_NODE *result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>php_report_error</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c4dbbe2274c36ad6be3322f22eb84d58</anchor>
      <arglist>(PHP_MSG_TYPE mtype, char *msg,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_val_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>b67f8063c43b1dc1725a65c82b59ef5e</anchor>
      <arglist>(PHP_VALUE_NODE *node, int ident)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_exp_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>20070f2a187e4a6ade1a6087a641ae36</anchor>
      <arglist>(PHP_EXP_NODE *node, int ident)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_syn_node</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>c03d9325e7bcf2a616af005999fb5041</anchor>
      <arglist>(PHP_SYN_NODE *node, int ident)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yydebug</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>b138aa8e11f58bcdcc7134adf240ea8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>46af646807e0797e72b6e8945e7ea88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>d9264b77d56b6971f29739e2bda77f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yylineno</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>5e36364965360da7b7cdfc2188e0af84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>g_syn_tree_top</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>279b01db1ebf2440df9e51aa94492390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_TABLE</type>
      <name>g_global_scope</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>7d5e98ceccca46a515805f152d940cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_TABLE</type>
      <name>g_current_scope</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>a82095928b294aeecb8a85d7f7397cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_STACK</type>
      <name>g_scope_stack</name>
      <anchorfile>php__syntree_8h.html</anchorfile>
      <anchor>97ab282f9c118a514ceaf27d216e4571</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WebInterface.cpp</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>WebInterface_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>WebInterface.h</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>WebInterface_8h</filename>
    <class kind="class">CimulewebApp</class>
  </compound>
  <compound kind="file">
    <name>WebServer.cpp</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>WebServer_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>set_rgb_color_val</name>
      <anchorfile>WebServer_8cpp.html</anchorfile>
      <anchor>4b649c82008009bb9afdc196e11caf81</anchor>
      <arglist>(unsigned char *start, uint32 val, unsigned char mod)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>_SpecialChars</name>
      <anchorfile>WebServer_8cpp.html</anchorfile>
      <anchor>87705cc43fe4766b2c56d7da74aa9c05</anchor>
      <arglist>(wxString str)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetHigherPrio</name>
      <anchorfile>WebServer_8cpp.html</anchorfile>
      <anchor>80f5567320998e69fb717e8c2fb0bd1c</anchor>
      <arglist>(uint32 prio, bool autoprio)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetHigherPrioShared</name>
      <anchorfile>WebServer_8cpp.html</anchorfile>
      <anchor>78b341a58b17f78a65528cebd810ad1d</anchor>
      <arglist>(uint32 prio, bool autoprio)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetLowerPrio</name>
      <anchorfile>WebServer_8cpp.html</anchorfile>
      <anchor>6cd11bcf8636c45b26cc84a920e4eb1b</anchor>
      <arglist>(uint32 prio, bool autoprio)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetLowerPrioShared</name>
      <anchorfile>WebServer_8cpp.html</anchorfile>
      <anchor>28599d6bcf813a0baedeca3ad0e7998b</anchor>
      <arglist>(uint32 prio, bool autoprio)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WebServer.h</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>WebServer_8h</filename>
    <class kind="class">DownloadFile</class>
    <class kind="class">SharedFile</class>
    <class kind="class">ServerEntry</class>
    <class kind="class">UploadFile</class>
    <class kind="class">SearchFile</class>
    <class kind="class">ItemsContainer</class>
    <class kind="class">UpdatableItemsContainer</class>
    <class kind="class">UploadsInfo</class>
    <class kind="class">ServersInfo</class>
    <class kind="class">SharedFileInfo</class>
    <class kind="class">SearchInfo</class>
    <class kind="class">DownloadFileInfo</class>
    <class kind="class">CAnyImage</class>
    <class kind="class">CFileImage</class>
    <class kind="class">CImage3D_Modifiers</class>
    <class kind="class">CProgressImage</class>
    <class kind="struct">CProgressImage::Color_Gap_Struct</class>
    <class kind="class">CDynProgressImage</class>
    <class kind="class">CStatsData</class>
    <class kind="class">CStatsCollection</class>
    <class kind="class">CImageLib</class>
    <class kind="class">CUrlDecodeTable</class>
    <class kind="class">CParsedUrl</class>
    <class kind="struct">ThreadData</class>
    <class kind="class">CWebServerBase</class>
    <class kind="class">CSession</class>
    <class kind="class">CScriptWebServer</class>
    <class kind="class">CNoTemplateWebServer</class>
    <member kind="define">
      <type>#define</type>
      <name>SESSION_TIMEOUT_SECS</name>
      <anchorfile>WebServer_8h.html</anchorfile>
      <anchor>595c4697d93cba39b76960d14781cf86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHORT_FILENAME_LENGTH</name>
      <anchorfile>WebServer_8h.html</anchorfile>
      <anchor>25319b94f3f0811f755e187ad3df4779</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>_SpecialChars</name>
      <anchorfile>WebServer_8h.html</anchorfile>
      <anchor>87705cc43fe4766b2c56d7da74aa9c05</anchor>
      <arglist>(wxString str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WebSocket.cpp</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>WebSocket_8cpp</filename>
    <member kind="function">
      <type></type>
      <name>WX_DEFINE_ARRAY</name>
      <anchorfile>WebSocket_8cpp.html</anchorfile>
      <anchor>84b4ef2f1fed4f7f3932c568ecb1914b</anchor>
      <arglist>(CWCThread *, ArrayOfCWCThread)</arglist>
    </member>
    <member kind="variable">
      <type>ArrayOfCWCThread</type>
      <name>s_wcThreads</name>
      <anchorfile>WebSocket_8cpp.html</anchorfile>
      <anchor>6e09b7ab24b337133f454b22450789ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxMutex *</type>
      <name>s_mutex_wcThreads</name>
      <anchorfile>WebSocket_8cpp.html</anchorfile>
      <anchor>e466d9a0c722a57acf375f88e3f2fc8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>WebSocket.h</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>WebSocket_8h</filename>
    <class kind="class">CWebSocket</class>
    <class kind="class">CWebSocket::CChunk</class>
    <class kind="class">CWCThread</class>
    <class kind="class">CWSThread</class>
  </compound>
  <compound kind="class">
    <name>AbstractEuclideanDomain</name>
    <filename>classAbstractEuclideanDomain.html</filename>
    <templarg>T</templarg>
    <base>AbstractRing</base>
    <member kind="typedef">
      <type>T</type>
      <name>Element</name>
      <anchorfile>classAbstractEuclideanDomain.html</anchorfile>
      <anchor>02903b4c46289ca070e2e7668e532bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DivisionAlgorithm</name>
      <anchorfile>classAbstractEuclideanDomain.html</anchorfile>
      <anchor>a4c2e05ad97912b00f9f0845b4b4adca</anchor>
      <arglist>(Element &amp;r, Element &amp;q, const Element &amp;a, const Element &amp;d) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>Mod</name>
      <anchorfile>classAbstractEuclideanDomain.html</anchorfile>
      <anchor>e7b90c25ce6359bb25c40e1b7a283261</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Element &amp;</type>
      <name>Gcd</name>
      <anchorfile>classAbstractEuclideanDomain.html</anchorfile>
      <anchor>91957689dad55107d1c8c256d6dbf8b2</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Element</type>
      <name>result</name>
      <anchorfile>classAbstractEuclideanDomain.html</anchorfile>
      <anchor>f1314f064e73c560b3d31982c4e26404</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractGroup</name>
    <filename>classAbstractGroup.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Element</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>4a2b3308fb5c13f70fcc5746be52ba7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>15ec43995b991cdb5bb6d82f8b498cfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Equal</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>0d72cb663566b7c056f846a561547bec</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>Identity</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>929ba4e6a7d7d80344946efad0456d5b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>Add</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>a813430d9e4244de24c487d090eb5797</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>Inverse</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>b22563bc0dcb544399d7e22b3589e165</anchor>
      <arglist>(const Element &amp;a) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>InversionIsFast</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>c571ac9b67ad9b7ef893c715b1ec2f43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Element &amp;</type>
      <name>Double</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>94dc118db5baf11d04b91e38343174d0</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Element &amp;</type>
      <name>Subtract</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>ec47e8ec5a24a491315cdc26924e45ff</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Element &amp;</type>
      <name>Accumulate</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>45aa7c2240cb2f87184c7ad90df298ec</anchor>
      <arglist>(Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Element &amp;</type>
      <name>Reduce</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>2cc747d7e6b910e137942bd5c01e5b87</anchor>
      <arglist>(Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Element</type>
      <name>ScalarMultiply</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>bf1b8d510593fd5a9e8111580107741b</anchor>
      <arglist>(const Element &amp;a, const Integer &amp;e) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Element</type>
      <name>CascadeScalarMultiply</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>ca3e1ca578003aff2595cc8d73522894</anchor>
      <arglist>(const Element &amp;x, const Integer &amp;e1, const Element &amp;y, const Integer &amp;e2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SimultaneousMultiply</name>
      <anchorfile>classAbstractGroup.html</anchorfile>
      <anchor>00a5cd4b22aab947ec107ec93ad13122</anchor>
      <arglist>(Element *results, const Element &amp;base, const Integer *exponents, unsigned int exponentsCount) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractPolicyHolder</name>
    <filename>classAbstractPolicyHolder.html</filename>
    <templarg>POLICY_INTERFACE</templarg>
    <templarg>BASE</templarg>
    <base>BASE</base>
    <member kind="typedef">
      <type>POLICY_INTERFACE</type>
      <name>PolicyInterface</name>
      <anchorfile>classAbstractPolicyHolder.html</anchorfile>
      <anchor>febbd551c30ef32e3bbcbdf5bfecd303</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const POLICY_INTERFACE &amp;</type>
      <name>GetPolicy</name>
      <anchorfile>classAbstractPolicyHolder.html</anchorfile>
      <anchor>79ca3b9d0978014af386bba02cd7ae95</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual POLICY_INTERFACE &amp;</type>
      <name>AccessPolicy</name>
      <anchorfile>classAbstractPolicyHolder.html</anchorfile>
      <anchor>7a36ff9d4d887f3002b069fa4bb4c28c</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractRing</name>
    <filename>classAbstractRing.html</filename>
    <templarg>T</templarg>
    <base>AbstractGroup</base>
    <member kind="typedef">
      <type>T</type>
      <name>Element</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>cd93e8ce4e2897173310c68fcb60f3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractRing</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>e55c525c1aa75bf898907bd6949e2b64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractRing</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>cc8afd5ce95e32e45d3c30a710bf36dc</anchor>
      <arglist>(const AbstractRing &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>AbstractRing &amp;</type>
      <name>operator=</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>26709c02c869d09d756653ae1129f8a9</anchor>
      <arglist>(const AbstractRing &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsUnit</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>cc7079c244d980c670c329e483c4f107</anchor>
      <arglist>(const Element &amp;a) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>MultiplicativeIdentity</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>390832165268e39e2a1f3263e5b44627</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>Multiply</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>4ba8818fc72fa298cd52fd483bdd6ad4</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Element &amp;</type>
      <name>MultiplicativeInverse</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>ba109f4e7932d77a8251c1ec20627571</anchor>
      <arglist>(const Element &amp;a) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Element &amp;</type>
      <name>Square</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>dce7ac629f07850d5c45b473bed72ab0</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Element &amp;</type>
      <name>Divide</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>3240b133d9df74c34868c11901b304fe</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Element</type>
      <name>Exponentiate</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>23be7c80484bc46fd8beaa0a6aefa66d</anchor>
      <arglist>(const Element &amp;a, const Integer &amp;e) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Element</type>
      <name>CascadeExponentiate</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>cbe859e24ea6ee1e22ed2a1261f7f9d0</anchor>
      <arglist>(const Element &amp;x, const Integer &amp;e1, const Element &amp;y, const Integer &amp;e2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SimultaneousExponentiate</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>56b1047d5e1c57d9b3c52e20af464cfe</anchor>
      <arglist>(Element *results, const Element &amp;base, const Integer *exponents, unsigned int exponentsCount) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const AbstractGroup&lt; T &gt; &amp;</type>
      <name>MultiplicativeGroup</name>
      <anchorfile>classAbstractRing.html</anchorfile>
      <anchor>b48b7bf4c39d1b2bd06ac92e71e0b905</anchor>
      <arglist>() const </arglist>
    </member>
    <class kind="class">AbstractRing::MultiplicativeGroupT</class>
  </compound>
  <compound kind="class">
    <name>alc</name>
    <filename>classalc.html</filename>
    <base>wxApp</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classalc.html</anchorfile>
      <anchor>012fc253a9e743b771e0b72c0b328454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AlcFrame *</type>
      <name>GetMainFrame</name>
      <anchorfile>classalc.html</anchorfile>
      <anchor>dee2d40ec0a20ef7ab6ee37bbb5bf8bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxLocale</type>
      <name>m_locale</name>
      <anchorfile>classalc.html</anchorfile>
      <anchor>60c02c6d96ce3f8f8d5e4b63809be273</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>alcc</name>
    <filename>classalcc.html</filename>
    <base>wxApp</base>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>OnRun</name>
      <anchorfile>classalcc.html</anchorfile>
      <anchor>9a3f5f8e633c1d4b26fce8f94a94fe0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>OnExit</name>
      <anchorfile>classalcc.html</anchorfile>
      <anchor>c1b5bae97104d04589d1e51d2c179b1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxLocale</type>
      <name>m_locale</name>
      <anchorfile>classalcc.html</anchorfile>
      <anchor>8239cd5cd594dcb9ec42d8e43be67a1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlcFrame</name>
    <filename>classAlcFrame.html</filename>
    <base>wxFrame</base>
    <member kind="function">
      <type></type>
      <name>AlcFrame</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>ba8a0fc38628f6a7fa79aca29cb9a669</anchor>
      <arglist>(const wxString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AlcFrame</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>d7a9c73130aa05b502ec66227636b82b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Hook</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>7d72330a25a272240d3b0cc2f3e70754</anchor>
      <arglist>(int percent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarOpen</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>0d21dfed292fe8ca19c30e962ed3f8ce</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarSaveAs</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>58cce9a763dc975d7f8f5460d0f1c9e3</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarCopy</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>8d9dc8064730da9c0609508959c66b29</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarAbout</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>45b6098a0b2296776e02dcc631d409e7</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnCloseButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>ab451bb687b7c59f61ddfd09ebc34ab7</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnSaveAsButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>4cae485a4216d2952f1e7a05d9cfdfc3</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnCopyButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>719ab15521964141c1012247abf64d99</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnStartButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>223083ed8c2c6c89752632797197bcd5</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBrowseButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>6d4c9be5eba923f75be28009e487b89c</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAddUrlButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>e8214aebb46178afa98f4f1bd6e07cf5</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRemoveUrlButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>737cd31182536067a06269f2ac6dc472</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnClearUrlButton</name>
      <anchorfile>classAlcFrame.html</anchorfile>
      <anchor>9ea6bcfe57b9df7c617519a3239bc8c6</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlcPix</name>
    <filename>classAlcPix.html</filename>
    <member kind="function" static="yes">
      <type>static wxBitmap</type>
      <name>getPixmap</name>
      <anchorfile>classAlcPix.html</anchorfile>
      <anchor>1a0efd5a97232f22fcdb1f0ac71605f9</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Algorithm</name>
    <filename>classAlgorithm.html</filename>
    <base>Clonable</base>
    <member kind="function">
      <type></type>
      <name>Algorithm</name>
      <anchorfile>classAlgorithm.html</anchorfile>
      <anchor>1c77f5117ca2cd881baf26a364cfc606</anchor>
      <arglist>(bool checkSelfTestStatus=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>AlgorithmName</name>
      <anchorfile>classAlgorithm.html</anchorfile>
      <anchor>cd21c6715add4884fa043eaf51655039</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlgorithmImpl</name>
    <filename>classAlgorithmImpl.html</filename>
    <templarg>BASE</templarg>
    <templarg>ALGORITHM_INFO</templarg>
    <base>BASE</base>
    <member kind="function">
      <type>std::string</type>
      <name>AlgorithmName</name>
      <anchorfile>classAlgorithmImpl.html</anchorfile>
      <anchor>9d6e3714fc32c36789147d9f3b627eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classAlgorithmImpl.html</anchorfile>
      <anchor>4b388176a0c4853b2a3e747c5e637b95</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlgorithmParameters</name>
    <filename>classAlgorithmParameters.html</filename>
    <templarg>PARENT</templarg>
    <templarg>T</templarg>
    <base>AlgorithmParametersBase2</base>
    <member kind="function">
      <type></type>
      <name>AlgorithmParameters</name>
      <anchorfile>classAlgorithmParameters.html</anchorfile>
      <anchor>55945cd9dc5847b77c01e3da5284d354</anchor>
      <arglist>(const PARENT &amp;parent, const char *name, const T &amp;value, bool throwIfNotUsed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AlgorithmParameters</name>
      <anchorfile>classAlgorithmParameters.html</anchorfile>
      <anchor>c3a53177f57ab9178d8497de6d7a1f99</anchor>
      <arglist>(const AlgorithmParameters &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type>AlgorithmParameters&lt; AlgorithmParameters&lt; PARENT, T &gt;, R &gt;</type>
      <name>operator()</name>
      <anchorfile>classAlgorithmParameters.html</anchorfile>
      <anchor>54367e06e982104cc46079a992f66d4f</anchor>
      <arglist>(const char *name, const R &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>AlgorithmParameters&lt; AlgorithmParameters&lt; PARENT, T &gt;, R &gt;</type>
      <name>operator()</name>
      <anchorfile>classAlgorithmParameters.html</anchorfile>
      <anchor>d2c0754720343a1e608a6020cafc1ea3</anchor>
      <arglist>(const char *name, const R &amp;value, bool throwIfNotUsed) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlgorithmParametersBase</name>
    <filename>classAlgorithmParametersBase.html</filename>
    <base>NameValuePairs</base>
    <member kind="function">
      <type></type>
      <name>AlgorithmParametersBase</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>f156d30961a335fa134d25fd60d13afa</anchor>
      <arglist>(const char *name, bool throwIfNotUsed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AlgorithmParametersBase</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>87c15a05d1fecaf33b91adf444c751f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVoidValue</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>9ee511c8f6b7807f05bb16c659c69135</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>AssignValue</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>47951eae19024ac7244d5ca95baba46a</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const NameValuePairs &amp;</type>
      <name>GetParent</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>61593dee14fcee89bf3c76d3ca1fa016</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>m_name</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>35cb481a90a884f7eb61de6fabfb83a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_throwIfNotUsed</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>2874ec341abb4c70e4f1b5ca05859035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_used</name>
      <anchorfile>classAlgorithmParametersBase.html</anchorfile>
      <anchor>3642eca6b27ce691a8289a6b99a8769d</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">AlgorithmParametersBase::ParameterNotUsed</class>
  </compound>
  <compound kind="class">
    <name>AlgorithmParametersBase::ParameterNotUsed</name>
    <filename>classAlgorithmParametersBase_1_1ParameterNotUsed.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>ParameterNotUsed</name>
      <anchorfile>classAlgorithmParametersBase_1_1ParameterNotUsed.html</anchorfile>
      <anchor>526f3285344b14ef66c8b5da20f79331</anchor>
      <arglist>(const char *name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlgorithmParametersBase2</name>
    <filename>classAlgorithmParametersBase2.html</filename>
    <templarg>T</templarg>
    <base>AlgorithmParametersBase</base>
    <member kind="function">
      <type></type>
      <name>AlgorithmParametersBase2</name>
      <anchorfile>classAlgorithmParametersBase2.html</anchorfile>
      <anchor>4dd77322bfda5dffb9e5bdf84247dc60</anchor>
      <arglist>(const char *name, const T &amp;value, bool throwIfNotUsed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignValue</name>
      <anchorfile>classAlgorithmParametersBase2.html</anchorfile>
      <anchor>5e4fd4f340db156bbd9111ceaf48160a</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>m_value</name>
      <anchorfile>classAlgorithmParametersBase2.html</anchorfile>
      <anchor>4c2179db7b3913dcda6e12c31789088a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AllocatorBase</name>
    <filename>classAllocatorBase.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>461f6d214f73761bb656a76db8f608c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>size_type</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>dda200f657efdba2d08e80ee9a7f244d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>10c1b15630e208c28183b72debcff98c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>719f87a9b5da234dbc8c8c1c88be253c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>3ac778a475e77ea22ff8e7bea2aa983e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>151889fd23094bf841959ab226708f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>3ad08c82939fd8b18621a1d870a0d10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>address</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>e870664a08034d17cbdc98073fa3d21d</anchor>
      <arglist>(reference r) const </arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>address</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>eb51730b092c484ce8dd86dc078ed207</anchor>
      <arglist>(const_reference r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>4816881defdf38aa120c70a03b7da903</anchor>
      <arglist>(pointer p, const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>740cc02314cba092678ab0545fa6967b</anchor>
      <arglist>(pointer p)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>8934ed4b81ee379ca6e7639987b1927e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>CheckSize</name>
      <anchorfile>classAllocatorBase.html</anchorfile>
      <anchor>1ffea05c1944ec2b9f8fcff4cd9ee717</anchor>
      <arglist>(size_t n)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AllocatorWithCleanup</name>
    <filename>classAllocatorWithCleanup.html</filename>
    <templarg>T</templarg>
    <base>AllocatorBase</base>
    <member kind="function">
      <type>CRYPTOPP_INHERIT_ALLOCATOR_TYPES pointer</type>
      <name>allocate</name>
      <anchorfile>classAllocatorWithCleanup.html</anchorfile>
      <anchor>043bb2f9e206ec083c51b09a3d5f5bbe</anchor>
      <arglist>(size_type n, const void *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocate</name>
      <anchorfile>classAllocatorWithCleanup.html</anchorfile>
      <anchor>227cd765926103360669a9467a0aca61</anchor>
      <arglist>(void *p, size_type n)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>reallocate</name>
      <anchorfile>classAllocatorWithCleanup.html</anchorfile>
      <anchor>45e2767bc746367746d9dcc4985f8472</anchor>
      <arglist>(T *p, size_type oldSize, size_type newSize, bool preserve)</arglist>
    </member>
    <class kind="struct">AllocatorWithCleanup::rebind</class>
  </compound>
  <compound kind="struct">
    <name>AllocatorWithCleanup::rebind</name>
    <filename>structAllocatorWithCleanup_1_1rebind.html</filename>
    <templarg>U</templarg>
    <member kind="typedef">
      <type>AllocatorWithCleanup&lt; U &gt;</type>
      <name>other</name>
      <anchorfile>structAllocatorWithCleanup_1_1rebind.html</anchorfile>
      <anchor>e7cd70f7b78bf333e477cf45f013e2c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArraySink</name>
    <filename>classArraySink.html</filename>
    <base>Bufferless&lt; Sink &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArraySink</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>70d9e1c3231cb190831fd16e132ace2b</anchor>
      <arglist>(const NameValuePairs &amp;parameters=g_nullNameValuePairs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArraySink</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>bb296afcb0ca9bfb79d8eded4c44f756</anchor>
      <arglist>(byte *buf, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>AvailableSize</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>aada185df65001a8a941d676c5de9313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>TotalPutLength</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>ac25e950c9218fea582fdbc5cab7eb7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>0b677032fc5455f0ad134d4271ac40c3</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>CreatePutSpace</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>e3500b3718dd467d7b6920795a875113</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>1d79b4cc8610824b02630283a669d667</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>byte *</type>
      <name>m_buf</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>bc61873fb8764a6b2c51e352b4723879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_size</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>95ae19122073c2c6ce2473d94060f51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned long</type>
      <name>m_total</name>
      <anchorfile>classArraySink.html</anchorfile>
      <anchor>e70f8226f29367be6cef1ff57138c308</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayXorSink</name>
    <filename>classArrayXorSink.html</filename>
    <base>ArraySink</base>
    <member kind="function">
      <type></type>
      <name>ArrayXorSink</name>
      <anchorfile>classArrayXorSink.html</anchorfile>
      <anchor>36551c78c4a273f8497c83077f84ca3a</anchor>
      <arglist>(byte *buf, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classArrayXorSink.html</anchorfile>
      <anchor>df3eb3be1be5964bcca870e3bed6b74f</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>CreatePutSpace</name>
      <anchorfile>classArrayXorSink.html</anchorfile>
      <anchor>8b35a85862fdd51859924176d4ef2284</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ASN1CryptoMaterial</name>
    <filename>classASN1CryptoMaterial.html</filename>
    <base virtualness="virtual">ASN1Object</base>
    <base virtualness="virtual">CryptoMaterial</base>
    <member kind="function">
      <type>void</type>
      <name>Save</name>
      <anchorfile>classASN1CryptoMaterial.html</anchorfile>
      <anchor>8813db9357015f1057139b181db32199</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Load</name>
      <anchorfile>classASN1CryptoMaterial.html</anchorfile>
      <anchor>849f5c991042d6566b34f923c924b54d</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ASN1Key</name>
    <filename>classASN1Key.html</filename>
    <base>ASN1CryptoMaterial</base>
    <member kind="function" virtualness="pure">
      <type>virtual OID</type>
      <name>GetAlgorithmID</name>
      <anchorfile>classASN1Key.html</anchorfile>
      <anchor>d815a612d05b466e121cf148ee9479c5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>BERDecodeAlgorithmParameters</name>
      <anchorfile>classASN1Key.html</anchorfile>
      <anchor>0e05a49c97fc648c376cce763982181c</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DEREncodeAlgorithmParameters</name>
      <anchorfile>classASN1Key.html</anchorfile>
      <anchor>7be87f6c1e68dad5f6a59e314cf362a1</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>BERDecodeKey</name>
      <anchorfile>classASN1Key.html</anchorfile>
      <anchor>c4de2ab27b17aca15a5cae9a632b87df</anchor>
      <arglist>(BufferedTransformation &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>BERDecodeKey2</name>
      <anchorfile>classASN1Key.html</anchorfile>
      <anchor>d41f320f623f7eb04abf261db89076d3</anchor>
      <arglist>(BufferedTransformation &amp;bt, bool, unsigned int)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DEREncodeKey</name>
      <anchorfile>classASN1Key.html</anchorfile>
      <anchor>058496eca96347d59caffd03c9b5de39</anchor>
      <arglist>(BufferedTransformation &amp;bt) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ASN1Object</name>
    <filename>classASN1Object.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ASN1Object</name>
      <anchorfile>classASN1Object.html</anchorfile>
      <anchor>d852be6b1fd4482e21b3f6e2dcd851d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>BERDecode</name>
      <anchorfile>classASN1Object.html</anchorfile>
      <anchor>430af8c994bc78d996067247fa5a0770</anchor>
      <arglist>(BufferedTransformation &amp;bt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DEREncode</name>
      <anchorfile>classASN1Object.html</anchorfile>
      <anchor>10e40187a6ba048dfc8a2c8ca5c6c2ec</anchor>
      <arglist>(BufferedTransformation &amp;bt) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>BEREncode</name>
      <anchorfile>classASN1Object.html</anchorfile>
      <anchor>b8446b61690a19015d3d565d86dd1d3d</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssignFromHelperClass</name>
    <filename>classAssignFromHelperClass.html</filename>
    <templarg>T</templarg>
    <templarg>BASE</templarg>
    <member kind="function">
      <type></type>
      <name>AssignFromHelperClass</name>
      <anchorfile>classAssignFromHelperClass.html</anchorfile>
      <anchor>797db37f8aa7d7f59e9b4b595bc66ed6</anchor>
      <arglist>(T *pObject, const NameValuePairs &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>AssignFromHelperClass &amp;</type>
      <name>operator()</name>
      <anchorfile>classAssignFromHelperClass.html</anchorfile>
      <anchor>27a532c78379e64b09cf830893d69be0</anchor>
      <arglist>(const char *name, void(T::*pm)(R))</arglist>
    </member>
    <member kind="function">
      <type>AssignFromHelperClass &amp;</type>
      <name>operator()</name>
      <anchorfile>classAssignFromHelperClass.html</anchorfile>
      <anchor>e405d308e1aa394aeb0ffe9b8cffed32</anchor>
      <arglist>(const char *name1, const char *name2, void(T::*pm)(R, S))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AsymmetricAlgorithm</name>
    <filename>classAsymmetricAlgorithm.html</filename>
    <base>Algorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual CryptoMaterial &amp;</type>
      <name>AccessMaterial</name>
      <anchorfile>classAsymmetricAlgorithm.html</anchorfile>
      <anchor>d99d55413166b69a0a12e10d111926c8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const CryptoMaterial &amp;</type>
      <name>GetMaterial</name>
      <anchorfile>classAsymmetricAlgorithm.html</anchorfile>
      <anchor>df9cc798c5a2d20ab3436dbad8e6df2d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classAsymmetricAlgorithm.html</anchorfile>
      <anchor>522dbfcd5c1a46bf1be301cec26d6534</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classAsymmetricAlgorithm.html</anchorfile>
      <anchor>2d704079890783422b0a44653480ab83</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AutoSignaling</name>
    <filename>classAutoSignaling.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>AutoSignaling</name>
      <anchorfile>classAutoSignaling.html</anchorfile>
      <anchor>a4972f0ce40ede0292d7d74532570d3c</anchor>
      <arglist>(int propagation=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoSignalPropagation</name>
      <anchorfile>classAutoSignaling.html</anchorfile>
      <anchor>e63c0428295aeec8ffd9557ef1d86db9</anchor>
      <arglist>(int propagation)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetAutoSignalPropagation</name>
      <anchorfile>classAutoSignaling.html</anchorfile>
      <anchor>8dda9fc737e8b23c62f5534df7cb35f2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BASE</name>
    <filename>classBASE.html</filename>
  </compound>
  <compound kind="class">
    <name>Base64Decoder</name>
    <filename>classBase64Decoder.html</filename>
    <base>BaseN_Decoder</base>
    <member kind="function">
      <type></type>
      <name>Base64Decoder</name>
      <anchorfile>classBase64Decoder.html</anchorfile>
      <anchor>a21a74a50f1fa79b255d9466bd9a87fc</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classBase64Decoder.html</anchorfile>
      <anchor>c6b50ab1f0c7de093d101d29bf8ea224</anchor>
      <arglist>(const NameValuePairs &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Base64Encoder</name>
    <filename>classBase64Encoder.html</filename>
    <base>SimpleProxyFilter</base>
    <member kind="function">
      <type></type>
      <name>Base64Encoder</name>
      <anchorfile>classBase64Encoder.html</anchorfile>
      <anchor>c0ac934fda9b7bc7df73635fc3313647</anchor>
      <arglist>(BufferedTransformation *attachment=NULL, bool insertLineBreaks=true, int maxLineLength=72)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classBase64Encoder.html</anchorfile>
      <anchor>fc7466a518ec03be6d36696df3ff50a6</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BaseN_Decoder</name>
    <filename>classBaseN__Decoder.html</filename>
    <base>Unflushable&lt; Filter &gt;</base>
    <member kind="function">
      <type></type>
      <name>BaseN_Decoder</name>
      <anchorfile>classBaseN__Decoder.html</anchorfile>
      <anchor>4d109d2956d9184e51ee96efe5f04289</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BaseN_Decoder</name>
      <anchorfile>classBaseN__Decoder.html</anchorfile>
      <anchor>21381ad5fe63385d7cd6301391dcc742</anchor>
      <arglist>(const int *lookup, int log2base, BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classBaseN__Decoder.html</anchorfile>
      <anchor>7c82c37a6626042f2e0eb65307e039b7</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classBaseN__Decoder.html</anchorfile>
      <anchor>3f8c072dccddc1d67b1c290f8616fd33</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>InitializeDecodingLookupArray</name>
      <anchorfile>classBaseN__Decoder.html</anchorfile>
      <anchor>a71d01a986edd08447afe2d906d35283</anchor>
      <arglist>(int *lookup, const byte *alphabet, unsigned int base, bool caseInsensitive)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BaseN_Encoder</name>
    <filename>classBaseN__Encoder.html</filename>
    <base>Unflushable&lt; Filter &gt;</base>
    <member kind="function">
      <type></type>
      <name>BaseN_Encoder</name>
      <anchorfile>classBaseN__Encoder.html</anchorfile>
      <anchor>d81ec041d8edf8d2b7d4bae384d68bb0</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BaseN_Encoder</name>
      <anchorfile>classBaseN__Encoder.html</anchorfile>
      <anchor>398208a2300b000ee5f4f1a0957118bb</anchor>
      <arglist>(const byte *alphabet, int log2base, BufferedTransformation *attachment=NULL, int padding=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classBaseN__Encoder.html</anchorfile>
      <anchor>582dc45cf37f86fce3ea6d1c8e6bde5d</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classBaseN__Encoder.html</anchorfile>
      <anchor>dc5cd2f0f697f281742749f68c708d7d</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BERDecodeErr</name>
    <filename>classBERDecodeErr.html</filename>
    <base>InvalidArgument</base>
    <member kind="function">
      <type></type>
      <name>BERDecodeErr</name>
      <anchorfile>classBERDecodeErr.html</anchorfile>
      <anchor>6e54bdae04dbea477d9a01b7af8eaaeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BERDecodeErr</name>
      <anchorfile>classBERDecodeErr.html</anchorfile>
      <anchor>19700ba11f5c1839499fa5ebb8eba8fc</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BERGeneralDecoder</name>
    <filename>classBERGeneralDecoder.html</filename>
    <base>Store</base>
    <member kind="function">
      <type></type>
      <name>BERGeneralDecoder</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>4044a915e770a703520a2349730ace38</anchor>
      <arglist>(BufferedTransformation &amp;inQueue, byte asnTag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BERGeneralDecoder</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>a95f58ca2fb775aa5f3f355e6bfb43ee</anchor>
      <arglist>(BERGeneralDecoder &amp;inQueue, byte asnTag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BERGeneralDecoder</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>8cebe14033da47fefc83396bfd463f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDefiniteLength</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>5d5551c010d907d417c9afbde08d4eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>RemainingLength</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>6ccf7af5ad4a581dcf6ccfdc5d57a8f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndReached</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>96f80a33071119a37de9f5cd9cd73990</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>PeekByte</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>84a7e1a9313b1086b1cb9084f569c933</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckByte</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>f420c75709d4e5d8a5a1253ce458d882</anchor>
      <arglist>(byte b)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>8c872b8b0d952260567a8e20d76220d3</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>52981df24bd833eac5eaa79fbb968148</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MessageEnd</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>40b14625c98ac7febb8ca218d02358ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BufferedTransformation &amp;</type>
      <name>m_inQueue</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>29c44ea3a6c6cdf63c58046d8ab22266</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_finished</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>5eb4279b5ed2b47bc9811d4bff81b532</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_definiteLength</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>a9337ce30f65285a708bcb91b12524c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_length</name>
      <anchorfile>classBERGeneralDecoder.html</anchorfile>
      <anchor>cbc39c2f4877035e63b61b1b4f53a300</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BERSequenceDecoder</name>
    <filename>classBERSequenceDecoder.html</filename>
    <base>BERGeneralDecoder</base>
    <member kind="function">
      <type></type>
      <name>BERSequenceDecoder</name>
      <anchorfile>classBERSequenceDecoder.html</anchorfile>
      <anchor>312b01423afcd1c503fa670cdaa7b9d7</anchor>
      <arglist>(BufferedTransformation &amp;inQueue, byte asnTag=SEQUENCE|CONSTRUCTED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BERSequenceDecoder</name>
      <anchorfile>classBERSequenceDecoder.html</anchorfile>
      <anchor>c896712e69bf4e2d59292c662e44578f</anchor>
      <arglist>(BERSequenceDecoder &amp;inQueue, byte asnTag=SEQUENCE|CONSTRUCTED)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BitBucket</name>
    <filename>classBitBucket.html</filename>
    <base>Bufferless&lt; Sink &gt;</base>
    <member kind="function">
      <type>std::string</type>
      <name>AlgorithmName</name>
      <anchorfile>classBitBucket.html</anchorfile>
      <anchor>abe913bbc5c44567163211418bc43333</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classBitBucket.html</anchorfile>
      <anchor>ccd9ae3741b7fcea0f607ba1bcd7aa60</anchor>
      <arglist>(const NameValuePairs &amp;)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classBitBucket.html</anchorfile>
      <anchor>39dc2b70ee8ff70024fbed95dc91441e</anchor>
      <arglist>(const byte *, unsigned int, int, bool)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BlockCipherFinal</name>
    <filename>classBlockCipherFinal.html</filename>
    <templarg>DIR</templarg>
    <templarg>BASE</templarg>
    <base>ClonableImpl&lt; BlockCipherFinal&lt; DIR, BASE &gt;, BASE &gt;</base>
    <member kind="function">
      <type></type>
      <name>BlockCipherFinal</name>
      <anchorfile>classBlockCipherFinal.html</anchorfile>
      <anchor>afec948b5a888b28555be33a39934775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockCipherFinal</name>
      <anchorfile>classBlockCipherFinal.html</anchorfile>
      <anchor>c55f08ebf73f9ce14e3d2c8c3912a6c2</anchor>
      <arglist>(const byte *key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockCipherFinal</name>
      <anchorfile>classBlockCipherFinal.html</anchorfile>
      <anchor>53134cef480c088494fdc67b30e40645</anchor>
      <arglist>(const byte *key, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockCipherFinal</name>
      <anchorfile>classBlockCipherFinal.html</anchorfile>
      <anchor>21d63a817d5f3906819a88906a1bf13f</anchor>
      <arglist>(const byte *key, unsigned int length, unsigned int rounds)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsForwardTransformation</name>
      <anchorfile>classBlockCipherFinal.html</anchorfile>
      <anchor>cf2ff995cd139db5e0db4e08dca53b0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKey</name>
      <anchorfile>classBlockCipherFinal.html</anchorfile>
      <anchor>d46482175adcde6f5c877d1f3711657e</anchor>
      <arglist>(const byte *key, unsigned int length, const NameValuePairs &amp;param=g_nullNameValuePairs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BlockCipherImpl</name>
    <filename>classBlockCipherImpl.html</filename>
    <templarg>INFO</templarg>
    <templarg>BASE</templarg>
    <base>AlgorithmImpl&lt; SimpleKeyingInterfaceImpl&lt; TwoBases&lt; BASE, INFO &gt; &gt; &gt;</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>BlockSize</name>
      <anchorfile>classBlockCipherImpl.html</anchorfile>
      <anchor>c6fb64d3b68308c15f5abfdb674e9cd4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BlockTransformation</name>
    <filename>classBlockTransformation.html</filename>
    <base>Algorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ProcessAndXorBlock</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>1904cf145e4c5c650dd7aff32f54e153</anchor>
      <arglist>(const byte *inBlock, const byte *xorBlock, byte *outBlock) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessBlock</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>2fefb3f4c6c6297c0c91fcbba9e4f4f3</anchor>
      <arglist>(const byte *inBlock, byte *outBlock) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessBlock</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>12cc1846de571557be0f82471e8904bf</anchor>
      <arglist>(byte *inoutBlock) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>BlockSize</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>dfdb78b033996020435c3dcffdca76ce</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>BlockAlignment</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>570d635725c9fd8b96f61e25019462ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsPermutation</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>8d154fdac89307d9edbd2a5ab97fa080</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsForwardTransformation</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>50f2565057bc9ba7bb70a98d9c9b39cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>OptimalNumberOfParallelBlocks</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>7aceb4c214d901e9cc416b05d40eb282</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessAndXorMultipleBlocks</name>
      <anchorfile>classBlockTransformation.html</anchorfile>
      <anchor>6a75827264e29d3c40dd06ef4aea3ebb</anchor>
      <arglist>(const byte *inBlocks, const byte *xorBlocks, byte *outBlocks, unsigned int numberOfBlocks) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BufferedTransformation</name>
    <filename>classBufferedTransformation.html</filename>
    <base>Algorithm</base>
    <base>Waitable</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>cca1e1ea704d11998ecb0aec994c1632</anchor>
      <arglist>(byte inByte, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>8fe885dc80575932eec3853a8c554d2b</anchor>
      <arglist>(const byte *inString, unsigned int length, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PutWord16</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>36a7d05965c6b43daa3fc2c93d521c90</anchor>
      <arglist>(word16 value, ByteOrder order=BIG_ENDIAN_ORDER, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PutWord32</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>ad78f114320a31d07f6c5b4f656a1c4d</anchor>
      <arglist>(word32 value, ByteOrder order=BIG_ENDIAN_ORDER, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual byte *</type>
      <name>CreatePutSpace</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>ba9858f466ace96bbbc281c5bc265b03</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>CanModifyInput</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>d130a75276220463bd261b3904576385</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PutModifiable</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>1c0fab30160507191eb84e669412dc8b</anchor>
      <arglist>(byte *inString, unsigned int length, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MessageEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>20ae0ef2e4ff338b43849e541e9b940f</anchor>
      <arglist>(int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PutMessageEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>d137b773d7d15be27415bc71ba3aea68</anchor>
      <arglist>(const byte *inString, unsigned int length, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>Put2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>32741d0f8c368d85f7b79e166dcf9329</anchor>
      <arglist>(const byte *inString, unsigned int length, int messageEnd, bool blocking)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>PutModifiable2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>19ad8f5c4419222a99080d509218e815</anchor>
      <arglist>(byte *inString, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetMaxWaitObjectCount</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>99cd939cda477af4d8e09bf15c692dc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetWaitObjects</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>eb9de24d4131cb213343ab590b15959a</anchor>
      <arglist>(WaitObjectContainer &amp;container)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>36bfbaf667770364991aa025965d6c19</anchor>
      <arglist>(const NameValuePairs &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>68044dc8d57bc02edee1ce02b459a63d</anchor>
      <arglist>(bool hardFlush, bool blocking)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsolatedMessageSeriesEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>c25bb398295832f9fa25f75726dcd186</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>0dd5456c06e0e47d901e8055b50df929</anchor>
      <arglist>(const NameValuePairs &amp;parameters=g_nullNameValuePairs, int propagation=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Flush</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>8a62b1b6c8f310363f32b05b20c306eb</anchor>
      <arglist>(bool hardFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>MessageSeriesEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>ae4c5ae024419e31bfa0c24eb35b24c2</anchor>
      <arglist>(int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetAutoSignalPropagation</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>4618306dda5262940ad5aef4eda7842b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>GetAutoSignalPropagation</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>7367757722f390fae20607afe0f916c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>MaxRetrievable</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>84fa154df5e28b0618cb0be9ac54be0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>AnyRetrievable</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>d5ee1b2a57700142f9c51e5a94703fc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>Get</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>92183643210e320911aefc57adeaa382</anchor>
      <arglist>(byte &amp;outByte)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>Get</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>8db17f81922af94af01eab1e8074eb0d</anchor>
      <arglist>(byte *outString, unsigned int getMax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>Peek</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>404513872cc4cad049091b3b2ef58b64</anchor>
      <arglist>(byte &amp;outByte) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>Peek</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>4c92b46a7268978559045b7431618a7c</anchor>
      <arglist>(byte *outString, unsigned int peekMax) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetWord16</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>b181e90a22ac140a172cf4e15c4acb19</anchor>
      <arglist>(word16 &amp;value, ByteOrder order=BIG_ENDIAN_ORDER)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetWord32</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>5e63e98597a1ce008b736c3fcb1985e6</anchor>
      <arglist>(word32 &amp;value, ByteOrder order=BIG_ENDIAN_ORDER)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PeekWord16</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>1814a443bd23d1947fbda4f3bc7d20f8</anchor>
      <arglist>(word16 &amp;value, ByteOrder order=BIG_ENDIAN_ORDER)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PeekWord32</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>aeaacb513bc6717774e546df8659e333</anchor>
      <arglist>(word32 &amp;value, ByteOrder order=BIG_ENDIAN_ORDER)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>TransferTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>6b1e4ddb6f71d0619d94644f74b22703</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long transferMax=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>Skip</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>a448218ac364202012390f8190e16836</anchor>
      <arglist>(unsigned long skipMax=ULONG_MAX)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>CopyTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>c2b5d76f7d2187640943f8b489a6e09b</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long copyMax=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>CopyRangeTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>dfc32943a509ce723c09c6cc453df576</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long position, unsigned long copyMax=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned long</type>
      <name>TotalBytesRetrievable</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>22be6fbb18f32ea8fab080c405116f45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>NumberOfMessages</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>318ef5010ac587977656dae56dfc5085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>AnyMessages</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>76b40ce3c88455c69f06234d609a0e4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetNextMessage</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>8dc8562950fd563f7c62d1f1e5ec6b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>SkipMessages</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>ce560f14489f478bb4cd17c41905774e</anchor>
      <arglist>(unsigned int count=UINT_MAX)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferMessagesTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>c80a018cfc3eb7c4ae3f0d4a804eb6d5</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int count=UINT_MAX, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyMessagesTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>83945ad467ad20665cfb0a9a9a46ebec</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int count=UINT_MAX, const std::string &amp;channel=NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SkipAll</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>aae2c7846a506939b40c2c8b708af1d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TransferAllTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>80b60bff9f62976c15effdbc45cbc5f1</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyAllTo</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>82c31b089c82fe3ded811b283422aa7c</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel=NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetNextMessageSeries</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>eb36a158b63cfd54acbada1a3699598c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>NumberOfMessagesInThisSeries</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>50e09cbbc84c5c1e098c79ca88c42158</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>NumberOfMessageSeries</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>37e7c54c2be0451f4a8d395c228b1061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>1ee7e7bafdb6d0f5cd52279c79f635a0</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;byteCount, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>7c62215483fcc465b91c36d0ea7d5683</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const =0</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferMessagesTo2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>f39e1f69240d25610886420723dd96d1</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int &amp;messageCount, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferAllTo2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>1d376fe72a92b7e28e4f889ce0ce6831</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPut</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>88bfa9f67948a2d686038758574d6e74</anchor>
      <arglist>(const std::string &amp;channel, byte inByte, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPut</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>503f4d01c29be6aac8014ec82e5d6b2f</anchor>
      <arglist>(const std::string &amp;channel, const byte *inString, unsigned int length, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPutModifiable</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>a177a74f983a295e9a0e18ed601a5974</anchor>
      <arglist>(const std::string &amp;channel, byte *inString, unsigned int length, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPutWord16</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>9c019a945f6073e4870268ff69664834</anchor>
      <arglist>(const std::string &amp;channel, word16 value, ByteOrder order=BIG_ENDIAN_ORDER, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPutWord32</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>78b58ad6a61e435469076c449a3442d7</anchor>
      <arglist>(const std::string &amp;channel, word32 value, ByteOrder order=BIG_ENDIAN_ORDER, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChannelMessageEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>e0b37b299c5835083e58b205f9cc25cc</anchor>
      <arglist>(const std::string &amp;channel, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPutMessageEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>137a568b1247473c1cb36caf349b35ea</anchor>
      <arglist>(const std::string &amp;channel, const byte *inString, unsigned int length, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual byte *</type>
      <name>ChannelCreatePutSpace</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>ed5a037e3f93411d3d00aa7a2d26c039</anchor>
      <arglist>(const std::string &amp;channel, unsigned int &amp;size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>ChannelPut2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>5aef4c233ec62ce2c0260b960669c8e8</anchor>
      <arglist>(const std::string &amp;channel, const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>ChannelPutModifiable2</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>4b0c8b82afc475f3356d0220b315ff22</anchor>
      <arglist>(const std::string &amp;channel, byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ChannelFlush</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>6b504b2694ecb5d709a9858c5b93a0f7</anchor>
      <arglist>(const std::string &amp;channel, bool hardFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ChannelMessageSeriesEnd</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>e0fc63d42d94958f71fc573b17469921</anchor>
      <arglist>(const std::string &amp;channel, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetRetrievalChannel</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>eeb151c318a472c5f1cf41617f3414a5</anchor>
      <arglist>(const std::string &amp;channel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Attachable</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>20112606fc006c56f1561653cabd9542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BufferedTransformation *</type>
      <name>AttachedTransformation</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>ba6bbc169e26ed77a6bb5d50f91abda0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const BufferedTransformation *</type>
      <name>AttachedTransformation</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>a335cadbf21ff23876ad9aa67ef215f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Detach</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>58a0042005f76d95daa20a75611722bb</anchor>
      <arglist>(BufferedTransformation *=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Attach</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>9f6cbec970dcb509b23a08fb28b3e055</anchor>
      <arglist>(BufferedTransformation *newAttachment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BufferedTransformation</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>61bf430b7aa268991e3da82b74db1634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferedTransformation &amp;</type>
      <name>Ref</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>25686ebe4c3ba26e7eeaae1dcd4d4215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>NULL_CHANNEL</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>5e938c68f2a5e32a03440b1dc2bdc74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>DecrementPropagation</name>
      <anchorfile>classBufferedTransformation.html</anchorfile>
      <anchor>0dc1428070dce0ce5651d775593ccce0</anchor>
      <arglist>(int propagation)</arglist>
    </member>
    <class kind="struct">BufferedTransformation::BlockingInputOnly</class>
    <class kind="struct">BufferedTransformation::NoChannelSupport</class>
  </compound>
  <compound kind="struct">
    <name>BufferedTransformation::BlockingInputOnly</name>
    <filename>structBufferedTransformation_1_1BlockingInputOnly.html</filename>
    <base>NotImplemented</base>
    <member kind="function">
      <type></type>
      <name>BlockingInputOnly</name>
      <anchorfile>structBufferedTransformation_1_1BlockingInputOnly.html</anchorfile>
      <anchor>55cb3a986ad96a59f566d8b2ae65c561</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>BufferedTransformation::NoChannelSupport</name>
    <filename>structBufferedTransformation_1_1NoChannelSupport.html</filename>
    <base>NotImplemented</base>
    <member kind="function">
      <type></type>
      <name>NoChannelSupport</name>
      <anchorfile>structBufferedTransformation_1_1NoChannelSupport.html</anchorfile>
      <anchor>c7f7025f8d84fe6445baaea166fe8f36</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Bufferless</name>
    <filename>classBufferless.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classBufferless.html</anchorfile>
      <anchor>d1e221ab41d6e65078c3bdd5e367793d</anchor>
      <arglist>(bool, bool)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ByteArrayParameter</name>
    <filename>classByteArrayParameter.html</filename>
    <member kind="function">
      <type></type>
      <name>ByteArrayParameter</name>
      <anchorfile>classByteArrayParameter.html</anchorfile>
      <anchor>74af4f06b2f18fdb6217b276d10b1f2b</anchor>
      <arglist>(byte *data=NULL, unsigned int datasize=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ByteArrayParameter</name>
      <anchorfile>classByteArrayParameter.html</anchorfile>
      <anchor>7900b4c0cf08814c23fed3cc320483d7</anchor>
      <arglist>(SecByteBlock &amp;block)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>begin</name>
      <anchorfile>classByteArrayParameter.html</anchorfile>
      <anchor>a6ad5851432dad80ee27d78474cc2c80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>end</name>
      <anchorfile>classByteArrayParameter.html</anchorfile>
      <anchor>fe9cd72cc9901144416b52e5b0820bf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>size</name>
      <anchorfile>classByteArrayParameter.html</anchorfile>
      <anchor>81f7c2f53fd53a7e05d079353cd2e064</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ByteQueue</name>
    <filename>classByteQueue.html</filename>
    <base>Bufferless&lt; BufferedTransformation &gt;</base>
    <member kind="function">
      <type></type>
      <name>ByteQueue</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>95362cfd064e17b7f22122f1d83c7bd0</anchor>
      <arglist>(unsigned int nodeSize=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ByteQueue</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>0e3ec54d26a5be3b5689ca53a906622f</anchor>
      <arglist>(const ByteQueue &amp;copy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ByteQueue</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>0c6dce34c8c4c7838f94917ed8911df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>MaxRetrievable</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>2d68149fb6b46ac1b1bc38c863ed8a1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AnyRetrievable</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>9f509e02fb4b1f1587d6b5a001ff43f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>7e576bc7629bd0947eb098ad23b0d675</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>CreatePutSpace</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>e4d8fba1fbc5bed0e99e896e872fb4cc</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>89897890c0b0146220cca58af75e1ca2</anchor>
      <arglist>(const byte *inString, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Get</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>e2a3c48ac269450f6b80e8020b0a4ffe</anchor>
      <arglist>(byte &amp;outByte)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Get</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>a10f3520c337b81c6f33f2d1e4879508</anchor>
      <arglist>(byte *outString, unsigned int getMax)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Peek</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>ee023dc164854baa5fec8aba2e47f1bf</anchor>
      <arglist>(byte &amp;outByte) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Peek</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>0bfd3f75c453f7eb25f8f3c912ec1f0b</anchor>
      <arglist>(byte *outString, unsigned int peekMax) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>f0e703a8f0951e420447011cf88f1ff3</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>ac7be54e8cd1c52778f3ff31f46cd7d3</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNodeSize</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>a42ca4356147f370e8ce902bebe44f76</anchor>
      <arglist>(unsigned int nodeSize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>CurrentSize</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>560089f0a6fe2d5d7c8f7b5e65ff9603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>f44849c6d39bcdad5864dfd81ae5a122</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>2c305604a71571438aeb4c4e5e567c45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Unget</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>bdc94324169d07db16a246259c5ef86b</anchor>
      <arglist>(byte inByte)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Unget</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>22a4ed18407bf173b751d5a6c5691a5a</anchor>
      <arglist>(const byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>Spy</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>d531fcc3391359d450cf55f0a1b4c967</anchor>
      <arglist>(unsigned int &amp;contiguousSize) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LazyPut</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>34664474bb6a3096c73a7589d1e3776c</anchor>
      <arglist>(const byte *inString, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LazyPutModifiable</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>9f046ac5e8d18882ffcbbb4c12ea19ca</anchor>
      <arglist>(byte *inString, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UndoLazyPut</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>0b421015b225d9f48d484f1d4a7f95ac</anchor>
      <arglist>(unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FinalizeLazyPut</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>6d004338c41f8e04a723c7adab5d0895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ByteQueue &amp;</type>
      <name>operator=</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>710873753ebe1fe0c1690ad09f42dadf</anchor>
      <arglist>(const ByteQueue &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>81690c024725d924c0dd9d0b7f8a689b</anchor>
      <arglist>(const ByteQueue &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>operator[]</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>0262cddc8660e440daac51ef93a459ab</anchor>
      <arglist>(unsigned long i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>dcf03598210a516afc86abfb51ce5eb8</anchor>
      <arglist>(ByteQueue &amp;rhs)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Walker</name>
      <anchorfile>classByteQueue.html</anchorfile>
      <anchor>561951adc2bae72717df4b975c66f02f</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">ByteQueue::Walker</class>
  </compound>
  <compound kind="class">
    <name>ByteQueue::Walker</name>
    <filename>classByteQueue_1_1Walker.html</filename>
    <base>InputRejecting&lt; BufferedTransformation &gt;</base>
    <member kind="function">
      <type></type>
      <name>Walker</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>6690a4529e61498d2abc68f4fe07b01c</anchor>
      <arglist>(const ByteQueue &amp;queue)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>GetCurrentPosition</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>7aff97b502413cf31da28c40dfda264f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>MaxRetrievable</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>66bbbf34c81a8c83dc9c866922e2ea52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>b74b6b33c01b0221a24e1ba17ac7a374</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Get</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>f038894fc00fca9cd0f3c85ecb7a4120</anchor>
      <arglist>(byte &amp;outByte)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Get</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>fbb9d36370bd443ee61c1c7d03ebdfee</anchor>
      <arglist>(byte *outString, unsigned int getMax)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Peek</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>351cd3e8d0dd6ed255b6acb9ccdf1de8</anchor>
      <arglist>(byte &amp;outByte) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Peek</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>407fe036e0ca55f760f0e4437eb01ff1</anchor>
      <arglist>(byte *outString, unsigned int peekMax) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>4cd3299faeefd315b9d97f40a13ffe0e</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classByteQueue_1_1Walker.html</anchorfile>
      <anchor>8669b1ea77ee9c790e9a58684be35b7f</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ByteQueueNode</name>
    <filename>classByteQueueNode.html</filename>
    <member kind="function">
      <type></type>
      <name>ByteQueueNode</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>9d5e47ec3e8bf15ba888aad040f39a01</anchor>
      <arglist>(unsigned int maxSize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxSize</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>207183f93cfaaf848756ca67223d8698</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CurrentSize</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>c7fa68356192c31b84ccc0b243549e0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UsedUp</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>1a231fb768f2312d70e10b7bdcb92113</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>33a21b84db215ff511912f77e8389f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>5dcb7ca6c31746a4d30d5a970c737959</anchor>
      <arglist>(const byte *begin, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Peek</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>a73fe8113024638e531e8204eac25ce9</anchor>
      <arglist>(byte &amp;outByte) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Peek</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>f2ac8a3a9bd9704e963c4ae253b810fd</anchor>
      <arglist>(byte *target, unsigned int copyMax) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyTo</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>98f8d2f7fb3be8d479d8d03a0179cc36</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel=BufferedTransformation::NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyTo</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>a99bebc42839d1f5655b90501fa3a23d</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int copyMax, const std::string &amp;channel=BufferedTransformation::NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Get</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>a51b72ed2a7c593bdd2e170774a2aa5c</anchor>
      <arglist>(byte &amp;outByte)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Get</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>1e97c1e1f639109df0433dd6135d453c</anchor>
      <arglist>(byte *outString, unsigned int getMax)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>3fec4355dc73d000457e1d01dd96a72e</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel=BufferedTransformation::NULL_CHANNEL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>b52dc6502338975b6f4f95339cbdde2d</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int transferMax, const std::string &amp;channel=BufferedTransformation::NULL_CHANNEL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Skip</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>440b5f54efe6247eda84cb4de068875b</anchor>
      <arglist>(unsigned int skipMax)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>operator[]</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>cec478657bf5e5cd79c5518c54eaf35b</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="variable">
      <type>ByteQueueNode *</type>
      <name>next</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>ee1bdb525b2dd8c5d98de76949a85b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>buf</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>1872d9ce267ef28d540e3353d0bf6ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m_head</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>fab2ef4edc0f79ca3d3278210f5fc31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m_tail</name>
      <anchorfile>classByteQueueNode.html</anchorfile>
      <anchor>de514bc7b2b70a84cf3ef187f24848c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAbstractFile</name>
    <filename>classCAbstractFile.html</filename>
    <member kind="function">
      <type></type>
      <name>CAbstractFile</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>43fe4c5d7fd6e3c8a1c6f103218a8f2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CAbstractFile</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>86d8199ac046c6dec50d41d1dac89e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const wxString &amp;</type>
      <name>GetFileName</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>932fa4607138eb472352713c62565845</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetFileHash</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>0de068056cbc128357274cd442ff79ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetFileSize</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>bc5d22c3204af1ee991165b8b1a082ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFileSize</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>a067bc050d7217b48bee29a1848c0cc2</anchor>
      <arglist>(wxULongLong nFileSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFileName</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>89adbccc91c8ec1d339dcdc5fac91df2</anchor>
      <arglist>(const wxString &amp;strmakeFilename)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetIntTagValue</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>2d0e2ab8ec69bbb83cd934102ac2ab0c</anchor>
      <arglist>(uint8 tagname) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIntTagValue</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>99596cf77dd89608e5bbec691315c530</anchor>
      <arglist>(uint8 tagname, uint64 &amp;ruValue) const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetStrTagValue</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>f6c9d189d560bf19b286abbaf1e6a86b</anchor>
      <arglist>(uint8 tagname) const </arglist>
    </member>
    <member kind="function">
      <type>const CTag &amp;</type>
      <name>GetTag</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>479d9fd1cf0543a7cab660b12b4641aa</anchor>
      <arglist>(uint8 tagname) const </arglist>
    </member>
    <member kind="function">
      <type>const CTag &amp;</type>
      <name>GetTag</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>72102b326a4aa30986799d178dab920a</anchor>
      <arglist>(uint8 tagname, uint8 tagtype) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTagUnique</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>970506374f1b3d4c5a17db49dc8138ad</anchor>
      <arglist>(const CTag &amp;pTag)</arglist>
    </member>
    <member kind="function">
      <type>const TagList &amp;</type>
      <name>GetTags</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>4af5151a699807ecc072822a094cf19e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddNote</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>897ade9927d96e2d46e5da44fe8cf341</anchor>
      <arglist>(Kademlia::CEntry &amp;pEntry)</arglist>
    </member>
    <member kind="function">
      <type>const CKadEntriesList &amp;</type>
      <name>getNotes</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>0c61b91d0d1f590869fccd1de707d56a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const wxString &amp;</type>
      <name>GetFileComment</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>553b1d83db494a5a10ad772212e8b957</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8</type>
      <name>GetFileRating</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>343226fe26d5fcc6100e42a2e4cb3429</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasComment</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>a0be8a007dcddd9dfa0072806a281ffa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasRating</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>5aaa3a34e8c7f9ca64afe4aecb75e10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasBadRating</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>b5b591e0a6e6fd78391decc627d75af6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int8</type>
      <name>UserRating</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>adac1f2f0911bb7854d40630811211a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFileRatingCommentAvail</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>053bab0e4050aefdda9384cd60af96f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetSourceCount</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>cad46b30f51c0bedd03420a891a27ae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetCompleteSourceCount</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>323578a47ace16f92c47c93a1415bb18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_strFileName</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>1bc1dc18536b698c63b4c3b996f7218a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CMD4Hash</type>
      <name>m_abyFileHash</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>e82ea14c981656d222c109969fea13e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxULongLong</type>
      <name>m_nFileSize</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>f5843dce9da4dc5a073699976f38ef84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_strComment</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>6c50f43820d4b57adbac786280c911fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8</type>
      <name>m_iRating</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>f9c9c56ae43d7c94446b978563c322bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_hasComment</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>007c29c30d4940dbeb660f729cbf589d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8</type>
      <name>m_iUserRating</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>325c7ee61c7c97bba56ba09fad5529ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TagList</type>
      <name>m_taglist</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>be5d648fbb40366d274a7862f69d4b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CKadEntriesList</type>
      <name>m_kadNotes</name>
      <anchorfile>classCAbstractFile.html</anchorfile>
      <anchor>2c6248ca145b5fcd0cc4c58c15908d49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAddFileThread</name>
    <filename>classCAddFileThread.html</filename>
    <base protection="private">wxThread</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Start</name>
      <anchorfile>classCAddFileThread.html</anchorfile>
      <anchor>ea8ca5869f30330ccb874146a601711b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Stop</name>
      <anchorfile>classCAddFileThread.html</anchorfile>
      <anchor>fcae43953836b9d566769ce5ff33e273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetFileCount</name>
      <anchorfile>classCAddFileThread.html</anchorfile>
      <anchor>5efbcecdb8111de766b55b58a6ad65c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsRunning</name>
      <anchorfile>classCAddFileThread.html</anchorfile>
      <anchor>66f42b5054101f9ae88f53401b9387d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddFile</name>
      <anchorfile>classCAddFileThread.html</anchorfile>
      <anchor>4a2f65d67f6a07c85aef7458433ff0fa</anchor>
      <arglist>(const wxString &amp;path, const wxString &amp;name, const CPartFile *part=NULL)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAddFriend</name>
    <filename>classCAddFriend.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CAddFriend</name>
      <anchorfile>classCAddFriend.html</anchorfile>
      <anchor>513e871a1b6d73e0103b95644fc8d946</anchor>
      <arglist>(wxWindow *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CAddFriend</name>
      <anchorfile>classCAddFriend.html</anchorfile>
      <anchor>10901b42cf3ae8fa979b6cfa6d5388b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHHash</name>
    <filename>classCAICHHash.html</filename>
    <member kind="function">
      <type></type>
      <name>~CAICHHash</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>8e81e1dfb77707a6432b820577b183a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CAICHHash</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>0cbbefcebb2f5dc844cca80a51cf06b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CAICHHash</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>30d083e17c71a96fd4d6a611413d38d0</anchor>
      <arglist>(CFileDataIO *file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CAICHHash</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>e5e12e9bbc02b1abe1170997b27fcfea</anchor>
      <arglist>(byte *data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CAICHHash</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>45f4f5d5de77b80f14a69116ab233ead</anchor>
      <arglist>(const CAICHHash &amp;k1)</arglist>
    </member>
    <member kind="function">
      <type>CAICHHash &amp;</type>
      <name>operator=</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>e64ccf103f3c5868940cbd2cc469d7bc</anchor>
      <arglist>(const CAICHHash &amp;k1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Read</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>30ceb6798c84e8c556013a3864942a08</anchor>
      <arglist>(CFileDataIO *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>78546f9e8dda9b064f036d407e18b168</anchor>
      <arglist>(CFileDataIO *file) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Read</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>347662ff4205e238f4ea443a09e95968</anchor>
      <arglist>(byte *data)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetString</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>b337fc75d1b3e4cc83fd3e7fef690638</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>GetRawHash</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>b34ad9e24c713c781f932a1e0bb2750c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DecodeBase32</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>d352d180184cd56268a891f7878dd1df</anchor>
      <arglist>(const wxString &amp;base32)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetHashSize</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>4de8ae54182e8cecb289b138ed29b3c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>2948f08afd13864ded97d6cb61e9bef7</anchor>
      <arglist>(const CAICHHash &amp;k1, const CAICHHash &amp;k2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classCAICHHash.html</anchorfile>
      <anchor>10dbb6d215fc84de4f61f491c98a9ba5</anchor>
      <arglist>(const CAICHHash &amp;k1, const CAICHHash &amp;k2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHHashAlgo</name>
    <filename>classCAICHHashAlgo.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CAICHHashAlgo</name>
      <anchorfile>classCAICHHashAlgo.html</anchorfile>
      <anchor>40a3f5a232572da18d77b58e5724fbbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Reset</name>
      <anchorfile>classCAICHHashAlgo.html</anchorfile>
      <anchor>5fb02f7fadbaccc90c3164a3b4a5a109</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Add</name>
      <anchorfile>classCAICHHashAlgo.html</anchorfile>
      <anchor>318936d03f2cf40df1afaeab16e857e0</anchor>
      <arglist>(const void *pData, uint32 nLength)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Finish</name>
      <anchorfile>classCAICHHashAlgo.html</anchorfile>
      <anchor>61ae7fc4c9aa3be32f74364c2ce19354</anchor>
      <arglist>(CAICHHash &amp;Hash)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>GetHash</name>
      <anchorfile>classCAICHHashAlgo.html</anchorfile>
      <anchor>9ab977e80c0e879cc7f37b86c4bbadcf</anchor>
      <arglist>(CAICHHash &amp;Hash)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHHashSet</name>
    <filename>classCAICHHashSet.html</filename>
    <member kind="function">
      <type></type>
      <name>CAICHHashSet</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>a92a7a18e904886b90bef240fa1b47cd</anchor>
      <arglist>(CKnownFile *pOwner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CAICHHashSet</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>8e235a61055acd21d218c8a165c9be4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreatePartRecoveryData</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>9d2bbae091c0f4601d2af8f9765b541a</anchor>
      <arglist>(wxULongLong nPartStartPos, CFileDataIO *fileDataOut, bool bDbgDontLoad=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadRecoveryData</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>7c3892b5a0329956f07df9a3088a8e15</anchor>
      <arglist>(wxULongLong nPartStartPos, CMemFile *fileDataIn)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReCalculateHash</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>2d41b61d927fca009d1350730a89f911</anchor>
      <arglist>(bool bDontReplace=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyHashTree</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>4f83406c90a10f8a05a8c3e32de7dbb2</anchor>
      <arglist>(bool bDeleteBadTrees)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UntrustedHashReceived</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>caa4e5b0d7b861fa4d305810a6a7b912</anchor>
      <arglist>(const CAICHHash &amp;Hash, const CI2PAddress &amp;dwFromDest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartDataAvailable</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>f3c45aefb582a2e6fe0e1a3c67c653bd</anchor>
      <arglist>(wxULongLong nPartStartPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatus</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>5bdc182b05a398f5258fc31d96f3fb3a</anchor>
      <arglist>(EAICHStatus bNewValue)</arglist>
    </member>
    <member kind="function">
      <type>EAICHStatus</type>
      <name>GetStatus</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>fcbde6f7490ae20b8909b14d5d6ecf87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeHashSet</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>e4db3acaa60e4ec275c8e0a0ce48eef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileSize</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>4d0b07f0be5a31b64dfe6b0a4ed479e7</anchor>
      <arglist>(wxULongLong nSize)</arglist>
    </member>
    <member kind="function">
      <type>CAICHHash &amp;</type>
      <name>GetMasterHash</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>74b3bc56374c532e21ee54a43685ec8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMasterHash</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>0eea63c960baf19e8110d8ea36b608fe</anchor>
      <arglist>(const CAICHHash &amp;Hash, EAICHStatus eNewStatus)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasValidMasterHash</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>49a26e03717b53e8d8df6b6a4b89bc79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveHashSet</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>59fda8f8919b66fc0435a9d51515cec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadHashSet</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>0500968702591b340e1cfe225caddac6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CAICHHashAlgo *</type>
      <name>GetNewHashAlgo</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>848d34c1faa2f9bbfba88f7ab8ccffff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DbgTest</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>1037562537804e785a9cb5e0646bb61f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOwner</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>37cb4632e357274bac1a625b9eee7ec7</anchor>
      <arglist>(CKnownFile *owner)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ClientAICHRequestFailed</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>a51bdd0805d8fac0913b4fc4953d9b5b</anchor>
      <arglist>(CUpDownClient *pClient)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveClientAICHRequest</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>e6f0461452446707e96590846c153fe0</anchor>
      <arglist>(const CUpDownClient *pClient)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsClientRequestPending</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>72c81344c5f242cc23c108cb9aabe4dc</anchor>
      <arglist>(const CPartFile *pForFile, wxULongLong nPart)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CAICHRequestedData</type>
      <name>GetAICHReqDetails</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>3721505ded47f0c7278a98c22b0192c9</anchor>
      <arglist>(const CUpDownClient *pClient)</arglist>
    </member>
    <member kind="variable">
      <type>CAICHHashTree</type>
      <name>m_pHashTree</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>e136faf8aaa48509c7aea3dc55c64234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CAICHRequestedDataList</type>
      <name>m_liRequestedData</name>
      <anchorfile>classCAICHHashSet.html</anchorfile>
      <anchor>7681ee6d34def1ecb93a8a911d23b06c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHHashTree</name>
    <filename>classCAICHHashTree.html</filename>
    <member kind="function">
      <type></type>
      <name>CAICHHashTree</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>1f9715a7aeb99526f98e850dd86cb371</anchor>
      <arglist>(wxULongLong nDataSize, bool bLeftBranch, uint32 nBaseSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CAICHHashTree</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>f70949000beba523391d4431350749b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBlockHash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>1e6ae8cfd5b0d1312a42561e1f55ba9c</anchor>
      <arglist>(uint32 nSize, wxULongLong nStartPos, CAICHHashAlgo *pHashAlg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReCalculateHash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>bf35ff6d1dcb5318fc9f17e1e912e06c</anchor>
      <arglist>(CAICHHashAlgo *hashalg, bool bDontReplace)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyHashTree</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>4f8f3e4eae4a84937b9c5675f2804a08</anchor>
      <arglist>(CAICHHashAlgo *hashalg, bool bDeleteBadTrees)</arglist>
    </member>
    <member kind="function">
      <type>CAICHHashTree *</type>
      <name>FindHash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>04b3ee1a2d5e2beedc294bac01dd795f</anchor>
      <arglist>(wxULongLong nStartPos, uint32 nSize)</arglist>
    </member>
    <member kind="variable">
      <type>CAICHHash</type>
      <name>m_Hash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>a0d72ba8b65c3253bf2b95e76c36d76e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>m_nDataSize</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>9adfd47d55d6a793faf70cca1c8f6d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_nBaseSize</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>718dca3a78e10de7e0311c47da9d7923</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bIsLeftBranch</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>818c36668270ba70d14d37efc2c50cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bHashValid</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>affa7a1a54b514dc7f56e197a3defdd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CAICHHashTree *</type>
      <name>FindHash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>fe461bbb3955e713585f232e40259563</anchor>
      <arglist>(wxULongLong nStartPos, uint32 nSize, uint8 *nLevel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>CreatePartRecoveryData</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>7ae67e2edd3eb6a1dd50daa41c2dbdfa</anchor>
      <arglist>(wxULongLong nStartPos, uint32 nSize, CFileDataIO *fileDataOut, wxULongLong wHashIdent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteHash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>3e6609e3c5f4fde98aace7e49a9e693f</anchor>
      <arglist>(CFileDataIO *fileDataOut, wxULongLong wHashIdent) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>WriteLowestLevelHashs</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>f613e71abd274e1a30b42488ea080c1a</anchor>
      <arglist>(CFileDataIO *fileDataOut, wxULongLong wHashIdent, bool bNoIdent=false) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadLowestLevelHashs</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>227b3f0aa3287f0b3e7685966dfc7b80</anchor>
      <arglist>(CFileDataIO *fileInput)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>SetHash</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>667a68772fc64b0e51b342ed87ac3c9a</anchor>
      <arglist>(CFileDataIO *fileInput, wxULongLong wHashIdent, sint8 nLevel=(-1), bool bAllowOverwrite=true)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CAICHHashTree *</type>
      <name>m_pLeftTree</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>05e357128afa4304e96449bea00211b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CAICHHashTree *</type>
      <name>m_pRightTree</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>c790c825a79da5752decdee7ebca2e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CAICHHashSet</name>
      <anchorfile>classCAICHHashTree.html</anchorfile>
      <anchor>5dc9cfafed549af462f68b2e1301425d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHRequestedData</name>
    <filename>classCAICHRequestedData.html</filename>
    <member kind="function">
      <type></type>
      <name>CAICHRequestedData</name>
      <anchorfile>classCAICHRequestedData.html</anchorfile>
      <anchor>c94b4d38deaeab9ce87cf0a7535c5772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CAICHRequestedData &amp;</type>
      <name>operator=</name>
      <anchorfile>classCAICHRequestedData.html</anchorfile>
      <anchor>e10bb5c03c3ddab3e504c44a29457b99</anchor>
      <arglist>(const CAICHRequestedData &amp;k1)</arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>m_nPart</name>
      <anchorfile>classCAICHRequestedData.html</anchorfile>
      <anchor>6fe7eadb0c873f07deba8aa668f8abe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CPartFile *</type>
      <name>m_pPartFile</name>
      <anchorfile>classCAICHRequestedData.html</anchorfile>
      <anchor>fbc3adf05b691e12429e8b95a19206dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CUpDownClient *</type>
      <name>m_pClient</name>
      <anchorfile>classCAICHRequestedData.html</anchorfile>
      <anchor>c4d22644989344a6618731421217aea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHSyncThread</name>
    <filename>classCAICHSyncThread.html</filename>
    <base>wxThread</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Start</name>
      <anchorfile>classCAICHSyncThread.html</anchorfile>
      <anchor>af9dd61a3e5b8485b57b779f59c7f190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Stop</name>
      <anchorfile>classCAICHSyncThread.html</anchorfile>
      <anchor>e0f706cf3130e5ade42f9c3887258e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsRunning</name>
      <anchorfile>classCAICHSyncThread.html</anchorfile>
      <anchor>3014a063d0c5c2c9871556cf04259690</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAICHUntrustedHash</name>
    <filename>classCAICHUntrustedHash.html</filename>
    <member kind="function">
      <type>CAICHUntrustedHash &amp;</type>
      <name>operator=</name>
      <anchorfile>classCAICHUntrustedHash.html</anchorfile>
      <anchor>14a2b2a85b974a1ad56258dd6baea8e3</anchor>
      <arglist>(const CAICHUntrustedHash &amp;k1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddSigningIP</name>
      <anchorfile>classCAICHUntrustedHash.html</anchorfile>
      <anchor>f380cd46ed7ee9cce4625635a41e5ec8</anchor>
      <arglist>(const CI2PAddress &amp;dwDest)</arglist>
    </member>
    <member kind="variable">
      <type>CAICHHash</type>
      <name>m_Hash</name>
      <anchorfile>classCAICHUntrustedHash.html</anchorfile>
      <anchor>ef2d6612c37b6da973f682104b082b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>set&lt; CI2PAddress &gt;</type>
      <name>m_adwDestsSigning</name>
      <anchorfile>classCAICHUntrustedHash.html</anchorfile>
      <anchor>fbe55eca929ccfc09654af5c96da1e60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CannotFlush</name>
    <filename>classCannotFlush.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>CannotFlush</name>
      <anchorfile>classCannotFlush.html</anchorfile>
      <anchor>227170bcacb0d250c6ded893b22d4e5c</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAnyImage</name>
    <filename>classCAnyImage.html</filename>
    <member kind="function">
      <type></type>
      <name>CAnyImage</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>d15629621a6f4c4b8b21be8236553fb5</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CAnyImage</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>d8404a3e416a731c2a5384d9c7290de9</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CAnyImage</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>6a2abff5fa65daa07ddc5ec2d852c600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetHTTP</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>801a94c5727ff7843ad0eea4a40ba4d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned char *</type>
      <name>RequestData</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>5b68277e2fd8a041487cfe57bb36628c</anchor>
      <arglist>(int &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Realloc</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>62e795c33ce471543ceb7696e170b1f6</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetHttpType</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>8c270760ef36bb7cb9cb80d993501732</anchor>
      <arglist>(wxString ext)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char *</type>
      <name>m_data</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>08085391ba86fb8d7fb5a55a0332604f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_width</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>b0b4951ef1bf96827791fe387417d281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_height</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>ad1740850d3d70ec66ebff08e4453827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_name</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>3296f9194cc9753ef49363fa8fea7b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxULongLong</type>
      <name>m_size</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>870ecfad521f3195f52c42772b15e208</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxULongLong</type>
      <name>m_alloc_size</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>a8210d071f52efbab3f33b91dba2e5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_Http</name>
      <anchorfile>classCAnyImage.html</anchorfile>
      <anchor>580c71fade7f96205f53108c029356e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAsyncDNS</name>
    <filename>classCAsyncDNS.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CAsyncDNS</name>
      <anchorfile>classCAsyncDNS.html</anchorfile>
      <anchor>a3684b2cc0c9cdcffcec8abd48812329</anchor>
      <arglist>(const wxString &amp;ipName, DnsSolveType type, wxEvtHandler *handler, void *socket=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExitCode</type>
      <name>Entry</name>
      <anchorfile>classCAsyncDNS.html</anchorfile>
      <anchor>c4ee53ddad5b8c2df780a9f2d9ca77ba</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Category_Struct</name>
    <filename>structCategory__Struct.html</filename>
    <member kind="variable">
      <type>wxString</type>
      <name>incomingpath</name>
      <anchorfile>structCategory__Struct.html</anchorfile>
      <anchor>563bba1de94ee3f1983ee80858e3bb5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>title</name>
      <anchorfile>structCategory__Struct.html</anchorfile>
      <anchor>33d96f3c39cd475b6f67345eb0abe947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>comment</name>
      <anchorfile>structCategory__Struct.html</anchorfile>
      <anchor>3f65dec2a49250f87ed559ba8f4f40d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxColour</type>
      <name>color</name>
      <anchorfile>structCategory__Struct.html</anchorfile>
      <anchor>3def487f8ce45ebe11d77a236eac4e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>prio</name>
      <anchorfile>structCategory__Struct.html</anchorfile>
      <anchor>f9bcd1ae1ee9e81722eaf54fdd55cd18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CBarShader</name>
    <filename>classCBarShader.html</filename>
    <member kind="function">
      <type></type>
      <name>CBarShader</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>c2b05687ad77939565d77745b2d37cf3</anchor>
      <arglist>(uint32 height=1, uint32 width=1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CBarShader</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>aebbec366c67e4d827e201e61399b885</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWidth</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>10e673952914dde8c77a108ef45c0b45</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHeight</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>0dda4bea198a75071858ccf1c7493998</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set3dDepth</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>a076454ac458cabfc8e600e96de469f2</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetWidth</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>7bb7571787cc93066a058c920f2d3de8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHeight</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>81b79518c1864337901a455608369c62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Get3dDepth</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>9b1832a3bf1d3eb4eb31fd405f8bf763</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>5886512f8a1bcb783a16616bb4c5390e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileSize</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>30414ebf9c177c9a78db6f3767eb3ae0</anchor>
      <arglist>(uint64 fileSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillRange</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>61c2b2a18fa75d87f296c2bc3005df57</anchor>
      <arglist>(uint64 start, uint64 end, const wxColour color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Fill</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>4597935b7d9708ea58c79f6276046af9</anchor>
      <arglist>(wxColour color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Draw</name>
      <anchorfile>classCBarShader.html</anchorfile>
      <anchor>ccbfdf297a59cd375c1b3897dd1b5a40</anchor>
      <arglist>(wxDC *dc, int iLeft, int iTop, bool bFlat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CCatDialog</name>
    <filename>classCCatDialog.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CCatDialog</name>
      <anchorfile>classCCatDialog.html</anchorfile>
      <anchor>69796bfc51959c91f67597fbeb3a5cd6</anchor>
      <arglist>(wxWindow *parent, bool allowbrowse, int catindex=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CCatDialog</name>
      <anchorfile>classCCatDialog.html</anchorfile>
      <anchor>c208ab0193c03fec35e4497c00e42a53</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CChatSelector</name>
    <filename>classCChatSelector.html</filename>
    <base>CMuleNotebook</base>
    <member kind="function">
      <type></type>
      <name>CChatSelector</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>90226d2db86f203cff5e95c7902b0def</anchor>
      <arglist>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos, wxSize siz, long style)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CChatSelector</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>1699bf88aaa15850da3c38523a580d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CChatSession *</type>
      <name>StartSession</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>6d4cc301510e0b51fc0ba250518e9cdc</anchor>
      <arglist>(const CI2PAddress &amp;client_id, const wxString &amp;client_name, bool show=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndSession</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>fa65ea44b42d7685387bf50b5d9cd4e3</anchor>
      <arglist>(const CI2PAddress &amp;client_id=CI2PAddress::null)</arglist>
    </member>
    <member kind="function">
      <type>CChatSession *</type>
      <name>GetPageByClientID</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>687d44e6e95d0444a46b13c611c31bc4</anchor>
      <arglist>(const CI2PAddress &amp;client_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetTabByClientID</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>bbca735f5d89001ed570ae6b9a814d88</anchor>
      <arglist>(const CI2PAddress &amp;client_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>fa6d266011856a164b619d4494614171</anchor>
      <arglist>(const CI2PAddress &amp;sender_id, const wxString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendMessage</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>f18be66b3d4d5242cf2cf49a9a63d727</anchor>
      <arglist>(const wxString &amp;message, const wxString &amp;client_name=wxEmptyString, const CI2PAddress &amp;to_id=CI2PAddress::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectionResult</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>ac5c2201628344e2ac358c37e31fbe96</anchor>
      <arglist>(bool success, const wxString &amp;message, const CI2PAddress &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshFriend</name>
      <anchorfile>classCChatSelector.html</anchorfile>
      <anchor>8e5093c70cf41bce810acccf97cc418c</anchor>
      <arglist>(const CI2PAddress &amp;toupdate_id, const wxString &amp;new_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CChatSession</name>
    <filename>classCChatSession.html</filename>
    <base>CMuleTextCtrl</base>
    <member kind="function">
      <type></type>
      <name>CChatSession</name>
      <anchorfile>classCChatSession.html</anchorfile>
      <anchor>d18e6475fd0a683403140c28eda2dccc</anchor>
      <arglist>(wxWindow *parent, wxWindowID id=-1, const wxString &amp;value=wxT(&quot;&quot;), const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxTextCtrlNameStr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CChatSession</name>
      <anchorfile>classCChatSession.html</anchorfile>
      <anchor>629174876195ca2b9779545b9ac18787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddText</name>
      <anchorfile>classCChatSession.html</anchorfile>
      <anchor>7f9fff4cf816b167b6a3898e69188f04</anchor>
      <arglist>(const wxString &amp;text, const wxTextAttr &amp;style, bool newline=true)</arglist>
    </member>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>m_client_id</name>
      <anchorfile>classCChatSession.html</anchorfile>
      <anchor>456109c01c78d5bce49483a0746d7945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_active</name>
      <anchorfile>classCChatSession.html</anchorfile>
      <anchor>5d902745c305bf706b020c64edf1a7c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CChatWnd</name>
    <filename>classCChatWnd.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CChatWnd</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>2337968d4e06c289e984dbaaa5f69880</anchor>
      <arglist>(wxWindow *pParent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CChatWnd</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>eb57fe305aae9de0085cef0b11d6f4ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartSession</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>4bff1b08050161705ebccfd50a265d47</anchor>
      <arglist>(CDlgFriend *friend_client, bool setfocus=true)</arglist>
    </member>
    <member kind="function">
      <type>CDlgFriend *</type>
      <name>FindFriend</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>b93fd1473e33558867fce0821e190555</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;dwDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>7143dc56bc24b73b481ef24facb6f3cd</anchor>
      <arglist>(CUpDownClient *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>4670a3abdd874dd5cf5c489af1f02d37</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const wxString &amp;name, const CI2PAddress &amp;lastUsedDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshFriend</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>1b4de4621bddd531b391c0817a0bf499</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const wxString &amp;name, const CI2PAddress &amp;lastUsedDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessMessage</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>bfcb3df1ab72475cc2d10ff01c953b20</anchor>
      <arglist>(const CI2PAddress &amp;sender, const wxString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectionResult</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>7f41e05f99ac6fd63488f75218eb4688</anchor>
      <arglist>(bool success, const wxString &amp;message, const CI2PAddress &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMessage</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>3d946933d6b9fefea2c84b7bfee4286d</anchor>
      <arglist>(const wxString &amp;message, const wxString &amp;client_name=wxEmptyString, const CI2PAddress &amp;to_dest=CI2PAddress::null)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBnClickedCsend</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>190c0ebf56abda7b8738af93de9c7f89</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBnClickedCclose</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>e1148a27734146f3773665b41b856ee6</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAllPagesClosed</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>e868566f63f92b0ed26ae1c9af1dd638</anchor>
      <arglist>(wxNotebookEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CheckNewButtonsState</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>8988c0370f68ddf715f9801978b49458</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CFriendListCtrl *</type>
      <name>friendlistctrl</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>422d0a07fa60099efd91cee72530250a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CChatSelector *</type>
      <name>chatselector</name>
      <anchorfile>classCChatWnd.html</anchorfile>
      <anchor>8b692e6646ab84f97051f85218fcb8c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientCredits</name>
    <filename>classCClientCredits.html</filename>
    <member kind="function">
      <type></type>
      <name>CClientCredits</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>e08b8e873e85effea0cb6fefefa41501</anchor>
      <arglist>(CreditStruct *in_credits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CClientCredits</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>4dff2237362aaa8bfbc4e61cbfcc5105</anchor>
      <arglist>(const CMD4Hash &amp;key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CClientCredits</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>1c40926ee26f8c22298374c9aa8fd43e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetKey</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>73b7c372159f7e58396419f5b466430b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>GetSecureIdent</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>43e366a7c34536ce3a2afc1d3e58b9d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetSecIDKeyLen</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>399ba61579396b6fe634b2e51dfc28c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CreditStruct *</type>
      <name>GetDataStruct</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>2caff0d2ba2bbba9486bae1e02c33e28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearWaitStartTime</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>a047416fa3636925e175f5f4a4c28654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDownloaded</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>f6ef66a8eb6b966eb3ecbd24d763430e</anchor>
      <arglist>(uint32 bytes, const CI2PAddress &amp;dwForDest, bool cryptoavail)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddUploaded</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>547ae071b46a797b4d46e2802339586f</anchor>
      <arglist>(uint32 bytes, const CI2PAddress &amp;dwForDest, bool cryptoavail)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetUploadedTotal</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>9b70c8727950e89a5810ce2e2d48da24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetDownloadedTotal</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>ec64a94ea79304910f71c54fafaa221d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetScoreRatio</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>9dd4509bf2405286ca678161b5fe9f75</anchor>
      <arglist>(const CI2PAddress &amp;dwForDest, bool cryptoavail)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastSeen</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>7bf9eb670ee0fa4984d83e2f04b85501</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetSecureIdent</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>39872fb426adb3a1ab6edb22eb4b0276</anchor>
      <arglist>(const byte *pachIdent, uint8 nIdentLen)</arglist>
    </member>
    <member kind="function">
      <type>EIdentState</type>
      <name>GetCurrentIdentState</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>e34ffaa06cd5aafc870545c193e5465b</anchor>
      <arglist>(const CI2PAddress &amp;dwForDest) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetSecureWaitStartTime</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>a881be7d095f78502731930583eb3724</anchor>
      <arglist>(const CI2PAddress &amp;dwForDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSecWaitStartTime</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>998a8ed8410855a13a6d57855dae4b41</anchor>
      <arglist>(const CI2PAddress &amp;dwForDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Verified</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>63093a879c878492fb3c93000ae7a04b</anchor>
      <arglist>(const CI2PAddress &amp;dwForDest)</arglist>
    </member>
    <member kind="function">
      <type>EIdentState</type>
      <name>GetIdentState</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>7e7d25ee12c97f2d26d7443ce8606ce7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIdentState</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>7a4b58df202bdb5370fc9399d3efc77f</anchor>
      <arglist>(EIdentState state)</arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwCryptRndChallengeFor</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>24f86897dc5a50ba441af0b84f37b4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwCryptRndChallengeFrom</name>
      <anchorfile>classCClientCredits.html</anchorfile>
      <anchor>0188e0fa7ae3d231e2d2b438a1738759</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientCreditsList</name>
    <filename>classCClientCreditsList.html</filename>
    <member kind="function">
      <type></type>
      <name>CClientCreditsList</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>8921288e5367e352ff9484f6e860f7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CClientCreditsList</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>5bfcc0282130de35f2eac2f38ce920ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>CreateSignature</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>34063b0bb934fbd3cb3c3d95c0305b3b</anchor>
      <arglist>(CClientCredits *pTarget, byte *pachOutput, uint8 nMaxSize, const CI2PAddress &amp;ChallengeDest, uint8 byChaIPKind, void *sigkey=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyIdent</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>70f83a1f67eb91fdfc083e4c8ef0f940</anchor>
      <arglist>(CClientCredits *pTarget, const byte *pachSignature, uint8 nInputSize, const CI2PAddress &amp;dwForDest, uint8 byChaIPKind)</arglist>
    </member>
    <member kind="function">
      <type>CClientCredits *</type>
      <name>GetCredit</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>0d72f5a70648df80abc8cc094e41cb82</anchor>
      <arglist>(const CMD4Hash &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>c786f01487e8f986588ea0ae934dae99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetPubKeyLen</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>ec9abac860f50b24efb187ebae143a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>GetPublicKey</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>6e5549eda61fef9d04ad018e27559718</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CryptoAvailable</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>5c6d978afa491182a0053b6caf509d0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveList</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>4bddce1c5545e1bba3fd128e62945061</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>LoadList</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>64a2c09099ce3c2856e690165e710ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InitalizeCrypting</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>6084ba1398012b3e4acd750acb9a7eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>CreateKeyPair</name>
      <anchorfile>classCClientCreditsList.html</anchorfile>
      <anchor>49abf1cbd252d0e37239d85474f839cf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientCreditsRem</name>
    <filename>classCClientCreditsRem.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>CryptoAvailable</name>
      <anchorfile>classCClientCreditsRem.html</anchorfile>
      <anchor>cc1801fde387a0f09364e984c82cfcf8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientDetailDialog</name>
    <filename>classCClientDetailDialog.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CClientDetailDialog</name>
      <anchorfile>classCClientDetailDialog.html</anchorfile>
      <anchor>cb475d6951ba092747aa428fd3979ddc</anchor>
      <arglist>(wxWindow *parent, CUpDownClient *client)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CClientDetailDialog</name>
      <anchorfile>classCClientDetailDialog.html</anchorfile>
      <anchor>c1e10f1f66b43cccd83182b1acd38c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInitDialog</name>
      <anchorfile>classCClientDetailDialog.html</anchorfile>
      <anchor>5b8dc4fedf94b3543ce8792acb80bdbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBnClose</name>
      <anchorfile>classCClientDetailDialog.html</anchorfile>
      <anchor>49ad952d3cf4b0f35bdf65092a316c0a</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientList</name>
    <filename>classCClientList.html</filename>
    <member kind="typedef">
      <type>std::map&lt; CI2PAddress, uint32 &gt;</type>
      <name>ClientMap</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>349b0cc93d419d242ae19e80531214eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::deque&lt; CUpDownClient * &gt;</type>
      <name>SourceList</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>e0f3e11e1a43609fc49d59f7f869a6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::multimap&lt; CI2PAddress, CUpDownClient * &gt;</type>
      <name>IDMap</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>43182bb0415340589c899a7f5640f121</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; CI2PAddress, CUpDownClient * &gt;</type>
      <name>IDMapPair</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>17c5de71011f55bd3238bfdccfd733ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CClientList</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>d98766f029922a03ff0586dbff6a5578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CClientList</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>2a6620b14d11610d55b4e2a97caba2f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddClient</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>a518e33fa91267eeb3330234c3f3377f</anchor>
      <arglist>(CUpDownClient *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddToDeleteQueue</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>6975cee6a71c8ebedd4c6a0756ed91d3</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateClientDest</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>7e255fd302da54fa1bc78991f08de297</anchor>
      <arglist>(CUpDownClient *client, const CI2PAddress &amp;newDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateClientHash</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>01fd2a5ed3633435078bec036117b0d1</anchor>
      <arglist>(CUpDownClient *client, const CMD4Hash &amp;newHash)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetClientCount</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>43241182072a8ed27a31727fb33f8423</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteAll</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>14020948f78228eeeb83f2c21216c0e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AttachToAlreadyKnown</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>66393750e0245bec771922e83b572da3</anchor>
      <arglist>(CUpDownClient **client, CClientTCPSocket *sender)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>FindClientByDest</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>9f67c7fcfb71db8216a86cc2d64a7314</anchor>
      <arglist>(const CI2PAddress &amp;clientdest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTrackClient</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>5c774394c8356a360a677f84217b7e5a</anchor>
      <arglist>(CUpDownClient *toadd)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetClientsFromDest</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>d9ed33d8c7aa73544d77b0fa09f7b19f</anchor>
      <arglist>(const CI2PAddress &amp;dwDest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ComparePriorUserhash</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>7aea808a3ebeada720a5b10f09c70344</anchor>
      <arglist>(const CI2PAddress &amp;nDest, void *pNewHash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBannedClient</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>2b484991c61d022fbdd4c3f20164fe45</anchor>
      <arglist>(const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBannedClient</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>dc90a16416a14f7077d3d5efacd9db2b</anchor>
      <arglist>(const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveBannedClient</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>8f3117ff7687d5d9b0d36e51bd45666b</anchor>
      <arglist>(const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>dea2031bd7b381157afc111d1ddf617b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessDeleteQueue</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>b1f730e347b9327b2f0d1acdfc4b96f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FilterQueues</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>8a03335796f5f6eb6eb48a3f336c2d39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SourceList</type>
      <name>GetClientsByHash</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>82f400810424dae7f90b264acfbcea50</anchor>
      <arglist>(const CMD4Hash &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>SourceList</type>
      <name>GetClientsByDest</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>30db9b63baa4bcbf42062199b2dc203a</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>const IDMap &amp;</type>
      <name>GetClientList</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>19bdd32a84036372c156f1f9d03278f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDeadSource</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>bb77bcc6f9c2b5f40eb2a54dbc11d9ec</anchor>
      <arglist>(const CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDeadSource</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>7c4e833a432b220aff99135a2f3595f6</anchor>
      <arglist>(const CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendMessage</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>b8a3cee20d2f3b4ee35e9ea70550dd95</anchor>
      <arglist>(const CI2PAddress &amp;client_dest, const wxString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChatState</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>838c7277fe312596e39d558a2f35a80f</anchor>
      <arglist>(const CI2PAddress &amp;client_dest, uint8 state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CleanUpClientList</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>812aa65361bff7e31a206ee4a613df62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestTCP</name>
      <anchorfile>classCClientList.html</anchorfile>
      <anchor>0bf528f8c58eab2170b8f5fe51f13316</anchor>
      <arglist>(Kademlia::CContact *contact)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientListCtrl</name>
    <filename>classCClientListCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CClientListCtrl</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>b3985fb6146c99cdea189148adcc2037</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;clientlistctrl&quot;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CClientListCtrl</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>8c234573df432900bd24e17be23a467e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ViewType</type>
      <name>GetListView</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>5bae70fcb78dbd54a3bcb140397d2b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetListView</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>0bbd6458b14da49eaab592ac126d4892</anchor>
      <arglist>(ViewType newView)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertClient</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>361f9fee8d8ed3784f5b9c72e3b0d6f2</anchor>
      <arglist>(CUpDownClient *client, ViewType view)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveClient</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>25c39416acbbec684dc42fa1b90dbdaa</anchor>
      <arglist>(CUpDownClient *client, ViewType view)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateClient</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>d535825d09ee14daa4757ddf00270a97</anchor>
      <arglist>(CUpDownClient *client, ViewType view)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToggleView</name>
      <anchorfile>classCClientListCtrl.html</anchorfile>
      <anchor>3cbbc06752ec53310aa6ed740843dcc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientListRem</name>
    <filename>classCClientListRem.html</filename>
    <member kind="function">
      <type></type>
      <name>CClientListRem</name>
      <anchorfile>classCClientListRem.html</anchorfile>
      <anchor>2c75dd72b2e1208c3bfbc9657c09551f</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>const std::multimap&lt; uint32, CUpDownClient * &gt; &amp;</type>
      <name>GetClientList</name>
      <anchorfile>classCClientListRem.html</anchorfile>
      <anchor>0010525066f2c81684988d0dfcfd340d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddClient</name>
      <anchorfile>classCClientListRem.html</anchorfile>
      <anchor>096569484d3e5da78e88258644e9b6be</anchor>
      <arglist>(CUpDownClient *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FilterQueues</name>
      <anchorfile>classCClientListRem.html</anchorfile>
      <anchor>4d6b608e05a0bdc5fa726d571a6901f5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CClientsView</name>
    <filename>structCClientsView.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Initialize</name>
      <anchorfile>structCClientsView.html</anchorfile>
      <anchor>7c8666137b03c93f66e2fe940009d539</anchor>
      <arglist>(CClientListCtrl *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawCell</name>
      <anchorfile>structCClientsView.html</anchorfile>
      <anchor>3b89d59503d702e23b217010a23b6c7f</anchor>
      <arglist>(CUpDownClient *client, int column, wxDC *dc, const wxRect &amp;rect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int wxCALLBACK</type>
      <name>SortProc</name>
      <anchorfile>structCClientsView.html</anchorfile>
      <anchor>86994974973c9c1cf2541b8bd80e5771</anchor>
      <arglist>(long item1, long item2, long sortData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientTCPSocket</name>
    <filename>classCClientTCPSocket.html</filename>
    <base>CEMSocket</base>
    <member kind="function">
      <type></type>
      <name>CClientTCPSocket</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>89daa3c75b0eadb96fc08c3f04773f86</anchor>
      <arglist>(CUpDownClient *in_client=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CClientTCPSocket</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>f43e24bd5ab820f9a04b5cde4225108a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Disconnect</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>b771ad82088783c0851dc2e761d59cd0</anchor>
      <arglist>(const wxString &amp;strReason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetTimeOutTimer</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>b5a1578964721697388feabd3300da48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckTimeOut</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>423b807acb6a0efbf3c87ec65be93370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Safe_Delete</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>314d23afb94a35cf4d5f7da95fe15b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnConnect</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>7a838f8aa4dcae7dda96424c14e9d80b</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnSend</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>747a97280276d7a7479329ea589e489b</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnReceive</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>269deff51d3d4968ea5678e2f4ae6f9b</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnClose</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>df17b61610364e78302418faad5e5dc1</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnError</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>34ce702be978eb0ee44ab343b8da921c</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClient</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>73a0537a0a1cd7c53cc7e4904fcbeb37</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetClient</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>a24199b523d9ffeb132c9670dc5f74fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SendPacket</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>78237fc807229ec1d0cb1f3977c7df79</anchor>
      <arglist>(CPacket *packet, bool delpacket=true, bool controlpacket=true, uint32 actualPayloadSize=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SocketSentBytes</type>
      <name>SendControlData</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>33c75fa1b894cc2e84f806081491ef11</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 overchargeMaxBytesToSend)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SocketSentBytes</type>
      <name>SendFileAndControlData</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>95bec056c2c8ff186dc61e925b9c67bd</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 overchargeMaxBytesToSend)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>deletethis</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>5e0fcb471eee6ff49a56457ec7bbf4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>timeout_timer</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>2a5693ffffc5e23f64a79fe61d9d1cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>PacketReceived</name>
      <anchorfile>classCClientTCPSocket.html</anchorfile>
      <anchor>c68605b3f2d747b421b3b62e3b7612f8</anchor>
      <arglist>(CPacket *packet)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientTCPSocketHandler</name>
    <filename>classCClientTCPSocketHandler.html</filename>
    <base>wxEvtHandler</base>
    <member kind="function">
      <type></type>
      <name>CClientTCPSocketHandler</name>
      <anchorfile>classCClientTCPSocketHandler.html</anchorfile>
      <anchor>37708db80cf541a53d919095cedc298d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CClientUDPSocket</name>
    <filename>classCClientUDPSocket.html</filename>
    <base>CMuleUDPSocket</base>
    <member kind="function">
      <type></type>
      <name>CClientUDPSocket</name>
      <anchorfile>classCClientUDPSocket.html</anchorfile>
      <anchor>995868a9cc68e5db83612572d666c80e</anchor>
      <arglist>(wxString localdest, const CProxyData *ProxyData=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnReceive</name>
      <anchorfile>classCClientUDPSocket.html</anchorfile>
      <anchor>d619c515065a942b6c36ea4f96e8c6f4</anchor>
      <arglist>(int errorCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CColorFrameCtrl</name>
    <filename>classCColorFrameCtrl.html</filename>
    <base>wxControl</base>
    <member kind="function">
      <type></type>
      <name>CColorFrameCtrl</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>aa671a431563d29b45859cd7011fade0</anchor>
      <arglist>(wxWindow *parent, int id, int wid, int hei)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFrameColor</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>5085bd5a61bdad208b24becb59f0dc37</anchor>
      <arglist>(wxColour color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackgroundColor</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>0b8ee59f8042357edd1b43bb7fa9cbb9</anchor>
      <arglist>(wxColour color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CColorFrameCtrl</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>879a47ecdd990ad87e6ddae29a9fe94f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxColour</type>
      <name>m_crBackColor</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>ed06426a8757ede1fd0ebe62a5af742c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxColour</type>
      <name>m_crFrameColor</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>e3956889d2c9b1bd63c653ea0e7cd575</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPaint</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>8881fb0d690a53604fe495b7a82a5db5</anchor>
      <arglist>(wxPaintEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnSize</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>51c2155a339993ba3724f26211cb4224</anchor>
      <arglist>(wxSizeEvent &amp;evt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RECT</type>
      <name>m_rectClient</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>c6ede42559e24e3038687e7317225ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBrush</type>
      <name>m_brushBack</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>0b358ab2e56404996b464a718666ecd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBrush</type>
      <name>m_brushFrame</name>
      <anchorfile>classCColorFrameCtrl.html</anchorfile>
      <anchor>bea77be00fb4166bca2d80d66e87d64f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CCommandTree</name>
    <filename>classCCommandTree.html</filename>
    <member kind="function">
      <type></type>
      <name>CCommandTree</name>
      <anchorfile>classCCommandTree.html</anchorfile>
      <anchor>ed83908e496a3260dc67f27ec7f6b372</anchor>
      <arglist>(CimuleExternalConnector &amp;app)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CCommandTree</name>
      <anchorfile>classCCommandTree.html</anchorfile>
      <anchor>de6a694c9c72235ae76430e69fd44c17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CCommandTree *</type>
      <name>AddCommand</name>
      <anchorfile>classCCommandTree.html</anchorfile>
      <anchor>1572754f175806d6462399958b2cacdb</anchor>
      <arglist>(const wxString &amp;command, int cmd_id, const wxString &amp;shortDesc, const wxString &amp;longDesc, enum Params params=CMD_PARAM_OPTIONAL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>FindCommandId</name>
      <anchorfile>classCCommandTree.html</anchorfile>
      <anchor>419516888ce5c3851a81589b1b3dd233</anchor>
      <arglist>(const wxString &amp;command, wxString &amp;args, wxString &amp;cmdstr) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFullCommand</name>
      <anchorfile>classCCommandTree.html</anchorfile>
      <anchor>a13c14fba11aa89d49daff555daed2f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintHelpFor</name>
      <anchorfile>classCCommandTree.html</anchorfile>
      <anchor>5763a9a9f079dbead01821e0ad19ea57</anchor>
      <arglist>(const wxString &amp;command) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CCommentDialog</name>
    <filename>classCCommentDialog.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CCommentDialog</name>
      <anchorfile>classCCommentDialog.html</anchorfile>
      <anchor>b669b8819231586dd3ce87a4f33576b6</anchor>
      <arglist>(wxWindow *pParent, CKnownFile *file)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CCommentDialog</name>
      <anchorfile>classCCommentDialog.html</anchorfile>
      <anchor>983dddd56f6b92681ba1f6f8384d404d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInitDialog</name>
      <anchorfile>classCCommentDialog.html</anchorfile>
      <anchor>d5ac756038e2fcfb39335d3e6f4043e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnBnClickedApply</name>
      <anchorfile>classCCommentDialog.html</anchorfile>
      <anchor>f9c251c94ffb8d9a20d6638980ffdd6a</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnBnClickedClear</name>
      <anchorfile>classCCommentDialog.html</anchorfile>
      <anchor>5f5683acab4b4d03f5b8cc6f065ff1a9</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnBnClickedCancel</name>
      <anchorfile>classCCommentDialog.html</anchorfile>
      <anchor>d11152811e9131918354478ce14a7d54</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CCommentDialogLst</name>
    <filename>classCCommentDialogLst.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CCommentDialogLst</name>
      <anchorfile>classCCommentDialogLst.html</anchorfile>
      <anchor>480b5702e7f72bd8055573600bdcfece</anchor>
      <arglist>(wxWindow *pParent, CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CCommentDialogLst</name>
      <anchorfile>classCCommentDialogLst.html</anchorfile>
      <anchor>5b3232f6d5cd4e3bd944b378ff3e503d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int wxCALLBACK</type>
      <name>SortProc</name>
      <anchorfile>classCCommentDialogLst.html</anchorfile>
      <anchor>5ccd294b23c6ec5cbfbac63bddc73349</anchor>
      <arglist>(long item1, long item2, long sortData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CCompletingThread</name>
    <filename>classCCompletingThread.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CCompletingThread</name>
      <anchorfile>classCCompletingThread.html</anchorfile>
      <anchor>0c260e69d3a76d0ecd2286b3481d4886</anchor>
      <arglist>(wxString filename, wxString metPath, uint8 category, void *owner)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CConfigDir</name>
    <filename>classCConfigDir.html</filename>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>GetConfigDir</name>
      <anchorfile>classCConfigDir.html</anchorfile>
      <anchor>04f21ae974405926b799184538349330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsNomad</name>
      <anchorfile>classCConfigDir.html</anchorfile>
      <anchor>7e121ddeca74ac8e7b5654fb4310657a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MakeNomad</name>
      <anchorfile>classCConfigDir.html</anchorfile>
      <anchor>d1a59a1c785ecc9906179e4d9f3075e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MakePerUserConfig</name>
      <anchorfile>classCConfigDir.html</anchorfile>
      <anchor>6085702e5cf3814a6727f6b52315fcd3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CConvertListCtrl</name>
    <filename>classCConvertListCtrl.html</filename>
    <base>wxListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CConvertListCtrl</name>
      <anchorfile>classCConvertListCtrl.html</anchorfile>
      <anchor>f73d1721d0e0eee0fbe43f68f6dc9e85</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;convertlistctrl&quot;))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDeadSourceList</name>
    <filename>classCDeadSourceList.html</filename>
    <member kind="function">
      <type></type>
      <name>CDeadSourceList</name>
      <anchorfile>classCDeadSourceList.html</anchorfile>
      <anchor>9137d692ca9cab8b10f181c9d0baed68</anchor>
      <arglist>(bool isGlobal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDeadSource</name>
      <anchorfile>classCDeadSourceList.html</anchorfile>
      <anchor>55bdfe27e730f01f12d7df628152772a</anchor>
      <arglist>(const CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDeadSource</name>
      <anchorfile>classCDeadSourceList.html</anchorfile>
      <anchor>d8bb4f5ab9e3c53ed7fbc9eb7c5acc4e</anchor>
      <arglist>(const CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetDeadSourcesCount</name>
      <anchorfile>classCDeadSourceList.html</anchorfile>
      <anchor>e11949b139cf91a37ff8dac539ba8d5b</anchor>
      <arglist>() const </arglist>
    </member>
    <class kind="class">CDeadSourceList::CDeadSource</class>
  </compound>
  <compound kind="class">
    <name>CDebugCategory</name>
    <filename>classCDebugCategory.html</filename>
    <member kind="function">
      <type></type>
      <name>CDebugCategory</name>
      <anchorfile>classCDebugCategory.html</anchorfile>
      <anchor>0823321aa12352bd18ca67296ac6d6a2</anchor>
      <arglist>(DebugType type, const wxString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEnabled</name>
      <anchorfile>classCDebugCategory.html</anchorfile>
      <anchor>f9a2ccf49812519d4618542d82043e72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEnabled</name>
      <anchorfile>classCDebugCategory.html</anchorfile>
      <anchor>499dcb3988cbea9f8be856a52b0afb34</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetName</name>
      <anchorfile>classCDebugCategory.html</anchorfile>
      <anchor>cead879416801261dc327db1b281accf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DebugType</type>
      <name>GetType</name>
      <anchorfile>classCDebugCategory.html</anchorfile>
      <anchor>08ba35d0df947daebfd70fb7bfd46869</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDeletedClient</name>
    <filename>classCDeletedClient.html</filename>
    <member kind="typedef">
      <type>std::list&lt; DestAndHash &gt;</type>
      <name>DaHList</name>
      <anchorfile>classCDeletedClient.html</anchorfile>
      <anchor>88942d06e6fa4f7c314210ced590fde7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CDeletedClient</name>
      <anchorfile>classCDeletedClient.html</anchorfile>
      <anchor>9ae9c3f46d71338081f3336cc495f831</anchor>
      <arglist>(CUpDownClient *pClient)</arglist>
    </member>
    <member kind="variable">
      <type>DaHList</type>
      <name>m_ItemsList</name>
      <anchorfile>classCDeletedClient.html</anchorfile>
      <anchor>17779b643706844a73f7f8444717cc82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwInserted</name>
      <anchorfile>classCDeletedClient.html</anchorfile>
      <anchor>73a367a80c0a04c42262650a4d169622</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CDeletedClient::DestAndHash</class>
  </compound>
  <compound kind="struct">
    <name>CDeletedClient::DestAndHash</name>
    <filename>structCDeletedClient_1_1DestAndHash.html</filename>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>nDest</name>
      <anchorfile>structCDeletedClient_1_1DestAndHash.html</anchorfile>
      <anchor>7465a8ea698bf9de71a6fc5ae63da068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pHash</name>
      <anchorfile>structCDeletedClient_1_1DestAndHash.html</anchorfile>
      <anchor>d6b574e0c2e3e59ee81f8440c6e9dde3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDirectoryTreeCtrl</name>
    <filename>classCDirectoryTreeCtrl.html</filename>
    <base>wxTreeCtrl</base>
    <member kind="function">
      <type></type>
      <name>CDirectoryTreeCtrl</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>6ddbad3626e81a11e16626bcb0be706e</anchor>
      <arglist>(wxWindow *&amp;parent, int id, const wxPoint &amp;pos, wxSize siz, int flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CDirectoryTreeCtrl</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>b746be8592c51a5e8aa6ff5a3e60775f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>2ba796d735205566fdda69f51bfb027e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSharedDirectories</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>89bdad72b4c37bc156f4ce3832ae7c05</anchor>
      <arglist>(wxArrayString *list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSharedDirectories</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>63825e2e88e0e1959c73c90b8a3ae461</anchor>
      <arglist>(wxArrayString *list)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HasChanged</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>5e980c02d6f39c7f64a78c134821db6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnTvnItemexpanding</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>1133f1a1a00aeb65fdd7d93584c23ada</anchor>
      <arglist>(wxTreeEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRButtonDown</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>6b240fe087c27923f1c61e1961d3cd61</anchor>
      <arglist>(wxTreeEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnItemActivated</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>394b549f16cfcec90f91d393e756c6c0</anchor>
      <arglist>(wxTreeEvent &amp;evt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxArrayString</type>
      <name>m_lstShared</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>60097d2b2e40e1a95808cd9ded4733d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_strLastRightClicked</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>d9c40bbfda3735a70e103eb29abb22b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_bSelectSubDirs</name>
      <anchorfile>classCDirectoryTreeCtrl.html</anchorfile>
      <anchor>64a8a7354f6b49c6439d11cac125382d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDirectoryTreeItemData</name>
    <filename>classCDirectoryTreeItemData.html</filename>
    <base>wxTreeItemData</base>
    <member kind="function">
      <type></type>
      <name>CDirectoryTreeItemData</name>
      <anchorfile>classCDirectoryTreeItemData.html</anchorfile>
      <anchor>2596359c5145e9f02f933793b25c2ccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CDirectoryTreeItemData</name>
      <anchorfile>classCDirectoryTreeItemData.html</anchorfile>
      <anchor>769548c6d6007d202720a5c8aa87a550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddCount</name>
      <anchorfile>classCDirectoryTreeItemData.html</anchorfile>
      <anchor>b80b8762df3e9a07b3c921a80d4a38f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SubCount</name>
      <anchorfile>classCDirectoryTreeItemData.html</anchorfile>
      <anchor>e1e4a77447d540bbe7e478f3c638fdc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>classCDirectoryTreeItemData.html</anchorfile>
      <anchor>414e64a6832e5b8e989a169deb836427</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDirIterator</name>
    <filename>classCDirIterator.html</filename>
    <member kind="enumeration">
      <name>FileType</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>d5fb9e3e50a88f422de9c07fb4d05cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>File</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>d5fb9e3e50a88f422de9c07fb4d05cb6633892b02c8a17c982b70c2cf503eab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dir</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>d5fb9e3e50a88f422de9c07fb4d05cb62dd9fc3a62a1f0b1ea75e64709f64f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Any</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>d5fb9e3e50a88f422de9c07fb4d05cb6ccd904708a4bb3b27eebeb58f8702250</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CDirIterator</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>b8f3d87188312c2c9ca7b8dc9f49af84</anchor>
      <arglist>(const wxString &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CDirIterator</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>e15e1416598990d492c9855116b9054d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>2656f19a03fae299df2047100d9df38f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFirstFile</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>47cc755d685cd5311ef6746f2edfaeb3</anchor>
      <arglist>(FileType search_type, const wxString &amp;search_mask=wxEmptyString)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetNextFile</name>
      <anchorfile>classCDirIterator.html</anchorfile>
      <anchor>72808e38f39cc3fcdeaf35371008db87</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDlgFriend</name>
    <filename>classCDlgFriend.html</filename>
    <member kind="function">
      <type></type>
      <name>CDlgFriend</name>
      <anchorfile>classCDlgFriend.html</anchorfile>
      <anchor>84dfd2eaca981f01887debbe8999ad08</anchor>
      <arglist>(const CMD4Hash &amp;hash, const wxString &amp;name, const CI2PAddress &amp;dest, bool IsLinked, bool HasFriendSlot)</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_name</name>
      <anchorfile>classCDlgFriend.html</anchorfile>
      <anchor>f00702a288616b68c07d95c51ab3ced6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>m_dest</name>
      <anchorfile>classCDlgFriend.html</anchorfile>
      <anchor>21ff62059699516af78688a6817dee39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>m_hash</name>
      <anchorfile>classCDlgFriend.html</anchorfile>
      <anchor>68ef670a2cddc38323dab73823d5f1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>islinked</name>
      <anchorfile>classCDlgFriend.html</anchorfile>
      <anchor>af6be662a2227db3c7d9da02732913c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasfriendslot</name>
      <anchorfile>classCDlgFriend.html</anchorfile>
      <anchor>097eadf865d01e235a3204ef98ad8be1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDownloadListCtrl</name>
    <filename>classCDownloadListCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CDownloadListCtrl</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>f9cd7f4c0641af2d76551d77eaf49839</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;downloadlistctrl&quot;))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CDownloadListCtrl</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>33219b3df08bf92dbae56348ecbfb413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFile</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>6363be7c6ded37a028e35ce1c5f3b542</anchor>
      <arglist>(CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSource</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>1574dc97a367b34441a7e86354a6b9d6</anchor>
      <arglist>(CPartFile *owner, CUpDownClient *source, DownloadItemType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveSource</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>c7cf7d891c7a13e76f39855904a911c5</anchor>
      <arglist>(const CUpDownClient *source, const CPartFile *owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFile</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>5706026b493b91f948cb95d8076fd89a</anchor>
      <arglist>(CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowSources</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>dff6e50c4c76bdd8ffd098b75466f579</anchor>
      <arglist>(CPartFile *file, bool show)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowFile</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>ea85fba3039f4fbbe8e74f570693b6e0</anchor>
      <arglist>(CPartFile *file, bool show)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateItem</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>272538cd84f30215e8e189582677267e</anchor>
      <arglist>(const void *toupdate)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetCategory</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>99ebe0695e63a72e944e6e1522c2a5c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChangeCategory</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>7cb5ba1a1fa9f3b33e586ec759b267ce</anchor>
      <arglist>(int newCategory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearCompleted</name>
      <anchorfile>classCDownloadListCtrl.html</anchorfile>
      <anchor>f908c9a36ccc6b8c2085b0391def76f0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDownloadQueue</name>
    <filename>classCDownloadQueue.html</filename>
    <base>CObservableQueue&lt; CPartFile * &gt;</base>
    <member kind="function">
      <type></type>
      <name>CDownloadQueue</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>535b1da6bf45937c074861f453375a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CDownloadQueue</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>61d1eeaee70e0dc4be19460fd82fc544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadMetFiles</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>2a8750598d44fc9257dbc650e68b77b0</anchor>
      <arglist>(const wxString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>8657754c2d6afcfd89375b4a4e857192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>GetFileByID</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>3613b7e4b35a207a2aa7042e34f5c9f4</anchor>
      <arglist>(const CMD4Hash &amp;filehash) const </arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>GetFileByIndex</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>ab959e5772c45a300f591638db1b93da</anchor>
      <arglist>(unsigned int idx) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFileExisting</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>69b08bfefe72205168ab14bf04e83690</anchor>
      <arglist>(const CMD4Hash &amp;fileid) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartFile</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>7ced3914956072120a4f1ce93aee2c05</anchor>
      <arglist>(const CKnownFile *file) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSearchToDownload</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>f31a136ab20fdf1b4a16009f8b6283f6</anchor>
      <arglist>(CSearchFile *toadd, uint8 category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDownload</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>b6cec8c090865ec4e431fb51ff7d87fc</anchor>
      <arglist>(CPartFile *newfile, bool paused, uint8 category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFile</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>49d1bfebc064657f36d71bfdf4db8fe1</anchor>
      <arglist>(CPartFile *toremove)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveSourceSeeds</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>5d0cba092b1ad93a9408df017c318046</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadSourceSeeds</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>b7c309806762279f18f5f27b2762cabc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckAndAddSource</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>156ead04cc16e200982f11a504e8b1b3</anchor>
      <arglist>(CPartFile *sender, CUpDownClient *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckAndAddKnownSource</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>bc3acf6acf68639bf30972616dbfdba0</anchor>
      <arglist>(CPartFile *sender, CUpDownClient *source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveSource</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>4faa385ebab56cfadb5273365998b323</anchor>
      <arglist>(CUpDownClient *toremove, bool updatewindow=true, bool bDoStatsUpdate=true)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetDownloadClientByDest_UDP</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>5464470a0b9f6eebdce1edefa8218f91</anchor>
      <arglist>(const CI2PAddress &amp;nUDPDest) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendLocalSrcRequest</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>7107266ac67ab16fc698da12234ec208</anchor>
      <arglist>(CPartFile *sender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveLocalServerRequest</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>e5f0a490fb97ca80ab7bdce4f19d4061</anchor>
      <arglist>(CPartFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetLocalServerRequests</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>04932e62ed208305df22509d5b9b5a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartNextFile</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>456551034265541eea0ceece9f526df4</anchor>
      <arglist>(CPartFile *oldfile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetCatParts</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>7b20bda119d3d274e6a62a998e8cd66e</anchor>
      <arglist>(uint8 cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCatPrio</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>19f92465551dd9eb3033326a579b1bf9</anchor>
      <arglist>(uint8 cat, uint8 newprio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCatStatus</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>d8b0b99302ebd970b65e082d74a43ed1</anchor>
      <arglist>(uint8 cat, int newstatus)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetFileCount</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>4afdaa4a0005b6a409eb9156ba770c60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetDownloadingFileCount</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>8a3ede3222b2b2a8ef91d6a1bad4d9c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetPausedFileCount</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>852e350315ba3dbb7084583337cef1ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnHostnameResolved</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>d82fef6d6d2cee96be1074f009dc4f0c</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddED2KLink</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>a6c0b96a59cde2899bade3d702c67ba0</anchor>
      <arglist>(const wxString &amp;link, int category=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddED2KLink</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>0dd40ef88cf16b6a1047fa1ceadeaaff</anchor>
      <arglist>(const CED2KLink *link, int category=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddED2KLink</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>afb3d907aec0ded483369a0575723a9b</anchor>
      <arglist>(const CED2KFileLink *link, int category=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddED2KLink</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>c96e29b620024601bd50ad8848585fc1</anchor>
      <arglist>(const CED2KServerLink *link)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddED2KLink</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>5e201512f91fa4b85dafad118dda3dee</anchor>
      <arglist>(const CED2KServerListLink *link)</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetUDPServer</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>0a384df23ba8e9c428f1018b057057ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUDPServer</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>b83f2fd149fd24af359cb46976bedb64</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopUDPRequests</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>8fdebf5825fc616ba8f937e0f634b4ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>KademliaSearchFile</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>84c9563252e8674449f09811eb8ed318</anchor>
      <arglist>(uint32 searchID, const Kademlia::CUInt128 *pcontactID, uint8 type, const CI2PAddress &amp;tcpdest, const CI2PAddress &amp;udpdest, const CI2PAddress &amp;serverdest, uint32 clientid)</arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>GetFileByKadFileSearchID</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>9ae57a959c3a3612ebab19a3b8f025ef</anchor>
      <arglist>(uint32 id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DoKademliaFileRequest</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>f0efcc4e72b91563a8b853e4782495a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastKademliaFileRequest</name>
      <anchorfile>classCDownloadQueue.html</anchorfile>
      <anchor>2c51372e735cc87f22fd37c9ae176d20</anchor>
      <arglist>()</arglist>
    </member>
    <class kind="struct">CDownloadQueue::Hostname_Entry</class>
  </compound>
  <compound kind="class">
    <name>CDownQueueRem</name>
    <filename>classCDownQueueRem.html</filename>
    <base>CRemoteContainer&lt; CPartFile, CMD4Hash, CEC_PartFile_Tag &gt;</base>
    <member kind="function">
      <type></type>
      <name>CDownQueueRem</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>745949d83f7fe0429adee2f3607b5180</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFileCount</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>8471145dab0eadced30e8db1c7092a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>GetFileByID</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>65f3380c9af1319c36450d5011243dc2</anchor>
      <arglist>(const CMD4Hash &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>GetFileByIndex</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>1f9ec51cc4dd164cee4a87a781ec94c4</anchor>
      <arglist>(unsigned int idx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartFile</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>4e5a02a37f3456c62cd234fa9af30eea</anchor>
      <arglist>(const CKnownFile *totest) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Prio</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>0ab7a561fc11fae55039e69f4fae74df</anchor>
      <arglist>(CPartFile *file, uint8 prio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AutoPrio</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>c3760065dc8a4a7a016650f1fb4be83f</anchor>
      <arglist>(CPartFile *file, bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Category</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>5be3f6c43a3c694f4c4714f0a3d77eae</anchor>
      <arglist>(CPartFile *file, uint8 cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendFileCommand</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>97a47fcfb803c029b03f211d0473a81f</anchor>
      <arglist>(CPartFile *file, ec_tagname_t cmd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopUDPRequests</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>1253b80ad7475ac1d5cd279780cdad99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFileLinkToDownload</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>be0d0e6b7201f758d1ba4ad38cc8ec03</anchor>
      <arglist>(CED2KFileLink *, uint8)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddED2KLink</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>7f65cdc9690148c045e73e8fe2e70665</anchor>
      <arglist>(const wxString &amp;link, int category=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsetCompletedFilesExist</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>5ab0e24a1db51164a087c3eb1c5f6bf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetCatParts</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>b95349608fe9ca8e86daa8acf5396de3</anchor>
      <arglist>(int cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSearchToDownload</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>23ab482d969b7f84e075215ec7fa2f92</anchor>
      <arglist>(CSearchFile *toadd, uint8 category)</arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>CreateItem</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>034ac9f6719a95f479c8667f4abf2a9e</anchor>
      <arglist>(CEC_PartFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>652f84f1ad2789f10d300fc62342a7f1</anchor>
      <arglist>(CPartFile *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>GetItemID</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>345c86ade14c3c74f7d8a1829a043a7e</anchor>
      <arglist>(CPartFile *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessItemUpdate</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>29e17fdf154f31fbdf3116089236b409</anchor>
      <arglist>(CEC_PartFile_Tag *, CPartFile *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Phase1Done</name>
      <anchorfile>classCDownQueueRem.html</anchorfile>
      <anchor>436f6fef762985e59f4a7ef07b20931e</anchor>
      <arglist>(const CECPacket *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CDynProgressImage</name>
    <filename>classCDynProgressImage.html</filename>
    <base virtualness="virtual">CProgressImage</base>
    <member kind="function">
      <type></type>
      <name>CDynProgressImage</name>
      <anchorfile>classCDynProgressImage.html</anchorfile>
      <anchor>672d9eb64a18ae73b0df3dcf4e80bd00</anchor>
      <arglist>(int w, int h, wxString &amp;tmpl, DownloadFile *file)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetHTML</name>
      <anchorfile>classCDynProgressImage.html</anchorfile>
      <anchor>64166e26956de20a188d7f84fbbcca4d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_Category_Tag</name>
    <filename>classCEC__Category__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_Category_Tag</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>904f086f05f0ac6d945e6345faf9133e</anchor>
      <arglist>(uint32 cat_index, EC_DETAIL_LEVEL detail_level=EC_DETAIL_FULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEC_Category_Tag</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>067d90c75dc6abb444909a81b92eaf46</anchor>
      <arglist>(uint32 cat_index, wxString name, wxString path, wxString comment, wxColour color, uint8 prio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>cd2b187b12974a9f80b5344243084673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Create</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>216d09863325255518285abd30ef8a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Name</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>0f66ff5dea902a4dc5712b11ec21a1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Path</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>dd5e681872214ee0205c02ba0c835b2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Comment</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>f82b891c103026c12a5f6458eabb63ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>Prio</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>81eeff6c4f2ea5532c8e3417667a5169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxColor</type>
      <name>Color</name>
      <anchorfile>classCEC__Category__Tag.html</anchorfile>
      <anchor>3666e2974e66955538aeadeeffbf37f1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_ConnState_Tag</name>
    <filename>classCEC__ConnState__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_ConnState_Tag</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>c47da5039fb5a9d45645e9e446925bfc</anchor>
      <arglist>(EC_DETAIL_LEVEL)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetEd2kId</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>b37f85d03e4c85a9c43467661cbc8ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>dc4f5dbff2c9c2644b170505a3ede608</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnectedED2K</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>10b0899a24863284e6f1c18c1fac48e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnectingED2K</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>9bddc602e75735f90ba5ba985aaf8ff1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnectedKademlia</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>d96bca3f82d8636558ea070c0ea083d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKadFirewalled</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>ac9d911c02c588ca4d9b4b5e5a1a267d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKadRunning</name>
      <anchorfile>classCEC__ConnState__Tag.html</anchorfile>
      <anchor>dbc48dc80c3c9c4d129addb702923a5e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_PartFile_Tag</name>
    <filename>classCEC__PartFile__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_PartFile_Tag</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>dd6aa1831f543228c273d13f28a0e97a</anchor>
      <arglist>(CPartFile *file, EC_DETAIL_LEVEL detail_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEC_PartFile_Tag</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>9e4b2174597efa5d999e6b4cff675169</anchor>
      <arglist>(CPartFile *file, CValueMap &amp;valuemap)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>a0e165b9f4b15509cef69fb921fbc319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>FileHash</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>51d376c4dfe84fd11d53deee9e74cab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileHashString</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>7277f5662877e333522b3063a358cd1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileName</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>4cd48d8b6fb92be8aeb9415d637c0b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SizeFull</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>b488f7b0817518cceefe6d71c1f763a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SizeXfer</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>3f803c097676bb2dbbd711654031883b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SizeDone</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>264232f832cc4c67ec5e6e8c4679f067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileEd2kLink</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>1c3cb5adf57bffcfe8a1ec39b5031c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>FileStatus</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>06c41371592357280af3bbe7345a96b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>SourceCount</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>c9c8703820cd074dd5b1f88c7fe2f779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>SourceNotCurrCount</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>0bfa391cfc7d21270af5c585ddc7642c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>SourceXferCount</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>9dba0e24ec8989f9df47a3a6624b655a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>SourceCountA4AF</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>cd55b0e5a4351b603b0e7744b02ee249</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>Speed</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>b7bf1c9002a5397ba529af0ca7829c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>Prio</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>f86b31303d08c049b2d250167a98dc33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>FileCat</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>6fb15a6f2b988c1cb674cb2b4f573e60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>LastSeenComplete</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>ea11e5f67784a4c66c1335f755322a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>PartMetName</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>294e0021125379c4a00eb54d7dc61955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSizeXfer</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>6201564b39347730c57496033fc9ea36</anchor>
      <arglist>(uint32 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSizeDone</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>9ebdaf46276d717d673afc4e6773deab</anchor>
      <arglist>(uint32 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileEd2kLink</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>b1a4a2304da51a19443b6da55726aa7c</anchor>
      <arglist>(uint32 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileStatus</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>c964135c1ceaa077b995e1b5f32dbae0</anchor>
      <arglist>(uint8 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSourceCount</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>34809f744869a318cf83244fe5957d80</anchor>
      <arglist>(uint16 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSourceNotCurrCount</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>3acbaeb3610a4d1c633c27d011ff5d8f</anchor>
      <arglist>(uint32 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSourceXferCount</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>6593b07fdbc4d2340ed1fcea1b781b76</anchor>
      <arglist>(uint16 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSourceCountA4AF</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>0f79de043f1c9e20a8176c8095cffb43</anchor>
      <arglist>(uint16 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSpeed</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>36cb36b7f5e8705789aebceed825b455</anchor>
      <arglist>(uint32 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrio</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>029c8c91da3861a559101d5db9ef3371</anchor>
      <arglist>(uint8 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileCat</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>2411e2c06c04bf780703394532ce6319</anchor>
      <arglist>(uint8 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastSeenComplete</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>60e5e60642890c8e8135344cd7c4a120</anchor>
      <arglist>(uint32 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFileStatusString</name>
      <anchorfile>classCEC__PartFile__Tag.html</anchorfile>
      <anchor>14471971d946ad183a4cb3d4a8d480df</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_Prefs_Packet</name>
    <filename>classCEC__Prefs__Packet.html</filename>
    <base>CECPacket</base>
    <member kind="function">
      <type></type>
      <name>CEC_Prefs_Packet</name>
      <anchorfile>classCEC__Prefs__Packet.html</anchorfile>
      <anchor>792195de1063f2a52c04c99c7b1d28e0</anchor>
      <arglist>(uint32 selection, EC_DETAIL_LEVEL prefs_detail=EC_DETAIL_FULL, EC_DETAIL_LEVEL cat_details=EC_DETAIL_FULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classCEC__Prefs__Packet.html</anchorfile>
      <anchor>c00c2b491aac04d88b9055ef48f3ec69</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_Search_Tag</name>
    <filename>classCEC__Search__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_Search_Tag</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>f456f5ace7279d837fb94e36fe952097</anchor>
      <arglist>(wxString &amp;name, EC_SEARCH_TYPE search_type, wxString &amp;file_type, wxString &amp;extension, uint32 avail, wxULongLong min_size, wxULongLong max_size)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>SearchText</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>da3ce3c4be0927127e5d3cf8bf6f5f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EC_SEARCH_TYPE</type>
      <name>SearchType</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>cd82ebd105bab656c9cbee34da410b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>MinSize</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>dd680b998b9baedb31921d065448144b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>MaxSize</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>ec27bb26cc5a96468b8528bd15ef63ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>Avail</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>e507783b61d697f60db33a7cb4eab1c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>SearchExt</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>5a695980e7ab16672c6743f5da7e0d20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>SearchFileType</name>
      <anchorfile>classCEC__Search__Tag.html</anchorfile>
      <anchor>f9ffe99495a853f3960bf283f91625e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_SearchFile_Tag</name>
    <filename>classCEC__SearchFile__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_SearchFile_Tag</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>9e28a5160fb204a14fe8822a9a48b790</anchor>
      <arglist>(CSearchFile *file, EC_DETAIL_LEVEL detail_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEC_SearchFile_Tag</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>5768a759652219412909b1d33c515882</anchor>
      <arglist>(CSearchFile *file, CValueMap &amp;valuemap)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>5d7d60ba19213b504acf244e00c4de59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>FileHash</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>31d47b8660a0472b3e758b60a137ca56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileHashString</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>47f41f5fb3ff156becc337f555e64c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileName</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>19f27a3895aa262511fa98f446c7c005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SizeFull</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>e6e43153b9109bcf77125b8b7d8f0a98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SourceCount</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>2d3b988a5ab3b0f24fcc33f52ec8419f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>CompleteSourceCount</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>b652551c29c5eb33b39031dd1d779b19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AlreadyHave</name>
      <anchorfile>classCEC__SearchFile__Tag.html</anchorfile>
      <anchor>bff58b79b4b7223b1dd80d55e703f432</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_Server_Tag</name>
    <filename>classCEC__Server__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_Server_Tag</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>2b892f141f7df48e6958faaf8177dcef</anchor>
      <arglist>(const CServer *, EC_DETAIL_LEVEL)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>ServerName</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>58fa165fe5a1088fc8290e0f52e34698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>ServerDesc</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>27878de063779f589938ebb4c89886fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetPrio</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>f08eea108b95d38f512f67d8b3778712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetStatic</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>f01b5ccd9426adffced29a76146c6b10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetPing</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>00e353c8dbcd83a8351ec8538ce04f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetFailed</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>0e477f2b63977553f117df033cc739d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFiles</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>4d72ef6b532bac6ac87ee882a0fab3e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetUsers</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>0fa0a916f76322611077e904192a72f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetMaxUsers</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>9c03ef53a74e990741c10945b8898dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>ID</name>
      <anchorfile>classCEC__Server__Tag.html</anchorfile>
      <anchor>7ee045201177d245905f148e49a33375</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_SharedFile_Tag</name>
    <filename>classCEC__SharedFile__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_SharedFile_Tag</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>53a07c1f7969fd060b8235aa4e836cb2</anchor>
      <arglist>(const CKnownFile *file, EC_DETAIL_LEVEL detail_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEC_SharedFile_Tag</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>7f28a0c9536b18e72a7322bb856f9f56</anchor>
      <arglist>(const CKnownFile *file, CValueMap &amp;valuemap)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>ed044f1485e1b9bef8cacb3a2d766863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>FileHash</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>05dbdc1ec03bc8623545198a7c9227f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileHashString</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>e04f3be5859afa57ddc5da94a2e510ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileName</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>9211c22b9bb6f2208080f0f4bd4ba42e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SizeFull</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>7298b6ce5fc20eb8448a83063796f8cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>FileEd2kLink</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>f6b1b3d97a6269cb31e1517dc4a64a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>Prio</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>acdcbb20b99dfb7450bd1e5415bf0405</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetRequests</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>c4b0dc1fa8975ea54729c296c2fdfc0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetAllRequests</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>236efcda6e34292d74664db53b4ca905</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetAccepts</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>423ff2c2479e5dadedc26416d58821be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetAllAccepts</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>b7e7455e0171de4da9ed1cd273ebd035</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetXferred</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>fe916c129646f84cb8f4708d4cc210b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetAllXferred</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>9a53108b915b7bc8fbb096b926e41162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrio</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>6876d296741f1b17a765b7e8d9695fe5</anchor>
      <arglist>(uint8 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRequests</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>fa89386a8899b6ab60ac3efdf1cc27b2</anchor>
      <arglist>(uint16 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllRequests</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>69450af8d77e5864367ab8c0a51c8ec2</anchor>
      <arglist>(uint32 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAccepts</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>75a88016fcf468f90b0f4d73bf4c34df</anchor>
      <arglist>(uint16 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllAccepts</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>e2d579bd01559495fe2fa9924279e025</anchor>
      <arglist>(uint32 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetXferred</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>853c569c349052a940034147cecbc374</anchor>
      <arglist>(uint64 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllXferred</name>
      <anchorfile>classCEC__SharedFile__Tag.html</anchorfile>
      <anchor>07b9d0f116fdd1c68d47795d0c263ae2</anchor>
      <arglist>(uint64 &amp;val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_StatTree_Node_Tag</name>
    <filename>classCEC__StatTree__Node__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_StatTree_Node_Tag</name>
      <anchorfile>classCEC__StatTree__Node__Tag.html</anchorfile>
      <anchor>5ec7963712da93e1028795265b47afa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCEC__StatTree__Node__Tag.html</anchorfile>
      <anchor>53dc4018072c5253cb468296fac5260e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEC_UpDownClient_Tag</name>
    <filename>classCEC__UpDownClient__Tag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CEC_UpDownClient_Tag</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>2e2077289d18922a9768c61129e14127</anchor>
      <arglist>(const CUpDownClient *client, EC_DETAIL_LEVEL detail_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEC_UpDownClient_Tag</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>dc7a61358aee5bffdf430ec775a214f1</anchor>
      <arglist>(const CUpDownClient *client, CValueMap &amp;valuemap)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>ID</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>81c8748e12296d39d73eb83d4e1ad6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>FileID</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>2e0b68e7cfa88a5affc766c6b5068175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>UserID</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>cf3b8b02d75b47e0a6ece346fcc27ea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HaveFile</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>f7911876c9da000321e1af6fa12eb828</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>ClientName</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>258eb26d58fd0d547ce367f5084aeb33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SpeedUp</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>c5594b572005c837a62711fed95e6731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SpeedDown</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>b2f8f5f3a9746358c5fdcd5e3648e658</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>XferUp</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>48c3be9bedab61d69702670c2f2f48e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>XferDown</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>cccf916d7e9a444049c2b1f375354848</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>XferUpSession</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>c38a274cf9596ee938c40a53852634df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFriend</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>a8d1cb3d420c367fb990486e79ceb6a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>ClientSoftware</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>a945b33e21325682453e9928c71acc07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>ClientState</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>51d8f63417d876fe037882f187244033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>WaitTime</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>8f35b0a2bb84442d797c05a4ea6358d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>XferTime</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>14b54f3458ad4daa8e712e504b4bf51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>LastReqTime</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>53610639696b37adfc07b4b8bbf96bc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>QueueTime</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>1e642649727354d9c8fa68b19011bb6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetSourceFrom</name>
      <anchorfile>classCEC__UpDownClient__Tag.html</anchorfile>
      <anchor>c7ab93162f792e96dc99dd8bd47e2160</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECEmptyTag</name>
    <filename>classCECEmptyTag.html</filename>
    <base>CECTag</base>
    <member kind="function">
      <type></type>
      <name>CECEmptyTag</name>
      <anchorfile>classCECEmptyTag.html</anchorfile>
      <anchor>9e164db3abdd1b673c0ea5b0e3a79ac5</anchor>
      <arglist>(ec_tagname_t name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CECEmptyTag</name>
      <anchorfile>classCECEmptyTag.html</anchorfile>
      <anchor>c8bd4c1364229d1bb56d7546afef13a3</anchor>
      <arglist>(const CECSocket &amp;socket)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECFileConfig</name>
    <filename>classCECFileConfig.html</filename>
    <base>wxFileConfig</base>
    <member kind="function">
      <type></type>
      <name>CECFileConfig</name>
      <anchorfile>classCECFileConfig.html</anchorfile>
      <anchor>b0a7922b05b5e5b7e3b2b36735c1d26e</anchor>
      <arglist>(const wxString &amp;localFilename=wxEmptyString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReadHash</name>
      <anchorfile>classCECFileConfig.html</anchorfile>
      <anchor>8e7732791d68841f25e43ddf18c25b3c</anchor>
      <arglist>(const wxString &amp;key, CMD4Hash *hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteHash</name>
      <anchorfile>classCECFileConfig.html</anchorfile>
      <anchor>a7c9b2f26c7b188d37218d6f810cc19e</anchor>
      <arglist>(const wxString &amp;key, const CMD4Hash &amp;hash)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECLoginPacket</name>
    <filename>classCECLoginPacket.html</filename>
    <base>CECPacket</base>
    <member kind="function">
      <type></type>
      <name>CECLoginPacket</name>
      <anchorfile>classCECLoginPacket.html</anchorfile>
      <anchor>38a92791c826a50dd173c9de870ea658</anchor>
      <arglist>(const wxString &amp;pass, const wxString &amp;client, const wxString &amp;version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEConnectDlg</name>
    <filename>classCEConnectDlg.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CEConnectDlg</name>
      <anchorfile>classCEConnectDlg.html</anchorfile>
      <anchor>4af1fac53b3ceb4d627b2da0089f9cd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Host</name>
      <anchorfile>classCEConnectDlg.html</anchorfile>
      <anchor>bd99450fbd1852ab7bceadc0fb94cd51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Port</name>
      <anchorfile>classCEConnectDlg.html</anchorfile>
      <anchor>f64d168aeda23373840eeb0d8c21a9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Login</name>
      <anchorfile>classCEConnectDlg.html</anchorfile>
      <anchor>bc30f011bfb1983ce45931c045e59838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>PassHash</name>
      <anchorfile>classCEConnectDlg.html</anchorfile>
      <anchor>a30b1f391dd98c1a5095e46ebcef5974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveUserPass</name>
      <anchorfile>classCEConnectDlg.html</anchorfile>
      <anchor>1bc01b33436f378858cb9fe070ba8f06</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECPacket</name>
    <filename>classCECPacket.html</filename>
    <base protection="protected">CECEmptyTag</base>
    <member kind="function">
      <type></type>
      <name>CECPacket</name>
      <anchorfile>classCECPacket.html</anchorfile>
      <anchor>3aba08458a75540c023a5786cb3d64a5</anchor>
      <arglist>(ec_opcode_t opCode, EC_DETAIL_LEVEL detail_level=EC_DETAIL_FULL)</arglist>
    </member>
    <member kind="function">
      <type>ec_opcode_t</type>
      <name>GetOpCode</name>
      <anchorfile>classCECPacket.html</anchorfile>
      <anchor>758cad68f474c8cc2b62154ce5d43617</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetPacketLength</name>
      <anchorfile>classCECPacket.html</anchorfile>
      <anchor>c57bcd383fb6b50780fe7abb281436c9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>EC_DETAIL_LEVEL</type>
      <name>GetDetailLevel</name>
      <anchorfile>classCECPacket.html</anchorfile>
      <anchor>33eb20503c6d3b6ba209dbbd01ebbdf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CECSocket</name>
      <anchorfile>classCECPacket.html</anchorfile>
      <anchor>6a1e30d03910fad6da0c77d42cbff7b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECPacketHandlerBase</name>
    <filename>classCECPacketHandlerBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CECPacketHandlerBase</name>
      <anchorfile>classCECPacketHandlerBase.html</anchorfile>
      <anchor>af778fa39c092772b05a6406f8753a83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>HandlePacket</name>
      <anchorfile>classCECPacketHandlerBase.html</anchorfile>
      <anchor>59ea0130446d29130d21c61e132772f8</anchor>
      <arglist>(const CECPacket *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECServerSocket</name>
    <filename>classCECServerSocket.html</filename>
    <base>CECSocket</base>
    <member kind="function">
      <type></type>
      <name>CECServerSocket</name>
      <anchorfile>classCECServerSocket.html</anchorfile>
      <anchor>d96a7fb36c890c864a75aa709cba661d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const CECPacket *</type>
      <name>OnPacketReceived</name>
      <anchorfile>classCECServerSocket.html</anchorfile>
      <anchor>367ccc626d6f2e224a06f2fa9a7ac32e</anchor>
      <arglist>(const CECPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLost</name>
      <anchorfile>classCECServerSocket.html</anchorfile>
      <anchor>29081455ee9896fc197896d8601452b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECSocket</name>
    <filename>classCECSocket.html</filename>
    <base>wxSocketClient</base>
    <member kind="function">
      <type></type>
      <name>CECSocket</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>2b302803af38f6c05e80e80839406038</anchor>
      <arglist>(bool use_events)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CECSocket</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>defce23fb7ad2d1580040776ff414343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Connect</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>e7e305befeec128079147c10e821733f</anchor>
      <arglist>(wxSockAddress &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Destroy</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>66cf8d7b3f3b744422d26abc03d7a944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPacket</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>d399e6f57eebdf868b20612d6dab14a1</anchor>
      <arglist>(const CECPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>const CECPacket *</type>
      <name>SendRecvPacket</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>aee01cc0fb0b37fb44ddf8b363cfdbd5</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const CECPacket *</type>
      <name>OnPacketReceived</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>e93250d25e179befd18527e95f282bdb</anchor>
      <arglist>(const CECPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetErrorMsg</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>ab2bbfd78308498bb6658b5e80488727</anchor>
      <arglist>(wxSocketError error)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnError</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>aebdc212a0c6d7f32d4fd53fe930e6fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLost</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>a1245e93fc1a8f8ad6f1ac0e50c51d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnConnect</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>594e4c41c8dcaf3c5469e9a01ffd86b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnInput</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>e1667ef102d103c357761732c3e084d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnOutput</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>749929485895d76eb5312c5dc26a2c01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CECPacket</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>c1ce8864850b74cf6245bd1add44c9cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CECTag</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>ad1a9f7fb264c8cd57983d6425cd02fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CECSocketHandler</name>
      <anchorfile>classCECSocket.html</anchorfile>
      <anchor>bd7fd87b9619666e4da792b326940701</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECSocketHandler</name>
    <filename>classCECSocketHandler.html</filename>
    <base>wxEvtHandler</base>
    <member kind="function">
      <type></type>
      <name>CECSocketHandler</name>
      <anchorfile>classCECSocketHandler.html</anchorfile>
      <anchor>d0e640a3fff7f3721e4bd8169a290516</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CECTag</name>
    <filename>classCECTag.html</filename>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>0c3c31cb9ffdaf1eeb28dc7a928e6509</anchor>
      <arglist>(ec_tagname_t name, wxULongLong length, const void *data, bool copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>bfb81fb60cc88ecc865b079f0842025a</anchor>
      <arglist>(ec_tagname_t name, wxULongLong length, void **dataptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>90736f0a5ce42034fb082f41cf514634</anchor>
      <arglist>(ec_tagname_t name, uint8 data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>4d73022e2a72291ea48bc0e642a01ad1</anchor>
      <arglist>(ec_tagname_t name, uint16 data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>350a37a9bf7abfb1227dc90082a76f7e</anchor>
      <arglist>(ec_tagname_t name, uint32 data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>6bfe38a22852439763c40f6afa4dbf60</anchor>
      <arglist>(ec_tagname_t name, uint64 data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>69fc22ad7241a117486996446255add1</anchor>
      <arglist>(ec_tagname_t name, double data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>cb533d547e47e998559f29e9b5224c56</anchor>
      <arglist>(ec_tagname_t name, const CI2PAddress &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>f4647645af86ca91e5aa259587847f48</anchor>
      <arglist>(ec_tagname_t name, const wxColour &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>a3e8e5a533835014a775bfbd52c3edce</anchor>
      <arglist>(ec_tagname_t name, const wxString &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>be263d17cd3af91b4567008bd68808cc</anchor>
      <arglist>(ec_tagname_t name, const EC_IPv4_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>5e228685b0f90368737b50575f91327c</anchor>
      <arglist>(ec_tagname_t name, const CMD4Hash &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>2e5e617e9220701f6238d5777b1a837c</anchor>
      <arglist>(const CECTag &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>ff24228992e010b5aea8b943f03e19f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>CECTag &amp;</type>
      <name>operator=</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>acbf4950d69a50c914ff4b672fb50d63</anchor>
      <arglist>(const CECTag &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>b96128438aeadbdd3df41e3aff0a53c3</anchor>
      <arglist>(const CECTag &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>const CECTag *</type>
      <name>GetTagByIndex</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>1a4596a7dd811e303a1717099a92509f</anchor>
      <arglist>(unsigned int index) const </arglist>
    </member>
    <member kind="function">
      <type>CECTag *</type>
      <name>GetTagByIndex</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>643c6c021a66591961cefdc278bf56b7</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function">
      <type>const CECTag *</type>
      <name>GetTagByIndexSafe</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d7b1bd6024144cdb7065a51a3dfe9287</anchor>
      <arglist>(unsigned int index) const </arglist>
    </member>
    <member kind="function">
      <type>const CECTag *</type>
      <name>GetTagByName</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>a8afada4e0755ad13ce7b535e2ffd013</anchor>
      <arglist>(ec_tagname_t name) const </arglist>
    </member>
    <member kind="function">
      <type>CECTag *</type>
      <name>GetTagByName</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>1957b72c6627d611eabe3fa8ca2c1595</anchor>
      <arglist>(ec_tagname_t name)</arglist>
    </member>
    <member kind="function">
      <type>const CECTag *</type>
      <name>GetTagByNameSafe</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>7175e4f63b0969b6259734f3b9f73faf</anchor>
      <arglist>(ec_tagname_t name) const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetTagCount</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>9edcc2502a5fc4d43a42ebd2cb55aa44</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>GetTagData</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>54ad025d70f4ab401719cf656cbbae5c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTagDataLen</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>c825d7419910ce7fee866a5f915eca4f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTagLen</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>0f707c9ce275f44fde8d46827ee46d0a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ec_tagname_t</type>
      <name>GetTagName</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>1942b334cca68f51ef1ede844eba35cd</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetInt8Data</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>6fbc0968561e4a0ea2f3aceb6cc22366</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetInt16Data</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>47f7fe8e19b0ac987cc45a25a03a09cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetInt32Data</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>ac2ae5bb86c75a732463f14e16112ab9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetInt64Data</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>db06caa1ce173c369b19752ed8022cc9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDoubleData</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>066d984ae29040c072d13f81f3eee549</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetStringData</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>7b70829276bd36d8c06ee1d8ff0c5607</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetAddressData</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>0125531b69de7fbb300d3405cb67b97e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>GetColourData</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>8f153bdc2a6e0aab38ad1d686126d7af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>EC_IPv4_t</type>
      <name>GetIPv4Data</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>fa3410a18963346bcd5c0a9bc0691aca</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>GetMD4Data</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>9cdced1a0ee5d72294a1cf03f63589ee</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>53a426dc3994833a8185c1b60cb06769</anchor>
      <arglist>(ec_tagname_t tagname, uint8 &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>2792c350547047096d3fd54ca188fd6a</anchor>
      <arglist>(ec_tagname_t tagname, uint16 &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>ccb82ad6918ea7a9061b85afde25f715</anchor>
      <arglist>(ec_tagname_t tagname, uint32 &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>104b0b80c7d6832e44c888c069483b5f</anchor>
      <arglist>(ec_tagname_t tagname, wxColour &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>83389ad9c4e35270b9f34c62d0a84346</anchor>
      <arglist>(ec_tagname_t tagname, uint64 &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>ad7d64ff52426f309c11db61164f0a53</anchor>
      <arglist>(ec_tagname_t tagname, double &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>3ca9896fff9c374f8c3c447c1cfd428e</anchor>
      <arglist>(ec_tagname_t tagname, CMD4Hash &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignIfExist</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>81aabc6c303d67a5dba8106ebad78042</anchor>
      <arglist>(ec_tagname_t tagname, wxString &amp;target)</arglist>
    </member>
    <member kind="enumeration">
      <name>BuildState</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c607</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsName</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c607f93ab8312edd3418bb3c0068e9fc4796</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsLength</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c607623cb588bcc67e37fa609153d4637de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsLengthChld</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c607d4b4b4aa702030dccddd9b6699178ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsChildCnt</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c60729e27185f120885ab2b8522a60483791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsChildren</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c607edd7607bca6daf8e39a5e99d1ba00b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsData1</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c607623827bddf2e52082193b0278cb20088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsData2</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c60728e634c968ffc169103a7e24070bd6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bsFinished</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>d25864330e8b240a2078fe8c5b89c60762e500789f3d51431cb5b6025fa9c943</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CECTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>fc175f86dc3177e8bde34060a90e383d</anchor>
      <arglist>(const CECSocket &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>ReadFromSocket</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>6bc89e4a8b2e9bb99b71a866559ee4c2</anchor>
      <arglist>(CECSocket &amp;socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>WriteTag</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>a0807099c4e9cd43d4668ffd8b04e98f</anchor>
      <arglist>(CECSocket &amp;socket) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>ReadChildren</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>7d5a840733c7aff021476374275a1bd2</anchor>
      <arglist>(CECSocket &amp;socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>WriteChildren</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>3e02dd3b33150e480e1fd358dedf3ded</anchor>
      <arglist>(CECSocket &amp;socket) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsOk</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>eae7c113e543c1f3e896a54724d0ded1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_error</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>016a2eb4269230a3fafbede9732d283c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const void *</type>
      <name>m_tagData</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>5f17343d8ab0d418f6351bd27366c0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BuildState</type>
      <name>m_state</name>
      <anchorfile>classCECTag.html</anchorfile>
      <anchor>e1009a1c84c44e21ed2d443b21d3a3d2</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CECTag::NullTagConstructorSelector</class>
  </compound>
  <compound kind="class">
    <name>CED2KFileLink</name>
    <filename>classCED2KFileLink.html</filename>
    <base>CED2KLink</base>
    <member kind="typedef">
      <type>std::deque&lt; SED2KLinkSource &gt;</type>
      <name>CED2KLinkSourceList</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>119459a72f3d8a0ad189c8215c7690dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CED2KFileLink</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>574dcf919fb0682fd8790038c7b28206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetLink</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>7c85ec82337f116bcbcc9fed4df70070</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetName</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>083ca74999a2cad4f03653e66b37b2d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetSize</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>5885fa337c2bd981462e634976372b0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetHashKey</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>0af4c8326ed6efe487d0dec380586a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasValidAICHHash</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>8c6f6b82830d94934101309c86fcd8f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CAICHHash &amp;</type>
      <name>GetAICHHash</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>28ce0a30d13c0d552ea2b49f3ebb9d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>CMemFile *</type>
      <name>m_hashset</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>e1fc968d5f5da6059cd733d7c88c25b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CED2KLinkSourceList</type>
      <name>m_sources</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>f96e33d725c11c6afa045963bd420bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CED2KLink</name>
      <anchorfile>classCED2KFileLink.html</anchorfile>
      <anchor>279e7ff00da60d35d82d2fff0a8cba76</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CED2KFileLink::SED2KLinkSource</class>
  </compound>
  <compound kind="struct">
    <name>CED2KFileLink::SED2KLinkSource</name>
    <filename>structCED2KFileLink_1_1SED2KLinkSource.html</filename>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>addr</name>
      <anchorfile>structCED2KFileLink_1_1SED2KLinkSource.html</anchorfile>
      <anchor>28761c388e08cee4629da80afe085b17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CED2KFileTypes</name>
    <filename>classCED2KFileTypes.html</filename>
    <member kind="function">
      <type></type>
      <name>CED2KFileTypes</name>
      <anchorfile>classCED2KFileTypes.html</anchorfile>
      <anchor>e513e0e8195c2aca4c4c64db13f7f962</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CED2KLink</name>
    <filename>classCED2KLink.html</filename>
    <member kind="enumeration">
      <name>LinkType</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>e2660986896ae6548eba8c4ef077e0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kServerList</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>e2660986896ae6548eba8c4ef077e0d8cd62276ed40bb358c1b711f973c48929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kServer</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>e2660986896ae6548eba8c4ef077e0d8235a787c9fe4a266d35932f3a8b31f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFile</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>e2660986896ae6548eba8c4ef077e0d87e9dc5055559c28ccf9997922e8e60b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kInvalid</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>e2660986896ae6548eba8c4ef077e0d8660cfe70e185d31d834603cb392b8b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>LinkType</type>
      <name>GetKind</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>496ee4ec35ae9cd01627374b722e4e5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual wxString</type>
      <name>GetLink</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>1f6695503a4e1d9f62ddb7168488f0d8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CED2KLink</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>c1065ef7b60689c79e7a9fd48f966008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CED2KLink *</type>
      <name>CreateLinkFromUrl</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>44b27af5c81fd32d668d1baa58cbf62e</anchor>
      <arglist>(const wxString &amp;link)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CED2KLink</name>
      <anchorfile>classCED2KLink.html</anchorfile>
      <anchor>acdf2632f1a0717469054b018696f886</anchor>
      <arglist>(LinkType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CED2KServerLink</name>
    <filename>classCED2KServerLink.html</filename>
    <base>CED2KLink</base>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetLink</name>
      <anchorfile>classCED2KServerLink.html</anchorfile>
      <anchor>f6c1defced8187433813881b18edc7e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetDest</name>
      <anchorfile>classCED2KServerLink.html</anchorfile>
      <anchor>a492c91336ab4ace514eda48e7ddb80e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CED2KLink</name>
      <anchorfile>classCED2KServerLink.html</anchorfile>
      <anchor>279e7ff00da60d35d82d2fff0a8cba76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CED2KServerListLink</name>
    <filename>classCED2KServerListLink.html</filename>
    <base>CED2KLink</base>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetLink</name>
      <anchorfile>classCED2KServerListLink.html</anchorfile>
      <anchor>f7cd404a4f395a34d2272a1eb56da44d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetAddress</name>
      <anchorfile>classCED2KServerListLink.html</anchorfile>
      <anchor>855aa40ec06e5315b2ca98ddabe044fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CED2KLink</name>
      <anchorfile>classCED2KServerListLink.html</anchorfile>
      <anchor>279e7ff00da60d35d82d2fff0a8cba76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CEMSocket</name>
    <filename>classCEMSocket.html</filename>
    <base>wxI2PSocketClient</base>
    <base>ThrottledFileSocket</base>
    <member kind="function">
      <type></type>
      <name>CEMSocket</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>4a29d75f63570704ccbab389e20b1d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CEMSocket</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>2bcfe993ac0f90619c1025dfbf4410eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SendPacket</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>b410d8113285acfaac0ac268f455d06c</anchor>
      <arglist>(CPacket *packet, bool delpacket=true, bool controlpacket=true, uint32 actualPayloadSize=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasQueues</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>9e361f61c2d6561200db6b3987f472ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>d9b3899d6ae34680008aff1e6be74cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetConState</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>92999ac293e5e04a84864542ec2f70df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDownloadLimit</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>c3d3038d1eb21e06966fba29e1d3c828</anchor>
      <arglist>(uint32 limit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisableDownloadLimit</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>b4d69509564ab3e1bb3cbc0a5ef58f81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32</type>
      <name>GetTimeOut</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>5dc926c06496f3e611a9593d439030c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetTimeOut</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>7c7645ff15336800919905e231818ee7</anchor>
      <arglist>(uint32 uTimeOut)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastCalledSend</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>2fbcd2c90b0f7d9c96f41bf056d3f333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetSentBytesCompleteFileSinceLastCallAndReset</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>82fe6db83c3c4f266be9e410f1ddf2dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetSentBytesPartFileSinceLastCallAndReset</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>fe6c4049dd97f0176d139fb9bb293c59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetSentBytesControlPacketSinceLastCallAndReset</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>08e1eafc273d813048297be50db9c29d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetSentPayloadSinceLastCallAndReset</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>5604673b82a0667850067a4f443b5b2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TruncateQueues</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>cef4d9b73d6f670ecc579a4fafb823e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SocketSentBytes</type>
      <name>SendControlData</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>677612c82610e2da8d9fd8a646ffb1ea</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 minFragSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SocketSentBytes</type>
      <name>SendFileAndControlData</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>48975c7193d6b01429f0dab944d7af95</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 minFragSize)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetNeededBytes</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>17cf64b4461d18f479cf4b3d50f19c94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Destroy</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>8daf665db163b2ebec116bb248a0f0e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OnDestroy</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>09b2215a83379a02f438800bdf5749d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnError</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>823ef9191a3cfd0bc57427bb6e61d2d3</anchor>
      <arglist>(int WXUNUSED(nErrorCode))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnSend</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>d054611c633df72975761aa231fa5045</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnReceive</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>7284d6ad625ce8cd281d2f8973e13aa4</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>RecievePending</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>0bac3f1d4cc4dffadc3e7971309813f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>PacketReceived</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>831b9d17433e70d44d412a63cb215d99</anchor>
      <arglist>(CPacket *WXUNUSED(packet))</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>OnClose</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>97a0bccae3fd97a71174cf90d1e9e341</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8</type>
      <name>byConnected</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>06fe0dcae99a93ed0b182ea6ae085cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_uTimeOut</name>
      <anchorfile>classCEMSocket.html</anchorfile>
      <anchor>66fd5ae307f0a38f057c368ecbb445ad</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CEMSocket::StandardPacketQueueEntry</class>
  </compound>
  <compound kind="struct">
    <name>CEOFException</name>
    <filename>structCEOFException.html</filename>
    <base>CSafeIOException</base>
    <member kind="function">
      <type></type>
      <name>CEOFException</name>
      <anchorfile>structCEOFException.html</anchorfile>
      <anchor>83e46ef554ffa31597835238e4ed0bfa</anchor>
      <arglist>(const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFB_CipherAbstractPolicy</name>
    <filename>classCFB__CipherAbstractPolicy.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CFB_CipherAbstractPolicy</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>9b92dca4aee385aa7bfa76e2ee8bfad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>GetAlignment</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>0566346c2cf2d817567d761cbe535210</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>GetBytesPerIteration</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>17d9940b9130e754375794f65ab96496</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual byte *</type>
      <name>GetRegisterBegin</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>6ed5f67aa6ad1c5625e723ba968bc37b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>TransformRegister</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>3d7f8686375df73407e81066c0b59997</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>CanIterate</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>ca6e1cd986326d5eb5773d585769b03c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Iterate</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>6dfae5ee90677c9c8a1269f4efe010cc</anchor>
      <arglist>(byte *, const byte *, CipherDir, unsigned int)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CipherSetKey</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>1c795a0e00d8e4c992e30d884230f3f0</anchor>
      <arglist>(const NameValuePairs &amp;params, const byte *key, unsigned int length)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CipherResynchronize</name>
      <anchorfile>classCFB__CipherAbstractPolicy.html</anchorfile>
      <anchor>2b92123479b629a113b383d57eb08e46</anchor>
      <arglist>(const byte *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFB_CipherTemplate</name>
    <filename>classCFB__CipherTemplate.html</filename>
    <templarg>BASE</templarg>
    <base>BASE</base>
    <member kind="typedef">
      <type>BASE::PolicyInterface</type>
      <name>PolicyInterface</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>9e72e3524dd351fd0e87382fe84cd306</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessData</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>9b15bd3f9074482e53681105edbce86e</anchor>
      <arglist>(byte *outString, const byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Resynchronize</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>2bb8bd29c3fecb034ee598ee89abe259</anchor>
      <arglist>(const byte *iv)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OptimalBlockSize</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>f4f1db86c6f13a1482c1d692029243bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetOptimalNextBlockSize</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>05d8daeb591a7fde8f612c66e202c6f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OptimalDataAlignment</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>add4bd50f0c3bd1139d73e4cfe037f13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRandomAccess</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>97d9128be26ce9ddf263cb7743a0fc1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSelfInverting</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>b121524251d83ece6e67b15b094806fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>CombineMessageAndShiftRegister</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>fa262900ec1417442f248dd37b904ccf</anchor>
      <arglist>(byte *output, byte *reg, const byte *message, unsigned int length)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UncheckedSetKey</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>32b74d6872edd39e4dfed5f2578b480e</anchor>
      <arglist>(const NameValuePairs &amp;params, const byte *key, unsigned int length, const byte *iv)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_leftOver</name>
      <anchorfile>classCFB__CipherTemplate.html</anchorfile>
      <anchor>d52e05e3e9c3d19b73197b8944cfe324</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFB_DecryptionTemplate</name>
    <filename>classCFB__DecryptionTemplate.html</filename>
    <templarg>BASE</templarg>
    <base>CFB_CipherTemplate</base>
  </compound>
  <compound kind="class">
    <name>CFB_EncryptionTemplate</name>
    <filename>classCFB__EncryptionTemplate.html</filename>
    <templarg>BASE</templarg>
    <base>CFB_CipherTemplate</base>
  </compound>
  <compound kind="struct">
    <name>CFB_Mode</name>
    <filename>structCFB__Mode.html</filename>
    <templarg>CIPHER</templarg>
    <base>CipherModeDocumentation</base>
    <member kind="typedef">
      <type>CipherModeFinalTemplate_CipherHolder&lt; CPP_TYPENAME CIPHER::Encryption, ConcretePolicyHolder&lt; Empty, CFB_EncryptionTemplate&lt; AbstractPolicyHolder&lt; CFB_CipherAbstractPolicy, CFB_ModePolicy &gt; &gt; &gt; &gt;</type>
      <name>Encryption</name>
      <anchorfile>structCFB__Mode.html</anchorfile>
      <anchor>98474f28ab6b7370ff86a6dec03d8768</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CipherModeFinalTemplate_CipherHolder&lt; CPP_TYPENAME CIPHER::Encryption, ConcretePolicyHolder&lt; Empty, CFB_DecryptionTemplate&lt; AbstractPolicyHolder&lt; CFB_CipherAbstractPolicy, CFB_ModePolicy &gt; &gt; &gt; &gt;</type>
      <name>Decryption</name>
      <anchorfile>structCFB__Mode.html</anchorfile>
      <anchor>85c215138bc8a9c26ca04a6b1be56d54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFB_ModePolicy</name>
    <filename>classCFB__ModePolicy.html</filename>
    <base>ModePolicyCommonTemplate&lt; CFB_CipherAbstractPolicy &gt;</base>
    <member kind="function">
      <type>IV_Requirement</type>
      <name>IVRequirement</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>7f2ddc303436b365a6b5d3bcb6d8142e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>1b44c5d19d6141b91b948aa99a2e2ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>GetBytesPerIteration</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>72453b9cc2666b3fede9b20dd2c63d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>byte *</type>
      <name>GetRegisterBegin</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>d33d9b4fab007750dac748a0d25cb49f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>TransformRegister</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>dbefecab5cb048bfce9cdea106ef3ac0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CipherResynchronize</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>78490e0b7794ca4cd7758d47343b0d47</anchor>
      <arglist>(const byte *iv)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetFeedbackSize</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>94b4e3f06db50fd888ec24026323646d</anchor>
      <arglist>(unsigned int feedbackSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ResizeBuffers</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>17ae07ee0ef40f778bd94a52202ed2be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SecByteBlock</type>
      <name>m_temp</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>3f54e6a630ed22a9fc40457a5926f18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_feedbackSize</name>
      <anchorfile>classCFB__ModePolicy.html</anchorfile>
      <anchor>39e0c7dda96bfbf8cfe7abe3709b0138</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Base</name>
    <filename>classCfg__Base.html</filename>
    <member kind="function">
      <type></type>
      <name>Cfg_Base</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>1379cae85a4567b763d79d179d27d969</anchor>
      <arglist>(const wxString &amp;keyname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Cfg_Base</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>50eea53750a7e5f37fc42685471e5024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>e9284946eb2a5bd3158b03a6692e1673</anchor>
      <arglist>(wxConfigBase *cfg)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>f1f3a1732d4288d631d6cc2a0949c194</anchor>
      <arglist>(wxConfigBase *cfg)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferFromWindow</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>a3caf9ca25dc21a68545ca97cc5306ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferToWindow</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>8b67d1c10f8a90aa8b6b1a7fcf18500c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ConnectToWidget</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>9e68a05d3dfb48b461b5be25f50405a8</anchor>
      <arglist>(int WXUNUSED(id), wxWindow *WXUNUSED(parent)=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const wxString &amp;</type>
      <name>GetKey</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>1379d03a0bda527b6d067b1c01906762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasChanged</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>aa3b6bdf928818e60d45784cf7a05c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SetChanged</name>
      <anchorfile>classCfg__Base.html</anchorfile>
      <anchor>ff88e03b27fd4c125eb8c79e1768c2ea</anchor>
      <arglist>(bool changed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Bool</name>
    <filename>classCfg__Bool.html</filename>
    <base>Cfg_Tmpl</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Bool</name>
      <anchorfile>classCfg__Bool.html</anchorfile>
      <anchor>285a535f9271a7acdad7cd0b9ff43c7d</anchor>
      <arglist>(const wxString &amp;keyname, bool &amp;value, bool defaultVal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Bool.html</anchorfile>
      <anchor>e3b71a94cc691dcdb0d979aa9a39380f</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Bool.html</anchorfile>
      <anchor>419f8e5a315bd513c806ddb52260f2ec</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Colour</name>
    <filename>classCfg__Colour.html</filename>
    <base>Cfg_Base</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Colour</name>
      <anchorfile>classCfg__Colour.html</anchorfile>
      <anchor>aaefafc54111fda78eaf190319d3b7bd</anchor>
      <arglist>(const wxString &amp;keyname, wxColour &amp;value, const wxColour &amp;defaultVal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Colour.html</anchorfile>
      <anchor>6f83e8846d98410200650239fdf2258b</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Colour.html</anchorfile>
      <anchor>92aea1d39f38ab1499554eee63fd83c6</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Counter</name>
    <filename>classCfg__Counter.html</filename>
    <base>Cfg_Base</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Counter</name>
      <anchorfile>classCfg__Counter.html</anchorfile>
      <anchor>286d8a80984d4650c0dfab64162bad48</anchor>
      <arglist>(const wxString &amp;keyname, uint64 &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Counter.html</anchorfile>
      <anchor>70ffa535a2dd07561a3145f3739b36f6</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Counter.html</anchorfile>
      <anchor>5e8e7a79018a460330645f210855d343</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64 &amp;</type>
      <name>m_value</name>
      <anchorfile>classCfg__Counter.html</anchorfile>
      <anchor>aee0e1a9763730cb8697b8422a276812</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Int</name>
    <filename>classCfg__Int.html</filename>
    <templarg>TYPE</templarg>
    <base>Cfg_Tmpl&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Int</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>5779b3a021e4660a6589f08bffdd6dc5</anchor>
      <arglist>(const wxString &amp;keyname, TYPE &amp;value, int defaultVal=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>65bc8b575376fb96a79f40d02a6cec33</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>e1d6e1829cb56ae290342b4da11f347b</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferFromWindow</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>03844a2ba87bfe719362fe0175486de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferToWindow</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>9eabec1486d7225c8f3f4b62ef2833cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TYPE &amp;</type>
      <name>m_real_value</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>8277efb5d08b2ad72ca01af11657982c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_temp_value</name>
      <anchorfile>classCfg__Int.html</anchorfile>
      <anchor>59a273bdd9c5db6bf10b126a1c501ac5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Lang</name>
    <filename>classCfg__Lang.html</filename>
    <base>Cfg_Tmpl&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Lang</name>
      <anchorfile>classCfg__Lang.html</anchorfile>
      <anchor>68fad5d39f5dc57d8002053e326dac0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Lang.html</anchorfile>
      <anchor>9b06ba55a72829299fda4988f390e4d1</anchor>
      <arglist>(wxConfigBase *WXUNUSED(cfg))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Lang.html</anchorfile>
      <anchor>0c9276da2e7e5544833f5ff0bd56295b</anchor>
      <arglist>(wxConfigBase *WXUNUSED(cfg))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferFromWindow</name>
      <anchorfile>classCfg__Lang.html</anchorfile>
      <anchor>f7e18d9ba8bd0dcd367c93ec73951473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferToWindow</name>
      <anchorfile>classCfg__Lang.html</anchorfile>
      <anchor>427939abc4a2c4003b1d5a36da8b0379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_selection</name>
      <anchorfile>classCfg__Lang.html</anchorfile>
      <anchor>07ff0d13deb6c71ffd27ca6bef24017f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Str</name>
    <filename>classCfg__Str.html</filename>
    <base>Cfg_Tmpl&lt; wxString &gt;</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Str</name>
      <anchorfile>classCfg__Str.html</anchorfile>
      <anchor>7ea072c0dc5abe8631bb62fb4f85e23c</anchor>
      <arglist>(const wxString &amp;keyname, wxString &amp;value, const wxString &amp;defaultVal=wxEmptyString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCfg__Str.html</anchorfile>
      <anchor>a4e4fc102cd6935ebd24b3b19a3dbff4</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveToFile</name>
      <anchorfile>classCfg__Str.html</anchorfile>
      <anchor>1b1daf97ce5f88b0ee79c9f72af721e5</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Str_Encrypted</name>
    <filename>classCfg__Str__Encrypted.html</filename>
    <base>Cfg_Str</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Str_Encrypted</name>
      <anchorfile>classCfg__Str__Encrypted.html</anchorfile>
      <anchor>16c4b0720fdc3df3eb83f01f0fcb7270</anchor>
      <arglist>(const wxString &amp;keyname, wxString &amp;value, const wxString &amp;defaultVal=wxEmptyString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferFromWindow</name>
      <anchorfile>classCfg__Str__Encrypted.html</anchorfile>
      <anchor>a2b128bc7eeea8945f3d3f3a43845b98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cfg_Tmpl</name>
    <filename>classCfg__Tmpl.html</filename>
    <templarg>TYPE</templarg>
    <base>Cfg_Base</base>
    <member kind="function">
      <type></type>
      <name>Cfg_Tmpl</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>38987267edfe21f29c356b29bc923114</anchor>
      <arglist>(const wxString &amp;keyname, TYPE &amp;value, const TYPE &amp;defaultVal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ConnectToWidget</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>7873f74fa4f0adc0268fa2eb2b1e94fb</anchor>
      <arglist>(int id, wxWindow *parent=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferFromWindow</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>c54b5100fdd79c396a42e450fc30e6f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TransferToWindow</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>e48aebe407826addb147e343f50dd15f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TYPE &amp;</type>
      <name>m_value</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>925de4ac80a2f95130189063e98698b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TYPE</type>
      <name>m_default</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>7e1d4e6b50e8e09210a3e292e24b0d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxWindow *</type>
      <name>m_widget</name>
      <anchorfile>classCfg__Tmpl.html</anchorfile>
      <anchor>b8b729ce9dd0764b47be7815a3246a77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFile</name>
    <filename>classCFile.html</filename>
    <base>CFileDataIO</base>
    <member kind="enumvalue">
      <name>fd_invalid</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>099b297a65842bd3d845cc752be7816e5707cc07901debb22d47515bef27e1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fd_stdin</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>099b297a65842bd3d845cc752be7816ed684bf6fb3695820642f8229020c4a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fd_stdout</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>099b297a65842bd3d845cc752be7816ecf84f15bc8d010fb8d235faee5c1ff51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fd_stderr</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>099b297a65842bd3d845cc752be7816ebd7fc7cada7fed8ba205039f711582ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>OpenMode</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e3d32843d7aec03b3ff5f73c57254010</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>read</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e3d32843d7aec03b3ff5f73c572540103ea9e09b2fcab3481b6e2fa270e5d273</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>write</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e3d32843d7aec03b3ff5f73c57254010e84970e5b2e9956393452152660d1301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>read_write</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e3d32843d7aec03b3ff5f73c572540101a112100aebd5d7bc743eee7d740a77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>write_append</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e3d32843d7aec03b3ff5f73c572540109e590a29864bd287ee863b40552566b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>write_excl</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e3d32843d7aec03b3ff5f73c572540106dac2a3ae2aba1090ab1a0f30ab499b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CFile</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>82635098055a4778bdc7ec056066c19f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CFile</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>5227a2c93143e86a68c858c7c41db167</anchor>
      <arglist>(const wxString &amp;path, OpenMode mode=read)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CFile</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>146d61b38c752741357820a5f7e3f3b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Open</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e7a1642f42156075fc7eb4cd2f66d478</anchor>
      <arglist>(const wxString &amp;path, OpenMode mode=read, int accessMode=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Create</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>58e0049964c070a2dca73c036790dfa2</anchor>
      <arglist>(const wxString &amp;path, bool overwrite=false, int accessMode=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Close</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>5c87e3d354ac1d508f000390e7de2881</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fd</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>651bb483670fa89cdf595f39b38d778f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Flush</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>ba81ae13c448d201f301797fcd00aebb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>GetLength</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e0891cc30b0d0b7898201dbb02a9e5a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetLength</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>861ecc760871c3de8611097f91f6b87f</anchor>
      <arglist>(uint64 newLength)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>GetPosition</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>3f7daa1de15d532cc9bb5f80dd217183</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetFilePath</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>edf710d224b718cd438d644e36f02ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOpened</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>fa5ea8f22762fd9c5a45f17c81dcce22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>s_defaultAccessMode</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>e4ea28c1b5a4adfea881fc9b1ea6f523</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>doRead</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>838d0b99b4340dcf75dc4eb06324c023</anchor>
      <arglist>(void *buffer, size_t count) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>doWrite</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>421c022c2f401ccbb4bdc0215ed50106</anchor>
      <arglist>(const void *buffer, size_t count)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>doSeek</name>
      <anchorfile>classCFile.html</anchorfile>
      <anchor>977b1e10a8222f6a4b70379a42928c8f</anchor>
      <arglist>(size_t offset) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFileDataIO</name>
    <filename>classCFileDataIO.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CFileDataIO</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>626e2cb012fd4db2b7af3981e9921733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64</type>
      <name>GetPosition</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>6b153f389378a4f72ac09c56a6a60230</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint64</type>
      <name>GetLength</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>7f54fcd57c88023b87f7e4535becab0a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Eof</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>0b5a932a7f75ac57670997e45aee0060</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>Seek</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>220fae57611313cc14d63860c74ff449</anchor>
      <arglist>(sint64 offset, wxSeekMode from=wxFromStart) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Reset</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>d9c6e7ef9cfb98a14f93ea0442d62c38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Read</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>f64cff2ab84643e7fdcd2b4366fece27</anchor>
      <arglist>(void *buffer, size_t count) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Write</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>4ea42d721c52cb8df7679f27e899a2e3</anchor>
      <arglist>(const void *buffer, size_t count)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>ReadString</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>6b7a23115528a2fa4893cd3d52178c96</anchor>
      <arglist>(bool bOptUTF8, uint8 lenBytes=2, bool SafeRead=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>ReadOnlyString</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>517785c4444dd897657dc49aeb216ea8</anchor>
      <arglist>(bool bOptUTF8, uint64 length) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteString</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>9480e3cfad2ffcbe57670b6d00091ff2</anchor>
      <arglist>(const wxString &amp;str, EUtf8Str encoding=utf8strNone, uint8 lenBytes=2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual byte</type>
      <name>ReadByte</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>b0c03f066ab56d88848eabc7645cb567</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8</type>
      <name>ReadUInt8</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>5208221bab44c2615a72e7609d9aacac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16</type>
      <name>ReadUInt16</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>5539266e4025c396390ce7f8048bdab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint32</type>
      <name>ReadUInt32</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>b6ced46b496d303aa8148f950e0a91d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>ReadUInt64</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>2aedb82ec2f5b46296700f5324ff1e9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CUInt128</type>
      <name>ReadUInt128</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>4fc3dfba5eab16d70716b86327f9de21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CMD4Hash</type>
      <name>ReadHash</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>e817430f38a3480ae67da778c69cd6bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CI2PAddress</type>
      <name>ReadAddress</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>330c5d50e57cad7e43ba591dec97b911</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteByte</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>77b419228536155eaf57acbdb19cc57f</anchor>
      <arglist>(byte value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteUInt8</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>b1e35f980795d5ea66c358a4a43872d8</anchor>
      <arglist>(uint8 value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteUInt16</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>8259e0910b87a274202f3c0bb65d30cc</anchor>
      <arglist>(uint16 value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteUInt32</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>08b76e4e173359cf43ca3deee2472e61</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteUInt64</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>5513445bed6b6eec31acc91e9a857a12</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteUInt128</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>4caddc62fc7dbcc1db2d555f1c20d14b</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteHash</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>3c3adac8abcaa7ca7fdc9537772aac97</anchor>
      <arglist>(const CMD4Hash &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>WriteAddress</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>f274c006fe389629a206541a86f05e7d</anchor>
      <arglist>(const CI2PAddress &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual size_t</type>
      <name>doSeek</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>4b717d8a10a36cedb5e2fe824d11473a</anchor>
      <arglist>(size_t offset) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual size_t</type>
      <name>doRead</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>a95f0ea89987f0c41c31b76ed64e8669</anchor>
      <arglist>(void *buffer, size_t count) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual size_t</type>
      <name>doWrite</name>
      <anchorfile>classCFileDataIO.html</anchorfile>
      <anchor>7d19c33aa6c9580e0d33c5937689015d</anchor>
      <arglist>(const void *buffer, size_t count)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFileDetailDialog</name>
    <filename>classCFileDetailDialog.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CFileDetailDialog</name>
      <anchorfile>classCFileDetailDialog.html</anchorfile>
      <anchor>4feaec519d0669dda7ae00a8f80fe47c</anchor>
      <arglist>(wxWindow *parent, CPartFile *file)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CFileDetailDialog</name>
      <anchorfile>classCFileDetailDialog.html</anchorfile>
      <anchor>c758e51c55be6795ece25c3135ee5609</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnTimer</name>
      <anchorfile>classCFileDetailDialog.html</anchorfile>
      <anchor>52b31e2cbdbd5a42c3ed81e0412aaa46</anchor>
      <arglist>(wxTimerEvent &amp;evt)</arglist>
    </member>
    <class kind="struct">CFileDetailDialog::SourcenameItem</class>
  </compound>
  <compound kind="class">
    <name>CFileDetailListCtrl</name>
    <filename>classCFileDetailListCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CFileDetailListCtrl</name>
      <anchorfile>classCFileDetailListCtrl.html</anchorfile>
      <anchor>2dc0eb9cd5192a53f16a57ee95cfe473</anchor>
      <arglist>(wxWindow *&amp;parent, int id, const wxPoint &amp;pos, wxSize siz, int flags)</arglist>
    </member>
    <class kind="struct">CFileDetailListCtrl::SourcenameItem</class>
  </compound>
  <compound kind="class">
    <name>CFileEncoderMap</name>
    <filename>classCFileEncoderMap.html</filename>
    <templarg>T</templarg>
    <templarg>E</templarg>
    <templarg>C</templarg>
    <base>std::map</base>
    <member kind="function">
      <type>void</type>
      <name>UpdateEncoders</name>
      <anchorfile>classCFileEncoderMap.html</anchorfile>
      <anchor>524af83561afe5b0c68f7323b4de4551</anchor>
      <arglist>(C *container)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFileImage</name>
    <filename>classCFileImage.html</filename>
    <base virtualness="virtual">CAnyImage</base>
    <member kind="function">
      <type></type>
      <name>CFileImage</name>
      <anchorfile>classCFileImage.html</anchorfile>
      <anchor>8ee0d8febe77af40f25dc3f5db77c17d</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OpenOk</name>
      <anchorfile>classCFileImage.html</anchorfile>
      <anchor>5016f2bbda00f09bb58d2c2ea7944fda</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFileLock</name>
    <filename>classCFileLock.html</filename>
    <member kind="function">
      <type></type>
      <name>CFileLock</name>
      <anchorfile>classCFileLock.html</anchorfile>
      <anchor>1f7a780ef6ec99f44b661f4294b4aef3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CFileLock</name>
      <anchorfile>classCFileLock.html</anchorfile>
      <anchor>0c43b44f46ea40a7fe3df0be9799e6ac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFileStatistic</name>
    <filename>classCFileStatistic.html</filename>
    <member kind="function">
      <type></type>
      <name>CFileStatistic</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>b13502c3dcf2a4e6e25d45fec617385a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddRequest</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>c41d86b5584dcab1659ab46cdedeb753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddAccepted</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>38bd2d1ff2f5ad24f7f9d1ef7ad0e531</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTransferred</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>17ca56b5d8e43527f74ff0fb98d5e056</anchor>
      <arglist>(uint64 bytes)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetRequests</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>477e10ff32abee7d7c6255a875e31bbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetAccepts</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>f285b3b9756d8719bdf167a68716249e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetTransfered</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>07685f18730d32992d282d08b8e1398e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetAllTimeRequests</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>6efc8bbe912ecbba8b1b179238cd9a64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllTimeRequests</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>231e0446020f744aff94eca118b3dd7f</anchor>
      <arglist>(uint32 new_value)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetAllTimeAccepts</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>a2b44fab7da2ff4917a4fa336f137338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllTimeAccepts</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>19c6b731850e2aeed63183e0889482b5</anchor>
      <arglist>(uint32 new_value)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetAllTimeTransfered</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>d4d2e5c422498ffee3da072263fcf40d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAllTimeTransfered</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>cd6ed3fb7521f8a96f73d4073ca8ece6</anchor>
      <arglist>(uint64 new_value)</arglist>
    </member>
    <member kind="variable">
      <type>CKnownFile *</type>
      <name>fileParent</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>e4c8096b677c1af3cc93c5f939837610</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CKnownFile</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>6dde6c7f3c9e194043690e790fd52338</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CSharedFilesRem</name>
      <anchorfile>classCFileStatistic.html</anchorfile>
      <anchor>086c34d822f5982eedae7b3bf2daec38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFormat</name>
    <filename>classCFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>CFormat</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>48e256a2790d6990f806b8fc0c218b88</anchor>
      <arglist>(const wxChar *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetString</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>8e91709f696890516c18c5228736ab6a</anchor>
      <arglist>(const wxChar *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsReady</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>a11276873ed257d3dca0c5044a94d325</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetString</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>ea8ace6a60a96b2edc0462f86ba68320</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetString</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>71b746943183ff0b76a49371230722dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const wxString &amp;</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>6e21a9aae857ff9bdb2f8672803bc526</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>273eb5610029699d3d33c828221396b2</anchor>
      <arglist>(wxChar value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>2578bfa8c1e7bbbc5f3c595fb10d773a</anchor>
      <arglist>(signed short value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>3d080a1ee6d238eeb0127c63e67ee272</anchor>
      <arglist>(unsigned short value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>d576fbda4d5ca6a2fc758ae81137e5e5</anchor>
      <arglist>(signed int value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>f37a5c6a9ff1df8a1a0c2c01be066520</anchor>
      <arglist>(unsigned int value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>66f79e17e532503443876fc8a025c861</anchor>
      <arglist>(signed long value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>ab3560b488c6af76510b6906b3b52d5c</anchor>
      <arglist>(unsigned long value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>3e30e9285a4844384c3f762852a8a652</anchor>
      <arglist>(signed long long value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>a66e1db508a46aa49812f993964c2a7d</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>857ed7a539e5f1009d2dc51ac7d6596b</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>CFormat &amp;</type>
      <name>operator%</name>
      <anchorfile>classCFormat.html</anchorfile>
      <anchor>614f878349bd51babf5087a593e2e689</anchor>
      <arglist>(const wxChar *value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFriend</name>
    <filename>classCFriend.html</filename>
    <member kind="function">
      <type></type>
      <name>CFriend</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>79955fd0146e8d2cf0632db93b93dfcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CFriend</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>60efa5cc32b813d6006626d02bd0022f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CFriend</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>884cf6cdb638f431613bbe569d98ba3c</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CFriend</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>6ecc0c2364272dbdfc5fa5ec3c0f0930</anchor>
      <arglist>(const CMD4Hash &amp;userhash, uint32 tm_dwLastSeen, const CI2PAddress &amp;tm_nLastUsedDest, uint32 tm_dwLastChatted, const wxString &amp;tm_strName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserHash</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>040bb882be4e2a5fc45dfc26011c7465</anchor>
      <arglist>(const CMD4Hash &amp;userhash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasHash</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>23d986f8e15d530be85cdb188c2cde88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetUserHash</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>83eeaf8e7f34fcd9df43724d7e6d1f04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>0ac06bae1e1b9b7e6494773ab0daa92a</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LinkClient</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>78c08ea682bd9c828df4a17033c8d8a6</anchor>
      <arglist>(CUpDownClient *client, bool unlink=true)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetLinkedClient</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>24dbcd86d2a8e98125eae4474266e1b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnLinkClient</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>ecad71b201a3a01490cbd13d57340ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasFriendSlot</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>39a088867dbe6184699158cf04a021c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetName</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>eadc7d0f8c30fd32d9845ccc5fad5c45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress</type>
      <name>GetDest</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>47d35f9205f057adf43f68ba97e06d59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadFromFile</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>120df3aba1cb8eba304c5be09f9bccec</anchor>
      <arglist>(CFileDataIO *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteToFile</name>
      <anchorfile>classCFriend.html</anchorfile>
      <anchor>ed9e36ebcb387c965741e33ec91a30b3</anchor>
      <arglist>(CFileDataIO *file)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFriendList</name>
    <filename>classCFriendList.html</filename>
    <member kind="function">
      <type></type>
      <name>CFriendList</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>f964a7121f7047e06ee5c59f007c7713</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CFriendList</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>f8c625feafc1c24d5ae74116dc66086c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlreadyFriend</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>b504ef5c9ef97e834eb5dbd7be43a05c</anchor>
      <arglist>(const CI2PAddress &amp;nLastUsedDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveList</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>4eaa4f709feb1a75edf67f1f9a93060d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadList</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>56c457fa1526657d485418d52038d0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CFriend *</type>
      <name>FindFriend</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>13dca1b407bf25d33e84efeb51536c39</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>35fc47ce63d99362bd0dd05933e25611</anchor>
      <arglist>(CFriend *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>356193e62cc7fbd05cf3c4d67094c07d</anchor>
      <arglist>(CUpDownClient *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>a9d3582eef939f2cd1bf5b9c62378448</anchor>
      <arglist>(const CMD4Hash &amp;userhash, uint32 lastSeen, const CI2PAddress &amp;lastUsedDest, uint32 lastChatted, const wxString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFriend</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>7308ca251a9271525cb714c9a8bf765b</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;lastUsedDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestSharedFileList</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>4ac29996ebd02e520472aaa4eeb0c700</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFriendName</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>17d74df9269fe80b7299553d882bcbf7</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const wxString &amp;name, const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFriendSlot</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>29a5d1200319def94f17235caa22c606</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;nDest, bool new_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartChatSession</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>9d4f56672e6af514742532450547ca5e</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllFriendSlots</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>ba078baa828b9322a7208460f42f9e54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>FriendList</type>
      <name>m_FriendList</name>
      <anchorfile>classCFriendList.html</anchorfile>
      <anchor>e3cf895d81728bf71a7f8dce224ad1bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CFriendListCtrl</name>
    <filename>classCFriendListCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CFriendListCtrl</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>ab46a2da50b4d23829c8f81f78d9fcaf</anchor>
      <arglist>(wxWindow *parent, int id, const wxPoint &amp;pos, wxSize siz, int flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CFriendListCtrl</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>2759c53a95507b1f4f586937f4ba36c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadList</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>319a41edbbddfd9a0dcdf72a46b352f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlreadyFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>db5f56d8a995023f0fd1f2bfb5034eac</anchor>
      <arglist>(const CI2PAddress &amp;dwLastUsedDest)</arglist>
    </member>
    <member kind="function">
      <type>CDlgFriend *</type>
      <name>FindFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>a7c1fafc16b25ec104baeb54b528a20d</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;dwDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>6eeb72998d793ee54d8167c068a00821</anchor>
      <arglist>(CDlgFriend *toadd, bool send_to_core=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>6faac50b2b642ef3a34e37af3e25fb3d</anchor>
      <arglist>(CUpDownClient *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>1b3ab0e08606ca98ac18c8d1d478cbfa</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const wxString &amp;name, const CI2PAddress &amp;lastUsedDest, bool IsLinked=false, bool HasFriendSlot=false, bool send_to_core=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>655f38adbae93e030894a8ed8a1981e0</anchor>
      <arglist>(CDlgFriend *todel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>d1e820e4984fe09ddeab4e588a659362</anchor>
      <arglist>(CUpDownClient *todel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshFriend</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>4f6d16db31a667d8c621b259ee6c19e3</anchor>
      <arglist>(CDlgFriend *toupdate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLinked</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>df6e933cec02cd7cd088ba38ef6bf8ef</anchor>
      <arglist>(const CMD4Hash &amp;userhash, const CI2PAddress &amp;dwDest, bool new_state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRightClick</name>
      <anchorfile>classCFriendListCtrl.html</anchorfile>
      <anchor>e74579699f890196f0a6508c2a2fa80f</anchor>
      <arglist>(wxMouseEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CGlobalSearchThread</name>
    <filename>classCGlobalSearchThread.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CGlobalSearchThread</name>
      <anchorfile>classCGlobalSearchThread.html</anchorfile>
      <anchor>8f318ecf67662d2842c17650c3033d31</anchor>
      <arglist>(CPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CGlobalSearchThread</name>
      <anchorfile>classCGlobalSearchThread.html</anchorfile>
      <anchor>5df7cf4d8dbe109f70158a66715b4219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Progress</name>
      <anchorfile>classCGlobalSearchThread.html</anchorfile>
      <anchor>108f36637ee17e67244d7b91c35edd5a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CHTTPDownloadDialog</name>
    <filename>classCHTTPDownloadDialog.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CHTTPDownloadDialog</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>201947c2f3bcbb60b24ea949c01bcfc7</anchor>
      <arglist>(CHTTPDownloadThread *thread)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CHTTPDownloadDialog</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>c4c68b1860711a06562875d529b6839d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateGauge</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>53f214130b7fbd10adab705232944e73</anchor>
      <arglist>(int total, int current)</arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>mutex</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>bfa91f7a8dd0485d0c5e8632e591381e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxCondition</type>
      <name>condition</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>8a3595394e298cf75deea2b69b5b48fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_threadRunning</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>98696a55169d89f97e64b7bbcf5f4fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_stopThread</name>
      <anchorfile>classCHTTPDownloadDialog.html</anchorfile>
      <anchor>fa5fd2e110687ccd5e89d16dce840a2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CHTTPDownloadThread</name>
    <filename>classCHTTPDownloadThread.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CHTTPDownloadThread</name>
      <anchorfile>classCHTTPDownloadThread.html</anchorfile>
      <anchor>cdfa8a9dc99cec6ebd7f94416f7c2582</anchor>
      <arglist>(const wxString &amp;url, const wxString &amp;filename, HTTP_Download_File file_id, bool showDialog=true, wxUint32 download_delay=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Chunk</name>
    <filename>structChunk.html</filename>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>part</name>
      <anchorfile>structChunk.html</anchorfile>
      <anchor>18bcca875bde2d076a2337753e1e02e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Chunk::@22</type>
      <name>@23</name>
      <anchorfile>structChunk.html</anchorfile>
      <anchor>112f6f154b97a7859836213270c03038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>frequency</name>
      <anchorfile>unionChunk_1_1@22.html</anchorfile>
      <anchor>20ee2156f5ac4578c7b4a5960d7a142d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>rank</name>
      <anchorfile>unionChunk_1_1@22.html</anchorfile>
      <anchor>267b0cf3aadeed04ee46a5ad9eec512d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CI2PAddress</name>
    <filename>classCI2PAddress.html</filename>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>30fbfea30c7c3111cf77886d3838eb28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CI2PAddress</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>a261fe459f3de547ed16b768aa405e36</anchor>
      <arglist>(const char &amp;type=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CI2PAddress</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>c756ea766f6bd3e428f878c51153cdfe</anchor>
      <arglist>(const sam_pubkey_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CI2PAddress</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>1a35782999466efcb701ed65054a74a1</anchor>
      <arglist>(const CI2PAddress &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress &amp;</type>
      <name>operator=</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>610c83da7cf15b52acb9b4e5b1c1885f</anchor>
      <arglist>(const CI2PAddress &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>f38b9d775440f9c2906317fe9a55881c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>6cc39aaf417cfe02d98013c6633db22f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toBase64CharArray</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>805805049165ff1d594a94f041306bac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>toString</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>3497e8fad4e861b6a59be5fad9b26bd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>humanReadable</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>20868ff7146e6fe3b10daca756b9117b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>getAlias</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>a8f81d67c070940fe03d3da4fd4029a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlias</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>37b338269927f141cd4bb7481137e58a</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>6069614e27e809199016a75e9926b8ee</anchor>
      <arglist>(const CI2PAddress &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>dfce065365f288d3af22e01a542accd4</anchor>
      <arglist>(const CI2PAddress &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>5760fba10bc602541bb8479507b7c65a</anchor>
      <arglist>(const CI2PAddress &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>wxUint32</type>
      <name>size</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>097d22c2b980207ef4e1dcf77bb122dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxUint32</type>
      <name>writeBytes</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>f1bd73804934f6b607fb9a2b3e2be6c0</anchor>
      <arglist>(char *buffer) const </arglist>
    </member>
    <member kind="function">
      <type>wxUint32</type>
      <name>readBytes</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>8f2d2d29a5826e53c905d38c15a0dea2</anchor>
      <arglist>(char *buffer)</arglist>
    </member>
    <member kind="function">
      <type>wxUint32</type>
      <name>hashCode</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>91092e922de8e25539a791c31141c6d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxUint16</type>
      <name>validLength</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>4f4810eefeb9adc025753ef7a77dda1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CI2PAddress</type>
      <name>fromString</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>bceae642fbd54bf23b1febee5bb68914</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const CI2PAddress</type>
      <name>null</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>e77177da8d30b788e682375dc6daa702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const CI2PAddress</type>
      <name>complete_file</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>5d4522cec175137e3c15666c6559c9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const CI2PAddress</type>
      <name>incomplete_file</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>73609a29ecc01c63c50681f8b5743819</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setHashCode</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>6a538463fabd46d426383f30736ece94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sam_pubkey_t</type>
      <name>m_b64</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>d099ac7396ca53db5f58074e35a81069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>m_bytes</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>f8274ca59dd00f680722b0b9319f56f2</anchor>
      <arglist>[PUBKEY_LEN]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_alias</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>d262b432d9c259bb8cce3d0d4a89472f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxUint32</type>
      <name>m_hashCode</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>90a21a6be1230d74d22984ed2bc27be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>m_type</name>
      <anchorfile>classCI2PAddress.html</anchorfile>
      <anchor>55ac3d13e2edcbe5c585dc182378b311</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CI2PRouter</name>
    <filename>classCI2PRouter.html</filename>
    <member kind="function">
      <type></type>
      <name>CI2PRouter</name>
      <anchorfile>classCI2PRouter.html</anchorfile>
      <anchor>4973669e83725eb0f7b627299acc4e49</anchor>
      <arglist>(std::map&lt; wxString, wxString &gt; propmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CI2PRouter</name>
      <anchorfile>classCI2PRouter.html</anchorfile>
      <anchor>b869e31730509f68d660adfe7a80ea8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classCI2PRouter.html</anchorfile>
      <anchor>e778b2302040d933105840cc8bbdf167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classCI2PRouter.html</anchorfile>
      <anchor>22719a9807d8ad9d130d0ed8b1cf04d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>getInfo</name>
      <anchorfile>classCI2PRouter.html</anchorfile>
      <anchor>581de74aee6ef57c58594d156910eb99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CI2PRouterThread</name>
    <filename>classCI2PRouterThread.html</filename>
    <member kind="function">
      <type></type>
      <name>CI2PRouterThread</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>0c570c0573bfd0899f3a693ca954e8af</anchor>
      <arglist>(Properties p, int logId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>746b7fa3332d460e8699a7a958d8bff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isRunning</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>ed9f7efde6a2423af24442d810373f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRouter</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>a59c4a2f5396c69d921db12412dbc60d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tryDeletingPingFile</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>f58f58966e01e89b6539bed04038d4f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getInfo</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>1724b13e3dd442673ac145562ec4e647</anchor>
      <arglist>(Writer w)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>m_state</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>5f4ce2f136ed155ef58f0ad0e306751d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>m_order</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>fa0f3d91e26076d6d636cd10c25b20c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>CMuleLogger</type>
      <name>m_logger</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>6d33d58d2b6a01f2a17540bd1ce4884b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Properties</type>
      <name>props</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>282bd17fdc80db069f5a48dae55db3fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Router</type>
      <name>router</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>f069d900ad095640d7d1f581c28fcef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final int</type>
      <name>NOT_STARTED</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>b79087f626eb9a4dbe976b829efafefc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final int</type>
      <name>RUNNING</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>178a86ab975814ac084b462f8474febc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final int</type>
      <name>STOPPED</name>
      <anchorfile>classCI2PRouterThread.html</anchorfile>
      <anchor>0e38a4ebc36c83c649f2bd3322166b09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CI2PSocketEvent</name>
    <filename>classCI2PSocketEvent.html</filename>
    <base>wxEvent</base>
    <member kind="function">
      <type></type>
      <name>CI2PSocketEvent</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>ecaab5720755a6f21b11c7b8e13e366a</anchor>
      <arglist>(int id=0)</arglist>
    </member>
    <member kind="function">
      <type>wxSocketNotify</type>
      <name>GetSocketEvent</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>9f573a84f53bd4c7cbd1268a5eb2ba0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxI2PSocketBase *</type>
      <name>GetSocket</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>9668cc6e8fcac5077ad6bb787cd39b1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetClientData</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>effbcbb5a94a6097d83f4aa10816ae23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientData</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>d98cd9ed81267a5714ef4ba069483193</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>CSamSession::samerr_t</type>
      <name>GetSamError</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>7a0c3532081520b7f0e45bf7572217f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSamError</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>a811b5cf2f662d2b94fa071ed903219f</anchor>
      <arglist>(CSamSession::samerr_t err)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxEvent *</type>
      <name>Clone</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>1c2b3641513ba3d8c44d527a94f6211c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>wxSocketNotify</type>
      <name>m_event</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>50a649f89ec9dececf5cded3137c9068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>m_clientData</name>
      <anchorfile>classCI2PSocketEvent.html</anchorfile>
      <anchor>dd050a3e18ea626af07f438bb2476af9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CImage3D_Modifiers</name>
    <filename>classCImage3D__Modifiers.html</filename>
    <member kind="function">
      <type></type>
      <name>CImage3D_Modifiers</name>
      <anchorfile>classCImage3D__Modifiers.html</anchorfile>
      <anchor>5513ffbf87699acb9d22809704cf55d2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CImage3D_Modifiers</name>
      <anchorfile>classCImage3D__Modifiers.html</anchorfile>
      <anchor>750ac5caafaf39e6d28145adc1254b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>operator[]</name>
      <anchorfile>classCImage3D__Modifiers.html</anchorfile>
      <anchor>00a0493daa40b61d54ccecfcf5e8089e</anchor>
      <arglist>(int i)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CImageLib</name>
    <filename>classCImageLib.html</filename>
    <member kind="function">
      <type></type>
      <name>CImageLib</name>
      <anchorfile>classCImageLib.html</anchorfile>
      <anchor>e92c8a502476d531992fb16098bfa39e</anchor>
      <arglist>(wxString image_dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CImageLib</name>
      <anchorfile>classCImageLib.html</anchorfile>
      <anchor>7dcf7cf9777b9fa2d4674f47b32c14a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CAnyImage *</type>
      <name>GetImage</name>
      <anchorfile>classCImageLib.html</anchorfile>
      <anchor>c8866ec02e4b51ede4095a81c2af2f75</anchor>
      <arglist>(wxString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddImage</name>
      <anchorfile>classCImageLib.html</anchorfile>
      <anchor>24483f6089c032609505ed62bd9c9145</anchor>
      <arglist>(CAnyImage *img, const wxString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveImage</name>
      <anchorfile>classCImageLib.html</anchorfile>
      <anchor>1c6533ebad94170b1693b28f1a8926c0</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CimuleApp</name>
    <filename>classCimuleApp.html</filename>
    <base>IMULE_APP_BASE</base>
    <member kind="function">
      <type></type>
      <name>CimuleApp</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>809029d4c35432fc721c67460c8f41f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CimuleApp</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ef83f41465492d216e36361afa26d6a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>OnRun</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>13988e61bf4470951eda17965c5f1f9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>3609d5a110f97de9ccd89d70b600166b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>OnExit</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>d416d77df90c79c38e2a0c628f41a1bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnFatalException</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b4f0d631c6b0439fe9618707150deddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReinitializeNetwork</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>0dec5d1ca9a25e8ef9d2e462cd43fcdb</anchor>
      <arglist>(wxString *msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopNetwork</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>58a64bc961c9df451c78e5dad047d7aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartNetwork</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ec7039f735e56d653317aacdbb88c833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartSearchNetwork</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>74c99b544d74d638ad4aa785db927a4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InitGui</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ce02596d917b86a8bd7c1e843a51dca0</anchor>
      <arglist>(bool geometry_enable, wxString &amp;geometry_string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ListenSocketHandler</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>0309760a43582e048d54ee811f29a382</anchor>
      <arglist>(CI2PSocketEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDPSocketHandler</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>4c5814b32c6118985fad226b17c07bc9</anchor>
      <arglist>(CI2PSocketEvent &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>NotifyEvent</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b1fc76d1e8185f53fdde5420b30f7fbd</anchor>
      <arglist>(const GUIEvent &amp;event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ShowAlert</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>1975dace21a625b4f119fecb7b32f285</anchor>
      <arglist>(wxString msg, wxString title, int flags)=0</arglist>
    </member>
    <member kind="function">
      <type>const bool</type>
      <name>IsRunning</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ae62ee3df3fb4ac4a4e92eb110301ac8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const bool</type>
      <name>IsOnShutDown</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b9059bebe0690072153c09f2346ef593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NetworkStarting</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>31b3df31da536a129ea643522b32cf75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NetworkStarted</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>fde79ec9ca18f5a6bffe2df069cbf466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnectedED2K</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>4533afb2f78ffb83e1c5563a7981fc1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnectedKad</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>f8f856163fb7074b29648a06c61eb6f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>84268d323c42e20085f5d01945b6a047</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKadRunning</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>74981c2b7f113984b4791e422b8de2f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CreateED2kLink</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>6d3c31110d0c2db6347ade01a1ab8456</anchor>
      <arglist>(const CAbstractFile *f)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CreateED2kSourceLink</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>4b0e8f0b7b3f2c58c567c6306e742c86</anchor>
      <arglist>(const CAbstractFile *f)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CreateED2kAICHLink</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>dc1ab035cb9ce75e0a1ce58cc5a235d5</anchor>
      <arglist>(const CKnownFile *f)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>CreateED2kHostnameSourceLink</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>dfc11a75cf6d39ff4cb18e964286711e</anchor>
      <arglist>(const CAbstractFile *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RunAICHThread</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>5fc63f40649ced66f2c985cd24e79757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnlineSig</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b52b8aaf2499377d0c62602a1a0ebcda</anchor>
      <arglist>(bool zero=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Localize_mule</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>e5893e0e022f0a56b815bb8a3dd86ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Trigger_New_version</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>3010146976a4cab08bcc9f77eaa3954d</anchor>
      <arglist>(wxString newMule)</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetPublicDest</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>f88c65e9471711958377350172a607ba</anchor>
      <arglist>(bool ignorelocal=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPublicDest</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>db661d9f329d07eeb5e4aa4ec7c77130</anchor>
      <arglist>(const CI2PAddress &amp;dwDest)</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetED2KDest</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>63f515f704462b2d7e1b779fcada2d3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetUdpDest</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>6649d1294e8dbeafabb50bdc0e8ebd6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetTcpDest</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>0b4730581cacfe925eebe004fec32359</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutDown</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>d6bbd8a9dd033101371b7f09dba0641c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetLog</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>d64338be5dae6b3466cfdc6c647c8a6a</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetServerLog</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>65fd08dd6dc266e9a61b954a5b1550b7</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetDebugLog</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>8876938d89d1bb88bb7acac60efaad7d</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddServer</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>4826b80b3d7ed970bea5d95424729a9f</anchor>
      <arglist>(CServer *srv, bool fromUser=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddServerMessageLine</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>42297bf393263a34e91be8563fba6c83</anchor>
      <arglist>(wxString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOSFiles</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>a4b108ead7c4c22443f17a9f41abcdd2</anchor>
      <arglist>(const wxString new_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddLogLine</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>84a90ffd04ed9d723cec46f57f72ba87</anchor>
      <arglist>(const wxString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetOSType</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>e99360fbd9e3e95efadb778c1c5d0e7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowUserCount</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>33016e032c9935b839ea7cd70b0039b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowConnectionState</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>2de60c74529b7458f10d1fc4c01c4c19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartKad</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>53e28fa7e44ff192a1faa3ebc7fedac6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopKad</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>84bd3490419bd1ac7311166f2623aa97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisconnectED2K</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>0390fb4707b82c486a0f15843ee6aaf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CryptoAvailable</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>44a2e6a6818e6bc7302e1e5fab47a0d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>GetMuleVersion</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>5b418e9d3dcbfc9a253da407eb6c98be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>GetFullMuleVersion</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>113ab2131cec03e75aa437f83d78c7e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ExternalConn *</type>
      <name>ECServerHandler</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b51b6058ab00ea7079fad983681452a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CPreferences *</type>
      <name>glob_prefs</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>8c3716a5ab3d71962c0a7c589d0978d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CDownloadQueue *</type>
      <name>downloadqueue</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>24f9d99bb8d36b054f9f496c6c9126be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CUploadQueue *</type>
      <name>uploadqueue</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>f88161ba2c0b853a7cec4030fab375be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CServerConnect *</type>
      <name>serverconnect</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>eb1b74d80f4a313f8697ac405bbccade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSharedFileList *</type>
      <name>sharedfiles</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>6161bd6fe02b1f903935d553cbffdc3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CServerList *</type>
      <name>serverlist</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>1a9485fbe1ea867d28a05b16f17977c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CListenSocket *</type>
      <name>listensocket</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>bb252dc95048cccc9dc02ff0b421ab02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CClientList *</type>
      <name>clientlist</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>d9d0f137a2737b32eaf3e979ef6a12ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CKnownFileList *</type>
      <name>knownfiles</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>c59be9fcfb0ac1cbeee2b503676a3de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSearchList *</type>
      <name>searchlist</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>c50f2744d461258a403e065d69b711da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CClientCreditsList *</type>
      <name>clientcredits</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b0b3c1875ab1c33d574d556d94d4a2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CFriendList *</type>
      <name>friendlist</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>5b7f4b3333d13162186d784888a1f3cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CClientUDPSocket *</type>
      <name>clientudp</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ae42974ce7d2f0510b63218055f2a412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CStatistics *</type>
      <name>statistics</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>2e1d89d92a79cfb525e2afc6cbf3a317</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CIPFilter *</type>
      <name>ipfilter</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>949ffda5fb9e96c71f9e0161bc207041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UploadBandwidthThrottler *</type>
      <name>uploadBandwidthThrottler</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>cfb26fd953bdc8b7e6f0cab9638a9e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxLocale</type>
      <name>m_locale</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>7193afd94586e63f3bc8dd1bdb4a3283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>ConfigDir</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>992bddd34a9dcc5bea4520f194656784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxFFileOutputStream *</type>
      <name>applog</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>98a0168fac20822cf5c85f889d2362b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnUDPDnsDone</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>bfd2d6d1ce37f229ed5d2be087707374</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnSourceDnsDone</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>fde1782de79c982967a322961d02780b</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnServerDnsDone</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>df83cb09ed05b624b2dc321713afd769</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnTCPTimer</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b58ebf99044955bf9d7d0db2a6182f2f</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnCoreTimer</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b5d7160f71b4d3735c9549cfbfc82f84</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnFinishedHashing</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>06e177888641cd32c9a1257ba2d05afc</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnFinishedCompletion</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b9c5e9ae80b37de94d31727a6f581bba</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnFinishedHTTPDownload</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>f55013073ba81a26b465b6fb3ac33ac5</anchor>
      <arglist>(CMuleInternalEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnHashingShutdown</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>a039df3cbe567e9826efa5256f5c5a19</anchor>
      <arglist>(CMuleInternalEvent &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnNotifyEvent</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>fc8f23a5514fb5dbcdc4d1bb255200bd</anchor>
      <arglist>(wxEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetTimeOnTransfer</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>97d88c3802228012be6cb18f4109f3b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxSingleInstanceChecker *</type>
      <name>m_singleInstance</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>b9294636638c074fc1d73097a3e86dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; QueuedLogLine &gt;</type>
      <name>m_logLines</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ea4425dae2dbd85014f16e144585980f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>APPState</type>
      <name>m_app_state</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>c14a1cbf572147de9ac55ccc92659659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>I2PConnectionManager *</type>
      <name>m_connection_manager</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>461c5ea634d04cb1e498b2ac29c95a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_emulesig_path</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>0e4f4c89f6c7ea90e10e9ec8eaed3c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_imulesig_path</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>5db5213d283e6e46a74d2fbc7330dbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>OSType</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>6f981a02272445095d0cdbcd86204247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CI2PAddress</type>
      <name>m_dwPublicDest</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>56e8ab65cec56b07bd2f6caa67b8c2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>webserver_pid</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>efb5fff507516ff087e88053ff389649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enable_stdout_log</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>8922d2f04f8384fdf9daf3fdfb564bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enable_daemon_fork</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>a52848df21de34997390cce22e317b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>server_msg</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>8af0bf686f2b6446712e589ff602aa29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CTimer *</type>
      <name>core_timer</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>26b5d98b805c4f8d1457dd6271ea68b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const wxString</type>
      <name>FullMuleVersion</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ab84a35cdb79a7fd2f153eb020335a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const wxString</type>
      <name>OSDescription</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>ae33487a0f3c258de579fc4da5f6c397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static char *</type>
      <name>strFullMuleVersion</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>fd46774bd31065683ad679bc44a494e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static char *</type>
      <name>strOSDescription</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>8dae49a35c7defbfc2264ba7c39a7068</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>I2PConnectionManager</name>
      <anchorfile>classCimuleApp.html</anchorfile>
      <anchor>3132ca434c7ba0fd53e606124270eab6</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CimuleApp::QueuedLogLine</class>
  </compound>
  <compound kind="struct">
    <name>CimuleApp::QueuedLogLine</name>
    <filename>structCimuleApp_1_1QueuedLogLine.html</filename>
    <member kind="variable">
      <type>wxString</type>
      <name>line</name>
      <anchorfile>structCimuleApp_1_1QueuedLogLine.html</anchorfile>
      <anchor>b6e84bedacea472bf002a8882bd05993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>show</name>
      <anchorfile>structCimuleApp_1_1QueuedLogLine.html</anchorfile>
      <anchor>f3fbe051577c5aa14475d5b6b7c611cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CimulecmdApp</name>
    <filename>classCimulecmdApp.html</filename>
    <base>CimuleExternalConnector</base>
    <member kind="function">
      <type>const wxString</type>
      <name>GetGreetingTitle</name>
      <anchorfile>classCimulecmdApp.html</anchorfile>
      <anchor>57fbec3e38d852875835282adea81bcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ProcessCommand</name>
      <anchorfile>classCimulecmdApp.html</anchorfile>
      <anchor>f02b1e79212e6863c25653581c17a46d</anchor>
      <arglist>(int ID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process_Answer_v2</name>
      <anchorfile>classCimulecmdApp.html</anchorfile>
      <anchor>5108e4cb68d604150d6361000956767b</anchor>
      <arglist>(const CECPacket *reply)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnInitCommandSet</name>
      <anchorfile>classCimulecmdApp.html</anchorfile>
      <anchor>75d13fa66f6a6666b9397847fde3c649</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CimuleDlg</name>
    <filename>classCamuleDlg.html</filename>
    <base>wxFrame</base>
    <member kind="enumeration">
      <name>DialogType</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TransferWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2d036e6449f03fb6ad8f3b436675989d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NetworksWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2de6e41e528de98aef06d5e616ae2251b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SearchWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2d07606e151ddd9550c96e74f2828a7e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SharedWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2d597aa3187928e0aa9de404d7188a4d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChatWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2d1471243712b2d86cb868693f0f412ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StatsWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2d80222ac55990bdc5b9e5dc91d628c809</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KadWnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e022fc4ce6700391375bea2b5e0ade2de0e3e287cf8a47f89a740cbc49aef421</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>WebSearch</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e95033e843647ac5da95e0732412ecdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>wsFileHash</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>e95033e843647ac5da95e0732412ecdfd97db8c65fdcdb2e7eaef1adf1042bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CimuleDlg</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>88962aecc4be119d1b96c41d708d9193</anchor>
      <arglist>(wxWindow *pParent=NULL, const wxString &amp;title=wxEmptyString, wxPoint where=wxDefaultPosition, wxSize dlg_size=wxSize(DEFAULT_SIZE_X, DEFAULT_SIZE_Y))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CimuleDlg</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>48e5a3d3864896ab4eb9d9a2be7e0aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddLogLine</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>a57a08c7ae8d6065cfd7f0d219880cfc</anchor>
      <arglist>(bool addtostatusbar, const wxString &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddServerMessageLine</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>f52fd544c5f3ffbcc0cb074e0362f4e0</anchor>
      <arglist>(wxString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetLog</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>440e1f730757af919ea39cecb2e0a5ed</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowUserCount</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>20096eb7e83b96650303fbf7cc232ec3</anchor>
      <arglist>(const wxString &amp;info=wxEmptyString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowConnectionState</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>bcb17454639f1be3c1bb9999aa3f13ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowTransferRate</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>2cf108cd0e4b7e2edcd2fc08320c8aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StatisticsWindowActive</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>3fee22238246edb4f72128cf625a0d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DialogType</type>
      <name>GetActiveDialog</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>93bf528c08376ffaf079f1894a075d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActiveDialog</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>760e5db6993b4f02d7e5b0d27b395727</anchor>
      <arglist>(DialogType type, wxWindow *dlg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDialogVisible</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>8f748d015b988391dd805095600d6792</anchor>
      <arglist>(DialogType dlg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowED2KLinksHandler</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>f5132c1056ff83f7c4cdc4c40bf302e1</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DlgShutDown</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>01c8561fe3df419de6db96f526500444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnClose</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>de9e5e10a555e64f82e0f3ab89697a08</anchor>
      <arglist>(wxCloseEvent &amp;evt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnBnConnect</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>a18a01bfd075405c52e40085eded0244</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Hide_imule</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>6f0d070392266162a39eaff8595d06c1</anchor>
      <arglist>(bool iconize=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Show_imule</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>2f4848d8c77f6fa32627a07b1c7f1f83</anchor>
      <arglist>(bool uniconize=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SafeState</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>11d8dd443b98839322fd22cba9349496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LaunchUrl</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>ae2d79d4ae48bb05e50a46210ccfef1b</anchor>
      <arglist>(const wxString &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GenWebSearchUrl</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>b01beb8d989eb431b9a4f69f11dfd07d</anchor>
      <arglist>(const wxString &amp;filename, WebSearch provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateSystray</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>41e185d35d4983a5a423dba3e58afa40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveSystray</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>3300850d0de7c7e3ce00bfb1e8eea95d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartGuiTimer</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>d3de2b59d886f577b5444a7cc5f55072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopGuiTimer</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>122c59484e7599a36a3e243247b982ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitSort</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>87826ab33f684728fa92d441b7651d12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMessageBlink</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>a5f3e2f67cdc78a86373e17caa515210</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Create_Toolbar</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>7cef3e0cb024cb3019336dfd523320c2</anchor>
      <arglist>(wxString skinfile, bool orientation)</arglist>
    </member>
    <member kind="variable">
      <type>CTransferWnd *</type>
      <name>transferwnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>87ca87a13cccf3e49d4ab7796d30f363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CServerWnd *</type>
      <name>serverwnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>479818e2b7ab1390e9ebbbbabe429155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSharedFilesWnd *</type>
      <name>sharedfileswnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>aebe4d0ca34898b7fc27e3eca7d4f8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSearchDlg *</type>
      <name>searchwnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>3366818e0a50edf1aa122c3216617f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CChatWnd *</type>
      <name>chatwnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>5ae00f28ebf46b897a4484510011bb3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxWindow *</type>
      <name>activewnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>c177283976bf8abfdff49d8353ecf987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CStatisticsDlg *</type>
      <name>statisticswnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>1226b39e48355f743cfa5bbc3a1b19f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CKadDlg *</type>
      <name>kademliawnd</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>d10773f49b018f9fc4b03b543475613f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>srv_split_pos</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>79cb5a2354afda640ef8c8cbb30a14f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxImageList</type>
      <name>imagelist</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>a411f007a2aeb0d2cddad99cfe77fbaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PrefsUnifiedDlg *</type>
      <name>m_prefsDialog</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>54b609521d7b5543d3731ea36fbaaabf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnToolBarButton</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>08c256876195f29337430a55a639cf40</anchor>
      <arglist>(wxCommandEvent &amp;ev)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAboutButton</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>41887b0f824b9d6e79c53fb6da880c34</anchor>
      <arglist>(wxCommandEvent &amp;ev)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPrefButton</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>58845247755d7a9fedeeb3f098c4611c</anchor>
      <arglist>(wxCommandEvent &amp;ev)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnImportButton</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>b28756fee396e5268cd00530657460dd</anchor>
      <arglist>(wxCommandEvent &amp;ev)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnMinimize</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>2ab8836f31d03f0a9f406ff9ee0e4d18</anchor>
      <arglist>(wxIconizeEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBnClickedFast</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>a44567fda1d4ee44c5c73183b0ed94e1</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBnStatusText</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>ff3b45e820b06d036b3f23b72f98c925</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnGUITimer</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>d7a8bcc86500db1feb77127348e378ed</anchor>
      <arglist>(wxTimerEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnMainGUISizeChange</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>34860d9414ce9f7a8b147e4513a6c775</anchor>
      <arglist>(wxSizeEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnExit</name>
      <anchorfile>classCamuleDlg.html</anchorfile>
      <anchor>0804df795aed073bbc02fc5980ab99ca</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CimuleExternalConnector</name>
    <filename>classCimuleExternalConnector.html</filename>
    <base>wxApp</base>
    <member kind="function">
      <type></type>
      <name>CimuleExternalConnector</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>3f4030d50268fd9b0259ed2afa8515c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CimuleExternalConnector</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>d26f33436a43dfe33d2e70167c7a62f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Pre_Shell</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>d1509b6a656ec68061c52696c830948a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Post_Shell</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>545fbea28f7fd3abc9e07ff5d01bd36b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ProcessCommand</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>71b3fdd300c433f0fd716d17f136f55d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>TextShell</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>480d68fd8bb4bc7033b4934ff0e4ff1e</anchor>
      <arglist>(const wxString &amp;prompt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadConfigFile</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>17979a797e2655a1484b551a95562c7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveConfigFile</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>e7a08d36cdc09ac2a85587498db59987</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadimuleConfig</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>17b702ed0ca99e8ef45c54ff830e3bfc</anchor>
      <arglist>(CECFileConfig &amp;cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnInitCommandSet</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>87a6a9aa9cc685d16c95415f3c771153</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>b94723c66fc7df878efff6ec3f2f7c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const wxString</type>
      <name>GetGreetingTitle</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>81b558984823f0c94b5b19dea484f4be</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Show</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>eb4ce162e1b3033e7454c31499b22c9c</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DebugShow</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>a89079be49de9867290fb0e45e1c1779</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetCmdArgs</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>9cb566e6a7039c0eca8c5b4f45a3a68e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetLastCmdStr</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>9993fe3787408236808a9e12a87939f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetIDFromString</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>cebe7e48d6b45ae525536a488e509334</anchor>
      <arglist>(const wxString &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process_Answer</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>dac0a2da141aa27a7fe36c7b942f345e</anchor>
      <arglist>(const wxString &amp;answer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Parse_Command</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>75af4c21050b9fd78fe6311fa0d62a28</anchor>
      <arglist>(const wxString &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetCommand</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>21a331755ba6e4b44140386d75654e95</anchor>
      <arglist>(const wxString &amp;prompt, char *buffer, size_t buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>const CECPacket *</type>
      <name>SendRecvMsg_v2</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>eea6dd0bc01a6d0ef9ed71e55eef121d</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectAndRun</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>3629ae16064a5c0cda4c309f56f65a44</anchor>
      <arglist>(const wxString &amp;ProgName, const wxString &amp;ProgName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowGreet</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>399dae501bede918a70b911eade202c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnInitCmdLine</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>79615f0a5318c7624d0bb611635db6af</anchor>
      <arglist>(wxCmdLineParser &amp;imuleweb_parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OnCmdLineParsed</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>c9c544cd0c0317726568d60e86b6cb51</anchor>
      <arglist>(wxCmdLineParser &amp;parser)</arglist>
    </member>
    <member kind="variable">
      <type>CECFileConfig *</type>
      <name>m_configFile</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>698eba2279a9d2cac642cbbd950b4adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_configFileName</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>1545f6807581d5f55988df8e2a29055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>m_port</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>37ceb5946aa281c7312316b87d39bdac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_host</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>3c6189c80135df66d209105dc7dcba01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CMD4Hash</type>
      <name>m_password</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>f1fd97e126bbb634d5c3c5665f0159f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_KeepQuiet</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>e7792be781552e4998332db061c0959b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_Verbose</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>d3e8ed9c2daf08f44aa37ad21bf6e2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CCommandTree</type>
      <name>m_commands</name>
      <anchorfile>classCimuleExternalConnector.html</anchorfile>
      <anchor>ad6b6ee9d7bf23ebc1b8a9022b7e9286</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CamuleGuiApp</name>
    <filename>classCamuleGuiApp.html</filename>
    <base>CimuleApp</base>
    <base>CamuleGuiBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ShowAlert</name>
      <anchorfile>classCamuleGuiApp.html</anchorfile>
      <anchor>474f76a2666ac598426bc9e3d1af07ae</anchor>
      <arglist>(wxString msg, wxString title, int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutDown</name>
      <anchorfile>classCamuleGuiApp.html</anchorfile>
      <anchor>11513abeb4978de318ca2bb2afbb583b</anchor>
      <arglist>(wxCloseEvent &amp;evt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>NotifyEvent</name>
      <anchorfile>classCamuleGuiApp.html</anchorfile>
      <anchor>2b9d2373c17565e385af2ca13de924c0</anchor>
      <arglist>(const GUIEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetLog</name>
      <anchorfile>classCamuleGuiApp.html</anchorfile>
      <anchor>7142ac17b93d3e67ba62d8f6c6d5f6ec</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetServerLog</name>
      <anchorfile>classCamuleGuiApp.html</anchorfile>
      <anchor>77b43a2fba7bd201dd0050e4a547ce6c</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddServerMessageLine</name>
      <anchorfile>classCamuleGuiApp.html</anchorfile>
      <anchor>3a425d2ecdcf588c8daeea63058848e1</anchor>
      <arglist>(wxString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CamuleGuiBase</name>
    <filename>classCamuleGuiBase.html</filename>
    <member kind="function">
      <type></type>
      <name>CamuleGuiBase</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>4bb21eb7c927f34ea6a1810f95b556cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CamuleGuiBase</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>b5304613ddb86b1a7f478d02da6db1be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CopyTextToClipboard</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>edc3898f6b174e602f43d23c94590693</anchor>
      <arglist>(wxString strText)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>NotifyEvent</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>8a2455932c5eef04a2f94a95b383fb4d</anchor>
      <arglist>(const GUIEvent &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InitGui</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>f84676536b75cd09ed3d4f2b5ff04633</anchor>
      <arglist>(bool geometry_enable, wxString &amp;geometry_string)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ShowAlert</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>24016bafabad57793f407c550a0bf22b</anchor>
      <arglist>(wxString msg, wxString title, int flags)</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_FrameTitle</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>915e91531296625a88a2d68ed5bfe064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CimuleDlg *</type>
      <name>imuledlg</name>
      <anchorfile>classCamuleGuiBase.html</anchorfile>
      <anchor>730f9ee4cef514d23c095391eee8a2cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CimulewebApp</name>
    <filename>classCimulewebApp.html</filename>
    <base>CimuleExternalConnector</base>
    <member kind="function">
      <type>const wxString</type>
      <name>GetGreetingTitle</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>71e4e689d4de525329a1c2dff2b5e4b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pre_Shell</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>3355d7b5d2196dace89bc711d8008708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadConfigFile</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>421e52caa0084b549ec4ded7f66bb196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveConfigFile</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>55277d1327c44fb8cb6f0e51627f48c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadimuleConfig</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>b0d082731fb4b8f62ee3040249f861b1</anchor>
      <arglist>(CECFileConfig &amp;cfg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTemplateDir</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>2b3790ba60078c3117c60a7539a5a56b</anchor>
      <arglist>(const wxString &amp;templateName, wxString &amp;templateDir)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckDirForTemplate</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>3ff37c9888fea3dc93092081d2c9f5be</anchor>
      <arglist>(wxString &amp;dir, const wxString &amp;tmpl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnInitCmdLine</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>ca847e4a17bd2aac0663e65c31df97c1</anchor>
      <arglist>(wxCmdLineParser &amp;imuleweb_parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OnCmdLineParsed</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>8409d84fe8073fa80396be3363a67d61</anchor>
      <arglist>(wxCmdLineParser &amp;parser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Post_Shell</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>6cca0058b5065b44619599254b06b585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_TemplateName</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>edf580efa86d952f3b5b70e6fdc3f1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_TemplateDir</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>117e7d7aab65144f91e12d2c63904656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_TemplateFileName</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>e35b205d0fe94570ee79c2ec0fa8531c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_UseGzip</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>c3a4fba2662e4316f3edbb4ce0c3155b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>m_AdminPass</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>0c6e572cf5a247308ac38a9edd655f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>m_GuestPass</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>addb542a207292c0c2da5c26eca752b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_AllowGuest</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>2556796d5c27cfa2ddf224ca7a689a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>m_WebserverPort</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>7cf47e6f4c1631493c231a48f6516b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m_PageRefresh</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>312d4f45f9ce870270b5fbbd0635f59d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_LoadSettingsFromimule</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>4bb9978d84486b6533354b0bd2825b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_TemplateOk</name>
      <anchorfile>classCimulewebApp.html</anchorfile>
      <anchor>ee16098e9f78db4157cc3e5da0aa9e1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CInvalidPacket</name>
    <filename>structCInvalidPacket.html</filename>
    <base>CMuleException</base>
    <member kind="function">
      <type></type>
      <name>CInvalidPacket</name>
      <anchorfile>structCInvalidPacket.html</anchorfile>
      <anchor>a317b5554a957711da6d2890ea6f4282</anchor>
      <arglist>(const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CInvalidParamsEx</name>
    <filename>structCInvalidParamsEx.html</filename>
    <base>CRunTimeException</base>
    <member kind="function">
      <type></type>
      <name>CInvalidParamsEx</name>
      <anchorfile>structCInvalidParamsEx.html</anchorfile>
      <anchor>57b866568366d897f453c5bbb0b2bd08</anchor>
      <arglist>(const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CInvalidStateEx</name>
    <filename>structCInvalidStateEx.html</filename>
    <base>CRunTimeException</base>
    <member kind="function">
      <type></type>
      <name>CInvalidStateEx</name>
      <anchorfile>structCInvalidStateEx.html</anchorfile>
      <anchor>cd33bc26aa27ed7edc0062ee5e1c8c8e</anchor>
      <arglist>(const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CIOFailureException</name>
    <filename>structCIOFailureException.html</filename>
    <base>CSafeIOException</base>
    <member kind="function">
      <type></type>
      <name>CIOFailureException</name>
      <anchorfile>structCIOFailureException.html</anchorfile>
      <anchor>e8a308276643303f9be447afb3064109</anchor>
      <arglist>(const wxString &amp;type, const wxString &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CIOFailureException</name>
      <anchorfile>structCIOFailureException.html</anchorfile>
      <anchor>70485c52494b09febe7de00e6bcd3bd9</anchor>
      <arglist>(const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CIPFilter</name>
    <filename>classCIPFilter.html</filename>
    <member kind="function">
      <type></type>
      <name>CIPFilter</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>65ee957320c8a8438256d7277110e1b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllIPs</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>2879c68aebd483bcd03476b2e37f7dbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFiltered</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>13a390d0fbcde9897e7590d5d6fa8a8b</anchor>
      <arglist>(const CI2PAddress &amp;Desttest, bool isServer=false)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>BanCount</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>9382ccce0d58233f4a2eaa27a1ae1e1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reload</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>279af8083b17b5c876046ba580d53176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>2f3168a57b342856c9c59928b8b42890</anchor>
      <arglist>(const wxString &amp;strURL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DownloadFinished</name>
      <anchorfile>classCIPFilter.html</anchorfile>
      <anchor>f96ae918c187c64587074488777ae324</anchor>
      <arglist>(uint32 result)</arglist>
    </member>
    <class kind="struct">CIPFilter::destObject</class>
  </compound>
  <compound kind="class">
    <name>CIPFilterRem</name>
    <filename>classCIPFilterRem.html</filename>
    <member kind="function">
      <type></type>
      <name>CIPFilterRem</name>
      <anchorfile>classCIPFilterRem.html</anchorfile>
      <anchor>c7a406ce275e1179909bb8bd3d941feb</anchor>
      <arglist>(CRemoteConnect *conn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reload</name>
      <anchorfile>classCIPFilterRem.html</anchorfile>
      <anchor>211b9974860a4e56653e7aa6c7259305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>classCIPFilterRem.html</anchorfile>
      <anchor>f919d0ba72ed38890bfeab3d215276e2</anchor>
      <arglist>(wxString strURL=wxEmptyString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CipherModeBase</name>
    <filename>classCipherModeBase.html</filename>
    <base>SimpleKeyedTransformation&lt; StreamTransformation &gt;</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>MinKeyLength</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>24be9810c5e278b2dba6395478610ad9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxKeyLength</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>79cc1bb4791b768ef2e1efbbd7a3504e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DefaultKeyLength</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>a827be1260ec2130d4e222879769e055</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetValidKeyLength</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>de28e5ee0c5e1919aef05dbef72ea81c</anchor>
      <arglist>(unsigned int n) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValidKeyLength</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>6b2eb8cb7799bfcce99974c3650ce183</anchor>
      <arglist>(unsigned int n) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKey</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>135aa370bac391c9e0469f5aefeacc79</anchor>
      <arglist>(const byte *key, unsigned int length, const NameValuePairs &amp;params=g_nullNameValuePairs)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OptimalDataAlignment</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>620b247030548f559a9b426e47234f12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>IVSize</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>353498711671d0f44a87fc27211c3d1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetNextIV</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>02a03554d9c44c768870cd114b91a74d</anchor>
      <arglist>(byte *IV)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IV_Requirement</type>
      <name>IVRequirement</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>a79d2b3623c869ee47d00a94ca9c6dc5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>BlockSize</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>35fa9c9e616b0145c1e21745de48a684</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFeedbackSize</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>687cdab140bc5c733bc43299a97c2a17</anchor>
      <arglist>(unsigned int feedbackSize)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ResizeBuffers</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>8c864c16ce0eb014699c0a61adcc6836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>UncheckedSetKey</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>e07d97ed4ef17118b1a937a5389b81c7</anchor>
      <arglist>(const NameValuePairs &amp;params, const byte *key, unsigned int length, const byte *iv)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BlockCipher *</type>
      <name>m_cipher</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>b6c63ae5b5521b462912b1bb2d766989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SecByteBlock</type>
      <name>m_register</name>
      <anchorfile>classCipherModeBase.html</anchorfile>
      <anchor>5d4cdcf2a0a4f5c52115fa622eebc10a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CipherModeDocumentation</name>
    <filename>structCipherModeDocumentation.html</filename>
    <base>SymmetricCipherDocumentation</base>
  </compound>
  <compound kind="class">
    <name>CipherModeFinalTemplate_CipherHolder</name>
    <filename>classCipherModeFinalTemplate__CipherHolder.html</filename>
    <templarg>CIPHER</templarg>
    <templarg>BASE</templarg>
    <base protection="protected">ObjectHolder&lt; CIPHER &gt;</base>
    <base>AlgorithmImpl&lt; BASE, CipherModeFinalTemplate_CipherHolder&lt; CIPHER, BASE &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>CipherModeFinalTemplate_CipherHolder</name>
      <anchorfile>classCipherModeFinalTemplate__CipherHolder.html</anchorfile>
      <anchor>bcf55eed14bb7773a319678ae8bae74a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CipherModeFinalTemplate_CipherHolder</name>
      <anchorfile>classCipherModeFinalTemplate__CipherHolder.html</anchorfile>
      <anchor>d8684310bd04003d9ba024490f083857</anchor>
      <arglist>(const byte *key, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CipherModeFinalTemplate_CipherHolder</name>
      <anchorfile>classCipherModeFinalTemplate__CipherHolder.html</anchorfile>
      <anchor>58ff648f5efeeaf1375d48be998edf33</anchor>
      <arglist>(const byte *key, unsigned int length, const byte *iv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CipherModeFinalTemplate_CipherHolder</name>
      <anchorfile>classCipherModeFinalTemplate__CipherHolder.html</anchorfile>
      <anchor>099b2c7e88e9218869e7fca8a2359bdc</anchor>
      <arglist>(const byte *key, unsigned int length, const byte *iv, int feedbackSize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classCipherModeFinalTemplate__CipherHolder.html</anchorfile>
      <anchor>ec1947ff8b17452e2f9587f4dd5b9d2e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CKadDlg</name>
    <filename>classCKadDlg.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CKadDlg</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>76ff8ce959b84c90ed44e64bd67fb389</anchor>
      <arglist>(wxWindow *pParent, bool call_fit=false, bool set_sizer=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CKadDlg</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>d175d66f8e3ee471dd967b87bf62d50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetupGui</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>3645bef4c11cccd9323f76c24a64fead</anchor>
      <arglist>(bool call_fit, bool set_sizer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>9dbdc858f082f95c851284a9f0d31d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpdatePeriod</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>3575f594109beeeac729bea317e47736</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGraphColors</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>9b977e307d69fd8d438a57095176fdcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateGraph</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>4cf1d3dc298b4657450aacc6ecd60454</anchor>
      <arglist>(bool bStatsVisible, const GraphUpdateInfo &amp;update)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnNodeEvent</name>
      <anchorfile>classCKadDlg.html</anchorfile>
      <anchor>5fa992b68ac4b2bca28fed75e81137e2</anchor>
      <arglist>(const GUIEvent &amp;evt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CKnownFile</name>
    <filename>classCKnownFile.html</filename>
    <base>CAbstractFile</base>
    <member kind="typedef">
      <type>std::set&lt; CUpDownClient * &gt;</type>
      <name>SourceSet</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>fd5a7d427938a7537c5620646897e4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CKnownFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>5e1e05e13b4ed71a0a6232a257078108</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CKnownFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>06f84a320d93d764c679aceb19bbc2c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFileName</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>60ce0c1c303a4bc205614afad5cd4ce3</anchor>
      <arglist>(const wxString &amp;strmakeFilename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilePath</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>ce1b228e0c0d829c00fce217c2c9f7c5</anchor>
      <arglist>(const wxString &amp;strFilePath)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetFilePath</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>b3381e43b670984571a0d60a013f468c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsPartFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>6855d5965df3e2d1ca9a4bab1e84cf7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LoadFromFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>8c384642e273969104313f99ec4d7271</anchor>
      <arglist>(const CFileDataIO *file)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8</type>
      <name>GetStatus</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>5e771a8b89409abd3c47e8233f89916f</anchor>
      <arglist>(bool WXUNUSED(ignorepause)=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteToFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>cd29ab66c501c86bb65d9bd0ee2c589d</anchor>
      <arglist>(CFileDataIO *file)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFileDate</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>17b9ae4a04e776523423eb486c555e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFileSize</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>9188714ed367d9cbd35fb5fa5374239d</anchor>
      <arglist>(wxULongLong nFileSize)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetHashCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>00dab8e72e19c15d73ccdc828f8be11f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetPartHash</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>37ca4f2318c537f0522430eadcc397c1</anchor>
      <arglist>(wxULongLong part) const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetED2KPartHashCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>9890a8e3e7124462afd7273c99d8aa25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetPartCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>5a0eedcd65bbdd2a811baa628ddafe75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetED2KPartCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>86183c2e75a272eefdc8489000896cc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>f3cf73fc8e7091c03d6f5435d4c27f67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>79d6080ffdb31bc74989223ddb347636</anchor>
      <arglist>(uint8 newUpPriority, bool bSave=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAutoUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>241a650315cc91b13d772f2699e69a02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>21dfe079e3f857f13594014f76f7c2c7</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateAutoUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>d56847538bd3f59b7c55f9d3d76d87ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetQueuedCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>5127400090f5b9bb49db913becf3965d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadHashsetFromFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>a400d6470a6a19a8d3947f5173bf6ef1</anchor>
      <arglist>(const CFileDataIO *file, bool checkhash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddUploadingClient</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>8575684e488aa58bba3ac9c745dc2452</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveUploadingClient</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>2ec034d448205ebd0cbc8e00928dce76</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetFileComment</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>9d59502678a6a0e6d7a3b5dd1f4d8e61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int8</type>
      <name>GetFileRating</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>f4fa18efd75dcfd1f7a5f9c03dddb813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileComment</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>2936f29658547d6952e156e97554fa88</anchor>
      <arglist>(const wxString &amp;strNewComment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileRating</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>073bc30bdd7f44017ba9dab45fa3898c</anchor>
      <arglist>(int8 iNewRating)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPublishedED2K</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>90caf29047a889352b54b0147e56306b</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPublishedED2K</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>ae7ebf8010e7f4e9613c8c9f44248f00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetKadFileSearchID</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>e769110ad03d71abada6155153699eba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKadFileSearchID</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>5d3a8cd4f4804097d3a223f2dfe59444</anchor>
      <arglist>(uint32 id)</arglist>
    </member>
    <member kind="function">
      <type>const Kademlia::WordList &amp;</type>
      <name>GetKadKeywords</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>b8b1a9241372f4f77c527afad35df6b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastPublishTimeKadSrc</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>819db0e92b41d2d3a12e7b6926242483</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastPublishTimeKadSrc</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>f3ad34346c93042da1b1057bb99e2a16</anchor>
      <arglist>(uint32 time)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetNextPublishTimeKadSrc</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>0f45150c6be4a2e10cf411b59c99c79c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastPublishTimeKadNotes</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>21cb0470dd09298a99399ab2e9bf9ee5</anchor>
      <arglist>(uint32 time)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastPublishTimeKadNotes</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>7a1a5546c047680115c5f6ef29c40677</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PublishSrc</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>cc9b9041be17de13bf0ff49f1aa10b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PublishNotes</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>4b1d3502c3412bff81e6bbf53aaf159e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetMetaDataVer</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>ba58df55d130ba649c6c84aa3edfdbab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CPacket *</type>
      <name>CreateSrcInfoPacket</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>33941c7125a7bb8748460996609346e9</anchor>
      <arglist>(const CUpDownClient *forClient)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdatePartsInfo</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>eb9582fd7a7ade6a332f2ad731ee6079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateAICHHashSetOnly</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>84661259e983cbacd189eecd095e6ed4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CAICHHashSet *</type>
      <name>GetAICHHashset</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>6e9f637df6c2974d7aaaa0f67edb82ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAICHHashset</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>60cf6d39ea65718e5cec6b5563657907</anchor>
      <arglist>(CAICHHashSet *val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateUpPartsFrequency</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>0f0d575e3f5bce510ce58cba62fc3240</anchor>
      <arglist>(CUpDownClient *client, bool increment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateHashFromString</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>8f885c3a5cbd81c3cb13766dbdcb12c6</anchor>
      <arglist>(byte *in_string, uint32 Length, byte *Output, CAICHHashTree *pShaHashOut=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>c02961c7dcf713cc9a54ffb30f9c3ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>date</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>6cc2e228bb7ebb17926d7bb1d164952f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CFileStatistic</type>
      <name>statistic</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>ad03bb86e87b0d6053ec5aeaf77380f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>m_nCompleteSourcesTime</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>bb0ca13fe6adb5c51978681fa4b31c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>m_nCompleteSourcesCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>c90c67090938ab807282c05112c0028a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>m_nCompleteSourcesCountLo</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>c366c0e61d68eb756a152ca576b2561a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>m_nCompleteSourcesCountHi</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>3982ec274a8451078e3f295b41261bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SourceSet</type>
      <name>m_ClientUploadList</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>5222d2919019345ebe64351611ba28a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArrayOfUInts16</type>
      <name>m_AvailPartFrequency</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>94be76ef560fcfbcde324400c6a6c163</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadTagsFromFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>e528486203dc676f34ed75ed43e7059f</anchor>
      <arglist>(const CFileDataIO *file)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadDateFromFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>bba6128868e77b3f4db4c69136c723bc</anchor>
      <arglist>(const CFileDataIO *file)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateHashFromFile</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>7b2548ee72cb03ebf485f32ac6ceb011</anchor>
      <arglist>(CFileDataIO *file, uint32 Length, byte *Output, CAICHHashTree *pShaHashOut=NULL) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>LoadComment</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>04b0602b74c4cc516cf28f50151ec4f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateHashFromInput</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>25104fe1eb73b1b59551e84968d4d8d8</anchor>
      <arglist>(CFileDataIO *file, uint32 Length, byte *Output, byte *in_string, CAICHHashTree *pShaHashOut) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArrayOfCMD4Hash</type>
      <name>hashlist</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>3c8bc22f33e2170399869a9b76546844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_strFilePath</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>6ee4788ced154aaa9e5a365bc09fc996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CAICHHashSet *</type>
      <name>m_pAICHHashSet</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>cc36b04b7a61d986cb3b5b0e4cb1f208</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_bCommentLoaded</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>80c44e7eaca016e8dc7a17ce205f061a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxULongLong</type>
      <name>m_iPartCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>973e620755d0236186e5d939b13ec325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxULongLong</type>
      <name>m_iED2KPartCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>ce61e1377612ec7a63f6b69780409df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxULongLong</type>
      <name>m_iED2KPartHashCount</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>fefbfbb6c1fa31d1483da03fa0af33f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8</type>
      <name>m_iUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>e9db13295e0866370f3c0327ee13d7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_bAutoUpPriority</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>9e89f2cc158d0d8707d8b6e2cdedb19d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_PublishedED2K</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>dcae197eaccff62b5e14eb908212328e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kademlia::WordList</type>
      <name>wordlist</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>9bc30ea2ac1674fe5e070ca36d197f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>kadFileSearchID</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>8084f6ed5c74fe80d444226688153016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_lastPublishTimeKadSrc</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>ea65785c341aa83378c4fb5d7e30e8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_lastPublishTimeKadNotes</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>a101705c4770572b818cc889930814ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CAddFileThread</name>
      <anchorfile>classCKnownFile.html</anchorfile>
      <anchor>d130da43904ebf9e725a918cc86f8b97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CKnownFile_Encoder</name>
    <filename>classCKnownFile__Encoder.html</filename>
    <member kind="function">
      <type></type>
      <name>CKnownFile_Encoder</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>7aff929243c3f1c2ba20d10dad3cec73</anchor>
      <arglist>(CKnownFile *file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CKnownFile_Encoder</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>0f0cc0abd326e503c2645f8dbbdb70c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CKnownFile_Encoder</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>ee6824f517b4efc6122b431bf064e2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CKnownFile_Encoder</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>534bd2b66d8dae3391cee72ee1d81b91</anchor>
      <arglist>(const CKnownFile_Encoder &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile_Encoder &amp;</type>
      <name>operator=</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>c9a6782851ebbd025ea5956498b44a47</anchor>
      <arglist>(const CKnownFile_Encoder &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Encode</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>72efaf9b1825d66b11f3e38e98ced1b2</anchor>
      <arglist>(CECTag *parent_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetEncoder</name>
      <anchorfile>classCKnownFile__Encoder.html</anchorfile>
      <anchor>e3c2d3c5fae1bcd6f98dab76da01d242</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CKnownFileList</name>
    <filename>classCKnownFileList.html</filename>
    <member kind="function">
      <type></type>
      <name>CKnownFileList</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>b01cd71d72f569d0d1416939c5d910a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CKnownFileList</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>1313019d9931529ca1d898c90dc0911c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SafeAddKFile</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>681d56e6b063fbedbde52d14c04c685b</anchor>
      <arglist>(CKnownFile *toadd)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Init</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>0e053d99262c4a7112540f6166ce32c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Save</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>fe7c9799bda3246c27f172e2fea1d584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>9aef9e7f576717897754f2ad1e6aab45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile *</type>
      <name>FindKnownFile</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>4d52b13e4bfec2b9e5d908630786d20b</anchor>
      <arglist>(wxString filename, uint32 in_date, wxULongLong in_size)</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile *</type>
      <name>FindKnownFileByID</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>ae75a8121e65592ffe1559a17941fe96</anchor>
      <arglist>(const CMD4Hash &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKnownFile</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>c2e27f5e86b5976b22086e1e822bfabc</anchor>
      <arglist>(const CKnownFile *file)</arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>requested</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>287be5fd5394753fd019047332160981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>transfered</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>fef3d2c985010c5d36b7019ba8c275a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>accepted</name>
      <anchorfile>classCKnownFileList.html</anchorfile>
      <anchor>080a603663e4109bd876739a2cf97304</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CKnownFilesRem</name>
    <filename>classCKnownFilesRem.html</filename>
    <member kind="function">
      <type></type>
      <name>CKnownFilesRem</name>
      <anchorfile>classCKnownFilesRem.html</anchorfile>
      <anchor>62fdec2d9ebe1a6a4a521d4d783966ac</anchor>
      <arglist>(CSharedFilesRem *shared)</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile *</type>
      <name>FindKnownFileByID</name>
      <anchorfile>classCKnownFilesRem.html</anchorfile>
      <anchor>a701ea8ca00655b065f269372d742297</anchor>
      <arglist>(const CMD4Hash &amp;id)</arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>requested</name>
      <anchorfile>classCKnownFilesRem.html</anchorfile>
      <anchor>e2ae3164ccbd0fbed950ba879fad7602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>transfered</name>
      <anchorfile>classCKnownFilesRem.html</anchorfile>
      <anchor>c3898972b283ba58895e30c5af74a64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>accepted</name>
      <anchorfile>classCKnownFilesRem.html</anchorfile>
      <anchor>7d9ea6ca326e30942cfdf035537985d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ClassNullRNG</name>
    <filename>classClassNullRNG.html</filename>
    <base>RandomNumberGenerator</base>
    <member kind="function">
      <type>std::string</type>
      <name>AlgorithmName</name>
      <anchorfile>classClassNullRNG.html</anchorfile>
      <anchor>5490c3eb043c84f685a0f45fbf4a96af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>GenerateByte</name>
      <anchorfile>classClassNullRNG.html</anchorfile>
      <anchor>f029ccc4b895cd239747b024b103738b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ClientListView</name>
    <filename>structClientListView.html</filename>
    <member kind="variable">
      <type>wxString</type>
      <name>m_title</name>
      <anchorfile>structClientListView.html</anchorfile>
      <anchor>0905fd47bb9661ba29c8ad5c7e0509dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>m_init</name>
      <anchorfile>structClientListView.html</anchorfile>
      <anchor>71cd55d74d2ccab2c5683b8707b53061</anchor>
      <arglist>)(CClientListCtrl *)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>m_draw</name>
      <anchorfile>structClientListView.html</anchorfile>
      <anchor>2a700a154293dc47800052b36b4e0205</anchor>
      <arglist>)(CUpDownClient *, int, wxDC *, const wxRect &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>wxListCtrlCompare</type>
      <name>m_sort</name>
      <anchorfile>structClientListView.html</anchorfile>
      <anchor>f1c7b65e06fa157fde44132b10354d14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CList</name>
    <filename>classCList.html</filename>
    <templarg>TYPE</templarg>
    <templarg>ARG_TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>CList</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>5c76f7854dc1975756ad99c798c9644c</anchor>
      <arglist>(uint64 WXUNUSED(none)=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CList</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>5ce915f9b57b953a3c8b5220d997c5a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetCount</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>c7090c45f2d8fe476a3e820bdd9d8e2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetSize</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>a40a2fd18558b28cb1ca0cbdf90df58e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>60742b35477a4eef2336d9b18d876a2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>GetHead</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>8c6c505392f3b69d42c5a53849e42154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>GetHead</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>350d0b20070b953c7951c21c872507b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>GetTail</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>c7b311bf4c076e4e48c344bd2b4d3d42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>GetTail</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>cb839ec7a212fbf5cb8d44bba5577af5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>RemoveHead</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>674b06c51f0e4160766110ea6abda588</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>RemoveTail</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>f4af733d2148aef940f426bf17830813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>AddHead</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>d8daf6664a07336dbc39a338a4473329</anchor>
      <arglist>(ARG_TYPE newElement)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>AddTail</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>dec7a1da81891b5a2bd86f4ab1c84deb</anchor>
      <arglist>(ARG_TYPE newElement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAll</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>ae803d079df61a440c74eaf4295064f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetHeadPosition</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>febbf78acf8ccc940777ced06e754272</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetTailPosition</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>65adbc9dd4419ff1c3a79f622a976442</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>GetNext</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>639084a0067632aa8d4b058140cc9a3b</anchor>
      <arglist>(POSITION &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>GetNext</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>5d90c7aceeb96dc1dd3f310a940f9ee6</anchor>
      <arglist>(POSITION &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>GetPrev</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>88a471abb518b2d1916474c297802db3</anchor>
      <arglist>(POSITION &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>GetPrev</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>7ceb381e462d276ec6a6666d4721496c</anchor>
      <arglist>(POSITION &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>GetAt</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>c1facb4134cfb66f54ca6e838d007b82</anchor>
      <arglist>(POSITION pos)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>GetAt</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>b025348d929fa9918c9c67191c470931</anchor>
      <arglist>(POSITION pos) const </arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>NextAt</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>644b05c920317ae998bd189c99e2e3d9</anchor>
      <arglist>(POSITION pos)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>PrevAt</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>d3c658f3ce630a3bc3d5d779d013441e</anchor>
      <arglist>(POSITION pos)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>RecycleNodeAsTail</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>8230fffb18a11385a088a7766edc881c</anchor>
      <arglist>(POSITION pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAt</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>2c3e7d68a6efacf1a0e9dfd4c33b948a</anchor>
      <arglist>(POSITION pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertAfter</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>0ada827c1a8c102e2cceb7dbf50aafbd</anchor>
      <arglist>(POSITION pos, ARG_TYPE data)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>Find</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>9444153fb759602e31668f6ddda30022</anchor>
      <arglist>(ARG_TYPE searchValue, POSITION startAfter=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>FindIndex</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>a5c7e64be70fe1a6d155fc199983e01b</anchor>
      <arglist>(uint64 nIndex) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAt</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>466c53dbcf4c5a7ab4dcc121e0de46a8</anchor>
      <arglist>(POSITION &amp;pos, ARG_TYPE data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>freeNode</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>360d4fc8e399124314b1d3fab5cbfe1b</anchor>
      <arglist>(MYNODE *n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>MYNODE *</type>
      <name>newNode</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>9e4b591ddc331f6d70fac8992725a2eb</anchor>
      <arglist>(ARG_TYPE data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>MYNODE *</type>
      <name>newNode</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>848efccab34bc6bd72755ab629f68a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MYNODE *</type>
      <name>head</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>b61c7ed76d246c0a7ad140b5d9211237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MYNODE *</type>
      <name>tail</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>17fc5a99a3e34720e20b45b9b2da3767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>count</name>
      <anchorfile>classCList.html</anchorfile>
      <anchor>f3f61f299ff21e20713745427f54d2c4</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CList::MyNode</class>
  </compound>
  <compound kind="class">
    <name>CListenSocket</name>
    <filename>classCListenSocket.html</filename>
    <base>wxI2PSocketServer</base>
    <member kind="function">
      <type></type>
      <name>CListenSocket</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>c85982d672872257e5faf77111d9bf8e</anchor>
      <arglist>(wxString key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CListenSocket</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>f1592d89cfee28eb0d8c91e363b6426b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartListening</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>f6edfc4b70f7c8d63680f9de588972ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopListening</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>ff25129b0e3073d23f49a2b51d41b777</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnAccept</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>972791faffb049c20e29ae643c21fcd0</anchor>
      <arglist>(int nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>f2fb5ea16956bd7d7ecff0ac792000a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveSocket</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>d973550ed7deb86a84c17569c974c24f</anchor>
      <arglist>(CClientTCPSocket *todel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSocket</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>b43084c687c501f6371abae450719305</anchor>
      <arglist>(CClientTCPSocket *toadd)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetOpenSockets</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>76d62bfe6f7da88fd51c75d3eeb905cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KillAllSockets</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>e6cf87308b1eddbb21e802f17347f162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TooManySockets</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>941d953046dfcc55b33528f6c9d20faa</anchor>
      <arglist>(bool bIgnoreInterval=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValidSocket</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>d606d8021065d7bb02a3fad8dea9c177</anchor>
      <arglist>(CClientTCPSocket *totest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddConnection</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>0a44f2499ea59f99c8a9a7fd8da3f8f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecalculateStats</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>4d921b1418aa9c87dafefb127e4a5030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReStartListening</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>dd37d182638d4b57579c8e6736099c7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateConnectionsStatus</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>88e0ac5566c6ade9622434d272d4bf49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMaxConperFiveModifier</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>8a26ef69fe0c18358cc39b53f4d8f335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetTotalConnectionChecks</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>8b47c4c1868191529ad31904f33a6198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetAverageConnections</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>6d0ca4852eafe5be924acfd4aa57695a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OnShutdown</name>
      <anchorfile>classCListenSocket.html</anchorfile>
      <anchor>e43c78d2680696af61f283fd186a36bd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CListenSocketRem</name>
    <filename>classCListenSocketRem.html</filename>
    <member kind="function">
      <type>uint32</type>
      <name>GetPeakConnections</name>
      <anchorfile>classCListenSocketRem.html</anchorfile>
      <anchor>164ff171bfa1bac36df4ab2a8f7ef5ca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CLogger</name>
    <filename>classCLogger.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsEnabled</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>c63553f8d8dfe2af7425fbbb285da522</anchor>
      <arglist>(DebugType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetEnabled</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>5a7d49880f59003c72658f8dfca3bb2a</anchor>
      <arglist>(DebugType type, bool enabled)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddLogLine</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>6a0128a84edc50d985e9573375e56d44</anchor>
      <arglist>(bool critical, const wxString str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDebugLogLine</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>c8f0b8ee77ee6b6f4d850007273f0dc1</anchor>
      <arglist>(bool critical, DebugType type, const wxString &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FlushPendingEntries</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>f1ed01f1b3b340a9e99e6330f8bab259</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const CDebugCategory &amp;</type>
      <name>GetDebugCategory</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>2272a95e26a25f087fb3a34c0bc2321f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>GetDebugCategoryCount</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>2e660173830efcced89de1bbb8767f44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>s_logVerbose</name>
      <anchorfile>classCLogger.html</anchorfile>
      <anchor>2ddd4abd31df3276d624fd430c61732c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CLoggerTarget</name>
    <filename>classCLoggerTarget.html</filename>
    <base>wxLog</base>
    <member kind="function">
      <type></type>
      <name>CLoggerTarget</name>
      <anchorfile>classCLoggerTarget.html</anchorfile>
      <anchor>084036fcf3978a2ca0f7b496a07e5455</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoLogString</name>
      <anchorfile>classCLoggerTarget.html</anchorfile>
      <anchor>23aa80a653e881cab52b04b7a798c277</anchor>
      <arglist>(const wxChar *msg, time_t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Clonable</name>
    <filename>classClonable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Clonable</name>
      <anchorfile>classClonable.html</anchorfile>
      <anchor>2b9c911b4a49b532da3dea9951cf5fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Clonable *</type>
      <name>Clone</name>
      <anchorfile>classClonable.html</anchorfile>
      <anchor>24b43349a71e1f98508eeb10b31a0a62</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ClonableImpl</name>
    <filename>classClonableImpl.html</filename>
    <templarg>DERIVED</templarg>
    <templarg>BASE</templarg>
    <base>BASE</base>
    <member kind="function">
      <type>Clonable *</type>
      <name>Clone</name>
      <anchorfile>classClonableImpl.html</anchorfile>
      <anchor>8aa4807d12b2c4653d2d6c69f3c51f53</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMD4Hash</name>
    <filename>classCMD4Hash.html</filename>
    <member kind="function">
      <type></type>
      <name>CMD4Hash</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>530d679d89b1c2b40604ec95e2a9c808</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CMD4Hash</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>f4287f75382400499b73af3a0f3add7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CMD4Hash</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>02ca4b235752d12b3065139a3dd7cab7</anchor>
      <arglist>(const unsigned char hash[])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>b9268a07513535c54491c5f65ae1dc46</anchor>
      <arglist>(const CMD4Hash &amp;other_hash) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>2470c774147a6598c6bf05c3b9d58885</anchor>
      <arglist>(const CMD4Hash &amp;other_hash) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>94be621e7791afb514eba59cecb1ac33</anchor>
      <arglist>(const CMD4Hash &amp;other_hash) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>a35db3e0ba783bce520eea1bff2d2c37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>2215476215af386a3930b279e0fe87ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Decode</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>b9a919feec20989b3e59dbd20cd85267</anchor>
      <arglist>(const wxString &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Encode</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>3312ae1d50663b0c9bd157b264e4ede7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHash</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>a2dfc6d583d47c15884acc92def423e7</anchor>
      <arglist>(const unsigned char hash[])</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>GetHash</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>bc9a244bfd32e75b43eac1acf03b01d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>GetHash</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>ceb4091fbfef0f0866dace1454b55f02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>operator[]</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>95962e18337c466b66ed6e547e4fceed</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned char &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCMD4Hash.html</anchorfile>
      <anchor>92beb7e9758718fa9d287de55ac96da4</anchor>
      <arglist>(size_t i)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMemFile</name>
    <filename>classCMemFile.html</filename>
    <base>CFileDataIO</base>
    <member kind="function">
      <type></type>
      <name>CMemFile</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>95540dff1e306f58f410c7f1f7a1a2e2</anchor>
      <arglist>(unsigned int growthRate=1024)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CMemFile</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>976ff9320935f40df2bc9e5fa8bc647b</anchor>
      <arglist>(byte *buffer, size_t bufferSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CMemFile</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>84200b6e71b5b54b4d6d879feee2a877</anchor>
      <arglist>(const byte *buffer, size_t bufferSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CMemFile</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>07f4b17b54b0b3f9095df04bda177062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>GetPosition</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>98414175b52514cfc0507f232755956f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>GetLength</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>de15b3b288c22dd08e8b89545cb76894</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>GetAvailable</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>e7ead8c58a13704ec7aa76919b26cf30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint64</type>
      <name>GetRemaining</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>59b11ae140a0d8e343fe84b794421107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetLength</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>776a80954f5ea6a618c5619dede64f2a</anchor>
      <arglist>(size_t newLen)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>doRead</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>479f1bbdb4210196b6970397e5de0862</anchor>
      <arglist>(void *buffer, size_t count) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>doWrite</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>dc283a9d7dfc43833c1af7c7ab16aff7</anchor>
      <arglist>(const void *buffer, size_t count)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual size_t</type>
      <name>doSeek</name>
      <anchorfile>classCMemFile.html</anchorfile>
      <anchor>bca8cfb540646b4d6ba9a9e4f14e6dab</anchor>
      <arglist>(size_t offset) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CmpFiles</name>
    <filename>classCmpFiles.html</filename>
    <member kind="function">
      <type></type>
      <name>CmpFiles</name>
      <anchorfile>classCmpFiles.html</anchorfile>
      <anchor>4652a7918e26d9d97265d07aae09fa97</anchor>
      <arglist>(int sortBy=0, bool ascending=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classCmpFiles.html</anchorfile>
      <anchor>ba600b26cfa57ad3f3b8afaa13866894</anchor>
      <arglist>(CSearchFile *file1, CSearchFile *file2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleException</name>
    <filename>classCMuleException.html</filename>
    <member kind="function">
      <type></type>
      <name>CMuleException</name>
      <anchorfile>classCMuleException.html</anchorfile>
      <anchor>48cd388b3d40495d75392b1c8b5ac0f8</anchor>
      <arglist>(const wxString &amp;type, const wxString &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>what</name>
      <anchorfile>classCMuleException.html</anchorfile>
      <anchor>cc7b59f1063e8f0122da268760d969bd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleInternalEvent</name>
    <filename>classCMuleInternalEvent.html</filename>
    <base>wxEvent</base>
    <member kind="function">
      <type></type>
      <name>CMuleInternalEvent</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>e6aa18a513ffa4807b68d1fc7168e628</anchor>
      <arglist>(int event, int id=wxID_ANY)</arglist>
    </member>
    <member kind="function">
      <type>wxEvent *</type>
      <name>Clone</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>56ad2d08cc46fafe531af3875672393a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetExtraLong</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>a3cf7f58f6dfea40bf537da9083acd94</anchor>
      <arglist>(long value)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetExtraLong</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>6174ff8e7d9c53db8e32a7562b4bf6b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInt</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>99792320184ee0f68b930630d4105e0f</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetInt</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>1647fa2f6a5a1de2505b95af7822e28c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientData</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>939bca5bcc9195fd1a6fb6f1714a7e44</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetClientData</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>4e4b5e1b6fd413919bd34cc65a89fae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetString</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>70c2fbe0366cf6121e34d79f1c53c6b4</anchor>
      <arglist>(const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetString</name>
      <anchorfile>classCMuleInternalEvent.html</anchorfile>
      <anchor>baab3648c5cd8cc8fc94ded181569aec</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleListCtrl</name>
    <filename>classCMuleListCtrl.html</filename>
    <base>MuleExtern::wxListCtrl</base>
    <member kind="enumeration">
      <name>MLOrder</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>dcdf3fad361fc9dd64aa3da119e57648</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SORT_DES</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>dcdf3fad361fc9dd64aa3da119e57648232b129567ac54160efb9279f9d0e3c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SORT_ALT</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>dcdf3fad361fc9dd64aa3da119e576488e61e2c8805a50ed4a6ced79b126726b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; long &gt;</type>
      <name>ItemDataList</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>a21c59bf92670d77d4c65c21ac979d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CMuleListCtrl</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>3d2c202974057d0de8a098344a16024d</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;mulelistctrl&quot;))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CMuleListCtrl</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>6b7cd88d09fc7b12609ca51bd9277a56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SaveSettings</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>cc0a21990b3721691cb8a67a7d87f037</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadSettings</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>431abe8e861911bc4da054c46d9ffda1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetInsertPos</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>06fe2577769cad6e7902f16d4c1d20f1</anchor>
      <arglist>(long data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SortList</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>a1a137100e88785b8f5b7610e3009b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ItemDataList</type>
      <name>GetSelectedItems</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>0642e9f3a474ac3eb086180446a30f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSortFunc</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>09b72f537b8c9bccad414f18c9b69e27</anchor>
      <arglist>(wxListCtrlCompare func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearSelection</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>66940f86081e12cd23f45703024f00e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>COLUMN_MASK</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>87b3dd688c8f3f4a1bf1f359e5dfd7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>SORTING_MASK</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>134a49b68b3aec4f7f52572ed74736cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>AltSortAllowed</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>1d6aa0a6b3adfddee5d803dd6eda9f81</anchor>
      <arglist>(unsigned column) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetTTSText</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>6a92d8d08bbe72004ac0c9b604ad4b63</anchor>
      <arglist>(unsigned item) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetTableName</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>c181e4fc72fa3322d326307c4037e7cd</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned</type>
      <name>GetSortColumn</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>b3435a69f94aaab8076a37ac99fbe877</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned</type>
      <name>GetSortOrder</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>9a1f92f3b68e887c7c036894d4d537b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetSorting</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>d9a4018ee74a401b6af5e122c4495242</anchor>
      <arglist>(unsigned column, unsigned order)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsItemSorted</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>11939233fad6e8a1e7a8b661afecb9a9</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnColumnRClick</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>a4665429d96a78fc8b0edb2b3f3e6afb</anchor>
      <arglist>(wxListEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnColumnLClick</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>320abfc47b9d8dcd2df99b103a1c654c</anchor>
      <arglist>(wxListEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnMenuSelected</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>46915cf68bef12f3ea7632f0730b3f48</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnMouseWheel</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>65a9d2badef38b8650012f7989897172</anchor>
      <arglist>(wxMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnChar</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>0c45c7e76f28ea6c2deda44e779c41cb</anchor>
      <arglist>(wxKeyEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnItemSelected</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>f4b96c0ba4af7e4766dbb0b0c058e451</anchor>
      <arglist>(wxListEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnItemDeleted</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>f189c163b47ca3f1a7471d9e73c69001</anchor>
      <arglist>(wxListEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAllItemsDeleted</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>76ebb2954ed34e86ee2ac007a30c92b7</anchor>
      <arglist>(wxListEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>long</type>
      <name>CheckSelection</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>4e0a0507f1343977840af50c8c78ac72</anchor>
      <arglist>(wxListEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>long</type>
      <name>CheckSelection</name>
      <anchorfile>classCMuleListCtrl.html</anchorfile>
      <anchor>3be14652273d98fb8ee6e4d4417139dd</anchor>
      <arglist>(wxMouseEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleLogger</name>
    <filename>classCMuleLogger.html</filename>
    <member kind="function">
      <type></type>
      <name>CMuleLogger</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>4a50ae574e13e02d53a75901072187a2</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>native void</type>
      <name>log</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>41d826b25df75f53dae3c9b10fae0491</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="function">
      <type>native void</type>
      <name>logCritical</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>5247cfe647c237af0cda2fcb2f332ada</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="function">
      <type>native void</type>
      <name>store</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>7d778a696855ac4a26de7b0de53b0b0d</anchor>
      <arglist>(byte[] buffer, int start, int len)</arglist>
    </member>
    <member kind="function">
      <type>native void</type>
      <name>dump</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>3be21188702d5095ce1cfa9b4aed7fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>native void</type>
      <name>finalize</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>edb47ee525b68b72b8dc2aa5b9898910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>m_logId</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>797b78fab082d3f816efbf33f013bfa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>RawData</type>
      <name>m_buffer</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>a657a73306bdd016bf4eb8d310b30f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>m_size</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>697598f6f6ad9ca00c60565bf57cd87a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final int</type>
      <name>DUMPSIZE</name>
      <anchorfile>classCMuleLogger.html</anchorfile>
      <anchor>0d8f2639fdccd1fbc67ae52630f2a771</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleNotebook</name>
    <filename>classCMuleNotebook.html</filename>
    <base>wxNotebook</base>
    <member kind="function">
      <type></type>
      <name>CMuleNotebook</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>e1d863a261952e42c3008ac4dbb82233</anchor>
      <arglist>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxString &amp;name=wxT(&quot;notebook&quot;))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CMuleNotebook</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>7e25a574019813f874b4d487287ce10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeletePage</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>9e7ea84ef956dd262ab352588884288f</anchor>
      <arglist>(int nPage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeleteAllPages</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>19fb1788194a63d4648e1063662798e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnablePopup</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>9ef369f1011479443dbb7389c8d2f2d3</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPopupHandler</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>2d2c4a316536e3275b3bf90b8eb6052b</anchor>
      <arglist>(wxWindow *widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MouseClick</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>7106ea8226b47a8062b25bf4dd8a914b</anchor>
      <arglist>(wxMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MouseMotion</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>32c4347877f90bf4005b90aafdc7b5b8</anchor>
      <arglist>(wxMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRMButton</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>b00e9c42adc0725876590cc9f40feeb1</anchor>
      <arglist>(wxMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPopupClose</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>1521f281ea66344c14957986fa788190</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPopupCloseAll</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>24e7c221b5c65c281da072f633772336</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPopupCloseOthers</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>45a8f8a6e50dfc2d4cecf167fcb83acf</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_popup_enable</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>48dabc1cb5dd12168fa57f647397a058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxWindow *</type>
      <name>m_popup_widget</name>
      <anchorfile>classCMuleNotebook.html</anchorfile>
      <anchor>fa2031e32ab2dcf791f281f660545b48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleTextCtrl</name>
    <filename>classCMuleTextCtrl.html</filename>
    <base>wxTextCtrl</base>
    <member kind="function">
      <type></type>
      <name>CMuleTextCtrl</name>
      <anchorfile>classCMuleTextCtrl.html</anchorfile>
      <anchor>833ca73effed293dec68c975213acfeb</anchor>
      <arglist>(wxWindow *parent, wxWindowID id, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxTextCtrlNameStr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CMuleTextCtrl</name>
      <anchorfile>classCMuleTextCtrl.html</anchorfile>
      <anchor>3f93d90f932fc66be3017878c23eb8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRightDown</name>
      <anchorfile>classCMuleTextCtrl.html</anchorfile>
      <anchor>dce8d5931ba699e4ae24349c607f4709</anchor>
      <arglist>(wxMouseEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPaste</name>
      <anchorfile>classCMuleTextCtrl.html</anchorfile>
      <anchor>4d1c2dc549b9c46584668bd4cc931427</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnSelAll</name>
      <anchorfile>classCMuleTextCtrl.html</anchorfile>
      <anchor>e9a4c3858e5e80a824531ce84d777a1f</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnClear</name>
      <anchorfile>classCMuleTextCtrl.html</anchorfile>
      <anchor>c6825a447dc49d6d3996f2eff95e8a63</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleTrayIcon</name>
    <filename>classCMuleTrayIcon.html</filename>
    <base>wxTaskBarIcon</base>
    <member kind="function">
      <type></type>
      <name>CMuleTrayIcon</name>
      <anchorfile>classCMuleTrayIcon.html</anchorfile>
      <anchor>2a13121da9a46f8c417709935b8c816b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CMuleTrayIcon</name>
      <anchorfile>classCMuleTrayIcon.html</anchorfile>
      <anchor>14d525ac709168486edae9a97658bac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTrayIcon</name>
      <anchorfile>classCMuleTrayIcon.html</anchorfile>
      <anchor>a711f2d5d256c71ca904a91e6b460539</anchor>
      <arglist>(int Icon, uint32 percent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTrayToolTip</name>
      <anchorfile>classCMuleTrayIcon.html</anchorfile>
      <anchor>f9764baf5b3347f3e970d0bcb5c756ed</anchor>
      <arglist>(const wxString &amp;Tip)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CMuleUDPSocket</name>
    <filename>classCMuleUDPSocket.html</filename>
    <base>ThrottledControlSocket</base>
    <member kind="function">
      <type></type>
      <name>CMuleUDPSocket</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>b79663b9c963c2cc764d1266a59f50f0</anchor>
      <arglist>(const wxString name, int id, wxString destKeyName, const CProxyData *ProxyData=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLocal</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>2614e112fcc5ed26b5afe09fbd732253</anchor>
      <arglist>(CI2PAddress &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CMuleUDPSocket</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>47756015a55a356602e1e70d48decc74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Open</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>f091a7d5a0e41584ba282e38b203d1fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Close</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>c6525b97a0bbb35d8365e603f16b1f31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnSend</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>5aa1f0cd13457a5ecc6721d8e90eaf9c</anchor>
      <arglist>(int errorCode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnReceive</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>6530a886f92a54b03361ec9bd5be6d7a</anchor>
      <arglist>(int errorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPacket</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>3e5e13090c584a4069b1f02a8db02ffe</anchor>
      <arglist>(CPacket *packet, const CI2PAddress &amp;Dest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Ok</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>a34aad8eb01a4818312dc82ebd90ad73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientData</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>a34c3ffce35f29157d3f24938bf6b518</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEventHandler</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>a8a74893e879e7f118de8e9f72023b7a</anchor>
      <arglist>(wxEvtHandler &amp;handler, int id=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNotify</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>b45b774564479dc7cff90e65f57eb719</anchor>
      <arglist>(wxSocketEventFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Notify</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>edb0f392a453c3d6d17fae8850616bc5</anchor>
      <arglist>(bool notify)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetName</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>e0670ba836115dbc5cd7f40f27aecefa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>OnPacketReceived</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>2398eac5ed8f5206299bd6e7ec73d108</anchor>
      <arglist>(const CI2PAddress &amp;addr, byte *buffer, size_t length)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SocketSentBytes</type>
      <name>SendControlData</name>
      <anchorfile>classCMuleUDPSocket.html</anchorfile>
      <anchor>bf76ca7d3443d81c66b676d2f21e74e2</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 minFragSize)</arglist>
    </member>
    <class kind="struct">CMuleUDPSocket::UDPPack</class>
  </compound>
  <compound kind="class">
    <name>CMutexUnlocker</name>
    <filename>classCMutexUnlocker.html</filename>
    <member kind="function">
      <type></type>
      <name>CMutexUnlocker</name>
      <anchorfile>classCMutexUnlocker.html</anchorfile>
      <anchor>56fa3781914915e9aa0f8beb2bc2d812</anchor>
      <arglist>(wxMutex &amp;mutex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOk</name>
      <anchorfile>classCMutexUnlocker.html</anchorfile>
      <anchor>7376b3cb09732347e1837f8dda39390c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CMutexUnlocker</name>
      <anchorfile>classCMutexUnlocker.html</anchorfile>
      <anchor>e2c8cb7fa6d39cdbfe0cd57e3546f1c7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CNoTemplateWebServer</name>
    <filename>classCNoTemplateWebServer.html</filename>
    <base>CScriptWebServer</base>
    <member kind="function">
      <type></type>
      <name>CNoTemplateWebServer</name>
      <anchorfile>classCNoTemplateWebServer.html</anchorfile>
      <anchor>d41822446a2ce7bd24dca8d0587d5cf0</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CNoTemplateWebServer</name>
      <anchorfile>classCNoTemplateWebServer.html</anchorfile>
      <anchor>e743d6d4d52fcd65b50e1508a1c24a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessURL</name>
      <anchorfile>classCNoTemplateWebServer.html</anchorfile>
      <anchor>1dd8388185a18d60e49decf9008e05dd</anchor>
      <arglist>(ThreadData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CObjTagMap</name>
    <filename>classCObjTagMap.html</filename>
    <member kind="function">
      <type>CValueMap &amp;</type>
      <name>GetValueMap</name>
      <anchorfile>classCObjTagMap.html</anchorfile>
      <anchor>02fd9c3ea398c52dd78d8b59c2fd7edc</anchor>
      <arglist>(void *object)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classCObjTagMap.html</anchorfile>
      <anchor>f0b1a862d54ebe0f2a9132cf4f999794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveDeleted</name>
      <anchorfile>classCObjTagMap.html</anchorfile>
      <anchor>a3dd025775ac1835fdc9b98492e84850</anchor>
      <arglist>(std::set&lt; void * &gt; &amp;WXUNUSED(current_set))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CObservable</name>
    <filename>classCObservable.html</filename>
    <templarg>EventType</templarg>
    <member kind="typedef">
      <type>CObserver&lt; EventType &gt;</type>
      <name>ObserverType</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>dc7d1236f990ed0ee7ef61f1d8a15174</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CObservable</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>e5a0572fa2ab1da8ebcbedc217585c79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddObserver</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>5fc70bbb305c071d6e66c988a6dd0bf8</anchor>
      <arglist>(ObserverType *o)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveObserver</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>642252ed76bc60650cc82a118dacd9c9</anchor>
      <arglist>(ObserverType *o)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>NotifyObservers</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>15f6876f44512d3e2413da40807e812b</anchor>
      <arglist>(const EventType &amp;e, ObserverType *o=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveAllObservers</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>15e0c85c8c1c73db0b04407c897cdcea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ObserverAdded</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>99256f5af7a380420df2615068e73506</anchor>
      <arglist>(ObserverType *)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ObserverRemoved</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>5050346da3c04efab7b7cbd5e0823521</anchor>
      <arglist>(ObserverType *)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CObserver&lt; EventType &gt;</name>
      <anchorfile>classCObservable.html</anchorfile>
      <anchor>a392a499ab3536e0378e3ee953ed6d18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CObservableQueue</name>
    <filename>classCObservableQueue.html</filename>
    <templarg>ValueType</templarg>
    <base>CObservable&lt; CQueueEvent&lt; ValueType &gt; &gt;</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CObservableQueue</name>
      <anchorfile>classCObservableQueue.html</anchorfile>
      <anchor>bf554ae4189bf5797572dac1d60d23f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>CQueueEvent&lt; ValueType &gt;</type>
      <name>EventType</name>
      <anchorfile>classCObservableQueue.html</anchorfile>
      <anchor>b986d14d6649add751187439e2be9442</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>CObserver&lt; EventType &gt;</type>
      <name>ObserverType</name>
      <anchorfile>classCObservableQueue.html</anchorfile>
      <anchor>1530cdfdd19631f1f9630c784a35c5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>EventType::ValueList</type>
      <name>ValueList</name>
      <anchorfile>classCObservableQueue.html</anchorfile>
      <anchor>be23eee73107f51fefc64cb14eac56f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ObserverAdded</name>
      <anchorfile>classCObservableQueue.html</anchorfile>
      <anchor>e5bca41329aefb97ab0ea94b48a25fb5</anchor>
      <arglist>(ObserverType *)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ObserverRemoved</name>
      <anchorfile>classCObservableQueue.html</anchorfile>
      <anchor>44ec0728fdb05d60d2c5a5cf77685a86</anchor>
      <arglist>(ObserverType *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CObserver</name>
    <filename>classCObserver.html</filename>
    <templarg>EventType</templarg>
    <member kind="typedef">
      <type>CObservable&lt; EventType &gt;</type>
      <name>ObservableType</name>
      <anchorfile>classCObserver.html</anchorfile>
      <anchor>1ef3c149359bfde1bf4a224a9ad9b537</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CObserver</name>
      <anchorfile>classCObserver.html</anchorfile>
      <anchor>82118c156d434d3eb15cc0080f9409ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>ReceiveNotification</name>
      <anchorfile>classCObserver.html</anchorfile>
      <anchor>30fe2542f01b0c754fcba4461e4f3cfc</anchor>
      <arglist>(const ObservableType *o, const EventType &amp;e)=0</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CObservable&lt; EventType &gt;</name>
      <anchorfile>classCObserver.html</anchorfile>
      <anchor>cca93c09fd9bfd324d55b64e3660dc13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CombinedNameValuePairs</name>
    <filename>classCombinedNameValuePairs.html</filename>
    <base>NameValuePairs</base>
    <member kind="function">
      <type></type>
      <name>CombinedNameValuePairs</name>
      <anchorfile>classCombinedNameValuePairs.html</anchorfile>
      <anchor>28426a5441714ae5dab30c45d87e0726</anchor>
      <arglist>(const NameValuePairs &amp;pairs1, const NameValuePairs &amp;pairs2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVoidValue</name>
      <anchorfile>classCombinedNameValuePairs.html</anchorfile>
      <anchor>4bc3fa734155cdbb116d3020b697e7ab</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CompileTimeAssert&lt; true &gt;</name>
    <filename>structCompileTimeAssert_3_01true_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>ConcretePolicyHolder</name>
    <filename>classConcretePolicyHolder.html</filename>
    <templarg>POLICY</templarg>
    <templarg>BASE</templarg>
    <templarg>POLICY_INTERFACE</templarg>
    <base>BASE</base>
    <base protection="protected">POLICY</base>
    <member kind="function" protection="protected">
      <type>const POLICY_INTERFACE &amp;</type>
      <name>GetPolicy</name>
      <anchorfile>classConcretePolicyHolder.html</anchorfile>
      <anchor>08d47d39ca49317f0543df68350aa8bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>POLICY_INTERFACE &amp;</type>
      <name>AccessPolicy</name>
      <anchorfile>classConcretePolicyHolder.html</anchorfile>
      <anchor>1d90cb30eace971937cf02c0abafe6ea</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CONF</name>
    <filename>structCONF.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>font</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>5f4d4be53b672f82b719d73a0e661165</anchor>
      <arglist>[120]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>source</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>f1a70af9aa6672832bb0c89221b9c53d</anchor>
      <arglist>[120]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>template_</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>f95c779cee47ba5430abd40c9a86ff25</anchor>
      <arglist>[120]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>adac73d87762c918b736de5079abfdfd</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>70b33bbe438d03463994ecc0b5c7407c</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>enabled</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>aa0b4de38208a15aa2d143f40360f16f</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>size</name>
      <anchorfile>structCONF.html</anchorfile>
      <anchor>f294b07dfabc62f30b843a7c251f1c2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConstByteArrayParameter</name>
    <filename>classConstByteArrayParameter.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstByteArrayParameter</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>d6c1c0a4a2946b3f78d5c8b85e753900</anchor>
      <arglist>(const char *data=NULL, bool deepCopy=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstByteArrayParameter</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>e989144d79aaf179d935dc4ec7236a3d</anchor>
      <arglist>(const byte *data, unsigned int datasize, bool deepCopy=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstByteArrayParameter</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>b96e8b5d682badba1d2e343942fa2f2f</anchor>
      <arglist>(const T &amp;string, bool deepCopy=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Assign</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>a3ca925547d1129e81fa024732dde53a</anchor>
      <arglist>(const byte *data, unsigned int datasize, bool deepCopy)</arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>begin</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>1413518a64bf122f68706cc15cd0776b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>end</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>73aca30b50c462e3148126278d21bf1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>size</name>
      <anchorfile>classConstByteArrayParameter.html</anchorfile>
      <anchor>10542dc3086ee54d5dde480e41db60b5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ConvertJob</name>
    <filename>structConvertJob.html</filename>
    <member kind="function">
      <type></type>
      <name>ConvertJob</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>477a29cc583a7d53154e37f86d8eb011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>folder</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>dd44825daebc171c1fa3d07f908b37a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>filename</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>c5e1c53b14de8fa97435050d7922c206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>filehash</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>00f05cfe4e91e6f15661a465e7263c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>format</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>1daa9111e4057c16de0045913312a6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>state</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>c186abb80e9adeede1cd0ec4bf2f2d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>size</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>0fe8a786f1600b76742bdb0d3d700c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>spaceneeded</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>58b362186501ec799b0562c3c93746eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>partmettype</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>b5853a7ace7528100e1e751bd804da24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>removeSource</name>
      <anchorfile>structConvertJob.html</anchorfile>
      <anchor>61f9445dd21c4536e46c9da853f2c0fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>COScopeCtrl</name>
    <filename>classCOScopeCtrl.html</filename>
    <base>wxControl</base>
    <member kind="typedef">
      <type>struct COScopeCtrl::PlotDataStruct</type>
      <name>PlotData_t</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>43f6a626190d91648a3f97c4e2b81978</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>COScopeCtrl</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>75569490592adc84eca45fabebe81077</anchor>
      <arglist>(int NTrends, int nDecimals, StatsGraphType type, wxWindow *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~COScopeCtrl</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>a7e3547eb2a9476b955043413352a64a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRange</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>87b9645e02b3633ac080836cc4fd10e6</anchor>
      <arglist>(float dLower, float dUpper, unsigned iTrend=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRanges</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>c261cb5e789d0ffb1f330ac88b6e79f4</anchor>
      <arglist>(float dLower, float dUpper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetXUnits</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>b9ecf74e71d28e6d2a8a21832bdceb94</anchor>
      <arglist>(const wxString &amp;string, const wxString &amp;XMin=wxT(&quot;&quot;), const wxString &amp;XMax=wxT(&quot;&quot;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetYUnits</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>0afe0765b5010c2b222a3e53b6c577dc</anchor>
      <arglist>(const wxString &amp;string, const wxString &amp;YMin=wxT(&quot;&quot;), const wxString &amp;YMax=wxT(&quot;&quot;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBackgroundColor</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>29e26d394d9e4497bc1a21c802bbc891</anchor>
      <arglist>(wxColour color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGridColor</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>ed0ba13bd54187b3b550f28487c74377</anchor>
      <arglist>(wxColour color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlotColor</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>f400767a9303db2f3b2485816234cd6b</anchor>
      <arglist>(wxColour color, unsigned iTrend=0)</arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>GetPlotColor</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>c76a6eee8c556ddf07776598833cf7cb</anchor>
      <arglist>(unsigned iTrend=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetUpperLimit</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>e6bb41c1878ebbda7096b7e5a70733b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>7363dddcc77c3a1e26a0c57b31e4ee04</anchor>
      <arglist>(double sNewPeriod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>6a665e66546ef236f46d0ed3149b100a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecreateGraph</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>168b365685764dc6984b2605a6eb47a0</anchor>
      <arglist>(bool bRefresh=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecreateGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>bb67ed728576dfa3fb2fd55cc3a57497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendPoints</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>5a048451c064a571892c5d1717b56e26</anchor>
      <arglist>(double sTimestamp, const float *apf[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DelayPoints</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>ca9cada20f3cb050c4a6fc22844478d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>GetPlotHeightPixels</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>5fac18ef71ca57425cd2d29f68f1970d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>GetPlotWidthPoints</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>de0eeb8aae57b2f7e081e3c70d6e44ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap *</type>
      <name>GetBitmapPlot</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>e9f26a63a01ff36c5b9bdcbc5467f4b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxBitmap *</type>
      <name>GetBitmapGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>ad79c047303355148a89af7146f09373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>StatsGraphType</type>
      <name>graph_type</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>0a9c75c349bd7e1b44994cf0039660a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>nTrends</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>f03bf05a1dd9001c304dca1973f89f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>nXGrids</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>b867d5fa66e8d0c60d5aae2cd402b64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>nYGrids</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>12d94fcece9b1ff7e42b2b4d329861fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>nShiftPixels</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>13030dd5e7c47bfbf5be76bdbffd6455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>nYDecimals</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>88591ace15db5972272b836222069117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>strXUnits</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>0756b009a3095daf5348dc39ddc1395c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>strXMin</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>59d4e098b5c6ca8ad101c3dc4907e6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>strXMax</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>39f462f338803bcf6937ae0224abde11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>strYUnits</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>fb71eade618997a9e36c983e95e647ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>strYMin</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>e5550732945bf0d06f68b5ba5d817158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>strYMax</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>5ca5ab4e09fd4de2441a050ae527b82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxColour</type>
      <name>crBackground</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>445504f9d1fcbec963aacf94f665e5d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxColour</type>
      <name>crGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>50a2b1af780c47d9fba8b743764a53b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InvalidateGraph</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>028dded403eb2079379d632d58bc90ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InvalidateGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>5d8de1661f8454cad8571290fe59046e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlotData_t *</type>
      <name>pdsTrends</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>6a585b9eb939b2874fcf5c0acc310e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nClientHeight</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>18a0b908db09b14bf7724ba77172ce4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nClientWidth</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>8826a07f98e3dc639ec14d9e64f2abd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nPlotHeight</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>088ebf587e050f0baf4046218d1161e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nPlotWidth</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>53a5575ed17f7bb110dd83520aa0ea75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RECT</type>
      <name>rectClient</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>b530818846762ba1198316dd27c17540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RECT</type>
      <name>rectPlot</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>210815f9561e577d161b8db9e184957f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBrush</type>
      <name>brushBack</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>4813d8f52656e3a8b8f8faeae8aeef73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMemoryDC *</type>
      <name>dcGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>608041d7b2d63a0d829b400f31b51d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMemoryDC *</type>
      <name>dcPlot</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>301507afa472519d8d33c7772548c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMemoryDC *</type>
      <name>memDC</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>8a4af92b35e5bf223b97daac3515cbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBitmap *</type>
      <name>memBitmap</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>e7fa43b1b04bcabd9fdbd8d2185232b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBitmap *</type>
      <name>bmapOldGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>6f75ea8940e43c21bd2c2351715f10a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBitmap *</type>
      <name>bmapOldPlot</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>1355425759e97f3f75febd641209c9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBitmap *</type>
      <name>bmapGrid</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>04b5706349dbdb38eef5aee3a1da7986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxBitmap *</type>
      <name>bmapPlot</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>fafcd741cc6e06c34996433e9f409a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CStatisticsDlg</name>
      <anchorfile>classCOScopeCtrl.html</anchorfile>
      <anchor>d52500fde9069f98bae7c29011758806</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">COScopeCtrl::PlotDataStruct</class>
  </compound>
  <compound kind="struct">
    <name>COScopeCtrl::PlotDataStruct</name>
    <filename>structCOScopeCtrl_1_1PlotDataStruct.html</filename>
    <member kind="variable">
      <type>wxColour</type>
      <name>crPlot</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>78caf2ee9ea3719e403b6fb49300b950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxPen</type>
      <name>penPlot</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>72ccb93c64e27d95b14a836bbfbf7465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>yPrev</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>075a951e8db3d39f25fd98cd75093058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fPrev</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>178090e97bea77ef9a847ec6eef68775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fLowerLimit</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>00e76b33209fb95a49178a5336e2d5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fUpperLimit</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>36b5bd3d465e99ff64c58755e0a19134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fVertScale</name>
      <anchorfile>structCOScopeCtrl_1_1PlotDataStruct.html</anchorfile>
      <anchor>10f630240fe6c44c98b13bf83e9b5521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPacket</name>
    <filename>classCPacket.html</filename>
    <member kind="function">
      <type></type>
      <name>CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>b0962f6733f088d304c8b8f25505a617</anchor>
      <arglist>(CPacket &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>657e177e188d259aa58ae4a1087b661b</anchor>
      <arglist>(uint8 protocol=OP_EDONKEYPROT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>86396fb69d18ffcd5b65429285247980</anchor>
      <arglist>(char *header)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>54cd98c987beddebe817a0a0c4e8bbad</anchor>
      <arglist>(CMemFile *datafile, uint8 protocol=OP_EDONKEYPROT, uint8 ucOpcode=0x00)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>2d49c71ffb721d464fe46a76a582034d</anchor>
      <arglist>(int8 in_opcode, uint32 in_size, uint8 protocol=OP_EDONKEYPROT, bool bFromPF=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>446eee983ba769a9dab079d6b62b2c0e</anchor>
      <arglist>(char *pPacketPart, uint32 nSize, bool bLast, bool bFromPF=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>c48f1401f0669cc6aeb60c9c4a70f87a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AllocDataBuffer</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>773754e9a320458ffa10340d945c8414</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>GetHeader</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>fc3fbdcd6330c0c51530f35a43ceca5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>GetUDPHeader</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>b94c89d2f716af02b4641b288a41c977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>GetPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>9b53b8049e959d2941a9d49457389a3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>DetachPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>1b9f8d7aa3332d2cff899711b4efc2c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetRealPacketSize</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>c08cb887db3e55f65b5d01addb5f5a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSplitted</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>349ae079d5177cfe9be36b8a18d23346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLastSplitted</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>6c139a901aeeaf7bf0a2cdd2857895b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PackPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>1c52d4829626f9d0e0da9b235d47bf82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UnPackPacket</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>6e29f1705f6e549874aea1caf1b4fcfe</anchor>
      <arglist>(uint32 uMaxDecompressedSize=50000)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFromPF</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>79a25c2aa547a0841fe01a625271474e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetOpCode</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>448fa44f3fb21f2918092e9014885522</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOpCode</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>6db96567ab2d9a4b7ec952e901ebe304</anchor>
      <arglist>(uint8 oc)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetPacketSize</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>a93f45774c409dbbd14a14be0cd4a605</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetProtocol</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>c5fdc550d95f30582a6922f7c1f88ee3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProtocol</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>eedd45eb501dc40dd6a07277c5b84891</anchor>
      <arglist>(uint8 p)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>GetDataBuffer</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>7469a8471240a73e86a02cc9c818b145</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Copy16ToDataBuffer</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>162073976a9b87f801506aa562a4c609</anchor>
      <arglist>(const void *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyToDataBuffer</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>f4e7164de8668e415dc18cff66eb5b01</anchor>
      <arglist>(unsigned int offset, const char *data, unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyUInt32ToDataBuffer</name>
      <anchorfile>classCPacket.html</anchorfile>
      <anchor>403c3db73c731cc860fc13a52749d30c</anchor>
      <arglist>(uint32 data, unsigned int offset=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CParsedUrl</name>
    <filename>classCParsedUrl.html</filename>
    <member kind="function">
      <type></type>
      <name>CParsedUrl</name>
      <anchorfile>classCParsedUrl.html</anchorfile>
      <anchor>5d92be668962906375919274849b2281</anchor>
      <arglist>(const wxString &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>Path</name>
      <anchorfile>classCParsedUrl.html</anchorfile>
      <anchor>a13acc3bfe41b309efe2dc2b776a73e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>File</name>
      <anchorfile>classCParsedUrl.html</anchorfile>
      <anchor>1f7a00e6d5af2993dbe42b57f98884de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>Param</name>
      <anchorfile>classCParsedUrl.html</anchorfile>
      <anchor>52df0e76531e14d507afed16dc0a2879</anchor>
      <arglist>(const wxString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertParams</name>
      <anchorfile>classCParsedUrl.html</anchorfile>
      <anchor>a6b1a9f3da1e216dda4eb4dbadbc2814</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPartFile</name>
    <filename>classCPartFile.html</filename>
    <base>CKnownFile</base>
    <member kind="typedef">
      <type>std::set&lt; CUpDownClient * &gt;</type>
      <name>SourceSet</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b134093a5d8cc70ff4c838c16bb37364</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>dcfa2ddd5537ea8d0dca007f9e54d978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFileName</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>eeceaaf4607bb00a2b7621f20c2e7ff1</anchor>
      <arglist>(const wxString &amp;strmakeFilename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1d5043c8b58b7b1adc7aed26c90021e2</anchor>
      <arglist>(CSearchFile *searchresult)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a061e5d04011e2524825f96ecf4d0ad5</anchor>
      <arglist>(const CED2KFileLink *fileLink)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CPartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>629d30ddd42a44c56c7cd132a55ef1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateFromFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>cb43801a85fdb780806f915fedd0dad6</anchor>
      <arglist>(wxString WXUNUSED(directory), wxString WXUNUSED(filename), void *WXUNUSED(pvProgressParam))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPartFileStatus</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>78ac0c242d665ca1505a7df4c2a2cecd</anchor>
      <arglist>(uint8 newstatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LoadFromFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4f7679566a2a78fb250f1e162f6e9ae5</anchor>
      <arglist>(const CFileDataIO *WXUNUSED(file))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteToFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>33ded1382a4ea93c28e88ca054dcfd7a</anchor>
      <arglist>(CFileDataIO *WXUNUSED(file))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>6989033527e32d253b79c894db365860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>Process</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>bca263eb5b67386057681f5325e35968</anchor>
      <arglist>(uint32 reducedownload, uint8 m_icounter)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>LoadPartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f44c58cf74b8f5f7070dce5265a68b6c</anchor>
      <arglist>(const wxString &amp;in_directory, const wxString &amp;filename, bool from_backup=false, bool getsizeonly=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SavePartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a51812829b2cd035920a197106d8be22</anchor>
      <arglist>(bool Initial=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PartFileHashFinished</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b3842ec99a59d8d7124f66bfd0073cfd</anchor>
      <arglist>(CKnownFile *result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HashSinglePart</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1c384df6f09af3774d10285cada1ae20</anchor>
      <arglist>(wxULongLong partnumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckShowItemInGivenCat</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4ca7cd88a1b786eaba642dd52ed01752</anchor>
      <arglist>(int inCategory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddGap</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>be0f4a571f36468956c070aaf3f9ad10</anchor>
      <arglist>(wxULongLong start, wxULongLong end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillGap</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4a7db98a4a00297fd09a7091fff781d6</anchor>
      <arglist>(wxULongLong start, wxULongLong end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsComplete</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b6c4adf6b4163387a6ea3de7f61b820d</anchor>
      <arglist>(wxULongLong start, wxULongLong end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPureGap</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f85e5f42eb4bacaca719f2c73a40c879</anchor>
      <arglist>(wxULongLong start, wxULongLong end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCorruptedPart</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0269d893a2900b6a190e1345ec8d2281</anchor>
      <arglist>(wxULongLong partnumber)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTotalGapSizeInRange</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9dcc791d0888e1b703d6200e82a72a37</anchor>
      <arglist>(wxULongLong uRangeStart, wxULongLong uRangeEnd) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetTotalGapSizeInPart</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>69eb90f79715a869af6dacaf9d190ebc</anchor>
      <arglist>(wxULongLong uPart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCompletedInfos</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>cc9011465a352278f67990c0838acdfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNextRequestedBlock</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>75ea755dacefcf6cadf47edf4dbd18a4</anchor>
      <arglist>(CUpDownClient *sender, Requested_Block_Struct **newblocks, uint16 *count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WritePartStatus</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>09a38b4b3a265bc7a00a7a2f81666d5d</anchor>
      <arglist>(CMemFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteCompleteSourcesCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4543313bd2c37b87a8088977a1b82bf1</anchor>
      <arglist>(CMemFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9ae9abf47c53b22afc7e1d2d24def1e2</anchor>
      <arglist>(CMemFile &amp;sources, const CI2PAddress &amp;serverdest, unsigned origin)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetStatus</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b650a1b1fdfac4773ac22092fcfd5f34</anchor>
      <arglist>(bool ignorepause=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>UpdatePartsInfo</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>3ba0e8306d6a4a5a515033ad230f5de0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetPartMetFileName</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d2e1eee513139a0c604e45569ff27f41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTransfered</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>624de75b4a2d25e48a5e830ac1ac909a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetFullName</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1ec129c8d00bf4b89a4ca4b0fdea99d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetKBpsDown</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0717723788c49dcf16cf325bb13b2ae7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetPercentCompleted</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f1952836cc82b16e3a25d172e586e83a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetSourceCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0fe8aa73a3bb056a90676dc0a61d9d13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetSrcA4AFCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>2b5545a8ee3008ae33d5bb47defa7579</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetTransferingSrcCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>2971e036de05aaa1b323b127127b5614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetNotCurrentSourcesCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f942b6d8b3373886cddaef645a97937c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetValidSourcesCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>7554b24740aaa77b4edeab25e635e0a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetNeededSpace</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4f464359143758d9927095f965c97a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>getPartfileStatus</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>3b0708cffd51a12a07a8b71ee328bf33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>sint32</type>
      <name>getTimeRemaining</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f00f28a0166887c0be95c2896a5e71c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPartfileStatusRang</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>449bebbfa0383e6a1b33b417a6e48338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>WriteToBuffer</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>c51aa722313939dca253d787f3df09f8</anchor>
      <arglist>(uint64 transize, byte *data, wxULongLong start, wxULongLong end, Requested_Block_Struct *block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FlushBuffer</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9c07bfe242812f06f04880777ff49afc</anchor>
      <arglist>(bool forcewait=false, bool bForceICH=false, bool bNoAICH=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllRequestedBlocks</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4422d31e08033b1561b50706b52cee57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveBlockFromList</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0115e9590a39f7792808be8059a3d379</anchor>
      <arglist>(wxULongLong start, wxULongLong end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f13d5d5a2e51e8b3acf0fbabfd8b8843</anchor>
      <arglist>(bool bTryToSwap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delete</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a014d3549ca998fcb40e33db787dae3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b0ae986f45e536db2929580b46e79119</anchor>
      <arglist>(bool bCancel=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PauseFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d29886ec5526642cff58409a7dcd80b7</anchor>
      <arglist>(bool bInsufficient=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResumeFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>eb4ee025ee073170c46eb7ed25fd0d0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CPacket *</type>
      <name>CreateSrcInfoPacket</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>8adc2cd6fdb9761ddad069f8d3ad7db4</anchor>
      <arglist>(const CUpDownClient *forClient)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddClientSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0f6576dc43bb092f308c3e85cb49fdef</anchor>
      <arglist>(CMemFile *sources, uint8 sourceexchangeversion, unsigned nSourceFrom)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PreviewAvailable</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>c517f9f2e6c87ee77d8b63b211f5bf45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetAvailablePartCount</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>814f06a5ef1093720835d6987c0524d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastAnsweredTime</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>99347f61870de0520992428bd32c3fd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastAnsweredTime</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>83c7b108473bb502f39fbc0cea31bbcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastAnsweredTimeTimeout</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>7248bd072648a1ad1a4766ada4dec23a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetLostDueToCorruption</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>e47b7fe69fec24618e9880246e8d3c32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetGainDueToCompression</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>cb52666c9584c925e0449fad5cb177ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>TotalPacketsSavedDueToICH</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>8f7bceda80866e44f452835a39732233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStopped</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9f430f7ddcd3f6899ff4cd8889e5a32d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPaused</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a1d0ce43a029da0e2cc2a35a9f7c84b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFileRatingCommentAvail</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>fc23c56924916b0b6faffc99df1f0bed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCommonFilePenalty</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>75baddd679c9ce1a3ac6cf0f54c8f4f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateDisplayedInfo</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>c1ce7b246025dbe7446308cf498e7a0c</anchor>
      <arglist>(bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>const wxDateTime &amp;</type>
      <name>GetLastChangeDatetime</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f79eb32f7ac0de384b40321152e87cf6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetCategory</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>4b8bd926c965bc5ced481679293f322c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCategory</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>ce4fd5434e8fb0a2012cfa73a22f4176</anchor>
      <arglist>(uint8 cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDownPriority</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>850325e91790309ab9218201c2405260</anchor>
      <arglist>(uint8 newDownPriority, bool bSave=true, bool bRefresh=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAutoDownPriority</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>dbbe41f2dbf54b4b2691edba170b8bdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoDownPriority</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a98b0c55ec078de806999a17887f77e2</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateAutoDownPriority</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>89d649d63e07d001d3fd53ef9a95fc4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetDownPriority</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1fdbc72974686e8973238fb5a0ac0656</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetInsufficient</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>589552bf48a23aac902c91725e6c2c5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CompleteFileEnded</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>ea654e8f935f7b3432ee2ae7f28fef1c</anchor>
      <arglist>(int completing_result, wxString *newname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>2227b25ee477a56bf1b4a53ce9b5f4f1</anchor>
      <arglist>(CUpDownClient *toremove, bool updatewindow=true, bool bDoStatsUpdate=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestAICHRecovery</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>c0da0169298546893edc661dff9406c8</anchor>
      <arglist>(wxULongLong nPart)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AICHRecoveryDataAvailable</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9bd7a2378ab5ca014b5aadc69cd33761</anchor>
      <arglist>(wxULongLong nPart)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClientStateChanged</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>11a5c0f6a02097e12bc7b466c33e0c2f</anchor>
      <arglist>(int oldState, int newState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0faf4c9ed9e6035d5ca527995ff4b002</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DelSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1383898c63e80868c8879e98f5b5553e</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdatePartsFrequency</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>8f3d773ef4bc52c10bd7a9c608a0925a</anchor>
      <arglist>(CUpDownClient *client, bool increment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShowSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1293fdb1866d4381d9ad95f1ed4ef751</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ShowSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>cb39ae238672d00096a008f171a980f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const SourceSet &amp;</type>
      <name>GetSourceList</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a1352ed08923531628da1d704063aaa3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const SourceSet &amp;</type>
      <name>GetA4AFList</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>260750476ebc4ff9039c8bcde8cfa265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CList&lt; Gap_Struct * &gt; &amp;</type>
      <name>GetGapList</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>6530e170e021f7be51d26558b60e5299</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CList&lt; Requested_Block_Struct * &gt; &amp;</type>
      <name>GetRequestedBlockList</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>e0194749983d7aeaf8ab0f0a8855cc6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDeadSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>24b816a92b7a5c915a1f57c06a4c0695</anchor>
      <arglist>(const CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDeadSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>59cd41a2fb17d3e37992ec6c88c03533</anchor>
      <arglist>(const CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetMaxSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>0774e42e09651b388dde57b6b0c5bf76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetMaxSourcePerFileSoft</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>fe53da0dca8d1b5f63d82c9b5c02b723</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetMaxSourcePerFileUDP</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d7aa1043901f0943703698b9249239c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetRatingAndComments</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>c16ba2e89df20f2626de598956a79eb7</anchor>
      <arglist>(FileRatingList &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNextEmptyBlockInPart</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>7605c2f55f8584929ff739444bcc5334</anchor>
      <arglist>(wxULongLong partnumber, Requested_Block_Struct *result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlreadyRequested</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b954a57e800d4b723a33e06607a500f0</anchor>
      <arglist>(wxULongLong start, wxULongLong end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CompleteFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>3022ab8704e4b6561993c84b96b538b4</anchor>
      <arglist>(bool hashingdone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreatePartFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d087e7eaeab682918da35abfcd8a51ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>041189da060e9f01e9c1698201e03c6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckFreeDiskSpace</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>dcd2e19f0779c0fd20779a0c580dbc65</anchor>
      <arglist>(wxULongLong neededSpace=0)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetCompletedSize</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>ed0ff6ea826b066ae9b925e685d0cc35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CleanUpSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>c55f756863cb78fc8b864cbdfacf5c9a</anchor>
      <arglist>(bool noNeeded, bool fullQueue=false, bool highQueue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddDownloadingSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d715da0ede7dd712fc89d56ea5687374</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveDownloadingSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9bdf73571122dc9b21d054615fadc55f</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatus</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>954b05a7beb1419b3e44bff89aa0af27</anchor>
      <arglist>(uint8 in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopPausedFile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f35b528dd5fdc337dca8dbc4d827f417</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetA4AFAuto</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d2866db829fb532872f8f5058d63f009</anchor>
      <arglist>(bool in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsA4AFAuto</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>2473c7a4f1cafb4228292c1a6824fca6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveSourceSeeds</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>14418235ebc0f678890caba0c5a34839</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadSourceSeeds</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>436c64097ad5f6af8fd37d530054c0f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CanAddSource</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>652910ef8f028abfcfa1502899019cee</anchor>
      <arglist>(const CI2PAddress &amp;dest, const CI2PAddress &amp;serverdest, uint8 *pdebug_lowiddropped=NULL, bool ed2kID=true)</arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>lastseencomplete</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>7f867b60d7f233fef301eed660f6a4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>m_bRecoveringArchive</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b8b5a25fec3443c4687c127aac6d32c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CFile</type>
      <name>m_hpartfile</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>143d1ea2b4f66d21377d7ba3f1d9e3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>m_bPreviewing</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>16771c4b60d9a6bafc957aaed6b4c30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArrayOfUInts16</type>
      <name>m_SrcpartFrequency</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>9b72e8ab9e00a39af0d6afce6afa1e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CDeadSourceList</type>
      <name>m_deadSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>1914eddb18d09dd26e58395587b9c503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_showSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>6feccbb87c309fd2a436ae2fc626fea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_validSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>d51400f5f9575c32251f37b247769761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_notCurrentSources</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>232edda34ee6223eb1717a98ff1631d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SourceSet</type>
      <name>m_SrcList</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>ee1de985b6049ac8193a7c757d8966df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SourceSet</type>
      <name>A4AFsrclist</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>b51e718d459118b94392d8174fe88c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hashsetneeded</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>a19c6a58af214ac624ab7d7c15bbe811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>lastsearchtime</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>969d468ef404e3f226cadd730bb96e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bLocalSrcReqQueued</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>02d31fac904ee5226f0f29ed731d8228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>blocklistMutex</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>bc652ea45511b4593e14d762120b9203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxULongLong</type>
      <name>NO_PART</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f0ed8a8b973567907cd7f30bdf8408ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CPartFile_Encoder</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>f513f7e73c56edaaebab198e0ff11aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CDownQueueRem</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>3e6d2b04f8b79e24d61a604b8568eac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CPartFileConvert</name>
      <anchorfile>classCPartFile.html</anchorfile>
      <anchor>442c5079bf62fb6b81adb8bbfb245cf5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPartFile_Encoder</name>
    <filename>classCPartFile__Encoder.html</filename>
    <member kind="function">
      <type></type>
      <name>CPartFile_Encoder</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>9ab0b4e15d95dc2973bbc8c38f3f46be</anchor>
      <arglist>(CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPartFile_Encoder</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>e6543ff1a98eae0ffddea4c0f564e0c0</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CPartFile_Encoder</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>a26199469f683d2c1e3be4e1e525ed37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPartFile_Encoder</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>c2dabeb9d3ae859788065ef4f7346229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CPartFile_Encoder</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>e362e0227f03c40ef688793277be18ee</anchor>
      <arglist>(const CPartFile_Encoder &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>CPartFile_Encoder &amp;</type>
      <name>operator=</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>bd6b7ee0dec9e3aacadfdb5b2e2ad8eb</anchor>
      <arglist>(const CPartFile_Encoder &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Encode</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>ae332e5cbcc71c5a3c87c21215a82825</anchor>
      <arglist>(CECTag *parent_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetEncoder</name>
      <anchorfile>classCPartFile__Encoder.html</anchorfile>
      <anchor>6c846df83c6e60c7107c68b7e8a4e288</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPartFileConvert</name>
    <filename>classCPartFileConvert.html</filename>
    <base protection="private">wxThread</base>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ScanFolderToAdd</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>952d699db4c258f23e4159050330b27e</anchor>
      <arglist>(wxString folder, bool deletesource=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ConvertToeMule</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>56113d129552fa01fa89dabb3ab8e51c</anchor>
      <arglist>(wxString folder, bool deletesource=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>StartThread</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>f1736451a3de5fce7d5c99f678a41380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>StopThread</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>ef149ba3abbaba283146dab5f19fcfc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ShowGUI</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>256c76f39e2c4d3f716f52022f56ec7b</anchor>
      <arglist>(wxWindow *parent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>UpdateGUI</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>e96ab71a1af48c806b746299b597bb85</anchor>
      <arglist>(float percent, wxString text, bool fullinfo=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>UpdateGUI</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>58e3aeb673b614a83bce548a13dd5f2e</anchor>
      <arglist>(ConvertJob *job)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CloseGUI</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>7d9bb302be1e230978a6a2a7e71d037e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveAllJobs</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>a7dfbdd3117c4cbd845e693f2728eb0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveAllSuccJobs</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>f3c10a5ffee3a4bc2afea5aad07ead6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveJob</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>f1113c3cf59b42c3e61bcd8ad53b044f</anchor>
      <arglist>(ConvertJob *job)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>GetReturncodeText</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>d2cd8e923b1e856e9183262d0ea93041</anchor>
      <arglist>(int ret)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxMutex</type>
      <name>s_mutex</name>
      <anchorfile>classCPartFileConvert.html</anchorfile>
      <anchor>f2244f0c4e77e511a807e5f1700c788a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPartFileConvertDlg</name>
    <filename>classCPartFileConvertDlg.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>CPartFileConvertDlg</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>e888b8fe2a0aec9a591ee468a25709a2</anchor>
      <arglist>(wxWindow *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddJob</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>f37fec02d56b6f0e261fd307f9eb117d</anchor>
      <arglist>(ConvertJob *job)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveJob</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>303a44db4609da9b299254bd1820e35e</anchor>
      <arglist>(ConvertJob *job)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateJobInfo</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>ca408025f1d856da06686c7cceb5e94f</anchor>
      <arglist>(ConvertJob *job)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAddFolder</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>14970638f601ff895c716ce239ba8f17</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnClose</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>47c0cb2ab21426ecb6e593ed402fd0fb</anchor>
      <arglist>(wxCloseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnCloseButton</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>73df2aa744739e55e90df0db31d395bb</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RetrySel</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>fc809b556f9952d4c7ea89fd35c1d284</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveSel</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>b39da9989ddcb0ce3b462d429ada7f64</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxGauge *</type>
      <name>m_pb_current</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>7389f99c9801d7c9e046d798f69f6b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CConvertListCtrl *</type>
      <name>m_joblist</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>fa0050a01a7a066bdcc7f7bf0a3b79a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CPartFileConvert</name>
      <anchorfile>classCPartFileConvertDlg.html</anchorfile>
      <anchor>442c5079bf62fb6b81adb8bbfb245cf5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPreciseRateCounter</name>
    <filename>classCPreciseRateCounter.html</filename>
    <member kind="function">
      <type></type>
      <name>CPreciseRateCounter</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>47a104a2d2dc3f19238088d35f072a09</anchor>
      <arglist>(uint32_t timespan, bool count_average=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CalculateRate</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>c9827a5e5d40535b415a55f6d7c41932</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRate</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>066b83fa244fc740a4096fecbb36c797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetMaxRate</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>c91de7ac3b4bd0c41153d180357b6cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimespan</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>f696df568067519f269b63decf1d4c04</anchor>
      <arglist>(uint32_t timespan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>19876de2e6216d037d49994bc9bd03d1</anchor>
      <arglist>(uint32_t bytes)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; uint32 &gt;</type>
      <name>m_byte_history</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>a63ba8a8b43f5fa845b77bccd6dbafaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; uint64 &gt;</type>
      <name>m_tick_history</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>bf40f2e2b13cb517828d8500833b4797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_timespan</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>4a16efab7437091165d7f400ed9bbd4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_total</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>b8a2529e67cb46a5bfc096069b6bdafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_rate</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>bfd12f1ee6b22ab6a1f90fe27e47d617</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>m_max_rate</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>5362dc82cf56d5ee1a9a4bb7cad8c952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_tmp_sum</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>41b9c5127d3aa56a2e59b96c358ff0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_mutex</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>ace2419b92b0f22c71aabb6a2bd589ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_count_average</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>bc5f6c4b84f2eb7e3a8ab422f96dba25</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CStatistics</name>
      <anchorfile>classCPreciseRateCounter.html</anchorfile>
      <anchor>a9c6e39ed43cb9206d8c131ee333ca5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPreferences</name>
    <filename>classCPreferences.html</filename>
    <member kind="function">
      <type></type>
      <name>CPreferences</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c27affe5edeef4cbdf146cb796aa88ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CPreferences</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3ca75cad0b870e0558664d12b6ad166b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Save</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9610efa3f898fe8f7199c23e1bcc3088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveCats</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>25473909263352807da54647e136fc2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReloadSharedFolders</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>984a1ae6548c355feca25a064d5b2c00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadCats</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4e484659d4e0e9f6958b75b685b75b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>AddCat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e380943fd5b5cada7f66bee76ba251fe</anchor>
      <arglist>(Category_Struct *cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cbe48fc276a338a5f9dc66f15dd620be</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetCatCount</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d8f3357001365da80f28f00fd5bb2b25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Category_Struct *</type>
      <name>GetCategory</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>25a2d4ccab11066b55715187516bf628</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetCatPath</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>297d5d7e5e4b4d4ed7dba59285202066</anchor>
      <arglist>(uint8 index)</arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>GetCatColor</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fe7d54d42a21e1d17348ff8434a5560c</anchor>
      <arglist>(size_t index)</arglist>
    </member>
    <member kind="function">
      <type>Category_Struct *</type>
      <name>CreateCategory</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>01720a27a579c40fef93289a65a95c80</anchor>
      <arglist>(wxString name, wxString path, wxString comment, wxColour color, uint8 prio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCategory</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8d0a664aae923472290b9d09c417c955</anchor>
      <arglist>(uint8 cat, wxString name, wxString path, wxString comment, wxColour color, uint8 prio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Score</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>403950e0a22e345e195516692a5b7036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetScoreSystem</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f17cb0ade438bd2266e350056333820b</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Reconnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f8d2d24270f6d00007fb063ea35c6f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetReconnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d863a3a365124df91c2809ed60331ddb</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DeadServer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b763e5a97772d39480e897a3d3a94626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDeadServer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>237b7d5f3998a4e098d043815916a571</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetUserNick</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c371946b4d4cf3ea76387dbfb8bba011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetUserNick</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>943f6d54fc13c5330b47bcc67ac42fde</anchor>
      <arglist>(const wxString &amp;nick)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::map&lt; wxString, wxString &gt;</type>
      <name>GetI2PRouterProps</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bedfcf8502c309027f7107e5015f3f8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::map&lt; wxString, wxString &gt;</type>
      <name>GetI2PSocketProps</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>155b824340284c9d09a259fcc92eb814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetI2PServerUseDynIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>79c0b795d0e18229c493f52531d4e444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetI2PServerDynIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>02b8f63024307c016b75fab93b163548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PServerI2PTcpPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ee8a9cfdd6f40cd950ce27483439e398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PServerI2PUdpPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>eb9cf048b4a8d39c5ab9771b72a9490d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PPROP_INBOUND_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>af0f292ea4200bd3d74faf2885b26bff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PPROP_OUTBOUND_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1ef8ae3ac89964265836450280cdbfa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PPROP_INBOUND_BURST_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f67b2f66ec46b58a8c15a4a92e16c20f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PPROP_OUTBOUND_BURST_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f0c599257a9dad9e5be6edfd8a33e2ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetI2PServerInternal</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bb12be51fd1ec753ad1ccdf1b9a48b89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString</type>
      <name>GetI2PServerIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>da51faededf30d9f5b74ffaf6d49fc1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PServerPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6c5668fc4a3883d6e12ae75a07462d4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PSamPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4677ba3b98b048895f668385ed3815d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetI2PProxyPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bb3bbcbf31b23abc959044e6272224d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetI2PClientName</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3579bd3325c1553deeb6304f56fa85ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetI2PInboundHops</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c8a9dba2253f6dd6d06e39e5b9007b6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetI2POutboundHops</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a7e759ecc89c07d307f902ac79cdaae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetI2PBandwidthSharePercentage</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2a3d9a6e8565fa609e8661458ce59971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerUseDynIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8eb3b4cacc1d6cbaf9d08d9bb959177d</anchor>
      <arglist>(bool s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerDynIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>62fa7d91ad87b554d7444d046f3b0319</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerI2PTcpPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1fd9d3e39d6827e9bace628d94e6f5fe</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerI2PUdpPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>792a16f540c40bb1b18ca6c0f89b78a0</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PPROP_INBOUND_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>160d4b3cabad1b260696cc3cdc83c530</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PPROP_OUTBOUND_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>41e91ebe08f910cb0b493ac462b96dfc</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PPROP_INBOUND_BURST_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c6eb138ddd95a53b4bbc36f31cf1adb8</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PPROP_OUTBOUND_BURST_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>03ba9a1c0361a0ca5f369b00fad27199</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerInternal</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d3fc4e4fbcd85a354f4e27cb5e958ca9</anchor>
      <arglist>(bool s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bfbec1129976b3023f8e747de218be19</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PServerPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d2b995000a0610db208b0b092ecead46</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PSamPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e94be3c84e908a8f8f33edb5ddca70a1</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PProxyPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d79b2cb9accebd40435930a0b2012860</anchor>
      <arglist>(uint16 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PClientName</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3b8c76eaee6d0325f8ceb508a115a406</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PInboundHops</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5e6ab395004140260a0a006162e70bd0</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2POutboundHops</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>147f8ae5245f31d93380ac4328363a27</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetI2PBandwidthSharePercentage</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a74c50754f056a597ff8ed4752b46af7</anchor>
      <arglist>(uint8 v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsUDPDisabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9a0ca76c7303271cf068464ebcac833e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetUDPDisable</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>dae948dc5137901471d963382c9cb403</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetIncomingDir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>be3b99efaad5a5754624305940afb2a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetIncomingDir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6f90a72a5e1edb08138505d835489337</anchor>
      <arglist>(const wxString &amp;dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetTempDir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>71e320af43e411969e29333f3048ee02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetTempDir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f94745f73c2cd5adabf9763762b969db</anchor>
      <arglist>(const wxString &amp;dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const CMD4Hash &amp;</type>
      <name>GetUserHash</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ace546597447e73657246de83d7b9365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxUpload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>59225b244bdb63c61210bf0375d86302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetSlotAllocation</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>877a7ae716dcfa113e2397474e3e7975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsICHEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9d007674671e33a25bb234645e768276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetICHEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0dcd3e72d87a2420deae2e79e47ce46e</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsTrustingEveryHash</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>91910ec5e60677487e0f438a88d9d608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetTrustingEveryHash</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>191305d404fb5882b21986c6ed658e75</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AutoServerlist</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>77b82543713b8afe60f686505b2e5fe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAutoServerlist</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c9cf08af8d87c83a5e8668b2e9c19d98</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DoMinToTray</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a0f0812e8f8b51daddd7206bf66b51d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMinToTray</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d24157f790eb33830081b410641b4754</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>UseTrayIcon</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2cc533b4b9ef16da2f48ed5c02eca62e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DoAutoConnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6a4202fd692fe048899ae927b7828497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAutoConnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bd687f82bdcdebaa27c3769a878f2d5f</anchor>
      <arglist>(bool inautoconnect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AddServersFromServer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7c59b3bf83307ddd8c6997d475d79d03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAddServersFromServer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ed233b782aed03f676ec8a8d82022164</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AddServersFromClient</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3a675dc0eed1b9646aa7a3f2af231788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAddServersFromClient</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2a6cca1f8f1e5e6bc7e6a25e43a45552</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetTrafficOMeterInterval</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6f8ca392bc4dba5a66d20f52157a8f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetTrafficOMeterInterval</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>830bca68184fb50cd70e4cce15635d2e</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetStatsInterval</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>71e334ffc64678d8dc741fb41a611ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetStatsInterval</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>296b6e8e7fcd6c4c23e0d588f0e87fe4</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Add2TotalDownloaded</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ffbd71bb5923bc49417bd5627d36ea90</anchor>
      <arglist>(uint64 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Add2TotalUploaded</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a28c01a9348a65d5a181531ed1d8b52d</anchor>
      <arglist>(uint64 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>GetTotalDownloaded</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2b4e755c1de3b522261acf3671a18435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>GetTotalUploaded</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>574cb06fd06b3301a2b81f1edd64e5bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsConfirmExitEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9530dca053c48bd9f4d480e86e337249</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsOnlineSignatureEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fc0616773fa15e4b1f7e18578e3dbb47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetOnlineSignatureEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b91a75fa8c5f9c95876fa2c3ac13088f</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetMaxGraphUploadRate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>befc060076c840f9362110ebd9bbb9b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetMaxGraphDownloadRate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>78d039c658d77c2bd65c1c3148ddfe7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxGraphUploadRate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2deaab5bcd5b500e7542ab7317ae18a4</anchor>
      <arglist>(uint32 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxGraphDownloadRate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8110837e8b6d6333f85f5485c3877bdc</anchor>
      <arglist>(uint32 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxDownload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a1ef1fdb6e20fed05b02c173caa7f9db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxConnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>76f44c45b1940c17d6e2bd42853badd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxSourcePerFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>02815a8120f66bef437393314cc779fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxSourcePerFileSoft</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fff84a1bc20afc812e785a0b2bbcae00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxSourcePerFileUDP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7ad6be07598acf0c57943c30f1869b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetDeadserverRetries</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>01a6e2f41fa0145ec70ec7316c4b94e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDeadserverRetries</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>da9a6e99867b1898f35a0f8381843a5c</anchor>
      <arglist>(uint16 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetServerKeepAliveTimeout</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>52a13ef8af11a84798652c8a52f138c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetServerKeepAliveTimeout</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c3fb28704679ec423b90a307212ef147</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetLanguageID</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8f98ebf8242c46d92f3d0d01512722d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetLanguageID</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>876096fa28d9bddaccbc53a458290e0c</anchor>
      <arglist>(const wxString &amp;new_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>CanSeeShares</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>52abe2888c3dc11d048e847adf2c6c35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetCanSeeShares</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d6b0ccc342c0bf3fe01db52acdf57773</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetStatsMax</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cb362d0bb023cec9e9cae83f8f6f33f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>UseFlatBar</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5273c900d81074c77960984418dba5ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetStatsAverageMinutes</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4f124e32828fbbc2b884f44e3de51665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetStatsAverageMinutes</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cea2ba5bab086f7a5dd6bfab3d9a8f36</anchor>
      <arglist>(uint8 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetStartMinimized</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c6cd01538f2f51986391fd94cdb6a257</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetStartMinimized</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>01a370c7119a518bc9b7d9e0d775f3ea</anchor>
      <arglist>(bool instartMinimized)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetSmartIdCheck</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>14cb6ea482ee526ae2772b59feac275b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetSmartIdCheck</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>378d464bc05046b579c316e31a2f8e99</anchor>
      <arglist>(bool in_smartidcheck)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetSmartIdState</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>27b409b2fe5c07948c65c048bdf92acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetSmartIdState</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bcc0d48508097977537220fc10ec4466</anchor>
      <arglist>(uint8 in_smartidstate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetVerbose</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>643ce1d65b8282b2b3c4125b8b309ac5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetVerbose</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f0bd9ed7deba3fa2c08e1a50610c0d6f</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetPreviewPrio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4f1d30be3267e7c33d16453a1f2d58cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetPreviewPrio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f103be3ce45cbf736b7dd9dbde73f6b1</anchor>
      <arglist>(bool in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>TransferFullChunks</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2a4309ef50ec5707f811617eb9470ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetTransferFullChunks</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3797b00978cf61d37480bfc751b0a938</anchor>
      <arglist>(bool m_bintransferfullchunks)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>StartNextFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>931f589d256eed3131d08ad0fb5c4280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>StartNextFileSame</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>be907c142908d40066c6c651cc3318cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetStartNextFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ce9a75115a565912db4740c0322f7b9d</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetStartNextFileSame</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d0df7a199c6f1ce71e92d0368fe349f8</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShowOverhead</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a2ff92baaab0a7996ac7a1347773d930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetNewAutoUp</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>edcc5c513319e8affa76bbacbf74912a</anchor>
      <arglist>(bool m_bInUAP)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetNewAutoUp</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4ae1f3af2dd2cc0aa50b466a279c1095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetNewAutoDown</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>900f0d233ab0b00fb91b9982f856339c</anchor>
      <arglist>(bool m_bInDAP)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetNewAutoDown</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f483029d79a1d673b63ba3847f559cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetVideoPlayer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9b82041d9a7ebda1e9b80a2b0e37fae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetFileBufferSize</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3e0cb4b837ea40d72408ab0c2e45dd61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetFileBufferSize</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>dc8cd56a2a10b67c694f39fccc25fcdd</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetQueueSize</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>365188bc431fbd55e89ee4c84a73b2d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetQueueSize</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f4591452705cc3fc1bfabe1d5db52a2f</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>Get3DDepth</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f3706780341c2d58bbee54bd02c76323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AddNewFilesPaused</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a1aeea48735a2799045c25e0a3a3be7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAddNewFilesPaused</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9e3bf45ca8798cbdbf07c69ac9e16ce4</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxConsPerFive</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0c23c86f7a02d384041899dd0035ceb4</anchor>
      <arglist>(int in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetMaxConperFive</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f84b2c94aa6891c2b546b3fb5bad294b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetDefaultMaxConperFive</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>23508a3ca2b23f56ac676a2c4419e51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsSafeServerConnectEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d3d1503088a632a1a5cdc1d398be978f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetSafeServerConnectEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5ca4abc26dcea201044bb82e036a9727</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsMoviePreviewBackup</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>154691be91af247fb5c4ef85ad4f7cb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsCheckDiskspaceEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8d9776a388dc9efdcf7005af36485ad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetCheckDiskspaceEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>94005a8d94d007aec44fa4d4890c185e</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetMinFreeDiskSpace</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>255c031e9b0247827089465b42495d90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMinFreeDiskSpace</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>acbeaa1e6294da939c2f4ca2e07decdd</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetYourHostname</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e66b1679f21197932a140245dc1db31c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxUpload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>32ce419161ec5e16fa8ed08fbf193ea9</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxDownload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>71886a90d5757e46c8a76ad1772dcb29</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetSlotAllocation</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8c760ff5a7dc55ead73e19500adaad7b</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AutoConnectStaticOnly</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fabff133d400b3e28909f7f2648204c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAutoConnectStaticOnly</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>af2fccdd971c1836a9b72c02e58b58e2</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsManualHighPrio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>368ba35d9625dbfc6d0bf860dc726cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetManualHighPrio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f0cc72a23a65e756b8118247ac71bc5f</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetDateTimeFormat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a9fc1de74d95e77ec0bd6afa3a706ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetAllcatType</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>af078b36f17772e838fa85d9f016eec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAllcatType</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7fe7c1b16d997d85cdd46bddeae6404a</anchor>
      <arglist>(uint32 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShowAllNotCats</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e691b188e634b9ae4936cb1a30afbf7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetWSPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3f5f1eb73346838ab4d849b3ced46970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWSPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>240489beb499c7471eb71a5e3984eed6</anchor>
      <arglist>(uint16 uPort)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetWSPass</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>772cadd40771902a11d784500d02c95f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWSPass</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ed6632b4a4e79ffddcd7e1c70e37edbe</anchor>
      <arglist>(const wxString &amp;pass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetWSIsEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3c4f6dedc76b8244bd01dd6bc143e63f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWSIsEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f858b50eb1d2266e09bf3160fcc3c297</anchor>
      <arglist>(bool bEnable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetWebUseGzip</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1f579c3957af002c695a066e5845fcdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWebUseGzip</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>33707f12c23eb21b5e80ab42bcf41d26</anchor>
      <arglist>(bool bUse)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetWebPageRefresh</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0f48c247953da25671b1d768c6614301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWebPageRefresh</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6873113051b3b4d47ce90a67ed0b7069</anchor>
      <arglist>(uint32 nRefresh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetWSIsLowUserEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c77cccdb3508b94026bbae2b07862c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWSIsLowUserEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8c329b1d6303e3a39ad1d2d2dc57c15e</anchor>
      <arglist>(bool in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetWSLowPass</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c1240bd49511d907fa2f8ca77f93d559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWSLowPass</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>493f72d01bb9ba038d1bf17927296a41</anchor>
      <arglist>(const wxString &amp;pass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetWebTemplate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2834fb4cceb17d2d70b1f669e592198b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWebTemplate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2d7de16817a037dc0efc077f49ae9e6f</anchor>
      <arglist>(const wxString &amp;val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxSourcesPerFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b43c123dff8992bf8336b0fbbf61fb69</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMaxConnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3d5039d677e1dbe168625c487558c243</anchor>
      <arglist>(uint16 in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShowCatTabInfos</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>543d8baab78f4faa75b38dfa768e3d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ShowCatTabInfos</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>10777b323394e5d2ea214d275b13bd91</anchor>
      <arglist>(bool in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DropNoNeededSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>78ae47e93101c898d0777e465a9b7ad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SwapNoNeededSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>86eeb917f76facc4e64a785eb28c0c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetNoNeededSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>019977d34035c8ef7b774e89b42d95ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetNoNeededSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>660d330f45dfaee04b2caafcaaf57ab6</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DropFullQueueSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b03920fe25434de57116d0bf0fe30c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDropFullQueueSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d0e8915c52a172efe06e6ba37a75e6aa</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DropHighQueueRankingSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1bd7b4dd69a12fb95eef94516f530091</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDropHighQueueRankingSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ab9f1543d039156f76cce60343a5b153</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>HighQueueRanking</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>99d12efdaba96885683b9a0570745d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetHighQueueRanking</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>378fa8e60afa25407a6b15965642644f</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetAutoDropTimer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ebe65fe35b7e300464f2554519afc303</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAutoDropTimer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>95792f2c4a057bbebefa5ec50258a076</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AcceptExternalConnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>98b515cd8d37dacf59fef8e91bb914b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>EnableExternalConnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>52f9f236cb97c57bbefab7de330978b3</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetECAddress</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cdf4d54a57ab00f855a529fd88a5078b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>ECPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b476e374486ff69a3d0e119830de7a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetECPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>55bda89631db08064490c5cb8b82dd69</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>ECPassword</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a26ae3f6b1d12764687908e5dce924d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetFED2KLH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>69bb1985228cdde2e5e02395476a60ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetIPFilterOn</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bdab52a154f174124fe289e2d35451bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetIPFilterOn</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>73ed02eaa7db711f77d8fd2511fa0fa1</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetIPFilterLevel</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>abecfddda59b5839860ed460966635c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetIPFilterLevel</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fe17b4966d31fbcee4eb0851d0892217</anchor>
      <arglist>(uint8 level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IPFilterAutoLoad</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d11881f512689313b415419fb80347cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetIPFilterAutoLoad</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>82760a5454a0e9e0751387662cc7b838</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>IPFilterURL</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>64779bebc89b3632f72b2ed34ea5a1b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetIPFilterURL</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2219cbb41ba6e707a807444bdf0a09c6</anchor>
      <arglist>(const wxString &amp;url)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetSrcSeedsOn</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5fbc5cadf7885ea9a13d67549d9de195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetSrcSeedsOn</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>94a5f4b33c4ecf2d0983aee376e2bedd</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsSecureIdentEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3f18497a167eaf0ebc09f58524b17358</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetSecureIdentEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2347eb4579808d8c644a13b821ea4c1a</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetExtractMetaData</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fd3dba8947e7a5409b6c6fb7c442b99e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetExtractMetaData</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0b08aa57fa9e67a5517e9276d4813e35</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShowProgBar</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>aca129868ca04e7b71b2f8da439d5eab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShowPercent</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>48f388ab18f3da2ac28dd9b02e3fdc72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetAllocFullPart</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f2dd16830f2e1e6194266c8939bce42c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAllocFullPart</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>41fcc66ba1c46d0737214271637be1e7</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetAllocFullChunk</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7c357c23a12adc05c93d0008d6d4a230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetAllocFullChunk</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>607c5d7cd78a391f048100aac0b8af95</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>GetBrowser</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>aeb15f1774d85e48d0f5c3b4eaaabc51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetSkinFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>20bc55a9ad3cca1ecb03976b5885b937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>UseSkin</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>109c12a559cacfabed09ea3afb539d68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>VerticalToolbar</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e77aacfeba5b173c1a353fcdb179541c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetOSDir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5baf80adf12ea904bb89feaad5b07747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetOSUpdate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3b70aef82082137b14f4416513c5fef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint8</type>
      <name>GetToolTipDelay</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fa63a93b1ad3550fcf7dc6478eb7a209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetFilePermissions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f9850a544289c785a1eab4920546bc26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetFilePermissions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0afa7ade67ba1fb5dd2c4be99e13df85</anchor>
      <arglist>(int perms)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetDirPermissions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b5e9f3254ad2b4efaf2f761fb4891fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDirPermissions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d718ce708ece969d253d3287fcebfb6d</anchor>
      <arglist>(int perms)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>UnsetAutoServerStart</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4d7c875bcd3d3fa89f819500983d4854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CheckUlDlRatio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f61bcf69301d3c613de57912ac5a4cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BuildItemList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0fe6309372e27e872161a53cad50d665</anchor>
      <arglist>(const wxString &amp;appdir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>EraseItemList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ad1ad1afcfc7ebd1dc4a193f859c80b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LoadAllItems</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>47c57658d0703abae85657641fe47df6</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SaveAllItems</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>62abf9dbfd0a6d0d8f6e84411c1fc71f</anchor>
      <arglist>(wxConfigBase *cfg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetShowRatesOnTitle</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>646c1f8127d5dc8a20d58f0757b0e57a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>MustFilterMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fcec3108eab5edfc8440e00c159031db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMustFilterMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0dac4df578cf45a1233c8d3e516d2e50</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsFilterAllMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>da2a7f85f11b78e226493fd07ad98d6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetFilterAllMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bb02e3281a7bfe5cb02b1ddbbdaae03b</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>MsgOnlyFriends</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>98b66e0b4f401a71e23ad5dfe342da9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMsgOnlyFriends</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>acbac5fea05093c5eb4253580022d9be</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>MsgOnlySecure</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>edc99cb7631493ea8e095b54509bccd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMsgOnlySecure</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6ecb1151b8bbd7761db6589ea587d338</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsFilterByKeywords</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>06b2cfaca30145e01959383a2023e07c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetFilterByKeywords</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6943a3dc0bb6f8e4730a62c717215cb8</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetMessageFilterString</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>20524ff21b2c6e448fdb7a5e39c9fd98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetMessageFilterString</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>69068a2a8b7a15df9bd4a1cf0a33d049</anchor>
      <arglist>(const wxString &amp;val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsMessageFiltered</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>27b7215de2a5387fbaaa5f7655abc3cd</anchor>
      <arglist>(const wxString &amp;message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const CProxyData *</type>
      <name>GetProxyData</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8d034229916c5f8cad3e5e094df3d337</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ShareHiddenFiles</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>afa38f516c0a2af4ab0bc32df03bdbfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>AutoSortDownload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7fd1caed1bc9bbd33bbb0e93a67724f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CheckNewVersion</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>df8ddf598306f5f702c67d01a60e32cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetNetworkKademlia</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5eab9125c61f03551dca1265ef442261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetNetworkKademlia</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d3bb86e8652e32cfc41cbcb282d85c8f</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetNetworkED2K</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8285d38792d03c78d21989da5370f84f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetNetworkED2K</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d0383ac7c4f075f5341e74b279bd9b0e</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>GetMaxClientVersions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2a5a275cd6b25adf6ec80bca9fb4149b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>CommandOnCompletion</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>71405fa4d9d1b061747e763e0d14e277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const wxString &amp;</type>
      <name>GetCommandOnCompletion</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3fa30ec6dd8aa590f21cfa6a83e64b12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetKeepKadContacts</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c4d508ae514dbb9e0df28f1a6fd58122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetKeepKadContacts</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7b57994023a3fa771884ec1ba9d0c9a2</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetWriteMyselfToNodesDat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3fa6a53dbbc4b35269d3c573b32a3ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetWriteMyselfToNodesDat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>55072633d462884de9b3fe40075760b0</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString</type>
      <name>shareddir_list</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bc0d6fbd76f91293389c53f95805758d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString</type>
      <name>adresses_list</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a2e34308bff4d5b0ecc68efddacf8cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; Cfg_Base * &gt;</type>
      <name>CFGList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>12ca41a944f051a570cd0b063084a6b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; int, Cfg_Base * &gt;</type>
      <name>CFGMap</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>aefdad460fd998a9e2fde1daf912b3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; Category_Struct * &gt;</type>
      <name>CatList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>135e53c7e7c758189674870c2a2fdcf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateUserHash</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5c992a011626f2eff2d42890cfc81278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStandartValues</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fb9e19bb5a61b217169a046f4282e57b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int32</type>
      <name>GetRecommendedMaxConnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>094265c0e6e3a0c77870ae82401feda7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CatList</type>
      <name>m_CatList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bcc1bf572707271ea8112064a7240dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxColour</type>
      <name>s_colors</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e01d40cdde92798a9a95eca744beba4f</anchor>
      <arglist>[cntStatColors]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxColour</type>
      <name>s_colors_ref</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6d363e77cb8cc052e70a2cd4f1486d37</anchor>
      <arglist>[cntStatColors]</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static CFGMap</type>
      <name>s_CfgList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>67200e67b1eaade10f9bb290adcdda75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static CFGList</type>
      <name>s_MiscList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1163eed6de88611e16cca62ff2fb8ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_nick</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e786939dbeb3e41d053ef98c4004c770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static CMD4Hash</type>
      <name>s_userhash</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ebdadb353b68fb9ff5fe175c6b271002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_maxdownload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c970014228fd2bfe2e8f3974e62baa37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_slotallocation</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>68f05f1e66230b78d758acc682a0665e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_I2PServerDynIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>74914df811ea91ce7aa5a5b4dbee01b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PServerI2PTcpPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>73d04436401ed8c82d10e957f62453b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PServerI2PUdpPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>35992675a926d10a117a0da3e97805fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_I2PServerUseDynIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0a543c96e61bb38ce7df31181c360ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_I2PServerIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>acf005710e35696411dee315e3e464db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PServerPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f30a84bdc59df2fdef64442b1955ff5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PSamPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6f7a2a147e509e7a1b24804b267b0743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PProxyPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5cbf61d94d663577b91c84b3f6e6078c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_I2PServerInternal</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6649c652f0710b72879bc0ea7b175183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_I2PInboundHops</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f7d05e1b07f7c972b51dbadfd9e8ffb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_I2POutboundHops</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0f8f020654d65d9c0c82f043922f8720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PPROP_INBOUND_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f972e0527666c123b5a60d7a8b985490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PPROP_OUTBOUND_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e5fc875b8194c0e7e15819f240ef88a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PPROP_INBOUND_BURST_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9c756c70c62d5509ff6faa35bfb3091f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_I2PPROP_OUTBOUND_BURST_BANDWIDTH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b577238c57a0066d85d98a9d03240ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_I2PBandwidthSharePercentage</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c1d0da0d2402db0562b3967f318fffb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_I2PClientName</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>05f5336ef3e0fae5a2d0b7853df6d989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_UDPDisable</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>db02a29164075d2286b27b0ee66794ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_maxconnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>12764466cb6cc23246800778723cce8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_reconnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6026386adbdb8f25d5eae976ba95ad92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_autoconnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c71bcd35acab2989e293bbee4362894d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_autoconnectstaticonly</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8eb64e5200792e4d2b9112217595ee30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static CProxyData</type>
      <name>s_ProxyData</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>de8ea60632b5c0606ce2dbc1b869a47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_autoserverlist</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3e03340db80ea7401c1129f5e460e594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_deadserver</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9ebb40eb778bb672e3cf199e3a067595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_incomingdir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2faa3509538e5d97c6157eb00bec93c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_tempdir</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fefd78f22229c2f41976cd324f17d8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ICH</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e7470513d7da009fb449f437d6ebcbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_AICHTrustEveryHash</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8c20813a9bd590bd998657fffdb1fc67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>s_perms_dirs</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>43588773bc1f07d3556cae2677cc1abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_depth3D</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bd56bf7690cfb317f7f1ee894f9d78bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_scorsystem</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5e705127d90544453d89e18004cb15fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_mintotray</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8f7477ca70b74856d8d7e24ae4857754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_trayiconenabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c74294bd8e80c74ee479163f4ba07962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_addnewfilespaused</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bbd423e50ffea2b74c8c13c4c4366f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_addserversfromserver</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ea1ec18cbdb32f5617d3c62f8380ad16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_addserversfromclient</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e48942b4dfe4186a4fbaaebf3c0b08f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_maxsourceperfile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2ce633539f021c9c7ac20cbcb9539b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_trafficOMeterInterval</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c9e52903c11464c75cc16bb644e6b223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_statsInterval</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7cefe86622cc191ed465b1da7c40a348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_maxGraphDownloadRate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c88fbe313564a8e36abdc57d9338de2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_maxGraphUploadRate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>28171a750a051c4f3cde15859e1a3d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_confirmExit</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6ea6cae6f7e09c48ce2c0554698dedd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_filterLanIP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9d691f8b2b2043c29388d91b3e0a3cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_onlineSig</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f034fc24d8fd7ae53cc02d2f4948b430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint64</type>
      <name>s_totalDownloadedBytes</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>67182989ab5f263ceb1aa217dd5a31b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint64</type>
      <name>s_totalUploadedBytes</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cce28dca86e9e604d9f47a1ecfda9165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_languageID</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>313c02337f39ad2435b9889e7106ba3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_iSeeShares</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>83325e3099300aa23bc1a6c872377b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_iToolDelayTime</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c9e2380e2a83bf430b8d5ca35f20e12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_splitterbarPosition</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d0cae902a3153b056b2e6cac6c360334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_deadserverretries</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a37b3e9f2eb4b9d35a35408585c9728e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_dwServerKeepAliveTimeoutMins</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d83604de0012f4d9450c8c4824b9e4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_statsMax</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c1521386e1b56f3ca2174bfb84c6f69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_statsAverageMinutes</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e8498ebfb4cbcc56bd27d69c2a6c4f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bpreviewprio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cd4e931400deecfb2ba3f281863c33b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_smartidcheck</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4e15bcb1ca89d7c585bb8e00d1be4a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_smartidstate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f1c1cb5a9bf23e2ff4e7af779af07be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_safeServerConnect</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>00bf12a617fc3a0a6e35f52420d06f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_startMinimized</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>96666bdfbbea3d930e42953c618f4785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_MaxConperFive</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>16115f7db1c367d9b9b29c82ae221590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_checkDiskspace</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0d8a481e34a70a30882a74dea70bd0d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_uMinFreeDiskSpace</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b6da986c915cab2e80fbc9ae3367c699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_yourHostname</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cad8323bf92fb57bee7a5b976c333343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bmanualhighprio</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>34eb619b05b4f97d1843b9517529c5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_btransferfullchunks</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>57fa76c2eab9bfafd6455c5b6e9fd134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bstartnextfile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0914bcdc986dfd8dae557ba654809ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bstartnextfilesame</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8a5ffffd5f92760f80ca2ee2a17ac7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bshowoverhead</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>72aca6b3b5ecf8638f1a04f38d399e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bDAP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c6e8aa20efc517b037a656f9126b84fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bUAP</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7d70585115a5800af93bfa0aea060980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bDisableKnownClientList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bd4be9bd09b320004bd06b8ebcc2b67d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bDisableQueueList</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>85ed3ac4d5fb64c92f0e5a2cb6c92a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ShowRatesOnTitle</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fa799e37ca0b27d14a250b09a680503a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_VideoPlayer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f1a8cf1e3d8ba463faa8b064cc09248b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_moviePreviewBackup</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a0d055eee3d14744bdedf7d0364b6168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_indicateratings</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cbf40c8757f559babef85a7158c8d079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_showAllNotCats</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>287f88a7149c77a6b0cfe30b1a9e0416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_msgonlyfriends</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e64d29da7e9ae41efd3be9474e67be1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_msgsecure</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>307ee849b8f77a547758f3bdf5e5fee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_iFileBufferSize</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4f54ef4e3048b9dc1e3652efc98eddba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_iQueueSize</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9121357e68509606361d523a7ee1e0d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_maxmsgsessions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ed350f142b2d8ddb880ed1721028e787</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_datetimeformat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>41ce343e4dde331d91fa4d27ecaa32cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ToolbarOrientation</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>63c22576f54b21885d7a9bb9b25c9de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_sWebPassword</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8024c1cb4f5ac2412603aaf174764bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_sWebLowPassword</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>70e298ffaed8ba91abf3dac32682cb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_nWebPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e3aed3ab18c2e2204077d4e249195e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bWebEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c590be0643c931d0ca02429655ee3d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bWebUseGzip</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>a638b3a10034f6c1cac04e46a48f47ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_nWebPageRefresh</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>80f6d8db312cb5d8089eed6a5a754931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_bWebLowEnabled</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1d40d9b566c47d4656e4097bda61e739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_WebTemplate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>4628431aa844bcb34a44d7d15e7a542a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_showCatTabInfos</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f68620714481fa1a2635c6ae25cbc38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_allcatType</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>33d9a06baaf293c06107c3702fc9707f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_NoNeededSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9b7963f2a7989913aa151ed351a6d4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_DropFullQueueSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>cbbfe8a829b9665ea61be56ac9a0abb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_DropHighQueueRankingSources</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>6ce5355bcf57ba9f51f34aff1be8f66a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_HighQueueRanking</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7d2a0c07c2aba26fdf83cb4aa57b87ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_AutoDropTimer</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2ec2995c0cc3480667fc8aa90762ce57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_AcceptExternalConnections</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>e4ce7a0e8c30c6bb2db67cf04c7d608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_ECAddr</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>0588e29953b6cc9747a6524d35bac49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_ECPort</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fda050a4d20ab7a7eab6dd938f39c91c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_ECPassword</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>5bc6359f62cadb12ba4ce9d2f62c8898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_IPFilterOn</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>19a0d02436c9d3e8cccee1b0073a8e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint8</type>
      <name>s_filterlevel</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b1ab433985e695ca770ddb8f16cbd211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_IPFilterAutoLoad</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>26e11b6bfbbdf59dbc3ce5d14ef75c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_IPFilterURL</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>946f75f1691e26a4a20b10e98987713c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_UseSrcSeeds</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>390b9ae8333098b9021b4fec888d050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ProgBar</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bb9c32cc78302ac8e38ca9104e728e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_Percent</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>587b1211f06ed557567d2cd4d1b63b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_SecIdent</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b1b33952b74d87fefec2afada7b9dc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ExtractMetaData</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>50578c1bc7864b6d4f78696672927120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_AllocFullPart</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>9a6babe8d284ad690416d8230ae27093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_AllocFullChunk</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c01a33f7b980ebd5562f434e1e3ddd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_Browser</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>325114e69b7d841f768249ac8f4cf762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_CustomBrowser</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2a1d2a12e9d6cbdc1d285a88a394dad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_BrowserTab</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>7d7f9c1d0334d5b07d0c2e349b83b6d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_OSDirectory</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>09c99c274417b648a2f8bdaf4b633975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint16</type>
      <name>s_OSUpdate</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>017da47cdd43c815bd06cef2e40f1629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_SkinFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>bf5eaf46060067337eb32ee39c459963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_UseSkinFile</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>ded19c9994815f79103f92cf5a90f899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_FastED2KLinksHandler</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b6fb0ce04e8e832d5c761f0b76568310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_MustFilterMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>3e1d75905eceb9d24c4b8386a90fd072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_MessageFilterString</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>fc314532291d5912b2c2f0f839734625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_FilterAllMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>21e780c78b1777c4bb9a8edbdbd7ec99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_FilterSomeMessages</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>faec59a718915c5435458ee18ef833a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ShareHiddenFiles</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f6a40386282c32b9b5ef091811d548a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_AutoSortDownload</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>f18bc84c6d5ee745bcbae60869e290f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_NewVersionCheck</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>94532d5c6f50505a9c882ebebcca1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ConnectToKad</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>82c486a263e51660fc8632245c7942e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ConnectToED2K</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>420699899d096443fe1c9fc0df823939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static unsigned</type>
      <name>s_maxClientVersions</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>b49013ef5844d2ecd16be86ed7ba955b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_ExecOnCompletion</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>2f51b9cf037da8246b7bf93f147bbde2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxString</type>
      <name>s_ExecOnCompletionCommand</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>d0c438f0020f23f19ff70ee6b4e8fa59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static uint32</type>
      <name>s_KeepKadContacts</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>1aba35920390307c34371ebe4ae90b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_WriteMyselfToNodesDat</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>8f6de1aacd11610ec4ec50f0f6dd9d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PrefsUnifiedDlg</name>
      <anchorfile>classCPreferences.html</anchorfile>
      <anchor>c24ec000139eca6e3db54b6c0fa40c93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPreferencesRem</name>
    <filename>classCPreferencesRem.html</filename>
    <base>CPreferences</base>
    <base>CECPacketHandlerBase</base>
    <member kind="function">
      <type></type>
      <name>CPreferencesRem</name>
      <anchorfile>classCPreferencesRem.html</anchorfile>
      <anchor>59fdb249dbb1ecebce5ebdd7df73c2f4</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>Category_Struct *</type>
      <name>CreateCategory</name>
      <anchorfile>classCPreferencesRem.html</anchorfile>
      <anchor>564bd688ce23b14eb6824383fae57586</anchor>
      <arglist>(wxString name, wxString path, wxString comment, uint32 color, uint8 prio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCategory</name>
      <anchorfile>classCPreferencesRem.html</anchorfile>
      <anchor>ac20028b3b147393d65144900a94703c</anchor>
      <arglist>(uint8 cat, wxString name, wxString path, wxString comment, uint32 color, uint8 prio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCat</name>
      <anchorfile>classCPreferencesRem.html</anchorfile>
      <anchor>910926543fc1123e26811a7c991cdec3</anchor>
      <arglist>(uint8 cat)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadRemote</name>
      <anchorfile>classCPreferencesRem.html</anchorfile>
      <anchor>eae9025db7d0b018f69cdf006a62568b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendToRemote</name>
      <anchorfile>classCPreferencesRem.html</anchorfile>
      <anchor>ac2928280b0098a9fe9cfca1e2670521</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CProgressImage</name>
    <filename>classCProgressImage.html</filename>
    <base virtualness="virtual">CAnyImage</base>
    <member kind="function">
      <type></type>
      <name>CProgressImage</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>7746a1af48adf8328b99f6dd4a2baadb</anchor>
      <arglist>(int w, int h, wxString &amp;tmpl, DownloadFile *file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CProgressImage</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>23910aae548e0225a03f00b0df4206e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>Name</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>8e2cde02c0a2a0b7e54eb60aed95286c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual wxString</type>
      <name>GetHTML</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>fbb600049f92c1fb214b617988bab68b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>CProgressImage::Color_Gap_Struct</type>
      <name>Color_Gap_Struct</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>2aecb1d211c2f5cfedf7052e233fe834</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ReallocGapBuffer</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>d3348cd979e733c644cfd976eb68c78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>InitSortedGaps</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>3a130ab73d1349498937ba0878726a03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateSpan</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>68293e840047eddbd7f5a32541426d28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>compare_gaps</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>53806c03f5c797b7e5a74055d14dc979</anchor>
      <arglist>(const void *, const void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DownloadFile *</type>
      <name>m_file</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>a773a644fc87dea59830d8ea7c6d47ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_template</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>6579b4188417635b6b198b12d591495a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>m_gap_buf_size</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>4818fca2b2a9f3e9a8ed0fb2c6857928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64</type>
      <name>m_gap_alloc_size</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>b3ea995211b4b59ea15e5c7cc258a0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Gap_Struct *</type>
      <name>m_gap_buf</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>33305d3c8bfadf724ebb02d00a36627b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxColour *</type>
      <name>m_ColorLine</name>
      <anchorfile>classCProgressImage.html</anchorfile>
      <anchor>594fc8f736c6d30e866058bb1419d31f</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CProgressImage::Color_Gap_Struct</class>
  </compound>
  <compound kind="struct">
    <name>CProgressImage::Color_Gap_Struct</name>
    <filename>structCProgressImage_1_1Color__Gap__Struct.html</filename>
    <base>Gap_Struct</base>
    <member kind="variable">
      <type>wxColour</type>
      <name>color</name>
      <anchorfile>structCProgressImage_1_1Color__Gap__Struct.html</anchorfile>
      <anchor>13c68cc2a26b8cb2fe756f7ec0ce9523</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CProxyData</name>
    <filename>classCProxyData.html</filename>
    <member kind="function">
      <type></type>
      <name>CProxyData</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>f68baf69fbde529f8bc97dccda81f3cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CProxyData</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>02e928eb8014bdb284fa19df13ebc044</anchor>
      <arglist>(bool proxyEnable, CProxyType proxyType, const wxString &amp;proxyHostName, unsigned short proxyPort, bool enablePassword, const wxString &amp;userName, const wxString &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>87a257656faec7afbbb1c0beb29b3566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_proxyEnable</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>98f403be733907f0747dcfed8658e8ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CProxyType</type>
      <name>m_proxyType</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>319af7e3463971207d3e528ce3639288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_proxyHostName</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>77f11bf8aef5c06298a3329725b62f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>m_proxyPort</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>df3a0c857c343c69fec7276ef9bf40c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_enablePassword</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>d8d2644bc1b6f9ecb55551519dea2cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_userName</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>e33db15612ca168be370b741b1ea6e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_password</name>
      <anchorfile>classCProxyData.html</anchorfile>
      <anchor>f1b6eac818d96a3ace65cf254f19a437</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPublishKeyword</name>
    <filename>classCPublishKeyword.html</filename>
    <member kind="function">
      <type></type>
      <name>CPublishKeyword</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>8461c5d1ecd4bd7169e3e6083b7d1aea</anchor>
      <arglist>(const wxString &amp;rstrKeyword)</arglist>
    </member>
    <member kind="function">
      <type>const Kademlia::CUInt128 &amp;</type>
      <name>GetKadID</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>0cc64e45ba5cc9d052f05eaf4d91ff2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetKeyword</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>31f486aadc0057a84d5fd9713f7cb960</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRefCount</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>09ad52648dbefd459cf6a480e017591f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const KnownFileArray &amp;</type>
      <name>GetReferences</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>ca8d10de3a5ddf8d0354d5c47e602d7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetNextPublishTime</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>78f94b6805d7c6f98cbc0a4d7078e9ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextPublishTime</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>458579090ae16abb73b3e8608fa23f98</anchor>
      <arglist>(uint32 tNextPublishTime)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetPublishedCount</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>5068d4c48e2cb2500a791e13b37ebd6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPublishedCount</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>d79bdc808bf2d98b288aee63e0e6fc6b</anchor>
      <arglist>(uint32 uPublishedCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IncPublishedCount</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>45991e9958d49e6046c119ab3ca246ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRef</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>6e47e258e058d2c653285f3a14c05ea0</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveRef</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>51ff0f52f576b33c1ebe945ba9529424</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllReferences</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>54edaad49dc0f2d480db320c45be201b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RotateReferences</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>c8a8a7e0d8f8a1c4882768cfebdd9bba</anchor>
      <arglist>(unsigned iRotateSize)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_strKeyword</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>d5a2eee01f72985535c8be95d08652d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kademlia::CUInt128</type>
      <name>m_nKadID</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>097fde16266f6a3f7da5c545414eaef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_tNextPublishTime</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>9e2af73a0767807853da164532db4416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_uPublishedCount</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>7356ee575bae371324f76ccf85a546aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>KnownFileArray</type>
      <name>m_aFiles</name>
      <anchorfile>classCPublishKeyword.html</anchorfile>
      <anchor>7f7e62f338731157ba5350de6fe91860</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CPublishKeywordList</name>
    <filename>classCPublishKeywordList.html</filename>
    <member kind="function">
      <type></type>
      <name>CPublishKeywordList</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>5e782f565c388f1b2d969cab2e986e57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CPublishKeywordList</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>dcca474513822f4c86254b52fc67b0c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKeywords</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>72ddc2c541f233ea1a1cefb4e3c3d78b</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKeywords</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>5ec9f7fb42bddbcd3f6a2d666bbd5b2f</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllKeywords</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>862cd7ea8315ddeb83298eafd51524b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllKeywordReferences</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>5bf74800df0cece8d4fc5929517522d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PurgeUnreferencedKeywords</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>b21c9cb6cd1890ad68df69673da67d0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCount</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>340311ddf49ae1bb1b3fcdd74612dc03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CPublishKeyword *</type>
      <name>GetNextKeyword</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>9a7ecaf1bce4721e8119b5476e708579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetNextKeyword</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>4cc9236a76cb115fd2cf7ff98fb05e4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetNextPublishTime</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>851abd02846a48218071b41e7b226d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextPublishTime</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>6ed29f2abab5a737a8ae2d75d19e17c4</anchor>
      <arglist>(uint32 tNextPublishKeywordTime)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CPublishKeyword *</type>
      <name>FindKeyword</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>52f7994edde23c2b92be0f72573f5baa</anchor>
      <arglist>(const wxString &amp;rstrKeyword, POSITION *ppos=NULL) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CTypedPtrList&lt; CPtrList, CPublishKeyword * &gt;</type>
      <name>m_lstKeywords</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>e310ba76ba22f052124bc21f77fbc683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>POSITION</type>
      <name>m_posNextKeyword</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>f0c19a2d6a01e83a326dd5619a3b0554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>m_tNextPublishKeywordTime</name>
      <anchorfile>classCPublishKeywordList.html</anchorfile>
      <anchor>cd4ae6dd1ab13341f1deae2289814c35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CQueuedData</name>
    <filename>classCQueuedData.html</filename>
    <member kind="function">
      <type></type>
      <name>CQueuedData</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>acf1b81da2a1557c939eeaaec53c6fbb</anchor>
      <arglist>(size_t len)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CQueuedData</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>81820dacd5887c1209f0d6a5ce0ee0dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rewind</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>b118bac1d1a5590ff132ad8ec292b6c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>fb17e0f6e31432e880afa10ddcd80661</anchor>
      <arglist>(const void *data, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteAt</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>eb12b1a931501268d14d1690d67bbcb5</anchor>
      <arglist>(const void *data, size_t len, size_t off)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Read</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>83553698de396217b32f3664d8816d8e</anchor>
      <arglist>(void *data, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ToZlib</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>a8bbe563549686570dfb2ed4321400af</anchor>
      <arglist>(z_stream &amp;m_z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteToSocket</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>1edeba5c5eebf54616b7a8991fdbcec2</anchor>
      <arglist>(wxSocketBase *sock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadFromSocket</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>f83f854eb58da9b3504cbc391a0a562f</anchor>
      <arglist>(wxSocketBase *sock, int len)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ReadFromSocketAll</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>42f57787e284cb6124fc7da2ec627d7d</anchor>
      <arglist>(wxSocketBase *sock, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetLength</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>4c7cc50c8534d17e29576c34ef9f8043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetDataLength</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>639f1cd956eb93e255c9287335e76d75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetRemLength</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>1189d6f31bf378da738e3b9a108dce5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetUnreadDataLength</name>
      <anchorfile>classCQueuedData.html</anchorfile>
      <anchor>1539e6785aa13c1547614977977c0a09</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CQueuedView</name>
    <filename>structCQueuedView.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Initialize</name>
      <anchorfile>structCQueuedView.html</anchorfile>
      <anchor>20b47eea020e1b17006dd13bbc7f3c1a</anchor>
      <arglist>(CClientListCtrl *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawCell</name>
      <anchorfile>structCQueuedView.html</anchorfile>
      <anchor>22fc25c8ebcae8c108685a54e75a7ad8</anchor>
      <arglist>(CUpDownClient *client, int column, wxDC *dc, const wxRect &amp;rect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int wxCALLBACK</type>
      <name>SortProc</name>
      <anchorfile>structCQueuedView.html</anchorfile>
      <anchor>4e5ab12899f2b344d76e4b9fc8e25e5b</anchor>
      <arglist>(long item1, long item2, long sortData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CQueueEvent</name>
    <filename>classCQueueEvent.html</filename>
    <templarg>ValueType</templarg>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STARTING</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfad88551fcfb51b0472d248f068f0cb476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOPPING</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfa1492bf636ac73fdd9d0ff1b768321948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSERTED</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfaa2b6ce6bcb643d408cec4b8194130ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REMOVED</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfa48645914fa3cae5d1ba55de840d5abbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANGED</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfaf9f6cc67714e1740d6bb213f9c67c2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLEARED</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfa1039e98a4daa4194718f74653b91a59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INITIAL</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>a4506aa291d99b7366f8903a72eb9dfaa9825ea9e5cf9df6d4f1642adba50c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ValueType &gt;</type>
      <name>ValueList</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>66ded4aa20a3b8792dd78c79e7f7ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CQueueEvent</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>317c2801ca298e56d8334bf3f06d69d4</anchor>
      <arglist>(Type event)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CQueueEvent</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>4176bab5372c1893196970809e99264d</anchor>
      <arglist>(Type event, const ValueList *list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CQueueEvent</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>b29de4d26e6ae9d1a1b9f1e528b6b7fe</anchor>
      <arglist>(Type event, const ValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>GetEvent</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>11d6918fb1b07e670c3515694a63a63a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetCount</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>ddc8a023e0c9469d5d325304e29bd078</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>GetValue</name>
      <anchorfile>classCQueueEvent.html</anchorfile>
      <anchor>5131244690f68c3baa1d29a8463793a0</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CQueueObserver</name>
    <filename>classCQueueObserver.html</filename>
    <templarg>ValueType</templarg>
    <base>CObserver&lt; CQueueEvent&lt; ValueType &gt; &gt;</base>
    <member kind="typedef">
      <type>CQueueEvent&lt; ValueType &gt;</type>
      <name>EventType</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>27ebb4bac0dae757c381c0c17907fb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CObserver&lt; EventType &gt;::ObservableType</type>
      <name>ObservableType</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>39cc33d5689deb15fb1f08f3934c3684</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EventType::ValueList</type>
      <name>ValueList</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>e671bd120e3254036c9d8b7948349946</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CQueueObserver</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>d009b07a84f081d6d8e37f55c1e3f653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReceiveNotification</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>061d3aa88f8b18bf846c193d57aee303</anchor>
      <arglist>(const ObservableType *, const EventType &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>GetNext</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>16a0e26dabd14056c7e8f28d4c5f5b91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetRemaining</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>6c77bf338cfad2faf14d992f331e128a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsActive</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>09b2f1c5e21cea14f1ea7cf4a636c647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classCQueueObserver.html</anchorfile>
      <anchor>322152ddd10050677eafd751405cf3c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CRangeMap</name>
    <filename>classCRangeMap.html</filename>
    <templarg>VALUE</templarg>
    <templarg>HELPER</templarg>
    <member kind="typedef">
      <type>iterator_base&lt; RangeIterator, ValueRef, ValuePtr &gt;</type>
      <name>iterator</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>0e02981b627c1e9b24b21d95eecba1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>iterator_base&lt; ConstRangeIterator, ConstValueRef, ConstValuePtr &gt;</type>
      <name>const_iterator</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>8041129eef398dbe0515fb0c135d462f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RangeMap::size_type</type>
      <name>size_type</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>c5bb5216251382a55d7e7f6b802dc21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VALUE</type>
      <name>value_type</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>d3382c38cdbc1b2ab6cc835396b361f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CRangeMap</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>ab5c5e6a323c34b3a7cb070887343a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CRangeMap</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>994cfaab9c3415e7633273bccb05b93d</anchor>
      <arglist>(const CRangeMap&lt; VALUE &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>CRangeMap &amp;</type>
      <name>operator=</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>7e00695999d169aec1ee5a6b44931074</anchor>
      <arglist>(const CRangeMap&lt; VALUE &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>bf1859773f482e3ed3df29b72f2e075f</anchor>
      <arglist>(const CRangeMap&lt; VALUE &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>23864f773c57c812689ddcece4a731f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>7eb27526d686a296155e5d6374b650f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>647bce1d2ea3001ace67733acd6b4bb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>1ff0e5dd1c52fa464f2f08cde92a2d60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>3a18651acf735079e3c8f37e3a5b776d</anchor>
      <arglist>(iterator pos)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>9e0eef5f4bef41d40c19be3a9831e303</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>4fe3b0c409f60e2b91b227e6cc09781e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>2948a634f571a5602ff6f81fe05666b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>find_range</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>4613c8241bb3d6b3919b20b010db9316</anchor>
      <arglist>(uint64 key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase_range</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>332c97a4381d8a106b9594f28b73eab8</anchor>
      <arglist>(uint64 startPos, uint64 endPos)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>1817eaaef9fa5f74b690b4a7dbe7cee0</anchor>
      <arglist>(uint64 startPos, uint64 endPos)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>7f4873e7b44a8ed9eaded60b73d51e0c</anchor>
      <arglist>(uint64 startPos, uint64 endPos, const TYPE &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>iterator</type>
      <name>do_insert</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>0c8c951cadcf57834f44c2ce73f609f6</anchor>
      <arglist>(uint64 start, HELPER entry, bool merge=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>RangeIterator</type>
      <name>get_insert_it</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>23f51a7329621c159f805c58f1a496ba</anchor>
      <arglist>(uint64 start)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>RangeIterator</type>
      <name>resize</name>
      <anchorfile>classCRangeMap.html</anchorfile>
      <anchor>e07a18fa914671ae98b45c182e0e247f</anchor>
      <arglist>(uint64 startPos, uint64 endPos, RangeIterator it)</arglist>
    </member>
    <class kind="class">CRangeMap::iterator_base</class>
  </compound>
  <compound kind="struct">
    <name>CRangeMapHelper</name>
    <filename>structCRangeMapHelper.html</filename>
    <templarg>VALUE</templarg>
    <member kind="typedef">
      <type>VALUE *</type>
      <name>ValuePtr</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>71578f9e3f077ae3cb962530ac9e3276</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VALUE &amp;</type>
      <name>ValueRef</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>6366c1cb46a77e95a5d89e35c3a1eacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const VALUE &amp;</type>
      <name>ConstValueRef</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>288d1b3c84a6d756d31fc47d276be637</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const VALUE *</type>
      <name>ConstValuePtr</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>e62fc9664a62771f647178ee20d04ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>b83361415bc2534de9135e2c9b098127</anchor>
      <arglist>(const CRangeMapHelper&lt; VALUE &gt; &amp;o) const </arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>first</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>c5b0d638c439c7490382154e9b8c49bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VALUE</type>
      <name>second</name>
      <anchorfile>structCRangeMapHelper.html</anchorfile>
      <anchor>b582f87e1e488cb8ebe43960cb5bba63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CRangeMapHelper&lt; void &gt;</name>
    <filename>structCRangeMapHelper_3_01void_01_4.html</filename>
    <member kind="typedef">
      <type>void</type>
      <name>ValuePtr</name>
      <anchorfile>structCRangeMapHelper_3_01void_01_4.html</anchorfile>
      <anchor>eac20c7e2d09ec4b6a971ef8dccfc2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ValueRef</name>
      <anchorfile>structCRangeMapHelper_3_01void_01_4.html</anchorfile>
      <anchor>e8e94ec755af65ee49d7ad6e759f3677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ConstValueRef</name>
      <anchorfile>structCRangeMapHelper_3_01void_01_4.html</anchorfile>
      <anchor>1194e15e879812df53c2477a9c89b24f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ConstValuePtr</name>
      <anchorfile>structCRangeMapHelper_3_01void_01_4.html</anchorfile>
      <anchor>942c63b403f31eef6f3c64c1f3bd80ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structCRangeMapHelper_3_01void_01_4.html</anchorfile>
      <anchor>452594d4ae15d40a9c7c6d101578d97c</anchor>
      <arglist>(const CRangeMapHelper&lt; void &gt; &amp;) const </arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>first</name>
      <anchorfile>structCRangeMapHelper_3_01void_01_4.html</anchorfile>
      <anchor>64ea91646cadef40674d19bd5bb1c4ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CreditStruct</name>
    <filename>structCreditStruct.html</filename>
    <member kind="function">
      <type></type>
      <name>CreditStruct</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>cd4adaeac98fbe5a0fb5c1d9473270a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>key</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>fa81494d3b643324a0428d9ab96b3b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nUploadedLo</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>878ab5f54cb2a064e2d240db8466e70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nDownloadedLo</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>b5f0c21c113ce629ab59b882ac7b135b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nLastSeen</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>fb17f2c216c7b7d9cc89d39b4f49a02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nUploadedHi</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>c85ffedd5660728fc2ecea77a1541ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nDownloadedHi</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>e7dd83ae7685d245b391681e904493e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>nReserved3</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>2e333743581de3962c047c20e36b322c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>nKeySize</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>09cf407d2b04d5d5bff885ac126bc53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>byte</type>
      <name>abySecureIdent</name>
      <anchorfile>structCreditStruct.html</anchorfile>
      <anchor>cbf8c5ccbd2fbbfcfd79dff69bdf5b74</anchor>
      <arglist>[MAXPUBKEYSIZE]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CRemoteConnect</name>
    <filename>classCRemoteConnect.html</filename>
    <base>CECSocket</base>
    <member kind="function">
      <type></type>
      <name>CRemoteConnect</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>434b16804e34dccff86d3fabef87e17c</anchor>
      <arglist>(wxEvtHandler *evt_handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ConnectToCore</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>1959f9c7d27fc4f2c932eb29b41feef4</anchor>
      <arglist>(const wxString &amp;host, int port, const wxString &amp;login, const wxString &amp;pass, const wxString &amp;client, const wxString &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetServerReply</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>551cf4b94d9c1667074ea8f0621bcc29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RequestFifoFull</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>9bec5d0714c6e2d696d72b8b8be95298</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnConnect</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>cdd5946ff6651fae851be49e9d2d7dc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnClose</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>aa66386ad3a7f9fa3f7e04b5e1b70c6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendRequest</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>e60cd9401d8280599de70592ed2c51f4</anchor>
      <arglist>(CECPacketHandlerBase *handler, CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPacket</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>3912be9084ff699f719b84b0f24b51ab</anchor>
      <arglist>(CECPacket *request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartKad</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>5984b15ee695e8648f280ff916eba955</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopKad</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>61ba4de4e236b041386cd7cec1b1b22c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectED2K</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>34bf98071f162054e5e0684357bc2ee7</anchor>
      <arglist>(uint32 ip, uint16 port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisconnectED2K</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>4e8b32ab7e80705d62c6a32ae7918c5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveServer</name>
      <anchorfile>classCRemoteConnect.html</anchorfile>
      <anchor>4cc50ce6786c3fd2d2a38481f0539128</anchor>
      <arglist>(uint32 ip, uint16 port)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CRemoteContainer</name>
    <filename>classCRemoteContainer.html</filename>
    <templarg>T</templarg>
    <templarg>I</templarg>
    <templarg>G</templarg>
    <base>CECPacketHandlerBase</base>
    <member kind="function">
      <type></type>
      <name>CRemoteContainer</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>6a61a48026d49b5bcebd84a548a42686</anchor>
      <arglist>(CRemoteConnect *conn, bool inc_tags=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CRemoteContainer</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>4f2e544859bac195f74055abebb0a6f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetCount</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>d24df38eabb0f5e9332fd2a1cff31215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddItem</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>e09af8299c4eb8c6a50e690642e67bae</anchor>
      <arglist>(T *item)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetByID</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>8ac0205b6a056009b643105bbdbef55e</anchor>
      <arglist>(I id)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetByIndex</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>f5dc0da3a0d855ff687271d2d5245104</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Flush</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>de1c7ea36f6b93cc9f610480bdb2c08f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FullReload</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>08e69987f1dcd3fa8c6beba2ba097202</anchor>
      <arglist>(int cmd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoRequery</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>e9274ceac5b096de308c993b716ed540</anchor>
      <arglist>(int cmd, int tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessFull</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>cf48b44473823067920675b59c1c5d9e</anchor>
      <arglist>(const CECPacket *reply)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUpdate</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>c9430a0409d5593f71daef34492540b0</anchor>
      <arglist>(const CECPacket *reply, CECPacket *full_req, int req_type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual T *</type>
      <name>CreateItem</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>3cab4b191dcf5779f111d1d7508f8b32</anchor>
      <arglist>(G *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DeleteItem</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>ad9857b6f4dc2415721ae4145745cd2c</anchor>
      <arglist>(T *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual I</type>
      <name>GetItemID</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>1da2f4f24ad32a8a913381cf328aa5dc</anchor>
      <arglist>(T *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessItemUpdate</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>0dfd94d9183d4e09108c752346ed17e7</anchor>
      <arglist>(G *, T *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Phase1Done</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>d199bba867b4a9731e8520ea67a1b24f</anchor>
      <arglist>(const CECPacket *)</arglist>
    </member>
    <member kind="enumvalue">
      <name>IDLE</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>ffb59883673c3f55d1452b8a40a6afa32a73eb608478fc76d1a6d165bd37e987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATUS_REQ_SENT</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>ffb59883673c3f55d1452b8a40a6afa3bbcf9b4ab41488f95ce6f4f7f646c82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULL_REQ_SENT</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>ffb59883673c3f55d1452b8a40a6afa3ddefa5cf0cd51427b8c79e4f50d2e560</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>HandlePacket</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>3751674b5d73f91fdbd9b10969fc5792</anchor>
      <arglist>(const CECPacket *packet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum CRemoteContainer::@12</type>
      <name>m_state</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>8c6f075d33bef6734c7b512c24c124a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CRemoteConnect *</type>
      <name>m_conn</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>ab7bbfe630def972705427b15e4b4cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; T * &gt;</type>
      <name>m_items</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>9bbd5a7a7aba5b1aa125599f14ba1b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; I, T * &gt;</type>
      <name>m_items_hash</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>7288b3f0f8dde45917dbc308c10e253b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; T * &gt;</type>
      <name>m_idx_items</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>da94f5d9659ef2930742fe43a56a4913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_item_count</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>05f94f3a7e604254a26e05520a277173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_inc_tags</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>17c83d874b62c30f87531d75d4c24280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_full_req_cmd</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>e1cd01c5df16c4579860efee74efc38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_full_req_tag</name>
      <anchorfile>classCRemoteContainer.html</anchorfile>
      <anchor>5e3133702c467f36702d914f97ed7798</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CRunTimeException</name>
    <filename>structCRunTimeException.html</filename>
    <base>CMuleException</base>
    <member kind="function">
      <type></type>
      <name>CRunTimeException</name>
      <anchorfile>structCRunTimeException.html</anchorfile>
      <anchor>b13929b2d6e3118c6b54e0efc88ce18e</anchor>
      <arglist>(const wxString &amp;type, const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CryptoMaterial</name>
    <filename>classCryptoMaterial.html</filename>
    <base>NameValuePairs</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>AssignFrom</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>20181c1b39a74a9fe91385b025b773c6</anchor>
      <arglist>(const NameValuePairs &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Validate</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>aa7d67d0c12712de0e33713c73f5b718</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int level) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ThrowIfInvalid</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>6843c1d4563fbb0208deb22624e12cce</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int level) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Save</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>fa404b793a0a42d4c44b3b9d6e588ee3</anchor>
      <arglist>(BufferedTransformation &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Load</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>d928e86317924162efac56b9efd05aeb</anchor>
      <arglist>(BufferedTransformation &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SupportsPrecomputation</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>64ab4ff4adfcfc2da59706ac32895b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Precompute</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>b3cbcccc107e02e6fa4fa1673fa4f984</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>LoadPrecomputation</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>d30d854d7d1876a2a0c00639cd8489e2</anchor>
      <arglist>(BufferedTransformation &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SavePrecomputation</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>4dc4840e4a0d6ad3501f088acf2d5fbd</anchor>
      <arglist>(BufferedTransformation &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoQuickSanityCheck</name>
      <anchorfile>classCryptoMaterial.html</anchorfile>
      <anchor>4229d3e3b7c91496cbd944c53336152d</anchor>
      <arglist>() const </arglist>
    </member>
    <class kind="class">CryptoMaterial::InvalidMaterial</class>
  </compound>
  <compound kind="class">
    <name>CryptoMaterial::InvalidMaterial</name>
    <filename>classCryptoMaterial_1_1InvalidMaterial.html</filename>
    <base>InvalidDataFormat</base>
    <member kind="function">
      <type></type>
      <name>InvalidMaterial</name>
      <anchorfile>classCryptoMaterial_1_1InvalidMaterial.html</anchorfile>
      <anchor>71bd4ca874fcac405019fb3df4b3820a</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSafeIOException</name>
    <filename>structCSafeIOException.html</filename>
    <base>CMuleException</base>
    <member kind="function">
      <type></type>
      <name>CSafeIOException</name>
      <anchorfile>structCSafeIOException.html</anchorfile>
      <anchor>6ca3932d94620356a873f162ad7a5417</anchor>
      <arglist>(const wxString &amp;type, const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSamLauncher</name>
    <filename>classCSamLauncher.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>start</name>
      <anchorfile>classCSamLauncher.html</anchorfile>
      <anchor>1709de1e87302740dfed97772747c483</anchor>
      <arglist>(std::map&lt; wxString, wxString &gt; propmap)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSamSession</name>
    <filename>classCSamSession.html</filename>
    <base>wxEvtHandler</base>
    <member kind="enumeration">
      <name>sam_conn_t</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>02fafc0a15d8e2d1f5dfb34038280aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_STREAM</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>02fafc0a15d8e2d1f5dfb34038280aaffa1c24962304d871ec5446e8b92d319d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_DGRAM</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>02fafc0a15d8e2d1f5dfb34038280aafeb1fd4cb9927e6053e980e851e1f4ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_RAW</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>02fafc0a15d8e2d1f5dfb34038280aaf278fe5d5b7bd7013e4136d573d72d97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>samerr_t</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_NULL</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dafea7428564c52ec37ad815c71d9da0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_OK</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da1e7119fc2ce0f3cbf842bba4051a4d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_CANT_REACH_PEER</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dacf3e6cc56b29f3dbd9cdaaff89867dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_DUPLICATED_DEST</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dae8ed48173212c0cc99fbd77c00f004f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_I2P_ERROR</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dad3bd9f8544006f0eeda3879e6c764bc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_INVALID_KEY</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dacf38ff2c43c12a0b21da308fa5313621</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_KEY_NOT_FOUND</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da8d5cedf1ddf5be6c7f72ffa0661f5aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_PEER_NOT_FOUND</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dad1d4ead6efc6ad7530d9d64748d82951</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_TIMEOUT</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da0accedc960d5e9a73643d383167e8129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_UNKNOWN</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dabcb359254855c73d7d0a6b620bc315c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_BAD_STYLE</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da2af3147d5dcf0d3d1d6a1a5503bfdb7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_BAD_VERSION</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da9900bf07b1294cad93a9f337691d512b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_CALLBACKS_UNSET</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dad5295889122e17c40326ef7b9abe573d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_SOCKET_ERROR</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781dad0a01b6910f8d4726e52bba5c3161eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_TOO_BIG</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781daff31bb9095a9a4354890adada1648601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_FAILED</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>73029f93051e5a008e9c46df082781da071d578f6cbf39b6dd0df2736c6c51ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>bufferState_t</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>0ac036a1c06cd04ffa499b03b6d1a25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_READY</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>0ac036a1c06cd04ffa499b03b6d1a25c136d15e8cb39210fc6633f7d779330df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAM_BUFFER_FULL</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>0ac036a1c06cd04ffa499b03b6d1a25c496f19d8ebae457128fdd45766ac1266</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>wxInt32</type>
      <name>sam_sid_t</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>3af8a1481f29aa78e5bba4a8d7db75d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CSamSession</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>967f45097de088f9df0c55404dee369f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CSamSession</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>65dcd51462a877f5e32aaf22b73d4d0e</anchor>
      <arglist>(wxString sessionName, sam_conn_t type, wxString options=wxT(&quot;&quot;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSamSession</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>80c59213f73d9d2298a56fcc2b886454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>samOk</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>4cfd797c3167d096bce1bd84aabfb00f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitSocketEvent</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>e2708ac6190a849f72a4720ddfde1544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sam_close</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>1e409c23d3736ba954194e64b180c6f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_naming_lookup</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>beac0276713e2f4d8056712a202299e8</anchor>
      <arglist>(wxString name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sam_read_buffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>a649118005e2d61b50b9e84ec2b17887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_stream_close</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>fa48a48ae019d0de5424286012848bee</anchor>
      <arglist>(sam_sid_t stream_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_stream_connect</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>e87f5f8f632e959dd1cb6861b19cd36d</anchor>
      <arglist>(wxI2PSocket *sock, const CI2PAddress &amp;dest, bool wait=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_sendq_flush</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>25afa402bed151ca5b541b60ee881b7e</anchor>
      <arglist>(sam_sid_t stream_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_stream_queue_buffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>ee5315a96b1d47bda63c283afa3ad2cc</anchor>
      <arglist>(sam_sid_t sid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_stream_discard_queued_stream</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>0b726cf050393d7c0a167eabcd0ac8c8</anchor>
      <arglist>(sam_sid_t sid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_buffer_when_you_want</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>eb7db86cc9fe67562185829cb072964d</anchor>
      <arglist>(sam_sid_t sid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_stream_set_send_total_limit</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>4beb25871657185edf5dc1a6532c77f7</anchor>
      <arglist>(sam_sid_t stream_id, wxUint64 limit, bool nolimit)</arglist>
    </member>
    <member kind="function">
      <type>samerr_t</type>
      <name>sam_dgram_send</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>28c7eb493009adbcc04ec573823c8705</anchor>
      <arglist>(const CI2PAddress &amp;dest, const void *data, usize_t size)</arglist>
    </member>
    <member kind="function">
      <type>samerr_t</type>
      <name>sam_raw_send</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>cb2c891f2c228bc3e2991bce1039ee8f</anchor>
      <arglist>(const CI2PAddress &amp;dest, const void *data, usize_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnSamSocketEvent</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>1c8c2705a44e7d8084749921c4b6d73b</anchor>
      <arglist>(wxSocketEvent &amp;event)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSamAddress</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>77654aaeaff49a64e0e17620cbbc6e6c</anchor>
      <arglist>(std::map&lt; wxString, wxString &gt;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>sam_strerror</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>2843a36ea6d156f56e9bccd533643687</anchor>
      <arglist>(samerr_t code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxString</type>
      <name>sam_wxstrerror</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>bd3314563e0f57b50ab707ca644bdf78</anchor>
      <arglist>(int code)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxUint16</type>
      <name>s_samPort</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>a99a18613f9fb6f12ab75fb749c2dac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static wxString</type>
      <name>s_samIP</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>a867d2ebe59b90aab5a1d84a97947880</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>wxInt32</type>
      <name>ssize_t</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>6955caaea427ce346cc6c66109ceffe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>wxUint32</type>
      <name>usize_t</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>81663d9aa916100fa69010ce7b98f0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_diedback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>e30c1cfc22ff7795084cc3f6376b9084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_diedback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>46d24c6b2ebf4f2373bbefc1c1a3ca08</anchor>
      <arglist>(samerr_t)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_namingback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>6c2cde0056d5d88e726820cc081126f0</anchor>
      <arglist>(wxString name, const CI2PAddress &amp;pubkey, CSamSession::samerr_t result, wxString message)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_dgramback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>bbac7cb862ad20d6a7f3dc58effc185b</anchor>
      <arglist>(CI2PAddress &amp;dest, char *data, usize_t size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>sam_closeback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>e07844c701a90dd1aa30286fcd857073</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t reason, wxString message)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_stream_connectback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>f413fe8ea41455407a8bc4b002f753cc</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>sam_databack</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>3a49b026b154de696b4ad019f00a447a</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, void *data, usize_t size)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>sam_stream_statusback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>d502da5a7a3351b107cee0f7d9aaf802</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t result, wxString message)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_sendback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>b52271926a93051abff0024e8bd4452d</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t result, CSamSession::bufferState_t state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>sam_streamFreedBuffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>1a04a7a89c11362efb1ae5e1b3016679</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_notifyWriteBufferFree</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>de150fb23de49e9b813745f3fe107d2b</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>sam_rawback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>290de06e89c06e2b7f80ad41862fab68</anchor>
      <arglist>(void *data, usize_t size)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_logback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>5b2a0590e843a7b49e58623a6db3cb4c</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_logback</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>45f0fcf01ed8b13b8f95d3bbc9747561</anchor>
      <arglist>(sam_sid_t, wxString)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sam_connect</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>42c4aaf93eae3e6fde4e708f5abddd54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sam_handle_input</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>ce925411a49920fc4df35ddcf3e15808</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sam_handle_input_reentrant</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>b3743f1ae804642a9c323e1772a479a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createStreamWriteBuffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>98d5e0a98f1d8d8f41e56494013439c8</anchor>
      <arglist>(sam_sid_t sid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>write_buff_t *</type>
      <name>getWriteBuffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>792b1144d15c4c771e9ec56d264389b7</anchor>
      <arglist>(sam_sid_t sid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sam_handle_output</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>df94e25846e20d8921448f9512d7864d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>char *</type>
      <name>sam_make_msg_from_stream_buffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>e9fa3044314c514c98ead7dc661624b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sam_stream_queue_next_waiting_buffer</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>03b97d6a0fc44bb48e620694b597831a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sam_queue_msg</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>644fc9c32d14b365b2f19b3162a8fbec</anchor>
      <arglist>(char *msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DECLARE_EVENT_TABLE</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>b7b624033eca590a2f685950f1a6fca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CI2PAddress</type>
      <name>m_here</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>d12fe87ee4786f1d0f8483f6990802b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; sam_sid_t, wxI2PSocket * &gt;</type>
      <name>m_sockets</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>31cac8107b7899c7be82bfa8c5e198c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_sockets_mutex</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>a4ace83c5a9fa9808ae0f40092e3b4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReadCtx</type>
      <name>readCtx</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>4f0d67939b48dced5bacccd532e5af78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParseCtx</type>
      <name>parseCtx</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>2f6fb0a5ff4b422b99c6628d4d5547aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Read2Ctx</type>
      <name>read2Ctx</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>e189605196bdc069c5554ae1ae645bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; sam_sid_t, write_buff_t * &gt;</type>
      <name>m_WriteStreamBuffersMap</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>56cc28e2b18d1e28d47b73cdab3965f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; sam_sid_t &gt;</type>
      <name>m_waitingWriteStreamBuffersQueue</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>9ead3ef727460619e124220e78d0dff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_streamsWriteBuffersMutex</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>17df98ad6116fe43a43d57e3d540a726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxCondition</type>
      <name>m_streamsWriteBuffersCondition</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>249811fedcdf397d2fad36accd80eceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_waitingWriteMsgQueueMutex</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>a7af473936ede2db0fb8201bdd6f7bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; buff_t * &gt;</type>
      <name>m_waitingWriteMsgQueue</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>bfef85f77f130ecbcfbedc7318033c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WriteCtx</type>
      <name>writeCtx</name>
      <anchorfile>classCSamSession.html</anchorfile>
      <anchor>a6e06d44add94a29a3880e53ed04ea17</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">CSamSession::buff_t</class>
    <class kind="struct">CSamSession::ErrorInReading</class>
    <class kind="struct">CSamSession::ErrorInWriting</class>
    <class kind="class">CSamSession::exception</class>
    <class kind="class">CSamSession::FlagSetter</class>
    <class kind="struct">CSamSession::ParseCtx</class>
    <class kind="struct">CSamSession::Read2Ctx</class>
    <class kind="struct">CSamSession::ReadCtx</class>
    <class kind="struct">CSamSession::UnknownStreamId</class>
    <class kind="class">CSamSession::write_buff_t</class>
    <class kind="struct">CSamSession::WriteCtx</class>
  </compound>
  <compound kind="class">
    <name>CSamSession::buff_t</name>
    <filename>classCSamSession_1_1buff__t.html</filename>
    <member kind="function">
      <type></type>
      <name>buff_t</name>
      <anchorfile>classCSamSession_1_1buff__t.html</anchorfile>
      <anchor>f1b44ea08a29ff08863558edbcd46bfd</anchor>
      <arglist>(char *d, usize_t s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~buff_t</name>
      <anchorfile>classCSamSession_1_1buff__t.html</anchorfile>
      <anchor>90237dc75714722e72e7c4b13e9c7cc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_NO_COPY_CLASS</name>
      <anchorfile>classCSamSession_1_1buff__t.html</anchorfile>
      <anchor>1b0d574679f05aa055914c1b68bd0611</anchor>
      <arglist>(buff_t)</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>data</name>
      <anchorfile>classCSamSession_1_1buff__t.html</anchorfile>
      <anchor>99b5448865d3d01364cd3696a5361b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>usize_t</type>
      <name>size</name>
      <anchorfile>classCSamSession_1_1buff__t.html</anchorfile>
      <anchor>6b664a01c4335b3486cf7927af8e5ad9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSamSession::ErrorInReading</name>
    <filename>structCSamSession_1_1ErrorInReading.html</filename>
  </compound>
  <compound kind="struct">
    <name>CSamSession::ErrorInWriting</name>
    <filename>structCSamSession_1_1ErrorInWriting.html</filename>
  </compound>
  <compound kind="class">
    <name>CSamSession::exception</name>
    <filename>classCSamSession_1_1exception.html</filename>
    <base>std::exception</base>
    <member kind="function">
      <type></type>
      <name>exception</name>
      <anchorfile>classCSamSession_1_1exception.html</anchorfile>
      <anchor>d3deaa90b673f7681641f74982b8cefc</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classCSamSession_1_1exception.html</anchorfile>
      <anchor>a79e0bdc001d44b82e34c1173e0ed4c5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSamSession::FlagSetter</name>
    <filename>classCSamSession_1_1FlagSetter.html</filename>
    <member kind="function">
      <type></type>
      <name>FlagSetter</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>7847b38436f11fabfd5d92930d073b04</anchor>
      <arglist>(CSamSession *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FlagSetter</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>5519480d38546dfd071fedc05809e7dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlags</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>be95c6d516422a0d2b4703009a8002c6</anchor>
      <arglist>(wxSocketFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsetFlags</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>26ef496d86ada14a4394b877731ea12c</anchor>
      <arglist>(wxSocketFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Notify</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>e6ea253e1899fa69807bb5376afc8e16</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNotify</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>528e0ce5e16784fb500df8652137756b</anchor>
      <arglist>(wxSocketEventFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnsetNotify</name>
      <anchorfile>classCSamSession_1_1FlagSetter.html</anchorfile>
      <anchor>aedf8220af511bd9b94dc77f8405e727</anchor>
      <arglist>(wxSocketEventFlags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSamSession::ParseCtx</name>
    <filename>structCSamSession_1_1ParseCtx.html</filename>
    <member kind="function">
      <type></type>
      <name>cr_context</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>889efaaa9b52b66b6efb6d3e9a7dc55b</anchor>
      <arglist>(ParseCtx)</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>cmd1</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>e02d6adbce67bb3c3f502a0bf7157517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>cmd2</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>32051716db401cd418f595699ad28030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>message</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>d17ae195e44afcb67552c8635a37c042</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>args_t</type>
      <name>args</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>2cd918ec5fe7d3bb2914669cb21d4988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>payload</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>af34f873d27e06aea2e46a4b8f07f2fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>usize_t</type>
      <name>payloadSize</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>b14873b769eacaf7716ac080e6ec3440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>mutex</name>
      <anchorfile>structCSamSession_1_1ParseCtx.html</anchorfile>
      <anchor>3fee528b8eaf13674eb4122047fe8258</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSamSession::Read2Ctx</name>
    <filename>structCSamSession_1_1Read2Ctx.html</filename>
    <member kind="function">
      <type></type>
      <name>cr_context</name>
      <anchorfile>structCSamSession_1_1Read2Ctx.html</anchorfile>
      <anchor>42b0d30cebff3e9dcc1a6835147298ce</anchor>
      <arglist>(Read2Ctx)</arglist>
    </member>
    <member kind="variable">
      <type>usize_t</type>
      <name>nleft</name>
      <anchorfile>structCSamSession_1_1Read2Ctx.html</anchorfile>
      <anchor>088beee3afa8ff1d56af9b9d03d864e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ssize_t</type>
      <name>nread</name>
      <anchorfile>structCSamSession_1_1Read2Ctx.html</anchorfile>
      <anchor>40920fa7e0c608465a0b3168a41162f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>p</name>
      <anchorfile>structCSamSession_1_1Read2Ctx.html</anchorfile>
      <anchor>259fa00963e61bfb51876ea3e61426b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>mutex</name>
      <anchorfile>structCSamSession_1_1Read2Ctx.html</anchorfile>
      <anchor>aed90abc76edca5d232da14c08f3a79c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSamSession::ReadCtx</name>
    <filename>structCSamSession_1_1ReadCtx.html</filename>
    <member kind="function">
      <type></type>
      <name>cr_context</name>
      <anchorfile>structCSamSession_1_1ReadCtx.html</anchorfile>
      <anchor>c130cd2650f1cd78fea84f16877bd431</anchor>
      <arglist>(ReadCtx)</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>message</name>
      <anchorfile>structCSamSession_1_1ReadCtx.html</anchorfile>
      <anchor>bfd40630a66ff24577bb528a1a57c48c</anchor>
      <arglist>[SAM_REPLY_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>usize_t</type>
      <name>nleft</name>
      <anchorfile>structCSamSession_1_1ReadCtx.html</anchorfile>
      <anchor>c2fb7b73ecd5af0c1dd8d193d2e3678c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ssize_t</type>
      <name>nread</name>
      <anchorfile>structCSamSession_1_1ReadCtx.html</anchorfile>
      <anchor>2c8c75be7bd37bcfceccf01bae813195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>p</name>
      <anchorfile>structCSamSession_1_1ReadCtx.html</anchorfile>
      <anchor>5343fbced617860ea44a9e5c009d5ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>mutex</name>
      <anchorfile>structCSamSession_1_1ReadCtx.html</anchorfile>
      <anchor>f2f5a6d549546761ab3990e4227c99b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSamSession::UnknownStreamId</name>
    <filename>structCSamSession_1_1UnknownStreamId.html</filename>
  </compound>
  <compound kind="class">
    <name>CSamSession::write_buff_t</name>
    <filename>classCSamSession_1_1write__buff__t.html</filename>
    <base>CSamSession::buff_t</base>
    <member kind="function">
      <type></type>
      <name>write_buff_t</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>06852292786806957970c91988044199</anchor>
      <arglist>(sam_sid_t stream, wxMutex *mutex, wxCondition *condition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_NO_COPY_CLASS</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>6073ebfa7c082499eac83892018d91dc</anchor>
      <arglist>(write_buff_t)</arglist>
    </member>
    <member kind="variable">
      <type>wxMutex *</type>
      <name>mutex</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>b98858a95d451c4b47a03aad2557ba8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxCondition *</type>
      <name>condition</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>a9c8b14d71e43c71924d647f27d0fe38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>queued</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>8afd448062521d616112ca07d5e93471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>sending</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>52ace0c54808f288ef9658f62f0d38e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>removed</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>3fbd73f00f3e466f7672a322cd54bf20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sam_sid_t</type>
      <name>sid</name>
      <anchorfile>classCSamSession_1_1write__buff__t.html</anchorfile>
      <anchor>dd2155e98e10cdd2f95ac0a37abbd446</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSamSession::WriteCtx</name>
    <filename>structCSamSession_1_1WriteCtx.html</filename>
    <member kind="function">
      <type></type>
      <name>WriteCtx</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>fe802adda3e318a0aba2ffb2288a91c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WriteCtx</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>e77d6fa890e631d13264f35b83fc0613</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteMsg</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>9a6aabfabb8e06228ba0f9edbf3eda27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>__s</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>a59fec7083bcd1163921e6a9af360e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>buff_t *</type>
      <name>msg</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>689838704f652c03a42ce726ebf69da4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>usize_t</type>
      <name>nleft</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>3eaf23751f6df989d02acbe53b3ff3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>p</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>aea89e299f782b61953f3039b0aafcf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMutex</type>
      <name>mutex</name>
      <anchorfile>structCSamSession_1_1WriteCtx.html</anchorfile>
      <anchor>a191735eaaed1fab73d52485d1af029b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CScriptWebServer</name>
    <filename>classCScriptWebServer.html</filename>
    <base>CWebServerBase</base>
    <member kind="function">
      <type></type>
      <name>CScriptWebServer</name>
      <anchorfile>classCScriptWebServer.html</anchorfile>
      <anchor>015ca1fbcbc68a7c06a0dce18f44eb6d</anchor>
      <arglist>(CimulewebApp *webApp, const wxString &amp;templateDir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CScriptWebServer</name>
      <anchorfile>classCScriptWebServer.html</anchorfile>
      <anchor>794557a5a088599360c856b4714779fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>StartServer</name>
      <anchorfile>classCScriptWebServer.html</anchorfile>
      <anchor>774928b517e30bd6b7c6f847e0063644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>StopServer</name>
      <anchorfile>classCScriptWebServer.html</anchorfile>
      <anchor>dccb34e1d3b4428292d85449131a13dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessURL</name>
      <anchorfile>classCScriptWebServer.html</anchorfile>
      <anchor>9b842a7727679693a6bc05f6f4d1810e</anchor>
      <arglist>(ThreadData)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessImgFileReq</name>
      <anchorfile>classCScriptWebServer.html</anchorfile>
      <anchor>c7c9e7bd880e6d0262a17235e792baa1</anchor>
      <arglist>(ThreadData)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchDlg</name>
    <filename>classCSearchDlg.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CSearchDlg</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>901ad7f168d73a59d1a42a707e4fdb07</anchor>
      <arglist>(wxWindow *pParent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSearchDlg</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>59823e31694e65cd79dcd7c5a12edf94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddResult</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>ca7c875a51b9314eb49e2f2591bc721b</anchor>
      <arglist>(CSearchFile *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateResult</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>c45ae0d54a46d3df1e9871bedb87690e</anchor>
      <arglist>(CSearchFile *toupdate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckTabNameExists</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>fc82ace31ea9c518e29396266a3ff90f</anchor>
      <arglist>(const wxString &amp;searchString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateNewTab</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>98732694f32787230b00809218f919b3</anchor>
      <arglist>(const wxString &amp;searchString, long nSearchID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LocalSearchEnd</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>ab0b1873af869a1911e50bd4571ed373</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCatChoice</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>6acfa55dae3471a2ada25450fe09f4f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateHitCount</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>24a34cf970916a0e0a51c8fea6ec4191</anchor>
      <arglist>(CSearchListCtrl *page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetControls</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>d925cc6baf88a70f31b2242693a2274b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnBnClickedDownload</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>bed5b37a68ca258fe40d1d9c8224d37f</anchor>
      <arglist>(wxCommandEvent &amp;ev)</arglist>
    </member>
    <member kind="function">
      <type>CSearchListCtrl *</type>
      <name>GetSearchList</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>618e12cc4daddece53716560c0d8da81</anchor>
      <arglist>(long id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateProgress</name>
      <anchorfile>classCSearchDlg.html</anchorfile>
      <anchor>59088aee9dda68d26051344f4df8e953</anchor>
      <arglist>(uint32 new_value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchExpr</name>
    <filename>classCSearchExpr.html</filename>
    <member kind="function">
      <type></type>
      <name>CSearchExpr</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>554169600f8318083ab478ef374a92ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CSearchExpr</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>cf82e954570a9305e6deedbacc6c2591</anchor>
      <arglist>(const wxString &amp;pszString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>343832de3f5345f1d74d2803fa7d65b8</anchor>
      <arglist>(ESearchOperators eOperator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>fe434e0aa1f432a3ea0c5f50919cc514</anchor>
      <arglist>(const wxString &amp;pszString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>e54492325a45339960763248a549f0c8</anchor>
      <arglist>(const CSearchExpr *pexpr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Concatenate</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>63753b5a37021fc3dc7b19a0c64a795d</anchor>
      <arglist>(const wxString &amp;pstrString)</arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString</type>
      <name>m_aExpr</name>
      <anchorfile>classCSearchExpr.html</anchorfile>
      <anchor>0b93263f806222c86091e96a37bd9f89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchExprTarget</name>
    <filename>classCSearchExprTarget.html</filename>
    <member kind="function">
      <type></type>
      <name>CSearchExprTarget</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>a47a94a7eff00eb599e830b082402bf2</anchor>
      <arglist>(CMemFile *pData, EUtf8Str eStrEncode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteBooleanAND</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>d206eebe66492bf994764d4881f989ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteBooleanOR</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>cb80875a20b26f8c3fef7a5ad957ea6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteBooleanNOT</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>377e3f1a96f6a1e7f04df4bd7a3cded4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteMetaDataSearchParam</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>9a4546aa2a8234d55d2ef59c787b390e</anchor>
      <arglist>(const wxString &amp;rstrValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteMetaDataSearchParam</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>9ead3d0e009e093746056cc3b33b1089</anchor>
      <arglist>(uint8 uMetaTagID, const wxString &amp;rstrValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteMetaDataSearchParamASCII</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>de645be688325875446820a66a7a2849</anchor>
      <arglist>(uint8 uMetaTagID, const wxString &amp;rstrValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteMetaDataSearchParam</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>f9a2593cb0ae1815247d8cd924014a85</anchor>
      <arglist>(const wxString &amp;pszMetaTagID, const wxString &amp;rstrValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteMetaDataSearchParam</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>d2ad51604258d054d6f21fb398741524</anchor>
      <arglist>(uint8 uMetaTagID, uint8 uOperator, wxULongLong uValue, bool WXUNUSED(bEd2k))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteOldMinMetaDataSearchParam</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>bc5aa33bf63b7e88b65c0bb344fbf2af</anchor>
      <arglist>(uint8 uMetaTagID, wxULongLong uValue, bool bEd2k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteOldMaxMetaDataSearchParam</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>3fbb1b019274c752199d313e1524bed6</anchor>
      <arglist>(uint8 uMetaTagID, wxULongLong uValue, bool bEd2k)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CMemFile *</type>
      <name>m_data</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>dc200e329827684c7779a1ff48090642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EUtf8Str</type>
      <name>m_eStrEncode</name>
      <anchorfile>classCSearchExprTarget.html</anchorfile>
      <anchor>dbe85b82429295b076199e0355652002</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchFile</name>
    <filename>classCSearchFile.html</filename>
    <base>CAbstractFile</base>
    <member kind="function">
      <type></type>
      <name>CSearchFile</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>df8d5e3747089479af1b6c8ec8bd44b9</anchor>
      <arglist>(const CMemFile &amp;in_data, long nSearchID, const CI2PAddress &amp;nServerPort=CI2PAddress::null, const wxString &amp;pszDirectory=wxEmptyString, bool nKademlia=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CSearchFile</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>1dfe0525817150fb0c389c91a86b2c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetIntTagValue</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>be481e0da6a124b152245ea2ab0f695c</anchor>
      <arglist>(uint8 tagname) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetStrTagValue</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>884e8b68546a6115d667f70e48477d26</anchor>
      <arglist>(uint8 tagname) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSources</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>a9f3904aa5e5a6306ccb1b1e5d9102bb</anchor>
      <arglist>(uint32 count, uint32 count_complete)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetFileSize</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>a3708c828cdb0bd931d9d3f84e72e8a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetSearchID</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>75cde4a9711a03da453c1140efab04c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetClientDest</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>63bbd97dc7860cb30c65e8cfe5507e79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientDest</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>c75f98a2853a230268ab2d5611b95366</anchor>
      <arglist>(const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKademlia</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>df7d826e0a99603e3236308d41d5c700</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IsComplete</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>f933daca5a9ce8c884055500009ec538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IsComplete</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>36ae7a019f04cd2da3ab32707e8b577c</anchor>
      <arglist>(uint32 uSources, uint32 uCompleteSources) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CPartFile</name>
      <anchorfile>classCSearchFile.html</anchorfile>
      <anchor>985ebb73b9fcc328266ae4b0040d54c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchList</name>
    <filename>classCSearchList.html</filename>
    <member kind="function">
      <type></type>
      <name>CSearchList</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>e6aef234c7b855c7c3cac3a51c1f1942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSearchList</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>dbb1f58c09eed601d1b7684b541f78ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>50b8a7b75cf23ad517681fa670b6e09b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>StartNewSearch</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>9c173a2681df164680636e2a8fc76e09</anchor>
      <arglist>(uint32 *nSearchID, SearchType search_type, const wxString &amp;searchString, const wxString &amp;typeText, const wxString &amp;extension, wxULongLong min, wxULongLong max, uint32 availability)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessSearchanswer</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>9b540cc00c3d814e783a9006d93fd726</anchor>
      <arglist>(const char *in_packet, uint32 size, CUpDownClient *Sender, bool *pbMoreResultsAvailable, const wxString &amp;pszDirectory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessSearchanswer</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>f06ca1ba995a1e9620326f83ddaa24cd</anchor>
      <arglist>(const char *packet, uint32 size, bool bOptUTF8, const CI2PAddress &amp;nServerDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUDPSearchanswer</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>81471f32d9cfa425e6d6214a206f4ec2</anchor>
      <arglist>(const CMemFile &amp;packet, bool bOptUTF8, const CI2PAddress &amp;nServerDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveResults</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>3c44f496e54e3ea14645a2dc28da54ce</anchor>
      <arglist>(long nSearchID)</arglist>
    </member>
    <member kind="function">
      <type>const SearchList</type>
      <name>GetSearchResults</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>3e0770e65fc1240e01016b283156a5c7</anchor>
      <arglist>(long nSearchID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFileToDownloadByHash</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>fead6617ca0030df240de573ad9b7ee1</anchor>
      <arglist>(const CMD4Hash &amp;hash, uint8 cat=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LocalSearchEnd</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>f8aec4e1da67cf5bcd2b67060c9b4192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopGlobalSearch</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>1747072e68fd54532064e4e190fa8661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearThreadData</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>5bf2b9869404162c3dc3095f53ed50e3</anchor>
      <arglist>(CGlobalSearchThread *thread=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsGlobalSearch</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>f3effb52e50a2d0569955f4a3230fc82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SearchInProgress</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>d4a55cb203c2b2228c0a3a9733deb322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Progress</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>8ac163f0e9544a5728318b28fb6ca1b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>KademliaSearchKeyword</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>603fe987e562b6502a5d22f9d7281ad8</anchor>
      <arglist>(uint32 searchID, const Kademlia::CUInt128 *pfileID, const wxString &amp;name, wxULongLong size, const wxString &amp;type, const TagList &amp;taglist)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CSearchListCtrl</name>
      <anchorfile>classCSearchList.html</anchorfile>
      <anchor>79251b8cbc171a8b540d7b5c1d856b0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchListCtrl</name>
    <filename>classCSearchListCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CSearchListCtrl</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>f646f6a937238b0f5027482d7ffb06a8</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;mulelistctrl&quot;))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CSearchListCtrl</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>a94af812752809984e5516d450cb92b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddResult</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>2df4496097fdf7dde5648c6c06bd947b</anchor>
      <arglist>(CSearchFile *toshow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateResult</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>c3d870efae6bac83bad1186100479d86</anchor>
      <arglist>(CSearchFile *toupdate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowResults</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>fb852d6ba26d08480cebde35d4cbe387</anchor>
      <arglist>(long ResultsId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateItemColor</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>8b4d6df23bd7a2f099a3aeb95b3c32d0</anchor>
      <arglist>(long index)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetSearchId</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>fe4e844950c614f3a9232534212c2e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilter</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>5081dd67cb50915c7940546acc67915c</anchor>
      <arglist>(const wxString &amp;regExp, bool invert, bool filterKnown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableFiltering</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>615f00b0ebb5ae43f06ed1c3023a6c2d</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetHiddenItemCount</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>3808d41ef7dcb443cf53480e261cc54a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DownloadSelected</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>6976553a76655996055bd05363f9cff8</anchor>
      <arglist>(int category=-1)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::list&lt; CSearchFile * &gt;</type>
      <name>ResultList</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>cd608e155a61e27aead18e50d2c2c9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsFiltered</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>a9147fbbc0ed07f8eebd4828b81d35a7</anchor>
      <arglist>(const CSearchFile *file)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>AltSortAllowed</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>ebee6406c80a1812d2e93bfd28e83637</anchor>
      <arglist>(unsigned column) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRightClick</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>88d562c49ff8807a5621c15f049a68b0</anchor>
      <arglist>(wxListEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnItemActivated</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>2ac8cfb8fd71d90620d9ffefe9d0f645</anchor>
      <arglist>(wxListEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnColumnLClick</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>d9b37f6a79f9d0d5497232b75155e258</anchor>
      <arglist>(wxListEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnColumnResize</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>d4a38a02a7928cfbe106f1c712652027</anchor>
      <arglist>(wxListEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPopupGetUrl</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>084fc270a681a2c2b08e637601da776e</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRazorStatsCheck</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>4edf096bf4fb7675a3a53b80ed277962</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPopupDownload</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>b259e217b4c29d293bd3f3387b854ada</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int wxCALLBACK</type>
      <name>SortProc</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>9d856c0e950732f92aa80a0897c17899</anchor>
      <arglist>(long item1, long item2, long sortData)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>SyncLists</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>b442e62bf10fd4b8ecdb2fd1fac3fd52</anchor>
      <arglist>(CSearchListCtrl *src, CSearchListCtrl *dst)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>SyncOtherLists</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>d90ede82bcd0415d4636a297a211d1db</anchor>
      <arglist>(CSearchListCtrl *src)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ResultList</type>
      <name>m_filteredOut</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>aa42f4f4389fcd31d3ff95910de513aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxRegEx</type>
      <name>m_filter</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>d567283137abbb6e702e8c6c57a744d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_filterText</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>451a338fe1162e700782dbeb37bc202e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_filterKnown</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>e09b1b9bd971f16a21639082373ad8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_invert</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>be9e0e3a1c1fafc3614a9673ad77e71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_filterEnabled</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>4dee4a2321051eec9f19f95df5126aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>m_nResultsID</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>518ab443fd868056e347498aa499b157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; CSearchListCtrl * &gt;</type>
      <name>s_lists</name>
      <anchorfile>classCSearchListCtrl.html</anchorfile>
      <anchor>49841f472ac849fee4c1f63843554648</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSearchListRem</name>
    <filename>classCSearchListRem.html</filename>
    <base>CRemoteContainer&lt; CSearchFile, CMD4Hash, CEC_SearchFile_Tag &gt;</base>
    <member kind="function">
      <type></type>
      <name>CSearchListRem</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>47b12b4fd3c713c3ec3141c26679cf3d</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveResults</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>6eecf5c5771c3476b610018812b40caf</anchor>
      <arglist>(long nSearchID)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>StartNewSearch</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>831340c5cc10938cbeb098cfe67eb061</anchor>
      <arglist>(uint32 *nSearchID, SearchType search_type, wxString &amp;searchString, wxString &amp;typeText, wxString &amp;extension, wxULongLong min, wxULongLong max, uint32 availability)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopGlobalSearch</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>41adce94bf0e53f547d7c424500d065c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CSearchFile *</type>
      <name>CreateItem</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>e1fdcf89e9a9cb170798c172e6eae87e</anchor>
      <arglist>(CEC_SearchFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>3539e928e3cde6a519d4b491d535d570</anchor>
      <arglist>(CSearchFile *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>GetItemID</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>ef33dd2f116da36063b3d5585c3f9283</anchor>
      <arglist>(CSearchFile *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessItemUpdate</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>073c7b5765ffa532b7894b97ae5de414</anchor>
      <arglist>(CEC_SearchFile_Tag *, CSearchFile *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Phase1Done</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>720c07681b147828d12250328bbd8e93</anchor>
      <arglist>(const CECPacket *)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_curr_search</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>ae7fc60ba5fbe284fae447ade49f2498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; long, std::vector&lt; CSearchFile * &gt; &gt;</type>
      <name>m_Results</name>
      <anchorfile>classCSearchListRem.html</anchorfile>
      <anchor>af65fd4b42d92bb003dbd90a5657c1ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CSeekFailureException</name>
    <filename>structCSeekFailureException.html</filename>
    <base>CIOFailureException</base>
    <member kind="function">
      <type></type>
      <name>CSeekFailureException</name>
      <anchorfile>structCSeekFailureException.html</anchorfile>
      <anchor>7b49b637731c75985a673ddbb4002c80</anchor>
      <arglist>(const wxString &amp;desc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServer</name>
    <filename>classCServer.html</filename>
    <member kind="function">
      <type></type>
      <name>CServer</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>fd485d17ad0c87421d561d1c48cd59eb</anchor>
      <arglist>(ServerMet_Struct *in_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CServer</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>80e808277adb8168c146dba53dab0088</anchor>
      <arglist>(const CI2PAddress &amp;in_dest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CServer</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>c8218c0ea4ce297d4366d07834a44dfc</anchor>
      <arglist>(CServer *pOld)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CServer</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>f6da9f8b52bdc049e21cd7c687ef4d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTag</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>719591235fa4aa26b9559219c4b2a8ee</anchor>
      <arglist>(CTag &amp;in_tag)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetListName</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>fe87aa605022d3c50c383ed17a5f35f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>GetAddress</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>4b37a8539c3b3bdbbbc9418fab9d034c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress &amp;</type>
      <name>GetDest</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>9f150f5e62880bb2e9e6289849ede120</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress &amp;</type>
      <name>GetConnDest</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>60c7062f0985bd7e7c0f6f32521a91ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDest</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>eea0e6177b27c07ca161a616cc907ee2</anchor>
      <arglist>(const CI2PAddress &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddTags</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>9a1d9fa42674c7dca579e384e2405b83</anchor>
      <arglist>(const TagList &amp;taglist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetListName</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>1324d33f32024bd953cc7d2fd63bf3bb</anchor>
      <arglist>(const wxString &amp;newname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDescription</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>415fc280418181850f0a2360daa090cc</anchor>
      <arglist>(const wxString &amp;newdescription)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFiles</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>186bb14e149f2ade0761530d3c47efb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetUsers</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>6e8f05a5747083de44b57e5aa5c86836</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetDescription</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>7d0a0a8c70b3d4c8f88c51107d6b62b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetPing</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>2a8ce3d97a61ce697fe72631418cc611</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetPreferences</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>cbfffcef8e627dae6b5a6cdd088c52a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetMaxUsers</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>e4cd4bb356711be5a036d3c2ed865ef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxUsers</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>2c26f0d6d6549a95d7a223542d547b32</anchor>
      <arglist>(uint32 in_maxusers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>4c8cffa3248c5889ed4793c2299a511c</anchor>
      <arglist>(uint32 in_users)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>77b866894811a22fb1b1e38df84d7d32</anchor>
      <arglist>(uint32 in_files)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetFailedCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>4fededac7b0e86d66c73de7bd70d778b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFailedCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>152191099b553b10ddab66a0dad40e65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFailedCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>eb377303e93e6828abb2e0d18422b62c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDestID</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>a6163860157146fa76c0f33d313f9e83</anchor>
      <arglist>(const CI2PAddress &amp;newdest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasDynDest</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>1a9079b62b698dee1d35168a674547ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDynDest</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>8839c04aecd7284353586c1dc8115cae</anchor>
      <arglist>(const wxString &amp;newdyndest)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetDynDest</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>8adc1e4216a45abb7f831809424b1bf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastPinged</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>ef4187e834eab2bc644dc161673003de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastPinged</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>545b36f98670081409b0e1178ed2f423</anchor>
      <arglist>(uint32 in_lastpinged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPing</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>c5214ccc8284d00eacae33cc45e43386</anchor>
      <arglist>(uint32 in_ping)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreference</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>2008d9552fe630bdcfe3fea0b6a0586d</anchor>
      <arglist>(uint32 in_preferences)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIsStaticMember</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>09c7bdc411c85e8a5302ad4c150a6930</anchor>
      <arglist>(bool in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStaticMember</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>5c4d1a3c4d1d3e0fe798dfbf89842d6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetChallenge</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>f65b18932f5fed1d3588c51b40b3f039</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChallenge</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>74c52f064d6dbf7251598a4f1845f313</anchor>
      <arglist>(uint32 in_challenge)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetSoftFiles</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>453256a9068ba36572be2083d2b138e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSoftFiles</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>6f7985c45610a17a34c45ce641176f71</anchor>
      <arglist>(uint32 in_softfiles)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetHardFiles</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>d55aacecd8c41398e8f6e865f92d8a53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetHardFiles</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>a640121778cb5719fb80cafbf11d48d8</anchor>
      <arglist>(uint32 in_hardfiles)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetVersion</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>8897f483dc35ad43c2679f30b9bd8d64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVersion</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>00cad4386b3f6a074bffec4b99d05933</anchor>
      <arglist>(const wxString &amp;pszVersion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTCPFlags</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>e5d7df89b51013aec8f4940393948a18</anchor>
      <arglist>(uint32 uFlags)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetTCPFlags</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>bfb469f06c2cf84e90eba4722d61a028</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUDPFlags</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>3e0efab19adfd0288488efe28fa8a8d5</anchor>
      <arglist>(uint32 uFlags)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetUDPFlags</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>e32175d7a76a8be1a4d56d99f75a555e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetDescReqChallenge</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>066ac3614bced2722dcaf7d156ffa3ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDescReqChallenge</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>155f0fac2db8dad33a15d0a95989bb02</anchor>
      <arglist>(uint32 uDescReqChallenge)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetLastDescPingedCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>af56809687acf07d579e6050351ff154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastDescPingedCount</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>53c0012b555df056ec2f03d5e5a80799</anchor>
      <arglist>(bool reset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetUnicodeSupport</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>2b3d22843299a41efc48cdb8a41407f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetAuxPortsList</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>1eda8cab7ade824646064dc23e03542c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAuxPortsList</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>8d6566f16b41198f7a57b49329eac85a</anchor>
      <arglist>(const wxString &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetLastDNSSolve</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>37df098eb0a5c5b7901dd9dee9d74007</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastDNSSolve</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>781b02c670c355bda5a66f7f3fe90ac7</anchor>
      <arglist>(uint64 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetDNSError</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>efe9da4a4bb1116bc5bac0a81fe2c00f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDNSError</name>
      <anchorfile>classCServer.html</anchorfile>
      <anchor>2964666663b69ff11e700e8d76ca3305</anchor>
      <arglist>(bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerConnect</name>
    <filename>classCServerConnect.html</filename>
    <member kind="function">
      <type></type>
      <name>CServerConnect</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>6b5a960f72c746d700c748d636e56c97</anchor>
      <arglist>(CServerList *in_serverlist, const wxFileName &amp;destFile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CServerConnect</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>58f4820d12bf89fb22e803e0cb84b3c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectionFailed</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>6ca2b3fb1b5c12829c682a022d66b5ad</anchor>
      <arglist>(CServerSocket *sender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectionEstablished</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>0704cd768cbe55874390c24b78912b40</anchor>
      <arglist>(CServerSocket *sender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectToAnyServer</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>73baaeb366bc9e18ee7b113682c90592</anchor>
      <arglist>(bool prioSort=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectToServer</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>0e9b4cb28eab4fb54370b6daed3c9f23</anchor>
      <arglist>(CServer *toconnect, bool multiconnect=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopConnectionTry</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>aafe50e090c3b6e722f7b75ef356942b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckForTimeout</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>a4cb398a604d52c1ca5662529f806346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DestroySocket</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>b23d5c3708b7ac7766d5203711ceeee5</anchor>
      <arglist>(CServerSocket *pSck)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendPacket</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>71052d64c6304ad89b203270bb348e41</anchor>
      <arglist>(CPacket *packet, bool delpacket=true, CServerSocket *to=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUDPSocketAvailable</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>75a443792fb4075a18946cf35d62e251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendUDPPacket</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>2b281bd48a2f1a3e1a73b1aee1e57632</anchor>
      <arglist>(CPacket *packet, CServer *host, bool delpacket=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Disconnect</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>d96eb40f3370e43c79b3660aca94bdc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnecting</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>4659610363c1436bf98be2cd6de43013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>80a21f1e2616ff1286dccee19011563f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetClientDest</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>0dd4c6be01fe483c375752678c1c75ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetCurrentServer</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>c50aea2ccc4293afbe9b9e15fb6722bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientDest</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>10d2f8e411e2c5335e8841e25703a3d5</anchor>
      <arglist>(const CI2PAddress &amp;newdest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLocalServer</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>af95655aad9d19be3f8e94939fc23640</anchor>
      <arglist>(const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TryAnotherConnectionrequest</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>e654f82ff869ce6ec02b108b335a0e6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSingleConnect</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>b86502f4718b80132da0dcbf26281057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeepConnectionAlive</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>556547dc22856d1d3969d605238c6d82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>clientdest</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>48aee5bf8dbde5e0bc85faca00986ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>pendingConnects</name>
      <anchorfile>classCServerConnect.html</anchorfile>
      <anchor>c70dacfe7f7829fdf7de7a6c7b76b9af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerConnectRem</name>
    <filename>classCServerConnectRem.html</filename>
    <base>CECPacketHandlerBase</base>
    <member kind="function">
      <type></type>
      <name>CServerConnectRem</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>ac3719dd4d038b3830fe72043238cf80</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReQuery</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>e52c7873678b14578c08a650eb258b54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>76e72705ffc592ce6eeaa830d56fb7c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnecting</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>b8370969770473b3d4e4f28638a6c102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetClientID</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>daab42c7b1dd30390a5c5bd3efc3bc50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetCurrentServer</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>7fc4affb22de12f3ea726c39a97d846b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectToServer</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>bf74551a27335f7b3005b08d4ab3026c</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectToAnyServer</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>e4831680a727cf87a3415b421d609510</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopConnectionTry</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>16d02765d8a13c044152b36748b6eee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Disconnect</name>
      <anchorfile>classCServerConnectRem.html</anchorfile>
      <anchor>a4d12b42602c794854fc4422d34620c7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerList</name>
    <filename>classCServerList.html</filename>
    <base>CObservableQueue&lt; CServer * &gt;</base>
    <member kind="function">
      <type></type>
      <name>CServerList</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>f773376de23bda565e03f252434a0042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CServerList</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>3eb85c85f4de1ee8803804d126fce1b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Init</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>7bf635abecbb793b48939b5c1978205b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddServer</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>706430efa1c9ba6892cade533793be24</anchor>
      <arglist>(CServer *in_server, bool fromUser=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveServer</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>a76a76f65181b1ca7d41b691abf64e8b</anchor>
      <arglist>(CServer *in_server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllServers</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>a7a705a157aa5bb02fcb5a3ace227131</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveDeadServers</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>db7cd56a0d08d98c904fa43729bd898c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadServerMet</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>15b90b70eb51594beea54569ea0226b7</anchor>
      <arglist>(const wxString &amp;strFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveServerMet</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>f874a3fe0ed819ed63271fb0360dfa8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ServerStats</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>2e6d9fa9ba3c23d123e9b826195beb1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetServerPos</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>a48250963383d95d3e255e1403336d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetNextServer</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>1ae8817fa46d2df231a952a46684341c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetServerCount</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>a9473f9bc7caf02828dca54bdb03349c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetServerByAddress</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>4e1ee2660e210c7c1dff5fb7d3ffc15b</anchor>
      <arglist>(const wxString &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetServerByDest</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>387f63665454e0a45617a0b9500e9f61</anchor>
      <arglist>(const CI2PAddress &amp;nDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStatus</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>fe8992512d4c1fed265dd14550ef212c</anchor>
      <arglist>(uint32 &amp;failed, uint32 &amp;user, uint32 &amp;file, uint32 &amp;tuser, uint32 &amp;tfile, float &amp;occ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetUserFileStatus</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>3b83714c248a6d65230a310acc51028e</anchor>
      <arglist>(uint32 &amp;user, uint32 &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Sort</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>635825293b9d5576baf8be67e5d9efb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateServerMetFromURL</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>08f5cd3a79f9154b2b0466fe91b28e0c</anchor>
      <arglist>(const wxString &amp;strURL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DownloadFinished</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>552e685444f12b8f14e451832061a006</anchor>
      <arglist>(uint32 result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AutoDownloadFinished</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>5381e010c4253dec3f522f8c46197b0c</anchor>
      <arglist>(uint32 result)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetAvgFile</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>ff09c2aad7e8665b92bab90516adcb70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const CServer * &gt;</type>
      <name>CopySnapshot</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>96955ffb85b6e21f207db185a5b3610e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CServerListCtrl</name>
      <anchorfile>classCServerList.html</anchorfile>
      <anchor>7c1360ef7ffe151b7936124f65ebdbef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerListCtrl</name>
    <filename>classCServerListCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CServerListCtrl</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>2bbe26cd934a341b4647055594ddad35</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;mulelistctrl&quot;))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CServerListCtrl</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>883d87cefd2440f973ec878786a5d7d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddServer</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>43da5dbf809057ab3f10f94687e3623a</anchor>
      <arglist>(CServer *toadd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveServer</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>2b64c37da699b86bfc03d872ce20be92</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllServers</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>5bb411e09921f47d356641d49a2ea425</anchor>
      <arglist>(int state=wxLIST_STATE_DONTCARE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshServer</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>62724038ad68110fc1bea896251b8c8a</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HighlightServer</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>6b26c3942db2f6df1e3c31c740d73de7</anchor>
      <arglist>(const CServer *server, bool highlight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetStaticServer</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>4eea21358e81db1b7b5df6596ed6b256</anchor>
      <arglist>(CServer *server, bool isStatic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowServerCount</name>
      <anchorfile>classCServerListCtrl.html</anchorfile>
      <anchor>64e93af8fa4071e5840af6b7f5ca8c03</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerListRem</name>
    <filename>classCServerListRem.html</filename>
    <base>CRemoteContainer</base>
    <member kind="function">
      <type></type>
      <name>CServerListRem</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>32855d85378dfe087edf3d06f996f18c</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetUserFileStatus</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>492e8586772ef0b99a18f15dc338b0a6</anchor>
      <arglist>(uint32 &amp;total_user, uint32 &amp;total_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateUserFileStatus</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>5a9753f12c444fd261d13c21dfe88dc4</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetServerByAddress</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>0cfc18880a44d795b3533ba8330743e4</anchor>
      <arglist>(const wxString &amp;address, uint16 port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReloadControl</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>4c9ffca206cbab3b7afb5603899aee49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveServer</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>723313f67431021c77fe13878dda71a7</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateServerMetFromURL</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>60ea68ca07964216f03af9a3220c1c95</anchor>
      <arglist>(wxString url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveServerMet</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>af55b2a87faf7380e7f959c9246dee2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>CreateItem</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>9abc13c61492e8f2f4706200632bef71</anchor>
      <arglist>(CEC_Server_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>a9d3e29ddad7d9e0f1124e4fae44c3a2</anchor>
      <arglist>(CServer *)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetItemID</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>252e5cfef0b503e8df5cfa14ba48af9f</anchor>
      <arglist>(CServer *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessItemUpdate</name>
      <anchorfile>classCServerListRem.html</anchorfile>
      <anchor>5e36ad46f0439c8554ec8040e6eb1941</anchor>
      <arglist>(CEC_Server_Tag *, CServer *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerSocket</name>
    <filename>classCServerSocket.html</filename>
    <base>CEMSocket</base>
    <member kind="function">
      <type></type>
      <name>CServerSocket</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>5251af26dfe2cde3a49deefcdfec3696</anchor>
      <arglist>(CServerConnect *in_serverconnect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CServerSocket</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>2efd5612c3e0258a6c3bb4fccca80bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectToServer</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>4b88c4e4e1357351602ed98853677cf2</anchor>
      <arglist>(CServer *server)</arglist>
    </member>
    <member kind="function">
      <type>sint8</type>
      <name>GetConnectionState</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>2476c6d5028b356a91273e829b6705a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastTransmission</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>951202f359e440f60d1ffeae927239ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnClose</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>981a90655deba912dfa5ce315c1e5cdd</anchor>
      <arglist>(wxSocketError nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnConnect</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>19645062931310e4057a73377eadb89b</anchor>
      <arglist>(wxSocketError nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnReceive</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>8163e8c87d5802aa91e1ff76d91bdc0d</anchor>
      <arglist>(wxSocketError nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnError</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>6d0530b8393513a111c4c217866f5021</anchor>
      <arglist>(wxSocketError nErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PacketReceived</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>31b05820b1fcade779640a8a9af7063f</anchor>
      <arglist>(CPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPacket</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>0f6a39e240dfffbf7673d76f1eeba377</anchor>
      <arglist>(CPacket *packet, bool delpacket=true, bool controlpacket=true, uint32 actualPayloadSize=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSolving</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>fc3f39e8b0528dc863a093a9e3a0fd45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnHostnameResolved</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>ae20d0bd545089d36738de4d2cd4c359</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>CServer *</type>
      <name>GetServerConnected</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>1cbc5c14987fa760f0329981123165d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>info</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>4252e90ad29f96aae2089fe98001efc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CServerConnect</name>
      <anchorfile>classCServerSocket.html</anchorfile>
      <anchor>28e5e515e657d2f8581c28ee9e06d537</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerSocketHandler</name>
    <filename>classCServerSocketHandler.html</filename>
    <base>wxEvtHandler</base>
    <member kind="function">
      <type></type>
      <name>CServerSocketHandler</name>
      <anchorfile>classCServerSocketHandler.html</anchorfile>
      <anchor>fa8e9d98d87f2fd97220a6ffe3eea1ee</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CServerUDPSocket</name>
    <filename>classCServerUDPSocket.html</filename>
    <base>CMuleUDPSocket</base>
    <member kind="function">
      <type></type>
      <name>CServerUDPSocket</name>
      <anchorfile>classCServerUDPSocket.html</anchorfile>
      <anchor>bc1392a721e274c1b1d411ab74b617ce</anchor>
      <arglist>(wxString destKeyName, const CProxyData *ProxyData=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPacket</name>
      <anchorfile>classCServerUDPSocket.html</anchorfile>
      <anchor>ec4b665743b043617e81cc8e5cd5950a</anchor>
      <arglist>(CPacket *packet, CServer *host, bool delPacket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnHostnameResolved</name>
      <anchorfile>classCServerUDPSocket.html</anchorfile>
      <anchor>664464f2557e03a0faefeceb0d5b5a0e</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <class kind="struct">CServerUDPSocket::ServerUDPPacket</class>
  </compound>
  <compound kind="class">
    <name>CServerWnd</name>
    <filename>classCServerWnd.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CServerWnd</name>
      <anchorfile>classCServerWnd.html</anchorfile>
      <anchor>58fed716868a43c54651a8dc793e6578</anchor>
      <arglist>(wxWindow *pParent, int splitter_pos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CServerWnd</name>
      <anchorfile>classCServerWnd.html</anchorfile>
      <anchor>bf91e052747907e23b4d0e5862dde9fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateServerMetFromURL</name>
      <anchorfile>classCServerWnd.html</anchorfile>
      <anchor>ca0639c8aa28e3f9222d476193988e99</anchor>
      <arglist>(const wxString &amp;strURL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateED2KInfo_notforI2P</name>
      <anchorfile>classCServerWnd.html</anchorfile>
      <anchor>8e73b44cd7c76f59795e4f2058b968ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateKadInfo</name>
      <anchorfile>classCServerWnd.html</anchorfile>
      <anchor>7e163665bb2107de15cee3f7c2d46b5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CServerListCtrl *</type>
      <name>serverlistctrl</name>
      <anchorfile>classCServerWnd.html</anchorfile>
      <anchor>3c0b204f514709edf6580b642d1b09b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSession</name>
    <filename>classCSession.html</filename>
    <member kind="function">
      <type>void</type>
      <name>LoadVars</name>
      <anchorfile>classCSession.html</anchorfile>
      <anchor>22cb45408569769cc68873ba9bcecbad</anchor>
      <arglist>(CParsedUrl &amp;url)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_loggedin</name>
      <anchorfile>classCSession.html</anchorfile>
      <anchor>92f2fc952f2acff427991c3faa212794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>m_last_access</name>
      <anchorfile>classCSession.html</anchorfile>
      <anchor>058ec7f17878da31dc4bbd8965e96d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>m_vars</name>
      <anchorfile>classCSession.html</anchorfile>
      <anchor>5d7b690561367343ee7d22badfb17ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>m_get_vars</name>
      <anchorfile>classCSession.html</anchorfile>
      <anchor>98945e5b09b27982cb3f463d81b48f22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSHA</name>
    <filename>classCSHA.html</filename>
    <base>CAICHHashAlgo</base>
    <member kind="function">
      <type></type>
      <name>CSHA</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>17bfae9c81de4bd94b535f45be321560</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CSHA</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>a9e9afd34bb2536a090ab9d6e248912a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Reset</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>3d8a2243d9cd9250b97a8da16b992edb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Add</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>7673ce8d88186086da48f76f0256ebaa</anchor>
      <arglist>(const void *pData, uint32 nLength)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Finish</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>d5cfa08400f2a4ea51300a24c9f84bf2</anchor>
      <arglist>(CAICHHash &amp;Hash)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GetHash</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>267b80d8a79e1b46234607b1753719ac</anchor>
      <arglist>(CAICHHash &amp;Hash)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Compile</name>
      <anchorfile>classCSHA.html</anchorfile>
      <anchor>a1a0ba82e70592e0ab185d91acf183e6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSharedFileList</name>
    <filename>classCSharedFileList.html</filename>
    <member kind="function">
      <type></type>
      <name>CSharedFileList</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>458c5503715fe42769f282423c7671a1</anchor>
      <arglist>(CKnownFileList *in_filelist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSharedFileList</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>71b2022a918ba28ffdf482371ef0fb31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddFile</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>99300f91d1079bdf6c681ee547deadd5</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reload</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>7eb9a7736c9d437179148b1c52870192</anchor>
      <arglist>(bool firstload=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SafeAddKFile</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>5741830d5c5a8ef53887ac30843a36d7</anchor>
      <arglist>(CKnownFile *toadd, bool bOnlyAdd=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFile</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>125fac1128ded167a3f2a327da7a3578</anchor>
      <arglist>(CKnownFile *toremove)</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile *</type>
      <name>GetFileByID</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>14881266b0f6090869ad599d5ceb2530</anchor>
      <arglist>(const CMD4Hash &amp;filehash)</arglist>
    </member>
    <member kind="function">
      <type>short</type>
      <name>GetFilePriorityByID</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>cad6d7bbcda22a9742d9a91a76b54785</anchor>
      <arglist>(const CMD4Hash &amp;filehash)</arglist>
    </member>
    <member kind="function">
      <type>const CKnownFile *</type>
      <name>GetFileByIndex</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>3e313b810d2082e9dc6b779bbd6b3f9c</anchor>
      <arglist>(unsigned int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateOfferedFilePacket</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>f1290a919242897563babc39e219e50e</anchor>
      <arglist>(CKnownFile *cur_file, CMemFile *files, CServer *pServer, CUpDownClient *pClient)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFileCount</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>e7c2cb5ab24813a4842bbb7f7cdd8cd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyFileList</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>1c10715f884a9bf71e27881649dcf4c7</anchor>
      <arglist>(std::vector&lt; CKnownFile * &gt; &amp;out_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateItem</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>a057a959c0743df6ca93d2dc258f11b2</anchor>
      <arglist>(CKnownFile *toupdate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFilesFromDirectory</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>5be0407ca6b16120c382c8ce52759d97</anchor>
      <arglist>(wxString directory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSharedFilesByDirectory</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>0923ecce0f99b433abd306624ef85a64</anchor>
      <arglist>(const wxString directory, CTypedPtrList&lt; CPtrList, CKnownFile * &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearED2KPublishInfo</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>993b3a443cbf8ef4d881c0bc9250c7f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RepublishFile</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>fcb2e1299429285db8c21c9c95b3e366</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>f4066ca68c9a495d5ff83f6729f003d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PublishNextTurn</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>f170c158d64d27e8c90f8757b9e16b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RenameFile</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>489b53c0a5fa333e364b02fe5199a848</anchor>
      <arglist>(CKnownFile *pFile, const wxString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Publish</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>5adc9cf22436621677bfd2451b5722ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKeywords</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>db598d0e117deccf3f7ef0975fb5d830</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKeywords</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>31f8a4f0539f4ea34a6df89b43e7a0fb</anchor>
      <arglist>(CKnownFile *pFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearKadSourcePublishInfo</name>
      <anchorfile>classCSharedFileList.html</anchorfile>
      <anchor>9a526fdea0b9050089b38b89b134d225</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSharedFilesCtrl</name>
    <filename>classCSharedFilesCtrl.html</filename>
    <base>CMuleListCtrl</base>
    <member kind="function">
      <type></type>
      <name>CSharedFilesCtrl</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>af5cca9a1e0f458431b91c54b4bbd215</anchor>
      <arglist>(wxWindow *parent, int id, const wxPoint &amp;pos, wxSize size, int flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSharedFilesCtrl</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>affe7a2b8c31dd64b2f856d819b33f14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowFileList</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>47ffdac07f6dfbf372e88ac1b93ef340</anchor>
      <arglist>(CSharedFileList *list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowFile</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>267d67354004a7702330767fe52eedff</anchor>
      <arglist>(CKnownFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFile</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>a150f1c60f7d3a5c635545a636d1a9ce</anchor>
      <arglist>(CKnownFile *toremove)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateItem</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>03d256e062ecad7d24c9d000e2f7a919</anchor>
      <arglist>(CKnownFile *toupdate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowFilesCount</name>
      <anchorfile>classCSharedFilesCtrl.html</anchorfile>
      <anchor>ac479d98a301fd70307c8c9a9eb7f7eb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSharedFilesRem</name>
    <filename>classCSharedFilesRem.html</filename>
    <base>CRemoteContainer&lt; CKnownFile, CMD4Hash, CEC_SharedFile_Tag &gt;</base>
    <member kind="function">
      <type></type>
      <name>CSharedFilesRem</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>8e11bad16648860349caea923e9ab617</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile *</type>
      <name>GetFileByID</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>453df99cd4e9f4599ec112c62a5e819c</anchor>
      <arglist>(CMD4Hash id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilePrio</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>98dcb943cd98582a6fad4709af6d145e</anchor>
      <arglist>(CKnownFile *file, uint8 prio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFilesFromDirectory</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>8b3c733876aea32ddc5ec9b062e498da</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reload</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>91b42cdcf5056f94eed45437f7c8494f</anchor>
      <arglist>(bool sendtoserver=true, bool firstload=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RenameFile</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>11c3d233599329dd10828c1f9822bbc6</anchor>
      <arglist>(CKnownFile *file, const wxString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>CKnownFile *</type>
      <name>CreateItem</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>12bfb32e51d55be701d79664bfa4271e</anchor>
      <arglist>(CEC_SharedFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>bd22da588e01e95f01e6cdb16acbc362</anchor>
      <arglist>(CKnownFile *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>GetItemID</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>0737dc2191dab392cd72ad932d292a35</anchor>
      <arglist>(CKnownFile *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessItemUpdate</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>ac2823a798d59e5c619ddaf9915f2414</anchor>
      <arglist>(CEC_SharedFile_Tag *, CKnownFile *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Phase1Done</name>
      <anchorfile>classCSharedFilesRem.html</anchorfile>
      <anchor>3931367ef6f8846819bb930b6af0d64a</anchor>
      <arglist>(const CECPacket *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSharedFilesWnd</name>
    <filename>classCSharedFilesWnd.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CSharedFilesWnd</name>
      <anchorfile>classCSharedFilesWnd.html</anchorfile>
      <anchor>abf3bc4d789b01be16aa081b3048979b</anchor>
      <arglist>(wxWindow *pParent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSharedFilesWnd</name>
      <anchorfile>classCSharedFilesWnd.html</anchorfile>
      <anchor>91985d91dc2b4b5c4d851342ae5cffb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SelectionUpdated</name>
      <anchorfile>classCSharedFilesWnd.html</anchorfile>
      <anchor>616285120a7a02eb00ebec560ce51959</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllSharedFiles</name>
      <anchorfile>classCSharedFilesWnd.html</anchorfile>
      <anchor>95e718674780140defc041d01f404972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CSharedFilesCtrl *</type>
      <name>sharedfilesctrl</name>
      <anchorfile>classCSharedFilesWnd.html</anchorfile>
      <anchor>0f0e1c8ffc045fa4ab5a5c7438719471</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSimpleTokenizer</name>
    <filename>classCSimpleTokenizer.html</filename>
    <member kind="function">
      <type></type>
      <name>CSimpleTokenizer</name>
      <anchorfile>classCSimpleTokenizer.html</anchorfile>
      <anchor>d089b8518e5201817c275e19f46d62ef</anchor>
      <arglist>(const wxString &amp;str, wxChar delim)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>next</name>
      <anchorfile>classCSimpleTokenizer.html</anchorfile>
      <anchor>99cd17ed3fbb01825e2582493f641c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>remaining</name>
      <anchorfile>classCSimpleTokenizer.html</anchorfile>
      <anchor>047b6b602e77c1531a9b14fc6a741e3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>tokenCount</name>
      <anchorfile>classCSimpleTokenizer.html</anchorfile>
      <anchor>49307b6f7406889fca5f71f7e841a959</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CSocketSet</name>
    <filename>classCSocketSet.html</filename>
    <member kind="function">
      <type></type>
      <name>CSocketSet</name>
      <anchorfile>classCSocketSet.html</anchorfile>
      <anchor>5329e703464542c98c78c3588278fe3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddSocket</name>
      <anchorfile>classCSocketSet.html</anchorfile>
      <anchor>a7b79af25f2cef34f4d518f00550dfa8</anchor>
      <arglist>(GSocket *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveSocket</name>
      <anchorfile>classCSocketSet.html</anchorfile>
      <anchor>a5113f76cf1baf4f6febb47768432a78</anchor>
      <arglist>(GSocket *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillSet</name>
      <anchorfile>classCSocketSet.html</anchorfile>
      <anchor>ffcf7e4e757f6c5cd0d1dddf5816d281</anchor>
      <arglist>(int &amp;max_fd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Detected</name>
      <anchorfile>classCSocketSet.html</anchorfile>
      <anchor>1d99dfe0440bcab0a0ac2a359344df23</anchor>
      <arglist>(void(GSocket::*func)())</arglist>
    </member>
    <member kind="function">
      <type>fd_set *</type>
      <name>Set</name>
      <anchorfile>classCSocketSet.html</anchorfile>
      <anchor>1de375dc992b8e9ef1a1f5d3f37a03a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStateMachine</name>
    <filename>classCStateMachine.html</filename>
    <member kind="function">
      <type></type>
      <name>CStateMachine</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>59a46b238f8ee702faf5ecabd82b9593</anchor>
      <arglist>(const wxString &amp;name, const unsigned int maxStates, const t_sm_state initialState)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~CStateMachine</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>fb1fcc62266b07c2ca20b0e7b73d524e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clock</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>63eb06935199833937522149f7727a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Schedule</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>d4e73bd7a60624fcea887cc6a0b90348</anchor>
      <arglist>(t_sm_event event)</arglist>
    </member>
    <member kind="function">
      <type>t_sm_state</type>
      <name>GetState</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>2c2679ad5cea45e66e6c39f2b9bc7df1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetClocksInCurrentState</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>5fd0fbe06d06ea3ac78a4170e551d47d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual t_sm_state</type>
      <name>next_state</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>4d119d929563271e5bdae55267cb41b0</anchor>
      <arglist>(t_sm_event event)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>process_state</name>
      <anchorfile>classCStateMachine.html</anchorfile>
      <anchor>11451243383033dacfc952496de4e660</anchor>
      <arglist>(t_sm_state state, bool entry)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatistics</name>
    <filename>classCStatistics.html</filename>
    <member kind="function">
      <type></type>
      <name>CStatistics</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>5c97f97995b6b7519e015db50e17ab9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CStatistics</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>80e1176f6a606146b808b625b4ccc090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecordHistory</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>66fdcd4f43ab304095d3a91fcc59e381</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>GetHistoryForWeb</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>5c8538ba6d9f657162675d938296ccb9</anchor>
      <arglist>(unsigned cntPoints, double sStep, double *sStart, uint32 **graphData)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>GetHistory</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>053dc8d1a780444badfdc4f68d3f7e67</anchor>
      <arglist>(unsigned cntPoints, double sStep, double sFinal, float **ppf, StatsGraphType which_graph)</arglist>
    </member>
    <member kind="function">
      <type>GraphUpdateInfo</type>
      <name>GetPointsForUpdate</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>2cb4c1ab93223f02852e91289d4e76e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateStatsTree</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>136745b987144d4be550cff77692a3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAverageMinutes</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>71ee7f8585e321f37a28f04735737352</anchor>
      <arglist>(uint8 minutes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>GetUptimeMillis</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>073fd36550a8befb6c177dfc71bc899f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>GetUptimeSeconds</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>9d4b18928b0a97b01dc6872e9e7fd9c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>GetSessionSentBytes</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>17689dc0e88f4dc7eeb0a20021b72cda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUpOverheadFileRequest</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>3d5450f3df080b584a25f11ea183dd18</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUpOverheadSourceExchange</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>c1e57f8558dcc421e793576b96cbd0ce</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUpOverheadServer</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>4874b8e69b3399aee09281ac19485d39</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUpOverheadKad</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>ca916b382ca3db73f9378542642e53c2</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUpOverheadOther</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>7b1473ea49db7777f03ab802d1cf5f7f</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetUpOverheadRate</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>f7673a1983ebb722bedc3f87b2ef5ac8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddSuccessfulUpload</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>86665d22831329794a4075dc01d33e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddFailedUpload</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>b8c82d41c57114a5cc148a6f54a11831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUploadTime</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>634bac4d2a6929b97509d78f0959ed86</anchor>
      <arglist>(uint32 time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUploadingClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>1495850008dc66d8460f5f9fbdb5d78e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveUploadingClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>693db25e4542dfb851f378c588c33e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetActiveUploadsCount</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>ad124ad82acbed5a56a15b6f254baf2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddWaitingClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>b8f9fe7c8c43db236f10bc747328cf01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveWaitingClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>208c7c9642437195f72faf52e8543cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetWaitingUserCount</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>65c8e2af8bcbec133bfeabfa6588c840</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetUploadRate</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>3111c7270ecba71c113eabc178344ce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64</type>
      <name>GetSessionReceivedBytes</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>ac8858c0b6d19fe7f4ad0ecae202f5a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownOverheadFileRequest</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>0bff32f12fe14db7d82c81b645abe561</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownOverheadSourceExchange</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>a52c7613445f2ffd3311b55dae5dc55f</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownOverheadServer</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>3895f77394861ac8d3222f2b25218ebc</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownOverheadKad</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>1721c68ee0ecbffe41031d19adf8df2f</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownOverheadOther</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>de22fb44489c9de2d5885ddee428d4f9</anchor>
      <arglist>(uint32 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetDownOverheadRate</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>514eca140047e71d8edab4b7fc3d1da0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddFoundSource</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>e6c30c4197f413067904c322cae1aa16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveFoundSource</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>adb835f4f7c20256f1d2bbdd65ff27c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetFoundSources</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>c7716a6ad5c934eda2853dc23047d728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddSourceOrigin</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>d2b4d946a2503ef5c91c8df56943628f</anchor>
      <arglist>(unsigned origin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveSourceOrigin</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>b87ec653a36ea161e01163e3fe4ccd28</anchor>
      <arglist>(unsigned origin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownloadingSource</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>7b946c87efe5cb06dc2f102a7e91ee8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveDownloadingSource</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>601ee10c840aa4e75c33b5639be775db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetDownloadingSources</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>d968f53f5416ea5af51da9b2fd54c01c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>GetDownloadRate</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>c413493ea2052902584f3f66455c5b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CStatTreeItemTimer *</type>
      <name>GetServerConnectTimer</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>91776b0d6d9849e18a35c0b05ed4cb05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddReconnect</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>1fa8fb808cadec2623a28700a60d0c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddActiveConnection</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>487669012f5142fc21cb517b380dc04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveActiveConnection</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>7facbff61d648532dcf0949ac2f77d51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetActiveConnections</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>4f4695ecdc7aaaac320e24c151f34eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetPeakConnections</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>ffbbc5ebcb7369a0fa8f038eab2d088c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddMaxConnectionLimitReached</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>76af3f6c46ad7936bf8db0eec80ffbf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddFilteredClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>5fd0c1fbb98c54d528ecdca39cf12c9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUnknownClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>3ec17b7d6c1cb0cd9a3b44632266d509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveUnknownClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>b9f2c789060d561590dd7d5e9465ee51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddKnownClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>000cc7d1485553182c2a1fdcad4b0891</anchor>
      <arglist>(CUpDownClient *pClient)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveKnownClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>01cb3bc3830e8cc6f90e86187357c6e7</anchor>
      <arglist>(uint32 clientSoft, uint32 clientVersion, const wxString &amp;OSInfo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetBannedCount</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>a74606722f0f6ea1f825bc2b5f4c19dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddBannedClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>aec3cdeedb525c750145eda7bbb9aa62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveBannedClient</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>ebda86bbc4e3c5c925cb1dc2f7ad2320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddServer</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>339edf567e2f051148742f53c8667a0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeleteServer</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>24ef62f8183fb082f2dde39138cfd1fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeleteAllServers</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>5d0b13b73dfd3a405f1614360a42e86d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddFilteredServer</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>650283c2d24338fe8c4a2f228f958572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ClearSharedFilesInfo</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>7f6778ebc01173a37fa3186754ca6dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddSharedFile</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>8f94af2de8c544086f16cb5385dde72d</anchor>
      <arglist>(uint64 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveSharedFile</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>c2787638e3496130e52df71652203ff5</anchor>
      <arglist>(uint64 size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>GetSharedFileCount</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>81875b67395be3c81f523a308394befa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddKadNode</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>b05fa1d5b7d8e357f5e6c2ddd7c27062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RemoveKadNode</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>2b64c92a9519251cf47434eb8fdeba81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint16</type>
      <name>GetKadNodesCur</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>6cb9e7d23e4bcabc1701abea281f7d8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CalculateRates</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>a7f8d61a6af19d12c23b93586f4c9257</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddReceivedBytes</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>fd2950a7badb20f1e54b93a6e25d66eb</anchor>
      <arglist>(uint32 bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddSentBytes</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>3be47fb9d7d1503a9b71c718008518d2</anchor>
      <arglist>(uint32 bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddDownloadFromSoft</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>e0f67ccfa07fb6422dfa3b92c9686efe</anchor>
      <arglist>(uint8 SoftType, uint32 bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddUploadToSoft</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>bf21aed4fa28c8b79023fd4d6975db40</anchor>
      <arglist>(uint8 SoftType, uint32 bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CECTag *</type>
      <name>GetECStatTree</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>4dbaace7dc282818eb74fa48e4e7007e</anchor>
      <arglist>(uint8 tree_capping_value)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CStatisticsDlg</name>
      <anchorfile>classCStatistics.html</anchorfile>
      <anchor>d52500fde9069f98bae7c29011758806</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatisticsDlg</name>
    <filename>classCStatisticsDlg.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CStatisticsDlg</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>c732a2a5fc987c268b068a3142aaede0</anchor>
      <arglist>(wxWindow *pParent, CStatistics *stats)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CStatisticsDlg</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>d17af8630cf8afcd012726e86cc69d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateStatGraphs</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>7d542ed94cc0dd2ec6a5c464161f650c</anchor>
      <arglist>(bool bStatsVisible, const uint32 peakconnections, const GraphUpdateInfo &amp;update)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpdatePeriod</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>0ca22ccf4470c136061b921d7bd1c0bf</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetAveragingTime</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>0149b49c795fe6a29562293b98ef058c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowStatistics</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>cdf657eda0b9578c0cf222dc94d5d85a</anchor>
      <arglist>(bool init=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetARange</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>c7d1b5f67a67cb8108fd2648ec71a0d9</anchor>
      <arglist>(bool SetDownload, int maxValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FillTree</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>a5c360344573c7288f182f602e5b437f</anchor>
      <arglist>(CStatTreeItemBase *statssubtree, wxTreeItemId &amp;StatsGUITree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>1f86c10a388d2aa08ef1adb58dacd786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitTree</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>03789f468907be76160ecf46055a100e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitGraphs</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>a9e1425a49d64cc7a4abd1e1a381d4ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyStatsColor</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>0fe25919015a0bfa23172e189397a3ed</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>COScopeCtrl *</type>
      <name>GetDLScope</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>06c089cdcf883c5ddf0f4747f69769ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>COScopeCtrl *</type>
      <name>GetConnScope</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>7a065de743e3ba0af70a164b932734cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxColor</type>
      <name>getColors</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>da76352fbf74a48ae98f0e73fafe8ef5</anchor>
      <arglist>(unsigned num)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>COScopeCtrl *</type>
      <name>pscopeDL</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>b29c0ea464b7470aac1186642c7d9328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>COScopeCtrl *</type>
      <name>pscopeUL</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>fda689444bf79d260929f414e6464e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>COScopeCtrl *</type>
      <name>pscopeConn</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>54d9664f5d4a4607c776e38fd3e0310e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxTreeCtrl *</type>
      <name>stattree</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>5015f9cdb61ee545d299a6b80da15d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CStatistics *</type>
      <name>m_stats</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>c1876e7936d79e0a79dea74749d99735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxColor</type>
      <name>acrStat</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>3093af7dc1b24ba43124cbef2c8c75de</anchor>
      <arglist>[15]</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PrefsUnifiedDlg</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>c24ec000139eca6e3db54b6c0fa40c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CPreferences</name>
      <anchorfile>classCStatisticsDlg.html</anchorfile>
      <anchor>22cb0cab0a8dc23af268bf7f5cf94806</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatsCollection</name>
    <filename>classCStatsCollection.html</filename>
    <member kind="function">
      <type></type>
      <name>CStatsCollection</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>49d2a8b12a4787d888e47e62f992786e</anchor>
      <arglist>(int size, CimulewebApp *iface)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CStatsCollection</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>6d717177c6dc7022739fe5d11ad30177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CStatsData *</type>
      <name>DownloadSpeed</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>9869b51a38a85e8d2590d053af2e25d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CStatsData *</type>
      <name>UploadSpeed</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>e99a1734c1cf4fea78b67f415464794c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CStatsData *</type>
      <name>ConnCount</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>ef569d263008a86306a085abefff83e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CStatsData *</type>
      <name>KadCount</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>5e0c8092c16406e8db01b7ddc95cd6a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReQuery</name>
      <anchorfile>classCStatsCollection.html</anchorfile>
      <anchor>68b52176de202cf3ba12ccf6fd0d001e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatsData</name>
    <filename>classCStatsData.html</filename>
    <member kind="function">
      <type></type>
      <name>CStatsData</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>b8ff9b6fe0ad9e0cc7ff8fe5ae37b797</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CStatsData</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>a88bf7c685818e6fadfe6411cd4ca940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>Size</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>6f9f08fda2d18b2bdf7a45137682ed9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>Max</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>7aa34b164bdfbe4f0a69712452ce885b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFirst</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>5e421ea63e69f972c246141c0d17a5d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetNext</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>5cea32b24f6772b86f3fd114aa4898ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PushSample</name>
      <anchorfile>classCStatsData.html</anchorfile>
      <anchor>40b606f5d471743bdac33fb169446db5</anchor>
      <arglist>(uint32 sample)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatsUpdaterRem</name>
    <filename>classCStatsUpdaterRem.html</filename>
    <base>CECPacketHandlerBase</base>
    <member kind="function">
      <type></type>
      <name>CStatsUpdaterRem</name>
      <anchorfile>classCStatsUpdaterRem.html</anchorfile>
      <anchor>01d95061f21b75b1b4553f654ba3a921</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemAverage</name>
    <filename>classCStatTreeItemAverage.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemAverage</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>fbb357d8d75e731d1d34a5caf9795b63</anchor>
      <arglist>(const wxString &amp;label, const CStatTreeItemCounter *dividend, const CStatTreeItemCounter *divisor, enum EDisplayMode displaymode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>8cc2d623c05fc56a44758ea3ffe456cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>5d1e307b5d83ade86751377874acbcb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>a47d060060cb4f303a2f5bd008d3fa24</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemCounter *</type>
      <name>m_dividend</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>90f60355d1489159fa738e06242a52f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemCounter *</type>
      <name>m_divisor</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>9310304e25eb679c912f4f81fab191c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum EDisplayMode</type>
      <name>m_displaymode</name>
      <anchorfile>classCStatTreeItemAverage.html</anchorfile>
      <anchor>a0e6ca2a72c960d8f412746a3e556fd2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemAverageSpeed</name>
    <filename>classCStatTreeItemAverageSpeed.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemAverageSpeed</name>
      <anchorfile>classCStatTreeItemAverageSpeed.html</anchorfile>
      <anchor>8f4157b94ccd0fb1ec52f7ba77b32410</anchor>
      <arglist>(const wxString &amp;label, const CStatTreeItemUlDlCounter *counter, const CStatTreeItemTimer *timer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemAverageSpeed.html</anchorfile>
      <anchor>38ce5a0c8a863b0b5113734c0e875dbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemAverageSpeed.html</anchorfile>
      <anchor>b00cc8dba0ce4cd0006fb504a5c8c516</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemUlDlCounter *</type>
      <name>m_counter</name>
      <anchorfile>classCStatTreeItemAverageSpeed.html</anchorfile>
      <anchor>747eb82af355ad78de47c7a065269067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemTimer *</type>
      <name>m_timer</name>
      <anchorfile>classCStatTreeItemAverageSpeed.html</anchorfile>
      <anchor>b9195062423c14d4bdfad80ca633f9fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemBase</name>
    <filename>classCStatTreeItemBase.html</filename>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemBase</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>d51711e2b4e55d505989a6d775afeaae</anchor>
      <arglist>(const wxString &amp;label, unsigned flags=stNone)</arglist>
    </member>
    <member kind="function">
      <type>VIRTUAL</type>
      <name>~CStatTreeItemBase</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>b023df6cdccfde1c2a52f39891ed0fbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CStatTreeItemBase *</type>
      <name>AddChild</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>4cf48eff9305226c04063678acdf6471</anchor>
      <arglist>(CStatTreeItemBase *child, uint32_t id=0, bool skipOneLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasChildren</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>43d0b34ad0e01cce1aae85a818dd9c66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasVisibleChildren</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>0fb3bd9662b47ee86bc91c9a08f812b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasChildWithId</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>2113f971bcd0cbcc05e1dca4ac325aed</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>CStatTreeItemBase *</type>
      <name>GetChildById</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>83beca9065c9ca9ad92ac7a51cb4c9eb</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>StatTreeItemIterator</type>
      <name>GetFirstVisibleChild</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>9d479bf0c9b25a7ae41f9dacc2b6119c</anchor>
      <arglist>(uint32_t max_children)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetNextVisibleChild</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>4bdd03f7579a3223b4688892b1e825a6</anchor>
      <arglist>(StatTreeItemIterator &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAtEndOfList</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>83b3bbf03d7527d2d80eeac09b5684ab</anchor>
      <arglist>(StatTreeItemIterator &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReSortChildren</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>da194dac9e0903e9ad50b4257cfd89ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>400271010c4a407b5acf89b2eeebab91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxMutex &amp;</type>
      <name>GetLock</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>1ed98f3a21ee4bb2a7d68e4339012854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VIRTUAL bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>19b227512f866d38d970e79ec3f2b038</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CECTag *</type>
      <name>CreateECTag</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>06c4f914823a4705abafe58d8af9ccea</anchor>
      <arglist>(uint32_t max_children)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>6dba68fdd622bfd6235a7b88e297e4dd</anchor>
      <arglist>(CECTag *) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const wxString</type>
      <name>m_label</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>ff9b65c237054a79b8287e9797b39f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CStatTreeItemBase *</type>
      <name>m_parent</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>9b5c11fee0a40959e788ce718b8e5bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned</type>
      <name>m_flags</name>
      <anchorfile>classCStatTreeItemBase.html</anchorfile>
      <anchor>381d5d5b8a388e5a5e494b2353d38039</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemCounter</name>
    <filename>classCStatTreeItemCounter.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemCounter</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>0b220dc25c56fbeb1675179711a45bb3</anchor>
      <arglist>(const wxString &amp;label, unsigned flags=stNone)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetValue</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>c3ef7ed972af08432692ccc36efc0996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator uint64_t</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>35d9a5395e3b0c3ed216a26d2eba53be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>eac2d88e1e1fa4d498f642a586784d37</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>4d780444f8096f4370c622d2d96ccb9c</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>cb7425179ceb1a3ae4b23c9f569a04b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>a492087f35f1b16a6b54c0760acac8ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>efeb60884845b50dae548da1945891b3</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator-=</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>e29929a2b3f6e1edf80539873dedcecd</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayMode</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>846e0bafc10d9d722c7ac40e25a1df3e</anchor>
      <arglist>(enum EDisplayMode mode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>194c9863d4a8093ee945e2304427e451</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>87a94cdad0fabde60f56aa4718af1ba3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>fed69e53bc4d3c3ae0b7b940a546ee20</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>m_value</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>bf8a770ece2fff64698cb3db186f60f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum EDisplayMode</type>
      <name>m_displaymode</name>
      <anchorfile>classCStatTreeItemCounter.html</anchorfile>
      <anchor>2c50a358da1411a024c3d7621704221f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemCounterMax</name>
    <filename>classCStatTreeItemCounterMax.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemCounterMax</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>0e86cbdf63e4bf824ec9efeb5add6a5e</anchor>
      <arglist>(const wxString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>d947fee368d52b0adf6e3000469a36f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>a6095188674f7bf6d4be6a2c86899dcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetValue</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>b0079a0bea5f7382c7b40220d7fa006a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetMaxValue</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>931557c1eca0508f565d54fb4e7303d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>05c81bc1c33083ed2683d1ce2799e5ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>e671b0c7b2238b10d1df8ed3a1e130fc</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_value</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>61ec4c3b45b0123fea0357dcd1661ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_max_value</name>
      <anchorfile>classCStatTreeItemCounterMax.html</anchorfile>
      <anchor>f8bd6974ae687cd8ab5a86b0234da3cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemHiddenCounter</name>
    <filename>classCStatTreeItemHiddenCounter.html</filename>
    <base>CStatTreeItemCounter</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemHiddenCounter</name>
      <anchorfile>classCStatTreeItemHiddenCounter.html</anchorfile>
      <anchor>14d5c271de07689d241398bda7f85609</anchor>
      <arglist>(const wxString &amp;label, unsigned flags=stNone)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemHiddenCounter.html</anchorfile>
      <anchor>98118fd34d4c1d064c13ccbf1b7d4241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemHiddenCounter.html</anchorfile>
      <anchor>c651273e6243095ad682206a3fbdb279</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemHiddenCounter.html</anchorfile>
      <anchor>808edea2371f62a0d979636e4c39161a</anchor>
      <arglist>(CECTag *) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemMaxConnLimitReached</name>
    <filename>classCStatTreeItemMaxConnLimitReached.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemMaxConnLimitReached</name>
      <anchorfile>classCStatTreeItemMaxConnLimitReached.html</anchorfile>
      <anchor>530cc70e7ad5dded6a09d19083a16cba</anchor>
      <arglist>(const wxString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classCStatTreeItemMaxConnLimitReached.html</anchorfile>
      <anchor>a6f9e978f72fc2d6c052ccc57a5088a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemMaxConnLimitReached.html</anchorfile>
      <anchor>eeee0ef99dd4ec75afaa0a2365bf5557</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemMaxConnLimitReached.html</anchorfile>
      <anchor>93d9120fc6446c012ab28d7c4e255b9d</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_count</name>
      <anchorfile>classCStatTreeItemMaxConnLimitReached.html</anchorfile>
      <anchor>0d029abc3304b7885d98a961adbaf3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxDateTime</type>
      <name>m_time</name>
      <anchorfile>classCStatTreeItemMaxConnLimitReached.html</anchorfile>
      <anchor>bc19880746431f7b033eb93f28f2c72d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemNativeCounter</name>
    <filename>classCStatTreeItemNativeCounter.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemNativeCounter</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>757729b06cad5f94094b3b6d7325704b</anchor>
      <arglist>(const wxString &amp;label, unsigned flags=stNone)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetValue</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>2c7fe00732d0670d13c6c6b6eea70805</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator uint32_t</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>99bacff284f628e2d8204c9156f57fa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>0778502953e8126cad2843ecd8afd3fd</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>6fce20fbe5d402f3a5c82bbbd622b191</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>4b2780a89b69bedb3834cb3dff732eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>b43a78acb35f5e54b988917f21aea346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>9a20236ff7bd26dfa3083e12a0901a15</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator-=</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>29c30f2b0f4816e856f09d0d1d0eef66</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayMode</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>8c6ab530fa6c00806353ee4072cd98e6</anchor>
      <arglist>(enum EDisplayMode mode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>85bce36ae1f4ed21ac97cbf2ecda3acd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>8d19efdb6816f6d3039316eaff6cb840</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>6ce2adf3761f955674ed5196d868c4b1</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_value</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>64f9eb002870b9827f347d903cc4d874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum EDisplayMode</type>
      <name>m_displaymode</name>
      <anchorfile>classCStatTreeItemNativeCounter.html</anchorfile>
      <anchor>4409ec03dc98fda051df0245f87827b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemPackets</name>
    <filename>classCStatTreeItemPackets.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemPackets</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>cb65c31c5f929e1ee0f23041450ee29c</anchor>
      <arglist>(const wxString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+=</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>170fe23837545ce731cea375e69fef0c</anchor>
      <arglist>(long size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>c760a75a10a3ec0f4e88608b4b42449a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>da8cfd5a315e28216febc6df48d09a65</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>m_packets</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>c38f9732db9c3dae3d286206bee51f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>m_bytes</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>291d66d33d622398b15456a3dd276fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CStatTreeItemPacketTotals</name>
      <anchorfile>classCStatTreeItemPackets.html</anchorfile>
      <anchor>0b500266355041a7495185fe0852a56d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemPacketTotals</name>
    <filename>classCStatTreeItemPacketTotals.html</filename>
    <base>CStatTreeItemPackets</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemPacketTotals</name>
      <anchorfile>classCStatTreeItemPacketTotals.html</anchorfile>
      <anchor>09362681774568c5650a27b953f1978e</anchor>
      <arglist>(const wxString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPacketCounter</name>
      <anchorfile>classCStatTreeItemPacketTotals.html</anchorfile>
      <anchor>4f0214b7eb8dd4220addaa57e83df81c</anchor>
      <arglist>(CStatTreeItemPackets *counter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemPacketTotals.html</anchorfile>
      <anchor>d655638f42c8479bc422b22c2bfc95c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemPacketTotals.html</anchorfile>
      <anchor>aaba27b6c2e8c52940404b9a260d2b99</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; CStatTreeItemPackets * &gt;</type>
      <name>m_counters</name>
      <anchorfile>classCStatTreeItemPacketTotals.html</anchorfile>
      <anchor>0ea964e062a3489dbca9fe9111f5053e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemPeakConnections</name>
    <filename>classCStatTreeItemPeakConnections.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemPeakConnections</name>
      <anchorfile>classCStatTreeItemPeakConnections.html</anchorfile>
      <anchor>cff53576f6653736f9f9f6b4491b68fc</anchor>
      <arglist>(const wxString &amp;label)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemPeakConnections.html</anchorfile>
      <anchor>e1eacfc8b5a274ab40d86e4c0043576b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemPeakConnections.html</anchorfile>
      <anchor>75ed9da4893b62502ae931322b08eded</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemRateCounter</name>
    <filename>classCStatTreeItemRateCounter.html</filename>
    <base>CStatTreeItemBase</base>
    <base>CPreciseRateCounter</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemRateCounter</name>
      <anchorfile>classCStatTreeItemRateCounter.html</anchorfile>
      <anchor>034c51d39cd47d5c111d464728cbdaef</anchor>
      <arglist>(const wxString &amp;label, bool show_maxrate, uint32_t timespan, bool count_average=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemRateCounter.html</anchorfile>
      <anchor>f583af8e87a5fecf692dd64051aa6848</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemRateCounter.html</anchorfile>
      <anchor>164cd0444b1968089a2becd5dbebf556</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_show_maxrate</name>
      <anchorfile>classCStatTreeItemRateCounter.html</anchorfile>
      <anchor>6e896fc396eb27adbc1eb8f46ea157a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemRatio</name>
    <filename>classCStatTreeItemRatio.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemRatio</name>
      <anchorfile>classCStatTreeItemRatio.html</anchorfile>
      <anchor>3cce9cc82b77eefb65823b963963f8ec</anchor>
      <arglist>(const wxString &amp;label, const CStatTreeItemCounter *cnt1, const CStatTreeItemCounter *cnt2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemRatio.html</anchorfile>
      <anchor>89517825b330834f8f2acdacde0a3c10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemRatio.html</anchorfile>
      <anchor>afc3ca216a1a2c15b6440f5e90332a44</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemCounter *</type>
      <name>m_counter1</name>
      <anchorfile>classCStatTreeItemRatio.html</anchorfile>
      <anchor>f13fabba2df50316efbb9dc6981f2e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemCounter *</type>
      <name>m_counter2</name>
      <anchorfile>classCStatTreeItemRatio.html</anchorfile>
      <anchor>df86c7a889216a93a5fb66c19b93503c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemReconnects</name>
    <filename>classCStatTreeItemReconnects.html</filename>
    <base>CStatTreeItemNativeCounter</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemReconnects</name>
      <anchorfile>classCStatTreeItemReconnects.html</anchorfile>
      <anchor>93ed6c30fc132371ae7b6c3ad568abc7</anchor>
      <arglist>(const wxString &amp;label)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemReconnects.html</anchorfile>
      <anchor>1f339236098b3b66d362fe32b02952a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemReconnects.html</anchorfile>
      <anchor>d95e7e632bcbbe3a36b961494fa1aec6</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemSimple</name>
    <filename>classCStatTreeItemSimple.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemSimple</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>7ceea61bf8a1d3390a7d0eacc76f0fb1</anchor>
      <arglist>(const wxString &amp;label, unsigned flags=stNone, enum EDisplayMode displaymode=dmDefault)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDisplayMode</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>5f0a79371e2372c966cccd805a0b8c88</anchor>
      <arglist>(enum EDisplayMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>341be2daf767e3054dd723722749a72b</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>21fee548d1fdc45f4afefa45c77e6281</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValue</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>995230539b146b98a3ccc5fd5ed615f9</anchor>
      <arglist>(const wxString &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>462f9392e924f8fbfd4bd1be2160b6bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>2d85c7c45039dbe9fb46a70648cc97ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>017fb550f1f38a07abd27d408dc61864</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum EValueType</type>
      <name>m_valuetype</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>156c57bda601e2810f99c6454f1e30bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum EDisplayMode</type>
      <name>m_displaymode</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>1ac4057c1c2fb4c2a5792cb4082c239d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>union CStatTreeItemSimple::@24</type>
      <name>@25</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>d9c7538c216fad537e801f2962ba48d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>m_intvalue</name>
      <anchorfile>unionCStatTreeItemSimple_1_1@24.html</anchorfile>
      <anchor>3c74231270d7da2d7e4bd260001bf14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m_floatvalue</name>
      <anchorfile>unionCStatTreeItemSimple_1_1@24.html</anchorfile>
      <anchor>7c83056d8ba05899891eb1158f38ef45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_stringvalue</name>
      <anchorfile>classCStatTreeItemSimple.html</anchorfile>
      <anchor>c6e93ca076df584bbdca81004594657a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemTimer</name>
    <filename>classCStatTreeItemTimer.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemTimer</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>daca5eb34362aa1f5ebb897b4d94f29b</anchor>
      <arglist>(const wxString &amp;label, unsigned flags=stNone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStartTime</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>0b6e51c5c4964e4b645579af57a50df1</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartTimer</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>7d97a610e824c6b0d78ac7a2fd52266e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StopTimer</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>9a576d2d3b258dcc6363436b4ea0223f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRunning</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>f82a3ecf8a24104af769025fd4b69778</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetTimer</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>de253f729d632e2bb19e741332cee16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTimerValue</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>c55c174f8feb3b31565b00809d87ad95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator uint64_t</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>2c3b84ddcf2d9ec45148ddd499a17cce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTimerSeconds</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>191e8af17235a7d9af630e8d3065bb5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTimerStart</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>86ede26edee3ee01ff43edb9680b86a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>83826a401956ed7ee2f1103f6ca6e28a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsVisible</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>71d544d9d97753468618df6e0f52351b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>1ec6bb8e981e70323e90d5cf2acc276d</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>m_value</name>
      <anchorfile>classCStatTreeItemTimer.html</anchorfile>
      <anchor>ff26f1873583420ac4ac2d4fafc6f0e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemTotalClients</name>
    <filename>classCStatTreeItemTotalClients.html</filename>
    <base>CStatTreeItemBase</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemTotalClients</name>
      <anchorfile>classCStatTreeItemTotalClients.html</anchorfile>
      <anchor>964d056d6469e96b4b3ed00574fefd1a</anchor>
      <arglist>(const wxString &amp;label, const CStatTreeItemCounter *known, const CStatTreeItemCounter *unknown)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemTotalClients.html</anchorfile>
      <anchor>cb4b4fcd593ccb622988472769842c68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemTotalClients.html</anchorfile>
      <anchor>ec507698f1a9bd14fce48d0a19379e2f</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemCounter *</type>
      <name>m_known</name>
      <anchorfile>classCStatTreeItemTotalClients.html</anchorfile>
      <anchor>474837d530d5e5571a539e444d2c7cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const CStatTreeItemCounter *</type>
      <name>m_unknown</name>
      <anchorfile>classCStatTreeItemTotalClients.html</anchorfile>
      <anchor>59bebedfcf073356c1441aa411032a44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CStatTreeItemUlDlCounter</name>
    <filename>classCStatTreeItemUlDlCounter.html</filename>
    <base>CStatTreeItemCounter</base>
    <member kind="function">
      <type></type>
      <name>CStatTreeItemUlDlCounter</name>
      <anchorfile>classCStatTreeItemUlDlCounter.html</anchorfile>
      <anchor>8c9cd9e3b78f9d61471b426e494436fc</anchor>
      <arglist>(const wxString &amp;label, uint64_t(*totalfunc)(), unsigned flags=stNone)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxString</type>
      <name>GetDisplayString</name>
      <anchorfile>classCStatTreeItemUlDlCounter.html</anchorfile>
      <anchor>7b74d204fa693fe90c9dc733a4043558</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>AddECValues</name>
      <anchorfile>classCStatTreeItemUlDlCounter.html</anchorfile>
      <anchor>3cfabe67d20d78e5f02486d5d21427dd</anchor>
      <arglist>(CECTag *tag) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t(*</type>
      <name>m_totalfunc</name>
      <anchorfile>classCStatTreeItemUlDlCounter.html</anchorfile>
      <anchor>35be3e8103cf4cc8989f2b85203c8486</anchor>
      <arglist>)()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CTag</name>
    <filename>classCTag.html</filename>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>5d501d53b7a5501af1df2397bd553de1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>57b48349bdcf768fbad441af20bae06b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>34671a4223ad5c4a93a5fef2c02e112c</anchor>
      <arglist>(uint8 uName, uint64 uVal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>b79774d9f0b16ed412ca71df21bf6aff</anchor>
      <arglist>(uint8 uName, const wxString &amp;rstrVal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>873213fa62381e6c6b3ac256d7fac5ab</anchor>
      <arglist>(uint8 uName, const CI2PAddress &amp;raddrVal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>d1bdcd5f05bfb572d3e603d3797b9a5d</anchor>
      <arglist>(uint8 uName, const CMD4Hash &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>7b608ee1bf1b4252c8ba8aa528a29891</anchor>
      <arglist>(uint8 uName, uint32 nSize, const unsigned char *pucData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>cc3893fa52253bf2514f54488650d268</anchor>
      <arglist>(uint8 uName, uint64 first, uint64 last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>ba4f28afbd560a765213de276a53d100</anchor>
      <arglist>(const CTag &amp;rTag)</arglist>
    </member>
    <member kind="function">
      <type>CTag &amp;</type>
      <name>operator=</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>befca45d175f3c22c0c6ac5648923681</anchor>
      <arglist>(const CTag &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>ec3b6d1e17780eaede453178b1a3c444</anchor>
      <arglist>(const CFileDataIO &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reinit</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>d4bd16d05ae37bc1f8df7d7f7c18c67d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>40eab3e5759fa610833de39d1856f795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetType</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>5664e6b18b35f8abbd358a3b54ed3b81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetID</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>8754d8b73fcd71870c1227332635e10d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAddr</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>831815343e3f406dc43ab2c22e860496</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsStr</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>42552c8c7cbd22124adba3b1184c4bc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsInt</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>a35bd07dde6f73988df1229454f64e06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFloat</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>114f9771c00b34d56df97c430fe89aa3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsHash</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>528c69df6bf5759098e50ae17f2ab9ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBlob</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>99ef67d8239f0c7d3efa48d4dbe6eb46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUint64Uint64</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>4b0307681a694830e0dec7663e62695b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetInt</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>3db6dcdec105b950139c19cf8ec1f92a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetStr</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>5d1c25833bff165483abcb71026e06f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress &amp;</type>
      <name>GetAddr</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>b7896e68ad81ee54feb9b9b13939e085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetFloat</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>4a897ae1d818892409f776953aa33576</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetHash</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>bc1d21b4888b776f478750b01684100f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetBlobSize</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>17d19d83ddd23f150de7b31e517bcc07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>GetBlob</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>0f74040183c60e2bc7bd859657696f0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>U64U64</type>
      <name>GetUint64Uint64</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>90e6f922f0b97f5a446b0db8e8174dbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInt</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>dc90bbdf2e6ec15a4967c23e2a861791</anchor>
      <arglist>(uint64 uVal)</arglist>
    </member>
    <member kind="function">
      <type>CTag *</type>
      <name>CloneTag</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>3fe4bcecc901cfad592a761324e1dd57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteTo</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>f639859279f6e1228f4a4f5479291e59</anchor>
      <arglist>(CFileDataIO *file) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetFullInfo</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>a2fa15a04e357ccd275014007c5246b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const CTag</type>
      <name>null</name>
      <anchorfile>classCTag.html</anchorfile>
      <anchor>3fbb6a83863604ff3a5c21da1c2b17a9</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CTag::U64U64</class>
  </compound>
  <compound kind="struct">
    <name>CTag::U64U64</name>
    <filename>structCTag_1_1U64U64.html</filename>
    <member kind="variable">
      <type>uint64</type>
      <name>first</name>
      <anchorfile>structCTag_1_1U64U64.html</anchorfile>
      <anchor>2e49fef4774ecf05cf307b2fa7b07108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>last</name>
      <anchorfile>structCTag_1_1U64U64.html</anchorfile>
      <anchor>eaf6ea5793d30705402a3066999cd252</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CTagSet</name>
    <filename>classCTagSet.html</filename>
    <templarg>T</templarg>
    <templarg>OP</templarg>
    <base>std::set</base>
    <member kind="function">
      <type></type>
      <name>CTagSet</name>
      <anchorfile>classCTagSet.html</anchorfile>
      <anchor>7dc2b40ae27747e4c4cf5ae474d15c9b</anchor>
      <arglist>(const CECPacket *request)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CTimer</name>
    <filename>classCTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>CTimer</name>
      <anchorfile>classCTimer.html</anchorfile>
      <anchor>fa82f0b33dd6b7de68899da3fe999078</anchor>
      <arglist>(wxEvtHandler *owner, int timerid=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CTimer</name>
      <anchorfile>classCTimer.html</anchorfile>
      <anchor>fd3f6595928cd20f7faaece75f017733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Start</name>
      <anchorfile>classCTimer.html</anchorfile>
      <anchor>5a4c96a780bce76147f55629c440f563</anchor>
      <arglist>(int millisecs, bool oneShot=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRunning</name>
      <anchorfile>classCTimer.html</anchorfile>
      <anchor>0afb7b2e8a9e6bd268d601a93a066a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classCTimer.html</anchorfile>
      <anchor>7fe9ad152f641589251afdabebd60572</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CTimerThread</name>
    <filename>classCTimerThread.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CTimerThread</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>d0861062db50b138d576b9a108f42d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Entry</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>8f2daec82344e606405480839ddb5ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>m_period</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>d92033ba9b2d40f2103bed5bf39e948b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_oneShot</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>64b3041f9edebf7fc0e7fac9363c8fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxEvtHandler *</type>
      <name>m_owner</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>12c32a9a25ea726dbcf745083cb25474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_id</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>9e76eae7d7b1855f20b695738a464a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSemaphore</type>
      <name>m_sleepSemaphore</name>
      <anchorfile>classCTimerThread.html</anchorfile>
      <anchor>c5af5c58cb68c5ad18ec43596454a177</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CTransferWnd</name>
    <filename>classCTransferWnd.html</filename>
    <base>wxPanel</base>
    <member kind="function">
      <type></type>
      <name>CTransferWnd</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>a2d07856511d7b2be468d211a3ae40b2</anchor>
      <arglist>(wxWindow *pParent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CTransferWnd</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>08067e39e0da2fd6032a1245e342ff4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddCategory</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>decfefaf92d977e677560e9bd972474c</anchor>
      <arglist>(Category_Struct *category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCategory</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>a10c16d66faab00e8e785745f3625b8d</anchor>
      <arglist>(int index, bool titleChanged=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveCategory</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>d54d38d55abc70c0df080ef63ae429f6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowQueueCount</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>6ed9b063aa414f50b659cc990756e88a</anchor>
      <arglist>(uint32 number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SwitchUploadList</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>7166247edd688fa5f7bb2bff38a5fc42</anchor>
      <arglist>(wxCommandEvent &amp;evt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateCatTabTitles</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>e2da6bee2be6d25842dc65d39d2b1bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Prepare</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>ea33e6b3649663cd13a90e21edf84a7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CDownloadListCtrl *</type>
      <name>downloadlistctrl</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>e88ecea82c9b6b0634af2b2b416dabcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CClientListCtrl *</type>
      <name>clientlistctrl</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>8095321416b31dc55597df33cff8b605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_splitter</name>
      <anchorfile>classCTransferWnd.html</anchorfile>
      <anchor>bd7edab4d2df2c065af9364059127c14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CtrlItem_Struct</name>
    <filename>structCtrlItem__Struct.html</filename>
    <member kind="function">
      <type></type>
      <name>CtrlItem_Struct</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>720740250f2c59153c01e387b3480b22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CtrlItem_Struct</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>b8265fffe82122504327146a895c8a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>DownloadItemType</type>
      <name>type</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>0a0a4ce683d0e40aec96a8286aebe02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CPartFile *</type>
      <name>owner</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>5fe0af7962685a65985b80d3364366f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>value</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>3ab582cfab80e60035f3f0726d0cba34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>dwUpdated</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>7bdfa84077927889a4013273ec6485ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxBitmap *</type>
      <name>status</name>
      <anchorfile>structCtrlItem__Struct.html</anchorfile>
      <anchor>661fee69ca8fcf7a1f869bd93099a33f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CTypedPtrList</name>
    <filename>classCTypedPtrList.html</filename>
    <templarg>BASE_CLASS</templarg>
    <templarg>TYPE</templarg>
    <base>CList&lt; TYPE, TYPE &gt;</base>
    <member kind="function">
      <type></type>
      <name>CTypedPtrList</name>
      <anchorfile>classCTypedPtrList.html</anchorfile>
      <anchor>4096abce6675a3b42e1ba6a7aeedf904</anchor>
      <arglist>(uint64 WXUNUSED(nBlockSize)=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CUpDownClient</name>
    <filename>classCUpDownClient.html</filename>
    <member kind="function">
      <type></type>
      <name>CUpDownClient</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>285c6df634a55d95639812b6d16208ed</anchor>
      <arglist>(CClientTCPSocket *sender=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CUpDownClient</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9acbf93e6d43838e0bdb7e273dd9b866</anchor>
      <arglist>(const CI2PAddress &amp;in_dest, const CI2PAddress &amp;in_serverdest, CPartFile *in_reqfile, bool ed2kID, bool checkfriend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Safe_Delete</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b44d68f2a3ad0b3d133eae05c1ef7ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasBeenDeleted</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>68e94c1137ce8c64319eced59e191a52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClientState</type>
      <name>GetClientState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2b80257a34ab1a0e864831da54abe67f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Disconnected</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>128c98645d8a8ca5a6b056cc788bc247</anchor>
      <arglist>(const wxString &amp;strReason, bool bFromSocket=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TryToConnect</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>58869125356979050673bc1bea2a7719</anchor>
      <arglist>(bool bIgnoreMaxCon=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConnectionEstablished</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b737622d4b344336873583778c4fe57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetUserName</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2a2963092fa5ed73a485e7753dd1c107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTCPDest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>15ac417830720af7f402149ace880933</anchor>
      <arglist>(const CI2PAddress &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUDPDest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3b9f7f7c77df40f17529250cc66cbe4d</anchor>
      <arglist>(const CI2PAddress &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetServerDest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>30edc5d89436e3ba4274940b4b61a1b6</anchor>
      <arglist>(const CI2PAddress &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress &amp;</type>
      <name>GetTCPDest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>81d7483ed2d91df4fec55df0f20f3c8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress &amp;</type>
      <name>GetUDPDest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>8cc3853d2b77640128017715c28b8de7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CI2PAddress &amp;</type>
      <name>GetServerDest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>afd9ed3ebc231701e802176b82df83ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTransferedDown</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f3b82aa22b05098787e1321704ebfd71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetUserHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>892fd29df08dc2dc1ac7fb6e6497455e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>61e57ab3f775beae10debf4b02b93161</anchor>
      <arglist>(const CMD4Hash &amp;userhash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ValidateHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>036b81416d6c2f69883a1578f77d33fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasValidHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>28c513ef94d4b10ce8ce62aab8ada6fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetVersion</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f39e9325dc40fe0a06ab114b50528c94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetMuleVersion</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c146eaa1772a0d6824d619a3682248ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExtProtocolAvailable</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b3dd5ea9dbf20c3d30a33825543e8570</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmuleClient</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a1b3c443b7430d83a50ca9e786b53056</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBanned</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c722818c4b52d3aca5904d0068712a84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetClientFilename</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3ca59013297564d71b4cd6015656f9d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetUDPVersion</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0b3646fdd76a72af2f43aaef62be648e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetExtendedRequestsVersion</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c45aaf0be503754243b9dc1bae7945ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFriend</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>fcfab2e747a38f17b1c4d490a833edec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsML</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>26595fa60581e88b8d824d1e91457a52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsHybrid</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>79cf0c44dc14cb76d8e5b710806c8613</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetCompatibleClient</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6ed774672e4814a5d9c77ed23ba67d2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearDownloadBlockRequests</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9c2541b50508b5ee8732e2010219333f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestSharedFileList</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>53780b7296378a96923d299a33d2a4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessSharedFileList</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>606c836830c61a4610baca81b5101eca</anchor>
      <arglist>(const char *pachPacket, uint32 nSize, wxString &amp;pszDirectory)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetUploadFileInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>13bcafacb41b68cf912c992e3ee24772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUserName</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9af9fba20245f0cea2338110667a908a</anchor>
      <arglist>(const wxString &amp;NewName)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetClientSoft</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e2164ddfcd5856573daa686fd21bf1ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReGetClientSoft</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c5b77cb17226acefe7579eafeafa1df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessHelloAnswer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>109175ac81f0fa245b14ea4f54a470f5</anchor>
      <arglist>(const char *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessHelloPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>bfba3488e38f964fa7ce9af04f235b58</anchor>
      <arglist>(const char *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendHelloAnswer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>1133bd7a989d186abdb97051ddfd8287</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendHelloPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b536b156c51e57a1b447f493b3dd6d4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMuleInfoPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>5c58a24d00f6540a6ac50928faafbf3f</anchor>
      <arglist>(bool bAnswer, bool OSInfo=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessMuleInfoPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>02962890434ba1c519385d0a4fcecfb9</anchor>
      <arglist>(const char *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessMuleCommentPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>5d5ecea714130fdba1d3be866e6399b3</anchor>
      <arglist>(const char *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d80b5397979515e3993d85016c415847</anchor>
      <arglist>(const CUpDownClient *tocomp, bool bIgnoreUserhash=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastSrcReqTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>829bc482034512ee4f413242a75ced19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastSrcAnswerTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f86998d6543c03ff449706f6dec5970f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastAskedForSources</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>04a6e82728a6fbca2ebf1601afe752cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastSrcReqTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f4ab13617fbcb7523da0ade65af9da6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastSrcAnswerTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d89b00b67ea5c8021daaf772dea4f1f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastAskedForSources</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d7948798d5c87b814df0d5b51cc461f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFriendSlot</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e400edcd6d331de85e369bf42e9334f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFriendSlot</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>52e5905fda2be08e1952d94d086a9e8b</anchor>
      <arglist>(bool bNV)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCommentDirty</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>818981b86352ab82be997fa232f1917f</anchor>
      <arglist>(bool bDirty=true)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetSourceExchangeVersion</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>906719f4252fdee6f8d499ab8e966039</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SafeSendPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2be932cb055c6763f3a6b78539dadb92</anchor>
      <arglist>(CPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPublicKeyPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>136ae7554b452e85540f976498ca1081</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendSignaturePacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>80a0238a7747ad275dbc94c76665931f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessPublicKeyPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f9e5c0a126d31dd94ffff648ed914175</anchor>
      <arglist>(const byte *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessSignaturePacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c23e4360c1ef0fc9bb0471557f5fd370</anchor>
      <arglist>(const byte *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetSecureIdentState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b4472bc85f05bb38bdaefa763ae8524b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendSecIdentStatePacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0df948964e25c2908e29e60c010e0510</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessSecIdentStatePacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>dc5a1b7903ba6a555f3311c4ac163668</anchor>
      <arglist>(const byte *pachPacket, uint32 nSize)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetInfoPacketsReceived</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>cac86ba23b681488b47e0e0c07befff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InfoPacketsReceived</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9578443401dd79334896858dbc67fc9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetUploadState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>fbbeab4b0aed79020142d4f287db2b9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUploadState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e3b23f5681de58df3001f27c836bbd91</anchor>
      <arglist>(uint8 news)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetTransferredUp</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>1e4d7fd300280249276a37e41f30a0fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetSessionUp</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d00a348cc7c5430262d8dd7cf41704bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetSessionUp</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>5fd44e41bbe3ec14657b518b8e61d3b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetUploadDatarate</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b738842df66df3aef898adc1d4ccb2f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetWaitTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>8e1ed35bcf937f2e6d15417720da59be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetUpStartTimeDelay</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3b0a4ef230a28e757eb2e74402e10253</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetWaitStartTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>96a48e4f49968ac13c26e30a6050f860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDownloading</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2837a88b7cb42c5169fccb3b63b97efb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetScore</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>661768bfcbf02c14797af9bb89f5e9dc</anchor>
      <arglist>(bool sysvalue, bool isdownloading=false, bool onlybasevalue=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddReqBlock</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>7899ebf0a8ae3ab1961e26e57c0ba62a</anchor>
      <arglist>(Requested_Block_Struct *reqblock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateNextBlockPackage</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0942e7524351564c3ec552b360f27cbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpStartTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3040c142f47be022f26a1c2cffb3470c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWaitStartTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>ba063937b19bebf64102f1d22edd3626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearWaitStartTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>33d9e224052e37771000909d51beba6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendHashsetPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e322c6980b6167312b8e3e946e5d0783</anchor>
      <arglist>(const CMD4Hash &amp;forfileid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SupportMultiPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c5a5c8836f541ba16dc08235dd60257b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUploadFileID</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>174e5ff633a65da3c53ffc6f0a25150e</anchor>
      <arglist>(CKnownFile *newreqfile)</arglist>
    </member>
    <member kind="function">
      <type>const CKnownFile *</type>
      <name>GetUploadFile</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>156accc9e395bc921e5def488dfb65fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendOutOfPartReqsAndAddToWaitingQueue</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>ab471e5e99f572886b470c470c5f991c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessExtendedInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>4b91468763766d55db9176d82d597dbf</anchor>
      <arglist>(const CMemFile *data, CKnownFile *tempreqfile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessFileInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>239a3604ec3c191a808a4831faea1b3d</anchor>
      <arglist>(const CMemFile *data, const CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessFileStatus</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>7e0600643f9e5a7827ebf2ef5c5fb6e4</anchor>
      <arglist>(bool bUdpPacket, const CMemFile *data, const CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>const CMD4Hash &amp;</type>
      <name>GetUploadFileID</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2b94a5f9009ec94ace7379df1cfbe02d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUploadFileID</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>eac2d9f93d0202dee6cc928534de7f11</anchor>
      <arglist>(const CMD4Hash &amp;new_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearUploadFileID</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>258ea32287c1cca43a1da2dde0a87666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>SendBlockData</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f0c80bd88d8e2ab6696f11f089ac8d75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearUploadBlockRequests</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>54a4abe53fcd55dbdc5d618e8a0b33ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendRankingInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>517915b65641fc4bc43fb165ab81223a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCommentInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a0e076292ed8ab6e4e2e4aefcdf28074</anchor>
      <arglist>(CKnownFile *file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDifferentPartBlock</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>644082ddf66e557799fed01072fe65f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnBan</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d1df33057c304b230e792ddcd851b48a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Ban</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>be204a8eff62bd8cfbb6855bf05512a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetAskedCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f982003a55645bf101d99ac4fee1c4ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddAskedCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>528651a78cb8a33bd5221380d18425dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAskedCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>44ba396d613c82c9aa60fc7d4be8c313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FlushSendBlocks</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>932a9ff0fedc77968438b99a48558cae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastUpRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>76fba19350acd5ea644b3cd9998e416d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastUpRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e8111157e67f3177ac88190a5b488bb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetUpPartCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a5e1b680ecddf137517cdf3ae20ffe3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRequestFile</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2c541b00aac763dcfeee842d1e0c2d6c</anchor>
      <arglist>(CPartFile *reqfile)</arglist>
    </member>
    <member kind="function">
      <type>CPartFile *</type>
      <name>GetRequestFile</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f32c0f7a36fe5693d001262d0a089078</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetDownloadState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>10d514a12ea8122bb4b6a17471a528ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDownloadState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>73c867bc6732e858c9bd4cfdbf26f8fb</anchor>
      <arglist>(uint8 byNewState)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetLastAskedTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>8e1b0a7fc3f0495d5e15d1f018adfaf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPartAvailable</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d68d54242d26a658694518fcce5dcaa8</anchor>
      <arglist>(uint64 iPart) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUpPartAvailable</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3282b10ceea208adce6f3802ed5edd01</anchor>
      <arglist>(uint64 iPart) const </arglist>
    </member>
    <member kind="function">
      <type>const BitVector &amp;</type>
      <name>GetPartStatus</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>739698dc4780927f235e3dafa6310d10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BitVector &amp;</type>
      <name>GetUpPartStatus</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d0f8337022beb8ca4d2a4704f1aa287a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetKBpsDown</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6fa7841dabe5c5cf812831ce77946cc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>CalculateKBpsDown</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3b1bf0f5d423980962c1d4bc644acaf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetRemoteQueueRank</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>4a084e15a50898d378e3ec51f20d740f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetOldRemoteQueueRank</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b4a6358122318a875384011b8274ebbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteQueueFull</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>50b88512bf7381a76d17b899b4e95408</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRemoteQueueFull</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>617fa8069346ff46c2253aff2df00115</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRemoteQueueRank</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b12f2e2618e6a91597e235863c38afe0</anchor>
      <arglist>(uint16 nr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AskForDownload</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>efc6f3a0cf603152eb57c826a9471595</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendStartUploadReq</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>8d8433302a5d4fa12c85836cbb9e6b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendFileRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a1e79639c10802902958d3d27b59827c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessHashSet</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>02fc52d1eda46a4ab77b5a3ba5057abc</anchor>
      <arglist>(const char *packet, uint32 size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRequestForAnotherFile</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b077ba8a897ad8f615e00c31632c5f0b</anchor>
      <arglist>(CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteFileRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6e0b4cd2ba883a35a203c398e80ac020</anchor>
      <arglist>(CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteAllFileRequests</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9971f3509d8a2c6fdd984e203f187230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendBlockRequests</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>68594221e7808e7c8f86cc7385e669ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessBlockPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6a8440a3921d22f9ec082cea6f19a86d</anchor>
      <arglist>(const char *packet, uint32 size, bool packed=false)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetAvailablePartCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2bb45e858be8f3e3f460610a7165d3af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SwapToAnotherFile</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>51f727cda219501b77939c430513ea1f</anchor>
      <arglist>(bool bIgnoreNoNeeded, bool ignoreSuspensions, bool bRemoveCompletely, CPartFile *toFile=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDPReaskACK</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c03a9e284c35ce2c27c4bf5a56be61d1</anchor>
      <arglist>(uint16 nNewQR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDPReaskFNF</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>84302f22760725a643262def1c42f503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDPReaskForDownload</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>31211fda4852f5d88409d450e954e45b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSourceRequestAllowed</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>74394656eb8e908d84e0f9ba05339fe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetUpCompleteSourcesCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a2369c8d0f28f13f7c6a3d20b0b8a6e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetUpCompleteSourcesCount</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e56a91cfa8bff0b0c618e2f306cdcedd</anchor>
      <arglist>(uint16 n)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetChatState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>2b34fd06217cabf2d8963a024dbc9fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetChatState</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>80a98dc2675e785f78465397e08f706b</anchor>
      <arglist>(uint8 nNewS)</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetFileComment</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>5853fcad8b0f02ee171405e53230b00a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetFileRating</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>98b9c3f100c9393b4572d79474775352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetSoftStr</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6b0e9f7453c43690f2756f670a408924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetSoftVerStr</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>69ad6d0c883476dee9a98820a9a4ef82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReqFileAICHHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>41ed83cdd1d3a2e2af0689631e4e0122</anchor>
      <arglist>(CAICHHash *val)</arglist>
    </member>
    <member kind="function">
      <type>CAICHHash *</type>
      <name>GetReqFileAICHHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>bb7a59512c03e8ac5d39ec478ddd604b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSupportingAICH</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>77715f176352049252dd53c9d0e2401a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendAICHRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>55f981d77bdcd50cb9f1149326726e23</anchor>
      <arglist>(CPartFile *pForFile, wxULongLong nPart)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAICHReqPending</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>abd8336ce579416b97f6e259e2655d80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessAICHAnswer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>8cc4800decbc375e3bca740582de6fad</anchor>
      <arglist>(const char *packet, uint32 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessAICHRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>21e73a67c9caf920f4b85795d40f7906</anchor>
      <arglist>(const char *packet, uint32 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessAICHFileHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b12f6031e1c459475ad98a68350fde5d</anchor>
      <arglist>(CMemFile *data, const CPartFile *file)</arglist>
    </member>
    <member kind="function">
      <type>EUtf8Str</type>
      <name>GetUnicodeSupport</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6056488d8ed6584638e3e246b545056c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unzip</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c6051480c19357b5872b42f54ded22c3</anchor>
      <arglist>(Pending_Block_Struct *block, byte *zipped, uint32 lenZipped, byte **unzipped, uint32 *lenUnzipped, int iRecursion=0)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>ShowDownloadingParts</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>60691634bd0fd659f5b58c92258b3f71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateDisplayedInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>bafc1e3f133cdfea14722d5baee148bf</anchor>
      <arglist>(bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetFileListRequested</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>c01f4c5cb83fe5d86781ac1b082f7998</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFileListRequested</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b7e87ecfc8956f25ef378e1d9374e0f1</anchor>
      <arglist>(int iFileListRequested)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetFileStatusInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>53ebc6fbcbc95be53b563e60bc3e1f25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckHandshakeFinished</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>58bd1a28c2eb84788ba9dbd5254f7db3</anchor>
      <arglist>(uint32 protocol, uint32 opcode) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSentCancelTransfer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9e0c246bf7eacd845c8f6ea4493759f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSentCancelTransfer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>138eba970af502c97851a7354804cd23</anchor>
      <arglist>(bool bVal)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetClientFullInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>838e6ae48979dc03c492d5221a213c3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetClientOSInfo</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6e93c7fa6097a88e518aa8bc76bae31c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessPublicIPAnswer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>e2122682c8512de77909dbc215c26720</anchor>
      <arglist>(const byte *pbyData, uint32 uSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPublicIPRequest</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a16c29b4152470b415030953df1fe347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSocket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6585f519474a29da989df4b4fc051a69</anchor>
      <arglist>(CClientTCPSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>CClientTCPSocket *</type>
      <name>GetSocket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a07839eba7afc2ead03fbb8c35bf9e63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConnected</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>608737cb6770dbbc67e723ba3191ab6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendPacket</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>ababc3a17fe49535294f6a938ef4b33e</anchor>
      <arglist>(CPacket *packet, bool delpacket=true, bool controlpacket=true)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>SetDownloadLimit</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>8ebdad2d1975f0714552b067c038c4ab</anchor>
      <arglist>(uint32 reducedownload)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendMessage</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d17d4bd4cc52ca0784b55a990d341e4d</anchor>
      <arglist>(const wxString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetPayloadInBuffer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>d7e745ff09865d29fd6f49a67e136ac7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetQueueSessionPayloadUp</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>30c165212313aaa8e4bd9987d383f95b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCancelTransfer</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0a329b9de79a7e52c869845c0683b0da</anchor>
      <arglist>(CPacket *packet=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasBlocks</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>af77dd315aa9d50781b214c078abbd2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ESourceFrom</type>
      <name>GetSourceFrom</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>dbe32e0e9d58076a8844bc90c2b7ad3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSourceFrom</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3eb4ba4c09a199fabf630fbbd6028673</anchor>
      <arglist>(ESourceFrom val)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>GetKadVersion</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>57209bc21a2cdbff147b4988d1e114a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetHashType</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9af42285ce822044bb2ce7b3e92fbc8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckForAggressive</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f79ac45d6f4286e31c5772cd34befa1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetClientModString</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>918ec91b4ba50ec321f2f996509846e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetClientVerString</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>56cdd1f82b6fca58c1cb2b2b4c631f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetVersionString</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0d50fd766d90aaf4557750e779084df5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateStats</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>7236f79da9bb20e1701cc487b59e0dc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetCreditsHash</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>39e6aa95a8b4d3601ad1f5f2207b6dc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetLastBlockOffset</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>97740d04fbfe5cc2c551fda84ac2677e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetOSInfoSupport</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>b8139cc754b8652a6930fc18f0e6222a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>GetLastPartAsked</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>3714e6ab05680848f76713fcf518f9f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLastPartAsked</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>f4234f50521b85dcb2e4635bd6e4ca8e</anchor>
      <arglist>(wxULongLong nPart)</arglist>
    </member>
    <member kind="function">
      <type>CFriend *</type>
      <name>GetFriend</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>357050e3af473145a3905f9243d7eb2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFriend</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>ab3999aa8931f7acba06a3c08e8f5cde</anchor>
      <arglist>(CFriend *newfriend)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdentified</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>6450a72585b37e7f219d4c7f2f12574e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsBadGuy</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0b1447261e21ce96d574ad3c49c1a16e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SUIFailed</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>7c5b3f0c2fad36fde92bf8e541103881</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SUINeeded</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>87853f1a5d99c6fd871dc973bf153ad3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SUINotSupported</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>eb3393ac92646df1085e9f0ee0378e05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetDownloadedTotal</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>24a285d86d65d57b2f568b63855ef2bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetUploadedTotal</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>0769f66456e49a80bc0ccd3226c79462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetScoreRatio</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>9df36a42c5df9245ef7d4b30fcfa3fc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetCreationTime</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>611600f5ee4e4d19fa23964a0ab19a9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bAddNextConnect</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>701bfb903bf151f8d7bf407fae4899d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CClientList</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>a2e64c4d2cd9e4dc36e8d8660d2c4dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CUpDownClientListRem</name>
      <anchorfile>classCUpDownClient.html</anchorfile>
      <anchor>1613ad6c37af2b8604002c40201b6b46</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">CUpDownClient::A4AFStamp</class>
    <class kind="struct">CUpDownClient::TransferredData</class>
  </compound>
  <compound kind="class">
    <name>CUpDownClientListRem</name>
    <filename>classCUpDownClientListRem.html</filename>
    <base>CRemoteContainer</base>
    <member kind="function">
      <type></type>
      <name>CUpDownClientListRem</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>32065d30ff3ff843b85c9967c35a4504</anchor>
      <arglist>(CRemoteConnect *, int viewtype)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetFirstFromList</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>77878f3959b6b137a4ba0cf4774b48fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetNextFromList</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>6fd155d20d7cace77c6171c6b05e28ea</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>CreateItem</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>79963f39e986c924ea5f614a1ba7afcd</anchor>
      <arglist>(CEC_UpDownClient_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteItem</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>36fc5de105ac6708748b25be8ae33f3c</anchor>
      <arglist>(CUpDownClient *)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetItemID</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>d8f64b45448349e6d1cce4fca16608e1</anchor>
      <arglist>(CUpDownClient *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessItemUpdate</name>
      <anchorfile>classCUpDownClientListRem.html</anchorfile>
      <anchor>ba0f53251c40ec57b22c561430d8150e</anchor>
      <arglist>(CEC_UpDownClient_Tag *, CUpDownClient *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CUploadingView</name>
    <filename>structCUploadingView.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Initialize</name>
      <anchorfile>structCUploadingView.html</anchorfile>
      <anchor>d6b65d0dd9c9cfdacba5afad96dc4c4e</anchor>
      <arglist>(CClientListCtrl *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawCell</name>
      <anchorfile>structCUploadingView.html</anchorfile>
      <anchor>b7734af5394bfe00f2cd67db3e1efe9f</anchor>
      <arglist>(CUpDownClient *client, int column, wxDC *dc, const wxRect &amp;rect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int wxCALLBACK</type>
      <name>SortProc</name>
      <anchorfile>structCUploadingView.html</anchorfile>
      <anchor>05712fecf1b138d75812a945ce9b5eb0</anchor>
      <arglist>(long item1, long item2, long sortData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DrawStatusBar</name>
      <anchorfile>structCUploadingView.html</anchorfile>
      <anchor>37d0af9b8baa787eb1343c31614a9a7e</anchor>
      <arglist>(CUpDownClient *client, wxDC *dc, const wxRect &amp;rect)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CUploadQueue</name>
    <filename>classCUploadQueue.html</filename>
    <member kind="function">
      <type></type>
      <name>CUploadQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>2bb7ce688489bf8045341948057e7d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CUploadQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>ddc50eac0a6d2285b41bd1e559d4f7c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Process</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>483a21f46df5fa539f9601640ab30a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddClientToQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>d382d30d4b75b69f9b419164ac7f1725</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveFromUploadQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>f610ca989e90684d8d4205e1a7a0a3bc</anchor>
      <arglist>(CUpDownClient *client, bool updatewindow=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveFromWaitingQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>6fd04c7e6875c398715e29e5c5edfbe9</anchor>
      <arglist>(CUpDownClient *client, bool updatewindow=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOnUploadQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>dca396850288d60ac89492cf4c215655</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDownloading</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>20eb81d2bbebbf3775e63164be5eb5d7</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckForTimeOver</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>59c86de6e6f5a447a08b04b4940c537d</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetFirstFromUploadList</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>09ce54fcecdcf3ce83b6b052b1c8b4f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetNextFromUploadList</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>98d9671faa31f13ad9c4ffaa509ddfee</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetQueueClientAt</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>3d5871ed3a99c961bfc2f3f220c51938</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetFirstFromWaitingList</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>49be4bbf0d506bd476c6e2f3170cc381</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetNextFromWaitingList</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>4b9fdcf36940d1d498d735cbddba1ab9</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetWaitClientAt</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>cce3ad87cca393c7a0b607096aee7676</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetWaitingClientByIP</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>5958227f849ce54596baa34df374747c</anchor>
      <arglist>(const CI2PAddress &amp;dwDest)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetWaitingClientByIP_UDP</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>64760c5468fb51dcd5f9bcca2410aec4</anchor>
      <arglist>(const CI2PAddress &amp;nUDPDest)</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetNextClient</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>8ae528b1dfcf154fe4eeb09cd8820924</anchor>
      <arglist>(CUpDownClient *update)</arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>GetWaitingPosition</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>b0662a1fb88c34597f8c778b39233aa5</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SuspendUpload</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>35ecbb3d8d32acdf851d0beef8728ded</anchor>
      <arglist>(const CMD4Hash &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResumeUpload</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>ddae0fa2da657978be3112f294e541b0</anchor>
      <arglist>(const CMD4Hash &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveFromWaitingQueue</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>bec4dc64256b819d1287be7faf4fc166</anchor>
      <arglist>(POSITION pos)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>POSITION</type>
      <name>GetWaitingClient</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>957bedfa5e0b5945e02d1190a91f2975</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>POSITION</type>
      <name>GetDownloadingClient</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>b60e67fda2cef68f7c75a79ef98e8b12</anchor>
      <arglist>(CUpDownClient *client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AcceptNewClient</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>2f245884a7f89886bd34c2e5747b8732</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AddUpNextClient</name>
      <anchorfile>classCUploadQueue.html</anchorfile>
      <anchor>30fbb1d9583e20a31131e77b4b456bf6</anchor>
      <arglist>(CUpDownClient *directadd=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CUpQueueRem</name>
    <filename>classCUpQueueRem.html</filename>
    <member kind="function">
      <type></type>
      <name>CUpQueueRem</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>a925cf6ec72922dad3111514d1c6dda7</anchor>
      <arglist>(CRemoteConnect *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReQueryUp</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>292f8dd2bfb7f2623931ec05a5c1859a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReQueryWait</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>5ec3530ca256c88312c263bf914f1e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetFirstFromUploadList</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>f5f48bd5d1ee4e2c6c078ad86baa7fc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetNextFromUploadList</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>bd0ce0df59e143c0df2bde4bcf899a8a</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
    <member kind="function">
      <type>POSITION</type>
      <name>GetFirstFromWaitingList</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>54fca31f26a3301dbe62ddf17611a9b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CUpDownClient *</type>
      <name>GetNextFromWaitingList</name>
      <anchorfile>classCUpQueueRem.html</anchorfile>
      <anchor>a56b32aae4ce741d3213374b4f7de167</anchor>
      <arglist>(POSITION &amp;curpos)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CUrlDecodeTable</name>
    <filename>classCUrlDecodeTable.html</filename>
    <member kind="function">
      <type>void</type>
      <name>DecodeString</name>
      <anchorfile>classCUrlDecodeTable.html</anchorfile>
      <anchor>b5a28efdc965f278be8df186282c2269</anchor>
      <arglist>(wxString &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CUrlDecodeTable *</type>
      <name>GetInstance</name>
      <anchorfile>classCUrlDecodeTable.html</anchorfile>
      <anchor>3b8d4dfa0ded8f6fb97f634e5a751cb7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CustomFlushPropagation</name>
    <filename>classCustomFlushPropagation.html</filename>
    <templarg>T</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Flush</name>
      <anchorfile>classCustomFlushPropagation.html</anchorfile>
      <anchor>c0faa3bd64279e9ad1912cdcdff446ef</anchor>
      <arglist>(bool hardFlush, int propagation=-1, bool blocking=true)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CustomSignalPropagation</name>
    <filename>classCustomSignalPropagation.html</filename>
    <templarg>T</templarg>
    <base>CustomFlushPropagation</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Initialize</name>
      <anchorfile>classCustomSignalPropagation.html</anchorfile>
      <anchor>74fd5f3bb893d25f73f5bbab2c2d89ef</anchor>
      <arglist>(const NameValuePairs &amp;parameters=g_nullNameValuePairs, int propagation=-1)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CValueMap</name>
    <filename>classCValueMap.html</filename>
    <member kind="function">
      <type></type>
      <name>CValueMap</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>92b196ff023626d987219c2245efe234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CValueMap</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>001e70fe2c75eee63fba998debaddc21</anchor>
      <arglist>(const CValueMap &amp;valuemap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CValueMap</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>664335490a98eadc798747dbb01eee68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTag</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>d7d858c4427813ae2088acd160917ce2</anchor>
      <arglist>(ec_tagname_t tagname, uint8 value, CECTag *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTag</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>2baf08efd31561cd771116627cb2db02</anchor>
      <arglist>(ec_tagname_t tagname, uint16 value, CECTag *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTag</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>c12f2af93861153037357a6e6f6653bc</anchor>
      <arglist>(ec_tagname_t tagname, uint32 value, CECTag *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTag</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>8447adaf142d4ab9a6092538a080fc99</anchor>
      <arglist>(ec_tagname_t tagname, uint64 value, CECTag *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTag</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>b98a5fe5e1d9ce0991df07e3f1aa62a9</anchor>
      <arglist>(ec_tagname_t tagname, CMD4Hash value, CECTag *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTag</name>
      <anchorfile>classCValueMap.html</anchorfile>
      <anchor>5d8ff87143abd9148070605cd17e14b1</anchor>
      <arglist>(ec_tagname_t tagname, wxString value, CECTag *parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CWCThread</name>
    <filename>classCWCThread.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CWCThread</name>
      <anchorfile>classCWCThread.html</anchorfile>
      <anchor>38569cc3c88e0977dacf719cd6faa575</anchor>
      <arglist>(CWebServerBase *ws, wxSocketBase *sock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CWCThread</name>
      <anchorfile>classCWCThread.html</anchorfile>
      <anchor>ee5f89aa6312be32775218cb3678cbaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>Entry</name>
      <anchorfile>classCWCThread.html</anchorfile>
      <anchor>c9b824a73940101d9a60e6ac94d6753a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CWebServerBase</name>
    <filename>classCWebServerBase.html</filename>
    <member kind="function">
      <type></type>
      <name>CWebServerBase</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>126a0bc6ddae803039ad9898fdd50b63</anchor>
      <arglist>(CimulewebApp *webApp, const wxString &amp;templateDir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CWebServerBase</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>22d7c1d1293c2eac033ffefb7a1d4eae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_Discard_V2_Request</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>f715dfef02319ae0a9cc2f583ca2816b</anchor>
      <arglist>(CECPacket *request)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>StartServer</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>a5592c85ac27056a08ab814f4a107ced</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>StopServer</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>95d4f7480092e0d74fe16d34ce86c228</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>4158f03358cd2e28683ef57133c2e2d2</anchor>
      <arglist>(const wxString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetWSPrefs</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>23ea63bf56f2996c3f83e9aef5bb0b86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_ReloadSharedFile_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>82d4f3f2f61fe045ddda85d49793aa60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_SharedFile_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5ca9ffbd8a7b28c98d825e2f19e352bc</anchor>
      <arglist>(wxString file_hash, wxString cmd, uint32 opt_arg=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_DownloadFile_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>83c9972a8e2267412958c59b41da325d</anchor>
      <arglist>(wxString file_hash, wxString cmd, uint32 opt_arg=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_DownloadSearchFile_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>c8e7feca50bef2147db5d3e72056fd2d</anchor>
      <arglist>(wxString file_hash, uint8 cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_Server_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>046cf43dcfb32813af61d4b6802424b4</anchor>
      <arglist>(uint32 ip, uint16 port, wxString cmd)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_AddServer_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>d0e6cfc576f600bcc803849289f58630</anchor>
      <arglist>(wxString addr, wxString port, wxString name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Send_Search_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5efe65f5525dc45e54967da184ac1489</anchor>
      <arglist>(wxString search, wxString extention, wxString type, EC_SEARCH_TYPE search_type, uint32 avail, wxULongLong min_size, wxULongLong max_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Send_DownloadEd2k_Cmd</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5e8c7a9db7c528bbdaf6e068cc6a1574</anchor>
      <arglist>(wxString link, uint8 cat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reload_Stats</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>84e41ef01c6c0d52c4662ee5564c1312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CimulewebApp *</type>
      <name>webInterface</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>59f3dfb1af1564b12d520bd3ca8159e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>ProcessURL</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5ab0d93c349f76d16c2f352fe7a4d636</anchor>
      <arglist>(ThreadData)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>ProcessImgFileReq</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>2a5c087c405df9662ad61cbf14723a66</anchor>
      <arglist>(ThreadData)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>GzipCompress</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>e98c20bf2dcaf40364d10bc08e1fab25</anchor>
      <arglist>(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CWSThread *</type>
      <name>wsThread</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>778c93e59ae7427d04d459771b72852b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex *</type>
      <name>m_mutexChildren</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>c90ec41eaf03ba74912e59bb4bd45a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ServersInfo</type>
      <name>m_ServersInfo</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5a4869cf9979d50427aca5fcfefd3d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SharedFileInfo</type>
      <name>m_SharedFileInfo</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5e9afa778c37c512188202d1321b8f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DownloadFileInfo</type>
      <name>m_DownloadFileInfo</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>2b2d20496015ea76a221020ca502eef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UploadsInfo</type>
      <name>m_UploadsInfo</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>a1e03c06851af8637883446def44342b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SearchInfo</type>
      <name>m_SearchInfo</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>cde2518ac2e9c42d0cf8e00bbc59e780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CStatsCollection</type>
      <name>m_Stats</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>c7df6c42397ca967d1a1e3154be409a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CImageLib</type>
      <name>m_ImageLib</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>3c50242c1e05a7d32f6780f092e8f9c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>CWebSocket</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>573927b581ff7c43f3c58e712edaf456</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>CWSThread</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>5fb282eb16313f1614aa726a129afc46</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>CPhPLibContext</name>
      <anchorfile>classCWebServerBase.html</anchorfile>
      <anchor>281a6221aeb986b2361714a5695572f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CWebSocket</name>
    <filename>classCWebSocket.html</filename>
    <member kind="function">
      <type>void</type>
      <name>OnReceived</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>ac0939218ca2aee6f4884933f2b865f9</anchor>
      <arglist>(char *pData, uint32 dwDataSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnRequestReceived</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>505ece47a7485c2d6bb8046600088aa1</anchor>
      <arglist>(char *pHeader, char *pData, uint32 dwDataLen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendContent</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>e3cec98945778ad18592e38f3f1dd202</anchor>
      <arglist>(const char *szStdResponse, const void *pContent, uint32 dwContentSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendData</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>a8bd098a24f98deee61ce4e659a22a30</anchor>
      <arglist>(const void *pData, uint32 dwDataSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendHttpHeaders</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>42ccd0cf308fd0ca05f89c72e48f63e8</anchor>
      <arglist>(bool use_gzip, uint32 content_len, int session_id)</arglist>
    </member>
    <member kind="variable">
      <type>CWebServerBase *</type>
      <name>m_pParent</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>a7eddb5530d7e5777d057b257ecbe881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSocketBase *</type>
      <name>m_hSocket</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>f679caea44a4466fb6d0411df421ea12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CChunk *</type>
      <name>m_pHead</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>235d4d00649c69fafbb7290bbba2ee8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CChunk *</type>
      <name>m_pTail</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>047b5909e8873465cfd1633af3bb8d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>m_Cookie</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>1a68c62fd7969f1de48d00e244805c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>m_pBuf</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>b0babbd04b0e31bbd36d2b2bb2269e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwBufSize</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>c223a3a99e7bef45ca7f696ddf0b436c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwRecv</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>970700ead9582940c978bfad519b04f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwHttpHeaderLen</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>1069604caac1a636aa93522e263efae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwHttpContentLen</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>5932995e28dc0022ec2a38a36d22ddeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bValid</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>ee32aa41a0a25d7b811574efcb94f1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bCanRecv</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>1f8df9308e211e3b4d885d435f55980f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_bCanSend</name>
      <anchorfile>classCWebSocket.html</anchorfile>
      <anchor>427dc5ead36da1ba858a8abeeab40721</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">CWebSocket::CChunk</class>
  </compound>
  <compound kind="class">
    <name>CWebSocket::CChunk</name>
    <filename>classCWebSocket_1_1CChunk.html</filename>
    <member kind="function">
      <type></type>
      <name>~CChunk</name>
      <anchorfile>classCWebSocket_1_1CChunk.html</anchorfile>
      <anchor>b9c0c1efc8d0874dc753b2ac333b6390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>m_pData</name>
      <anchorfile>classCWebSocket_1_1CChunk.html</anchorfile>
      <anchor>d9d7f8f5d0bb1983bd64faac4f09b62d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>m_pToSend</name>
      <anchorfile>classCWebSocket_1_1CChunk.html</anchorfile>
      <anchor>0c0d04fba323445cd2731cd28b18eaf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_dwSize</name>
      <anchorfile>classCWebSocket_1_1CChunk.html</anchorfile>
      <anchor>c4b3959de66eddb418a126e4c5c8ad6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CChunk *</type>
      <name>m_pNext</name>
      <anchorfile>classCWebSocket_1_1CChunk.html</anchorfile>
      <anchor>52ad670d426d491aae14fceb96642467</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CWSThread</name>
    <filename>classCWSThread.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>CWSThread</name>
      <anchorfile>classCWSThread.html</anchorfile>
      <anchor>96ee046d3e74b877e3fadcf9e7386175</anchor>
      <arglist>(CWebServerBase *webserver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>Entry</name>
      <anchorfile>classCWSThread.html</anchorfile>
      <anchor>c66cc6d7301d4319a6aa7231c8e6d03a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DecodingResult</name>
    <filename>structDecodingResult.html</filename>
    <member kind="function">
      <type></type>
      <name>DecodingResult</name>
      <anchorfile>structDecodingResult.html</anchorfile>
      <anchor>9e13518e1116d3a22a349c0ba9152bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DecodingResult</name>
      <anchorfile>structDecodingResult.html</anchorfile>
      <anchor>11f453cfc768ba47739525dae0855a3d</anchor>
      <arglist>(unsigned int len)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structDecodingResult.html</anchorfile>
      <anchor>4ff48f3460b4a1a0238c08c97893867c</anchor>
      <arglist>(const DecodingResult &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structDecodingResult.html</anchorfile>
      <anchor>0d3e59dfd95799e1bd7adbcdd33aedeb</anchor>
      <arglist>(const DecodingResult &amp;rhs) const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isValidCoding</name>
      <anchorfile>structDecodingResult.html</anchorfile>
      <anchor>b88062318cd0e68b3061db351d3ba34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>messageLength</name>
      <anchorfile>structDecodingResult.html</anchorfile>
      <anchor>046976b4664190865b28448222a39970</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DERGeneralEncoder</name>
    <filename>classDERGeneralEncoder.html</filename>
    <base>ByteQueue</base>
    <member kind="function">
      <type></type>
      <name>DERGeneralEncoder</name>
      <anchorfile>classDERGeneralEncoder.html</anchorfile>
      <anchor>7e0b7efea6616097595bc06769e60e73</anchor>
      <arglist>(BufferedTransformation &amp;outQueue, byte asnTag=SEQUENCE|CONSTRUCTED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DERGeneralEncoder</name>
      <anchorfile>classDERGeneralEncoder.html</anchorfile>
      <anchor>572f7ca80b34eaae1355a39d1adfcaa1</anchor>
      <arglist>(DERGeneralEncoder &amp;outQueue, byte asnTag=SEQUENCE|CONSTRUCTED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DERGeneralEncoder</name>
      <anchorfile>classDERGeneralEncoder.html</anchorfile>
      <anchor>2d046a37b6d2184d80b25f7d74e643c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MessageEnd</name>
      <anchorfile>classDERGeneralEncoder.html</anchorfile>
      <anchor>cb5f1a94ba97027c603b019bd5228510</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DERSequenceEncoder</name>
    <filename>classDERSequenceEncoder.html</filename>
    <base>DERGeneralEncoder</base>
    <member kind="function">
      <type></type>
      <name>DERSequenceEncoder</name>
      <anchorfile>classDERSequenceEncoder.html</anchorfile>
      <anchor>f2e684c38e7941e683e3880ea97c8f33</anchor>
      <arglist>(BufferedTransformation &amp;outQueue, byte asnTag=SEQUENCE|CONSTRUCTED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DERSequenceEncoder</name>
      <anchorfile>classDERSequenceEncoder.html</anchorfile>
      <anchor>fca95280210727594b5e8ba197504af5</anchor>
      <arglist>(DERSequenceEncoder &amp;outQueue, byte asnTag=SEQUENCE|CONSTRUCTED)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DownloadFile</name>
    <filename>classDownloadFile.html</filename>
    <member kind="function">
      <type></type>
      <name>DownloadFile</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>267900a8014565f03838688c6c07f59d</anchor>
      <arglist>(CEC_PartFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUpdate</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>50218ea644b4231387b9c577808ab49b</anchor>
      <arglist>(CEC_PartFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>d024e8c33d4f7c02e8b1e745f7edb65f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static class DownloadFileInfo *</type>
      <name>GetContainerInstance</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>c6d98be83f62b6a18d456aa64c0b15cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sFileName</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>0e5e72cffb9c05d9cf52d55c94a246ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>nFileStatus</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>17d1978a291ee8680fb548525e2cadd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>lFileSize</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>1a15635243d35cf2960bb52cef66889d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>lFileCompleted</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>80a1adf814addddf3cf994f7d8b8afd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>lFileTransferred</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>5c407060134ad0becc2f0d8fad058500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>lFileSpeed</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>06057a61733cb8453a5d5607eec950df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>lSourceCount</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>76a1248d4a0ed451bdc203d5350be7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>lNotCurrentSourceCount</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>9b294b57c787593e97da6c2298d68222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>lTransferringSourceCount</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>1846c5f9d8fe1a35909ad5120f22ec3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>lSourceCountA4AF</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>5617fdc6838ca6f9fb062459b26f8689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fCompleted</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>6be384c0913096ad371717456ef94065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>lFilePrio</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>65e6522c1dd85063e9cd664d65193861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bFileAutoPriority</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>88bd9f50b3ea19c67d2ddae5a6325400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sFileHash</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>b0ddb59766db53e829518cfafb98662f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sED2kLink</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>09c824387c92c21d72f6140da702d199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>nCat</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>24a5d3b434dcad0f5574f1193df003a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>nHash</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>7cac1754411f985bf6d8d09c281d4d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CProgressImage *</type>
      <name>m_Image</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>b8289f639abd56929fd52708aa18ae44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PartFileEncoderData</type>
      <name>m_Encoder</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>ca27659f1385d2cead1031ec65297590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Gap_Struct &gt;</type>
      <name>m_ReqParts</name>
      <anchorfile>classDownloadFile.html</anchorfile>
      <anchor>7bba1c75201c759e12660c5637b404e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DownloadFileInfo</name>
    <filename>classDownloadFileInfo.html</filename>
    <base>UpdatableItemsContainer&lt; DownloadFile, CEC_PartFile_Tag, CMD4Hash &gt;</base>
    <member kind="function">
      <type></type>
      <name>DownloadFileInfo</name>
      <anchorfile>classDownloadFileInfo.html</anchorfile>
      <anchor>bb8fdfb297ea0b469f000ea54fd15c49</anchor>
      <arglist>(CimulewebApp *webApp, CImageLib *imlib)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadImageParams</name>
      <anchorfile>classDownloadFileInfo.html</anchorfile>
      <anchor>b65fcab86b9ea46e2dc120c95d08dcc0</anchor>
      <arglist>(wxString &amp;tpl, int width, int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReQuery</name>
      <anchorfile>classDownloadFileInfo.html</anchorfile>
      <anchor>f8f7182b288cba630dc386ddd748d01c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ItemInserted</name>
      <anchorfile>classDownloadFileInfo.html</anchorfile>
      <anchor>07f08fdeff133fc050fe395931691e27</anchor>
      <arglist>(DownloadFile *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ItemDeleted</name>
      <anchorfile>classDownloadFileInfo.html</anchorfile>
      <anchor>bece3292c3479051ff24abed1ade35fd</anchor>
      <arglist>(DownloadFile *item)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static DownloadFileInfo *</type>
      <name>m_This</name>
      <anchorfile>classDownloadFileInfo.html</anchorfile>
      <anchor>712a3eb1ce140d6da353d200054f2b5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWord</name>
    <filename>classDWord.html</filename>
    <member kind="function">
      <type></type>
      <name>DWord</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>bfd01f04e0570e990fe27e9bbdf1c6ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DWord</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>39aee22ff28986f7d5b3a4b1278d63c4</anchor>
      <arglist>(word low)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DWord</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>bbb0ecbdb03ece0f85fc81d0034c2804</anchor>
      <arglist>(word low, word high)</arglist>
    </member>
    <member kind="function">
      <type>DWord &amp;</type>
      <name>operator+=</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>7e2dd59548ac9f6eb3bc8f75f4a7b114</anchor>
      <arglist>(word a)</arglist>
    </member>
    <member kind="function">
      <type>DWord</type>
      <name>operator+</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>d00fe4996c837cff9bd1f85c8bcea17b</anchor>
      <arglist>(word a)</arglist>
    </member>
    <member kind="function">
      <type>DWord</type>
      <name>operator-</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>159c633b6d08fc28b7babb58346d7a83</anchor>
      <arglist>(DWord a)</arglist>
    </member>
    <member kind="function">
      <type>DWord</type>
      <name>operator-</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>a2dd07047206457697e94ab8011f7958</anchor>
      <arglist>(word a)</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>operator/</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>82597a869878e3924c9e7f03dc7ddcb1</anchor>
      <arglist>(word divisor)</arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>operator%</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>9dd87373f7a654e7fec14c7bc147f3eb</anchor>
      <arglist>(word a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>ac1054b42900e1e562c65e893099cc87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>GetLowHalf</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>1a623f81ea31a934578aa5a0f55d475a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>GetHighHalf</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>a7285982eddd3e91867f7e690f270945</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>GetHighHalfAsBorrow</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>94b310997f226ce9124e0e21dc210720</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DWord</type>
      <name>Multiply</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>7fb9bde7a30b7fc28a08bb2fc0fc2706</anchor>
      <arglist>(word a, word b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DWord</type>
      <name>MultiplyAndAdd</name>
      <anchorfile>classDWord.html</anchorfile>
      <anchor>4e7349021336181074857b4049ef2f3f</anchor>
      <arglist>(word a, word b, word c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EC_IPv4_t</name>
    <filename>classEC__IPv4__t.html</filename>
    <member kind="function">
      <type></type>
      <name>EC_IPv4_t</name>
      <anchorfile>classEC__IPv4__t.html</anchorfile>
      <anchor>6e7123ede63cda3d38f3ff4472569c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EC_IPv4_t</name>
      <anchorfile>classEC__IPv4__t.html</anchorfile>
      <anchor>2128003ce975213e19be673e19ebb237</anchor>
      <arglist>(uint32 ip, uint16 port)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>IP</name>
      <anchorfile>classEC__IPv4__t.html</anchorfile>
      <anchor>0168457afdbc347a1582110e8a4e0841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>StringIP</name>
      <anchorfile>classEC__IPv4__t.html</anchorfile>
      <anchor>55484539d4b48794e1a7f3c26084893f</anchor>
      <arglist>(bool brackets=true)</arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>m_ip</name>
      <anchorfile>classEC__IPv4__t.html</anchorfile>
      <anchor>3d606eafc71fd113e9ec11b1e50a1ac8</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>m_port</name>
      <anchorfile>classEC__IPv4__t.html</anchorfile>
      <anchor>1d1b71bd62a1d42d16d2420bd78b8ec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Ed2kHash</name>
    <filename>classEd2kHash.html</filename>
    <base>MD4</base>
    <member kind="function">
      <type></type>
      <name>Ed2kHash</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>d6d855ffb331bd7660207b1158635a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Ed2kHash</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>618107b22ef2b070646e33a21b668cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetED2KHashFromFile</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>938be6afeb165c41b077b7af18728c2c</anchor>
      <arglist>(const wxFileName &amp;filename, MD4Hook hook)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetED2KHashFromFile</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>abaa3930b708ccb3ee0782e9227445bc</anchor>
      <arglist>(const wxString &amp;filename, MD4Hook hook)</arglist>
    </member>
    <member kind="function">
      <type>wxArrayString</type>
      <name>GetED2KHash</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>b392fc2c67c00dd1f0971bb1856184b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetED2KLink</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>98f2eedf60a52ccf6ba4300dffd765c4</anchor>
      <arglist>(const bool addPartHashes=false, const wxArrayString *arrayOfUrls=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>wxString</type>
      <name>CleanFilename</name>
      <anchorfile>classEd2kHash.html</anchorfile>
      <anchor>ff1aa198fa5cc9c0e97093ed886876d4</anchor>
      <arglist>(const wxString &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditServerListDlg</name>
    <filename>classEditServerListDlg.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>EditServerListDlg</name>
      <anchorfile>classEditServerListDlg.html</anchorfile>
      <anchor>6b5737510a53c8f411712967ada788bb</anchor>
      <arglist>(wxWindow *parent, const wxString &amp;caption, const wxString &amp;message, const wxString &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EditServerListDlg</name>
      <anchorfile>classEditServerListDlg.html</anchorfile>
      <anchor>48169e84458082a806e9fa9547159d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnOK</name>
      <anchorfile>classEditServerListDlg.html</anchorfile>
      <anchor>2538857350f665623681b914a2f05d18</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxTextCtrl *</type>
      <name>m_textctrl</name>
      <anchorfile>classEditServerListDlg.html</anchorfile>
      <anchor>a99e3131d0755c9c484340975303edda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxString</type>
      <name>m_file</name>
      <anchorfile>classEditServerListDlg.html</anchorfile>
      <anchor>8f983231fb9b32b19f77156feccc9797</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EED2KFileTypeClass</name>
    <filename>classEED2KFileTypeClass.html</filename>
    <member kind="function">
      <type></type>
      <name>EED2KFileTypeClass</name>
      <anchorfile>classEED2KFileTypeClass.html</anchorfile>
      <anchor>e7e8671158082c6ff34a1d929b528be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EED2KFileTypeClass</name>
      <anchorfile>classEED2KFileTypeClass.html</anchorfile>
      <anchor>c46c3e46b65145f9fc2fe03a6aaf835e</anchor>
      <arglist>(EED2KFileType t)</arglist>
    </member>
    <member kind="function">
      <type>EED2KFileType</type>
      <name>GetType</name>
      <anchorfile>classEED2KFileTypeClass.html</anchorfile>
      <anchor>dbd48e0ec505794a87ec1f813fd6b740</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Empty</name>
    <filename>classEmpty.html</filename>
  </compound>
  <compound kind="struct">
    <name>EncryptionStandard</name>
    <filename>structEncryptionStandard.html</filename>
  </compound>
  <compound kind="struct">
    <name>EnumToType</name>
    <filename>structEnumToType.html</filename>
    <templarg>ENUM_TYPE</templarg>
    <templarg>VALUE</templarg>
    <member kind="function" static="yes">
      <type>static ENUM_TYPE</type>
      <name>ToEnum</name>
      <anchorfile>structEnumToType.html</anchorfile>
      <anchor>fe0316d264db930e7cd0c4b829599213</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EuclideanDomainOf</name>
    <filename>classEuclideanDomainOf.html</filename>
    <templarg>T</templarg>
    <base>AbstractEuclideanDomain</base>
    <member kind="typedef">
      <type>T</type>
      <name>Element</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>a7ae3206185edccff8c2e7d56eb9d47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EuclideanDomainOf</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>ca20cf60ab8cd2c054cc2fac8c68bb36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equal</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>9c06ea0c5435d761cb42bff4fecdefe1</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Identity</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>db0fa01307ae40351be7e00663713a9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Add</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>f9be8703b57c4eb3fca8371a5709ed61</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Element &amp;</type>
      <name>Accumulate</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>9fa4103ff0b31f33b1f039383c9ab57c</anchor>
      <arglist>(Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Inverse</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>d78d5eeb2ec41658d48fdbf526af8fc3</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Subtract</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>29808a9e90c45ce67743838856ad0259</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Element &amp;</type>
      <name>Reduce</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>86e05235bbeaf1bb248f8354f3900d4b</anchor>
      <arglist>(Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Double</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>8c780e5c44eb5263e0115d02cd673725</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>MultiplicativeIdentity</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>96b4cd14ea7dd94ed448091eafc0e987</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Multiply</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>838df0bdf681e17b2d9739218055f77d</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Square</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>bbca8e162fa458ea0c3298ec93bbc785</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUnit</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>cc11a9230a2d95b1f9bf7881abcfa58e</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>MultiplicativeInverse</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>1799ba37ef6df348c1c03f26662a48dd</anchor>
      <arglist>(const Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Divide</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>dec4df9559c0c1e606ab8640fa4375cd</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Element &amp;</type>
      <name>Mod</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>9a984ecc864048eca647219f0cca2107</anchor>
      <arglist>(const Element &amp;a, const Element &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DivisionAlgorithm</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>d6f863dee17427103f777e1965f2eb63</anchor>
      <arglist>(Element &amp;r, Element &amp;q, const Element &amp;a, const Element &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classEuclideanDomainOf.html</anchorfile>
      <anchor>c362f13502c9fcd46495e184088039fe</anchor>
      <arglist>(const EuclideanDomainOf&lt; T &gt; &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Exception</name>
    <filename>classException.html</filename>
    <base>std::exception</base>
    <member kind="enumeration">
      <name>ErrorType</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_IMPLEMENTED</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0a1323c0f32eac2f9502b99c5c899ce629</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ARGUMENT</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0ab018a535e00d226178a71d2c5fa800d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANNOT_FLUSH</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0a11a8912fe9ae87f7469705b6d5130a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DATA_INTEGRITY_CHECK_FAILED</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0a77a639a803cf53052f9c76a0354247e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_DATA_FORMAT</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0a3a0352964781e7712b21dbb70ffbe646</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IO_ERROR</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0ad51c7d0e0156bc1794b3b7f99599aba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OTHER_ERROR</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>8e53909d979479380e0274807c074c0a27d9ee7704100a88e4ae4adcc4072015</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>30847048a4b7c9a7aae5e6178964dcfb</anchor>
      <arglist>(ErrorType errorType, const std::string &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Exception</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>d1ba411de295ef2eeb02ba26284a829a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>45642915395d3b813fedc2593fbcb8bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetWhat</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>d67873a3923892d08072bdd378b24b29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWhat</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>15f2ad1081dbac6d3cd676a4baa9515d</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>ErrorType</type>
      <name>GetErrorType</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>eb3ea0f59ff8e38ef47fe0d9c5c22dc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetErrorType</name>
      <anchorfile>classException.html</anchorfile>
      <anchor>0e1d8806d64e54e9584e9918462894bc</anchor>
      <arglist>(ErrorType errorType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::exception</name>
    <filename>classstd_1_1exception.html</filename>
  </compound>
  <compound kind="class">
    <name>ExternalConn</name>
    <filename>classExternalConn.html</filename>
    <base>wxEvtHandler</base>
    <member kind="function">
      <type></type>
      <name>ExternalConn</name>
      <anchorfile>classExternalConn.html</anchorfile>
      <anchor>776b07ea72dd0b4b345e327cd2db37bf</anchor>
      <arglist>(imuleIPV4Address addr, wxString *msg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalConn</name>
      <anchorfile>classExternalConn.html</anchorfile>
      <anchor>91621664d52b6ca4a08a6cb79307720d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CECPacket *</type>
      <name>ProcessRequest2</name>
      <anchorfile>classExternalConn.html</anchorfile>
      <anchor>874e6e6e542c240e9ca86583414830da</anchor>
      <arglist>(const CECPacket *request, CPartFile_Encoder_Map &amp;, CKnownFile_Encoder_Map &amp;, CObjTagMap &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CECPacket *</type>
      <name>Authenticate</name>
      <anchorfile>classExternalConn.html</anchorfile>
      <anchor>7a4d653b650055e9946ff91b8e4a629c</anchor>
      <arglist>(const CECPacket *)</arglist>
    </member>
    <member kind="variable">
      <type>wxSocketServer *</type>
      <name>m_ECServer</name>
      <anchorfile>classExternalConn.html</anchorfile>
      <anchor>65c7a864ee74b09a7f2590c3e400682a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileSink</name>
    <filename>classFileSink.html</filename>
    <base>Sink</base>
    <base>NotCopyable</base>
    <member kind="function">
      <type></type>
      <name>FileSink</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>61891e8f8b1fd2b9cb01a0c8ef9b2ef3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileSink</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>e7e571c08f2334948fc56249688cac24</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileSink</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>cf2703863fea64dbd82c2108245f8533</anchor>
      <arglist>(const char *filename, bool binary=true)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>GetStream</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>e5c7c47d99b38ed04fb96c2e35e797e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>dd89bb9890b60ce429ba590941099790</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>d93a5dd1b2a2d7f433d81da99d2ebd9b</anchor>
      <arglist>(const byte *inString, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classFileSink.html</anchorfile>
      <anchor>f6485914da76e0374ad93d79da10030f</anchor>
      <arglist>(bool hardFlush, bool blocking)</arglist>
    </member>
    <class kind="class">FileSink::Err</class>
    <class kind="class">FileSink::OpenErr</class>
    <class kind="class">FileSink::WriteErr</class>
  </compound>
  <compound kind="class">
    <name>FileSink::Err</name>
    <filename>classFileSink_1_1Err.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>Err</name>
      <anchorfile>classFileSink_1_1Err.html</anchorfile>
      <anchor>7984bfd7573b5e5cc0fd1e02fd2e6bbf</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileSink::OpenErr</name>
    <filename>classFileSink_1_1OpenErr.html</filename>
    <base>FileSink::Err</base>
    <member kind="function">
      <type></type>
      <name>OpenErr</name>
      <anchorfile>classFileSink_1_1OpenErr.html</anchorfile>
      <anchor>583fe9294f2df41f5e1099a65b37be3b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileSink::WriteErr</name>
    <filename>classFileSink_1_1WriteErr.html</filename>
    <base>FileSink::Err</base>
    <member kind="function">
      <type></type>
      <name>WriteErr</name>
      <anchorfile>classFileSink_1_1WriteErr.html</anchorfile>
      <anchor>143310eb29254ea5221bcbb1cd3e45af</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileSource</name>
    <filename>classFileSource.html</filename>
    <base>SourceTemplate&lt; FileStore &gt;</base>
    <member kind="typedef">
      <type>FileStore::Err</type>
      <name>Err</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>4660cff39be4c76c789960dff8e4c8b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FileStore::OpenErr</type>
      <name>OpenErr</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>20893abd3421c8097546c7470e028857</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FileStore::ReadErr</type>
      <name>ReadErr</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>ab68ca4a635a953a5e156b8106268a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileSource</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>faf658f26f1bc1d25bb1b8a6eb3a255c</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileSource</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>03a5d2f2116167667587c5ffae2e103c</anchor>
      <arglist>(std::istream &amp;in, bool pumpAll, BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileSource</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>1882e0cbe882e4379b8acf0c7707626f</anchor>
      <arglist>(const char *filename, bool pumpAll, BufferedTransformation *attachment=NULL, bool binary=true)</arglist>
    </member>
    <member kind="function">
      <type>std::istream *</type>
      <name>GetStream</name>
      <anchorfile>classFileSource.html</anchorfile>
      <anchor>2d864a4d277e47a88cb2c073b875d561</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileStore</name>
    <filename>classFileStore.html</filename>
    <base>Store</base>
    <base protection="private">FilterPutSpaceHelper</base>
    <base>NotCopyable</base>
    <member kind="function">
      <type></type>
      <name>FileStore</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>adb823030f45a6a9690185f0279b6908</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileStore</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>4a3ea09952e93c4db7fedf277c6d217e</anchor>
      <arglist>(std::istream &amp;in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileStore</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>27d2d16927f16301fb178b676794a1fc</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>std::istream *</type>
      <name>GetStream</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>52271ff9a07861683eb41b9df0be7081</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>MaxRetrievable</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>05946cebcf03407d860a1c1231f93854</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>0deb1c1ee49e9931e463837fe771d7e4</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>c49a276ac479de129429b7dcbf288723</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>Skip</name>
      <anchorfile>classFileStore.html</anchorfile>
      <anchor>47025e3a20726bf0a6e74a94c82ae671</anchor>
      <arglist>(unsigned long skipMax=ULONG_MAX)</arglist>
    </member>
    <class kind="class">FileStore::Err</class>
    <class kind="class">FileStore::OpenErr</class>
    <class kind="class">FileStore::ReadErr</class>
  </compound>
  <compound kind="class">
    <name>FileStore::Err</name>
    <filename>classFileStore_1_1Err.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>Err</name>
      <anchorfile>classFileStore_1_1Err.html</anchorfile>
      <anchor>ad7a4b5c0e782ec455dcb813fbd2c3b5</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileStore::OpenErr</name>
    <filename>classFileStore_1_1OpenErr.html</filename>
    <base>FileStore::Err</base>
    <member kind="function">
      <type></type>
      <name>OpenErr</name>
      <anchorfile>classFileStore_1_1OpenErr.html</anchorfile>
      <anchor>8996140e49885d4a5a517b373c32b462</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FileStore::ReadErr</name>
    <filename>classFileStore_1_1ReadErr.html</filename>
    <base>FileStore::Err</base>
    <member kind="function">
      <type></type>
      <name>ReadErr</name>
      <anchorfile>classFileStore_1_1ReadErr.html</anchorfile>
      <anchor>157aa2e66b8bc0b778f23572a82df3fe</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Filter</name>
    <filename>classFilter.html</filename>
    <base>BufferedTransformation</base>
    <base>NotCopyable</base>
    <member kind="function">
      <type></type>
      <name>Filter</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>5aef22a86d82a8bdc73777b132f142dd</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Attachable</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>6e7251247b5c2cc3b0c15e861cc88e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BufferedTransformation *</type>
      <name>AttachedTransformation</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>c8fc888888b2dad88bf64fc703044a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BufferedTransformation *</type>
      <name>AttachedTransformation</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>0d888003a5af6c51ef2c80b2f11d6b72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Detach</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>93817876b45172108fe0342de6442f75</anchor>
      <arglist>(BufferedTransformation *newAttachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>6733a3ea290961db2128f4f35e927ce4</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>0c67ab0da85b371883e465131a97c481</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>0c011bdc71755b373292e7a722e9e332</anchor>
      <arglist>(const NameValuePairs &amp;parameters=g_nullNameValuePairs, int propagation=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Flush</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>d845deb5113d2bd04d109c05abfd3098</anchor>
      <arglist>(bool hardFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MessageSeriesEnd</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>a42c62587dda61266ac8195d9c9edb47</anchor>
      <arglist>(int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual BufferedTransformation *</type>
      <name>NewDefaultAttachment</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>93c549550b363512fc91e19bb71db3c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Insert</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>3aff43294dee9f9b853c7ff96e694a2f</anchor>
      <arglist>(Filter *nextFilter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ShouldPropagateMessageEnd</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>64df4f582f762b1df2840dbaad89a9e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ShouldPropagateMessageSeriesEnd</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>3d0af81768490661297d21d7ce202e8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>PropagateInitialize</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>3a24170e0e22a725ea7f0f706d9637a1</anchor>
      <arglist>(const NameValuePairs &amp;parameters, int propagation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>Output</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>5bccc18badc953bd2232244e05aa355c</anchor>
      <arglist>(int outputSite, const byte *inString, unsigned int length, int messageEnd, bool blocking, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>OutputModifiable</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>952d25230b1040f855ac02018f67209f</anchor>
      <arglist>(int outputSite, byte *inString, unsigned int length, int messageEnd, bool blocking, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>OutputMessageEnd</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>0ec3172464525730ae5a82dca7bb3486</anchor>
      <arglist>(int outputSite, int propagation, bool blocking, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>OutputFlush</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>b4bcb84ff32215c6c31432e83419ff55</anchor>
      <arglist>(int outputSite, bool hardFlush, int propagation, bool blocking, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>OutputMessageSeriesEnd</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>255f83eaddd679a61326ce05c487fd2e</anchor>
      <arglist>(int outputSite, int propagation, bool blocking, const std::string &amp;channel=NULL_CHANNEL)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>m_inputPosition</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>1fe4065f682536e1cce6a8fc5daf25cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_continueAt</name>
      <anchorfile>classFilter.html</anchorfile>
      <anchor>b57fb6112bb2cb7c018941bdcd7b4570</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>filter_st</name>
    <filename>structfilter__st.html</filename>
    <member kind="variable">
      <type>uint32</type>
      <name>addr</name>
      <anchorfile>structfilter__st.html</anchorfile>
      <anchor>d17914f46635940a28131794f162e44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>mask</name>
      <anchorfile>structfilter__st.html</anchorfile>
      <anchor>3d2a0b8cf02ac801a7a8f7e005a1450a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FilterPutSpaceHelper</name>
    <filename>structFilterPutSpaceHelper.html</filename>
    <member kind="function">
      <type>byte *</type>
      <name>HelpCreatePutSpace</name>
      <anchorfile>structFilterPutSpaceHelper.html</anchorfile>
      <anchor>311facd548cc9bf628ca5a5fd13ad09e</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel, unsigned int minSize, unsigned int desiredSize, unsigned int &amp;bufferSize)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>HelpCreatePutSpace</name>
      <anchorfile>structFilterPutSpaceHelper.html</anchorfile>
      <anchor>f797239319a039a6c44b607f4b6c0a57</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel, unsigned int minSize)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>HelpCreatePutSpace</name>
      <anchorfile>structFilterPutSpaceHelper.html</anchorfile>
      <anchor>c55a10bcb1e2cd30cfc4556972abd616</anchor>
      <arglist>(BufferedTransformation &amp;target, const std::string &amp;channel, unsigned int minSize, unsigned int bufferSize)</arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>m_tempSpace</name>
      <anchorfile>structFilterPutSpaceHelper.html</anchorfile>
      <anchor>c50ca63d7b1a529a32e8596aa44df9c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FilterWithBufferedInput</name>
    <filename>classFilterWithBufferedInput.html</filename>
    <base>Filter</base>
    <member kind="function">
      <type></type>
      <name>FilterWithBufferedInput</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>8c60c4e6452fdeb61f9d888bf50a706d</anchor>
      <arglist>(BufferedTransformation *attachment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilterWithBufferedInput</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>6f385e52bd65d41e057675e9810987ae</anchor>
      <arglist>(unsigned int firstSize, unsigned int blockSize, unsigned int lastSize, BufferedTransformation *attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>e97be71708e0020167e5c08856fd3f3b</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>0891b70d197f16d2251ae4118dd11966</anchor>
      <arglist>(const byte *inString, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PutModifiable2</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>d1753932cb6232997e8caf1ee9477971</anchor>
      <arglist>(byte *inString, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>4261e0491864a31738cf53b3f9343806</anchor>
      <arglist>(bool hardFlush, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ForceNextPut</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>fa0096257c94f94c3a5938a0e826c46f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>DidFirstPut</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>9021ea73725cb33497a754d758c888c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>InitializeDerivedAndReturnNewSizes</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>3f174a724af94b3e0241c8834ba064dc</anchor>
      <arglist>(const NameValuePairs &amp;parameters, unsigned int &amp;, unsigned int &amp;, unsigned int &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>InitializeDerived</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>d1090cfa9ee22ca6b5309fe18eac92e5</anchor>
      <arglist>(const NameValuePairs &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>FirstPut</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>d1d8f20607a52b8ae262ccb3e5a65f01</anchor>
      <arglist>(const byte *inString)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>NextPutSingle</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>538e10bfd9bd9de1c7ff0f7505c7ca0c</anchor>
      <arglist>(const byte *)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>NextPutMultiple</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>02d3a034dbc69e2d08a0dbc221577274</anchor>
      <arglist>(const byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>NextPutModifiable</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>08dd4a9053417854d879d11de41c08e0</anchor>
      <arglist>(byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>LastPut</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>05735353adfc6cd3a058b4253eee08e5</anchor>
      <arglist>(const byte *inString, unsigned int length)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>FlushDerived</name>
      <anchorfile>classFilterWithBufferedInput.html</anchorfile>
      <anchor>36d688fc691d1c5f2b62cfa2139145bb</anchor>
      <arglist>()</arglist>
    </member>
    <class kind="class">FilterWithBufferedInput::BlockQueue</class>
  </compound>
  <compound kind="class">
    <name>FixedBlockSize</name>
    <filename>classFixedBlockSize.html</filename>
    <templarg>N</templarg>
    <member kind="enumvalue">
      <name>BLOCKSIZE</name>
      <anchorfile>classFixedBlockSize.html</anchorfile>
      <anchor>27542bc5188b4dac0c003aaae75dba8c54321f400a430fbc442c8ddf3602046c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FixedKeyLength</name>
    <filename>classFixedKeyLength.html</filename>
    <templarg>N</templarg>
    <templarg>IV_REQ</templarg>
    <member kind="enumvalue">
      <name>KEYLENGTH</name>
      <anchorfile>classFixedKeyLength.html</anchorfile>
      <anchor>ac8db5c7f7fe7c4b5d2739236831730bc108c87fd8c4bae9de145719235c07ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIN_KEYLENGTH</name>
      <anchorfile>classFixedKeyLength.html</anchorfile>
      <anchor>ac8db5c7f7fe7c4b5d2739236831730b3a5192b83015faa14f03786fa00c3ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_KEYLENGTH</name>
      <anchorfile>classFixedKeyLength.html</anchorfile>
      <anchor>ac8db5c7f7fe7c4b5d2739236831730b1e740849641fdbc7ed1f96aa3f71b0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_KEYLENGTH</name>
      <anchorfile>classFixedKeyLength.html</anchorfile>
      <anchor>ac8db5c7f7fe7c4b5d2739236831730bbe70c99a6cf9c9f1680dc363bb664c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IV_REQUIREMENT</name>
      <anchorfile>classFixedKeyLength.html</anchorfile>
      <anchor>32d390c682de53ee71874182c4c78514407218f47aba17ac51faad92e5153503</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>StaticGetValidKeyLength</name>
      <anchorfile>classFixedKeyLength.html</anchorfile>
      <anchor>2f3a6421e9a77386c9c73af113812214</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FixedSizeAllocatorWithCleanup</name>
    <filename>classFixedSizeAllocatorWithCleanup.html</filename>
    <templarg>T</templarg>
    <templarg>S</templarg>
    <templarg>A</templarg>
    <base>AllocatorBase</base>
    <member kind="function">
      <type>CRYPTOPP_INHERIT_ALLOCATOR_TYPES</type>
      <name>FixedSizeAllocatorWithCleanup</name>
      <anchorfile>classFixedSizeAllocatorWithCleanup.html</anchorfile>
      <anchor>e339bfd8c3b7867b51111979a5aed803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>allocate</name>
      <anchorfile>classFixedSizeAllocatorWithCleanup.html</anchorfile>
      <anchor>a3a40911619b832bafc8d4aacdb05a5c</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>allocate</name>
      <anchorfile>classFixedSizeAllocatorWithCleanup.html</anchorfile>
      <anchor>420a22e60cdfba36ff74ed0d275b5be3</anchor>
      <arglist>(size_type n, const void *hint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocate</name>
      <anchorfile>classFixedSizeAllocatorWithCleanup.html</anchorfile>
      <anchor>8b80eea579354b837da3b8e09d589b18</anchor>
      <arglist>(void *p, size_type n)</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>reallocate</name>
      <anchorfile>classFixedSizeAllocatorWithCleanup.html</anchorfile>
      <anchor>473c7cef39ce443d25c54c830b53d989</anchor>
      <arglist>(pointer p, size_type oldSize, size_type newSize, bool preserve)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classFixedSizeAllocatorWithCleanup.html</anchorfile>
      <anchor>e19cd8b8a9ea152ff28c9de0bbee0854</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>FixedSizeSecBlock</name>
    <filename>classFixedSizeSecBlock.html</filename>
    <templarg>T</templarg>
    <templarg>S</templarg>
    <templarg>A</templarg>
    <base>SecBlock</base>
    <member kind="function">
      <type></type>
      <name>FixedSizeSecBlock</name>
      <anchorfile>classFixedSizeSecBlock.html</anchorfile>
      <anchor>00f389b6e48a07fc1f211db0093704b4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Gap_Struct</name>
    <filename>structGap__Struct.html</filename>
    <member kind="typedef">
      <type>wxULongLong</type>
      <name>pos_t</name>
      <anchorfile>structGap__Struct.html</anchorfile>
      <anchor>feab091a294c3cdb5ad1e8d995ff8a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pos_t</type>
      <name>start</name>
      <anchorfile>structGap__Struct.html</anchorfile>
      <anchor>330a7758f72c059ce4f17cd8c74d63b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pos_t</type>
      <name>end</name>
      <anchorfile>structGap__Struct.html</anchorfile>
      <anchor>7a3fe3baa272f9fea9be753cccb0acb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GeneratableCryptoMaterial</name>
    <filename>classGeneratableCryptoMaterial.html</filename>
    <base virtualness="virtual">CryptoMaterial</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GenerateRandom</name>
      <anchorfile>classGeneratableCryptoMaterial.html</anchorfile>
      <anchor>18db951070a1c2e5133cffbcaad6f42d</anchor>
      <arglist>(RandomNumberGenerator &amp;, const NameValuePairs &amp;=g_nullNameValuePairs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateRandomWithKeySize</name>
      <anchorfile>classGeneratableCryptoMaterial.html</anchorfile>
      <anchor>38d492343c32e530a5c2781b5797f755</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int keySize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GetBlock</name>
    <filename>classGetBlock.html</filename>
    <templarg>T</templarg>
    <templarg>B</templarg>
    <templarg>A</templarg>
    <member kind="function">
      <type></type>
      <name>GetBlock</name>
      <anchorfile>classGetBlock.html</anchorfile>
      <anchor>e4df6476db27f481f43dd8229b6955a8</anchor>
      <arglist>(const void *block)</arglist>
    </member>
    <member kind="function">
      <type>GetBlock&lt; T, B, A &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classGetBlock.html</anchorfile>
      <anchor>c977754b6bdb2a50533c882980093c3a</anchor>
      <arglist>(U &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GetValueHelperClass</name>
    <filename>classGetValueHelperClass.html</filename>
    <templarg>T</templarg>
    <templarg>BASE</templarg>
    <member kind="function">
      <type></type>
      <name>GetValueHelperClass</name>
      <anchorfile>classGetValueHelperClass.html</anchorfile>
      <anchor>c9e1b57dc7e82e22f7add4ebfdaa17f6</anchor>
      <arglist>(const T *pObject, const char *name, const std::type_info &amp;valueType, void *pValue, const NameValuePairs *searchFirst)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGetValueHelperClass.html</anchorfile>
      <anchor>b2b24b020becb92463ad37d6e2fa7760</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GetValueHelperClass&lt; T, BASE &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classGetValueHelperClass.html</anchorfile>
      <anchor>0604b4c8135d6c301fe1a6414ebac2bc</anchor>
      <arglist>(const char *name, const R &amp;(T::*pm)() const)</arglist>
    </member>
    <member kind="function">
      <type>GetValueHelperClass&lt; T, BASE &gt; &amp;</type>
      <name>Assignable</name>
      <anchorfile>classGetValueHelperClass.html</anchorfile>
      <anchor>eac7c76df217ccdab37359d399b76355</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Grouper</name>
    <filename>classGrouper.html</filename>
    <base>Bufferless&lt; Filter &gt;</base>
    <member kind="function">
      <type></type>
      <name>Grouper</name>
      <anchorfile>classGrouper.html</anchorfile>
      <anchor>1504a3d63aa08dad626f6b9303c408c7</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Grouper</name>
      <anchorfile>classGrouper.html</anchorfile>
      <anchor>12bd35621c9c3974ee5ca6147a6a8ec7</anchor>
      <arglist>(int groupSize, const std::string &amp;separator, const std::string &amp;terminator, BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classGrouper.html</anchorfile>
      <anchor>f44beea74b2140892d24aa635a7f3dcd</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classGrouper.html</anchorfile>
      <anchor>88ebbee67e2cd66777319b9f9bae6905</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>GUIEvent</name>
    <filename>classGUIEvent.html</filename>
    <base>wxEvent</base>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>b2a6ca4dcbc86668b417c34608ff7713</anchor>
      <arglist>(GUI_Event_ID new_id, byte value8, wxString value_s, uint32 value_long=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>ab9d415e7ac519c501a2bfe6cfc4b116</anchor>
      <arglist>(GUI_Event_ID new_id, byte value8, const CI2PAddress &amp;address, wxString value_s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>69fe7b552c0f6b7140dc34b04b5ca74f</anchor>
      <arglist>(GUI_Event_ID new_id, void *new_ptr=NULL, void *new_aux_ptr=NULL, byte value8=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>f216752d96e2358b5de5e5fbdb2269b3</anchor>
      <arglist>(GUI_Event_ID new_id, void *new_ptr, wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>fb50abed3c027e9369f729560e142df8</anchor>
      <arglist>(GUI_Event_ID new_id, void *new_ptr, byte value8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>ce5fb49ded127d9e75cf42f5c8157b7e</anchor>
      <arglist>(GUI_Event_ID new_id, void *new_ptr, uint32 value32, uint64 value64)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>eee26480102ec94afd161d451d49f035</anchor>
      <arglist>(GUI_Event_ID new_id, uint32 new_val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>4d1d601a75a52a06c1e7b4218fac0ddd</anchor>
      <arglist>(GUI_Event_ID new_id, const CI2PAddress &amp;address, const wxString &amp;string=wxEmptyString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>7d595eea48a37c7860d3129bb78268d0</anchor>
      <arglist>(GUI_Event_ID new_id, uint32 value32, uint16 value16)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GUIEvent</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>ca83a80cb0a9db70363307c59f3354ad</anchor>
      <arglist>(GUI_Event_ID new_id, void *new_ptr, void *new_aux_ptr, byte value8, uint32 value32, uint64 value64, wxChar *str)</arglist>
    </member>
    <member kind="function">
      <type>wxEvent *</type>
      <name>Clone</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>c90e97247b4e047895695bbcdedef695</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="variable">
      <type>GUI_Event_ID</type>
      <name>ID</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>f37d686765624549e7a6b4e94d6ab380</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>byte</type>
      <name>byte_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>f64a88824993e45c806350cd7c5cc96a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>short_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>b2f5b5914e87f6267815dca305696fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>long_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>5ef1d6741048677ad20e72eb8b3227c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>longlong_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>ebd2a24df90ce49781022a9776a3edf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>string_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>c7bbce7e7778fdd13022aae01d1b6f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>address_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>17b86e0c1b50dfa98fceac8eef119423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>06b7b567b04a96b5a9379be68fd02c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr_aux_value</name>
      <anchorfile>classGUIEvent.html</anchorfile>
      <anchor>743efd458835a28ab00bd5dbb67a6c35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HashFilter</name>
    <filename>classHashFilter.html</filename>
    <base>Bufferless&lt; Filter &gt;</base>
    <base protection="private">FilterPutSpaceHelper</base>
    <member kind="function">
      <type></type>
      <name>HashFilter</name>
      <anchorfile>classHashFilter.html</anchorfile>
      <anchor>754aa7658c1918a562c404bb19dbbf06</anchor>
      <arglist>(HashTransformation &amp;hm, BufferedTransformation *attachment=NULL, bool putMessage=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classHashFilter.html</anchorfile>
      <anchor>950c5cc22d2aa101e731401b10ff2be4</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classHashFilter.html</anchorfile>
      <anchor>ee9cb5e4a7eb057b14a7510d553a55dc</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>CreatePutSpace</name>
      <anchorfile>classHashFilter.html</anchorfile>
      <anchor>7ce364de12ed8148277cdf52be206e85</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HashTransformation</name>
    <filename>classHashTransformation.html</filename>
    <base>Algorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>7e2ecfd1de9827c33c17ed41cc26ec74</anchor>
      <arglist>(const byte *input, unsigned int length)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual byte *</type>
      <name>CreateUpdateSpace</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>dc3cacdf28a5753f19703cab12ddf17c</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Final</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>a0b8c7a110d8968268fd02ec32b9a8e8</anchor>
      <arglist>(byte *digest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Restart</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>92752eebac10497211d7a065faba8725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>DigestSize</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>9f42cc280bac76b884ad12615c0dabb5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>BlockSize</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>b5507c62376f6bea41d53ae9544d0ff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>OptimalBlockSize</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>981fce3f7d06c1f4ab2da853a1cf429d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>OptimalDataAlignment</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>81f46e4ca555b073d30f14a3b3f8ad79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CalculateDigest</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>eb50b0d43634b685ca7a9f55f2437d58</anchor>
      <arglist>(byte *digest, const byte *input, unsigned int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Verify</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>16c4aecd047015d513feef4ed5b929ba</anchor>
      <arglist>(const byte *digest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>VerifyDigest</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>2000b55a702ac0dcc1289bf9c8f3c861</anchor>
      <arglist>(const byte *digest, const byte *input, unsigned int length)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>TruncatedFinal</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>dbbf026beaf4835cb25fd6dc0ae28c3e</anchor>
      <arglist>(byte *digest, unsigned int digestSize)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CalculateTruncatedDigest</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>540669cf98437fb01fcc1acd2f4097e0</anchor>
      <arglist>(byte *digest, unsigned int digestSize, const byte *input, unsigned int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TruncatedVerify</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>697707371ca89f62828ed34706f4c28c</anchor>
      <arglist>(const byte *digest, unsigned int digestLength)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>VerifyTruncatedDigest</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>b61779e6d938825e07c01cb7dde57c3e</anchor>
      <arglist>(const byte *digest, unsigned int digestLength, const byte *input, unsigned int length)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ThrowIfInvalidTruncatedSize</name>
      <anchorfile>classHashTransformation.html</anchorfile>
      <anchor>bedf607c4955e3685581f156e6ccb069</anchor>
      <arglist>(unsigned int size) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Header_Struct</name>
    <filename>structHeader__Struct.html</filename>
    <member kind="variable">
      <type>int8</type>
      <name>eDonkeyID</name>
      <anchorfile>structHeader__Struct.html</anchorfile>
      <anchor>d06988b9de026c84116109a71520d217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>packetlength</name>
      <anchorfile>structHeader__Struct.html</anchorfile>
      <anchor>e072c6eff956196904d2924af2cd853c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8</type>
      <name>command</name>
      <anchorfile>structHeader__Struct.html</anchorfile>
      <anchor>4d54ecd50f8304a27f12d9d609d7c73b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HistoryRecord</name>
    <filename>structHistoryRecord.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>kBytesSent</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>94089a7771d6291dfbc33459723790c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>kBytesReceived</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>437f4b156e885363b559bec3260c8352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>kBpsUpCur</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>913ce6cca4f9345ce1aff5b99ca123cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>kBpsDownCur</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>6f07ecce64a56e2392c64d38a509f19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sTimestamp</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>8095a853fa060042f252c0ed9ad18846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>cntDownloads</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>29293bba3ef014c401ac68a3b8772260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>cntUploads</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>fe03cf9ac093fa79e20bb1565c74cb09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>cntConnections</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>1275509e62fbbe80be11f81a31b7da40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>kadNodesCur</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>b77085a907b3a31b89c402052036b48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>kadNodesTotal</name>
      <anchorfile>structHistoryRecord.html</anchorfile>
      <anchor>6fd27d635b57a5cc9bfa55069225372f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>I2PConnectionManager</name>
    <filename>classI2PConnectionManager.html</filename>
    <base>wxEvtHandler</base>
    <member kind="function">
      <type></type>
      <name>I2PConnectionManager</name>
      <anchorfile>classI2PConnectionManager.html</anchorfile>
      <anchor>9442328f77fb043fcea337065b6d7cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnListenSocketEvent</name>
      <anchorfile>classI2PConnectionManager.html</anchorfile>
      <anchor>e35e230139a0b4a0aa98c33530883212</anchor>
      <arglist>(CI2PSocketEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnDatagramSocketEvent</name>
      <anchorfile>classI2PConnectionManager.html</anchorfile>
      <anchor>179c8d5b8eaa047476e49d25a53be4c8</anchor>
      <arglist>(CI2PSocketEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classI2PConnectionManager.html</anchorfile>
      <anchor>8f4508237129c8791fc1bce50e81783e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classI2PConnectionManager.html</anchorfile>
      <anchor>6800ebc7271e14839f32e34f3f011f09</anchor>
      <arglist>()</arglist>
    </member>
    <class kind="class">I2PConnectionManager::Delay</class>
  </compound>
  <compound kind="class">
    <name>I2PRouter</name>
    <filename>classI2PRouter.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classI2PRouter.html</anchorfile>
      <anchor>f03813f5ea4226ed627a11a29dc3f162</anchor>
      <arglist>(String args[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IMULE_APP_BASE</name>
    <filename>classIMULE__APP__BASE.html</filename>
  </compound>
  <compound kind="class">
    <name>imuleIPV4Address</name>
    <filename>classimuleIPV4Address.html</filename>
    <member kind="function">
      <type></type>
      <name>imuleIPV4Address</name>
      <anchorfile>classimuleIPV4Address.html</anchorfile>
      <anchor>b0c92b3e92c7bd623612b189a4dba289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>imuleIPV4Address</name>
      <anchorfile>classimuleIPV4Address.html</anchorfile>
      <anchor>2c419fa19ef48444c47b0e6bc6e2fc84</anchor>
      <arglist>(const wxIPV4address &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Hostname</name>
      <anchorfile>classimuleIPV4Address.html</anchorfile>
      <anchor>7808cf902306cd87956b10a9b5099596</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Hostname</name>
      <anchorfile>classimuleIPV4Address.html</anchorfile>
      <anchor>f1b360a63259b8558e04d37597af785c</anchor>
      <arglist>(uint32 ip)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>INFO</name>
    <filename>classINFO.html</filename>
  </compound>
  <compound kind="class">
    <name>InputRejecting</name>
    <filename>classInputRejecting.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classInputRejecting.html</anchorfile>
      <anchor>ccd65e08879373681d18c40a9bde0ef0</anchor>
      <arglist>(const byte *, unsigned int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classInputRejecting.html</anchorfile>
      <anchor>08379573273dfdcd11cee9197aa4145d</anchor>
      <arglist>(bool, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedMessageSeriesEnd</name>
      <anchorfile>classInputRejecting.html</anchorfile>
      <anchor>280c87e06b662437b0f0a8ccd38cacfb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPut2</name>
      <anchorfile>classInputRejecting.html</anchorfile>
      <anchor>1187021d3a665b7bc419e52645abc82a</anchor>
      <arglist>(const std::string &amp;, const byte *, unsigned int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChannelMessageSeriesEnd</name>
      <anchorfile>classInputRejecting.html</anchorfile>
      <anchor>2db8ebe3e67f20b3fc92252de9e96cf6</anchor>
      <arglist>(const std::string &amp;, int, bool)</arglist>
    </member>
    <class kind="struct">InputRejecting::InputRejected</class>
  </compound>
  <compound kind="struct">
    <name>InputRejecting::InputRejected</name>
    <filename>structInputRejecting_1_1InputRejected.html</filename>
    <base>NotImplemented</base>
    <member kind="function">
      <type></type>
      <name>InputRejected</name>
      <anchorfile>structInputRejecting_1_1InputRejected.html</anchorfile>
      <anchor>722988b041724e68cb19fed22f3c80ca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Integer</name>
    <filename>classInteger.html</filename>
    <base>ASN1Object</base>
    <member kind="enumeration">
      <name>Sign</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>e0d4d9975fb6ab7667aab6f7ab8612d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POSITIVE</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>e0d4d9975fb6ab7667aab6f7ab8612d2d10299fe0b190d3de927db776b8dc42d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEGATIVE</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>e0d4d9975fb6ab7667aab6f7ab8612d28f19e88ce9bdf42cea3e070d5aa26f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Signedness</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>a9712040ccab541e30c00e0f3ae39926</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSIGNED</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>a9712040ccab541e30c00e0f3ae39926b4fe86ca57cc3668213b99032ca274df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIGNED</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>a9712040ccab541e30c00e0f3ae399264a42c6ec9823d7d75dcfd97ef6276ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>RandomNumberType</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9b4088ac01abf76b9ba60060abccb7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANY</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9b4088ac01abf76b9ba60060abccb7a3d9b396a7ba736a4ca02db0125cc8c6a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRIME</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9b4088ac01abf76b9ba60060abccb7a3fe686f55e5b6768b20009a12522bd0d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>CRYPTOPP_DLL friend Integer</type>
      <name>a_times_b_mod_c</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>62d6ac6eaa1e647caa10009fc01ecccb</anchor>
      <arglist>(const Integer &amp;x, const Integer &amp;y, const Integer &amp;m)</arglist>
    </member>
    <member kind="friend">
      <type>CRYPTOPP_DLL friend Integer</type>
      <name>a_exp_b_mod_c</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>8f565f8cf98e1c0af8beac86d8e27809</anchor>
      <arglist>(const Integer &amp;x, const Integer &amp;e, const Integer &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>AbsoluteValue</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>3561a8987c0150e20d2fe0f7ef44c70b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>Doubled</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>5e1a3170987a46b3682e217057687c2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>Squared</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>e0b94a015187c923d4e36683c8cb0668</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>SquareRoot</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9cbc1009bb421942470163aed5e3fefb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSquare</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>49efda9b0c4767508a2b5541380132ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUnit</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>cbee0ebe94c7ef5b0da39beabe87c27b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>MultiplicativeInverse</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>94954b3df8073387d225be1033b0fa5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>InverseMod</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>881f9c714ee42f35718725a43d4d7db3</anchor>
      <arglist>(const Integer &amp;n) const </arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>InverseMod</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>3f73939559a765be0b1c9a9681ad9e2c</anchor>
      <arglist>(word n) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Divide</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>567c89aa176b354143c99d558d05a5fb</anchor>
      <arglist>(Integer &amp;r, Integer &amp;q, const Integer &amp;a, const Integer &amp;d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Divide</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>1849c5a8af28ab4f3a70d9690924f249</anchor>
      <arglist>(word &amp;r, Integer &amp;q, const Integer &amp;a, word d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DivideByPowerOf2</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>bf2934a6172b4cb5317874f0c993a420</anchor>
      <arglist>(Integer &amp;r, Integer &amp;q, const Integer &amp;a, unsigned int n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Integer</type>
      <name>Gcd</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>2d4d29937f8ef666717530b30f137c37</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;n)</arglist>
    </member>
    <member kind="friend">
      <type>friend CRYPTOPP_DLL std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>2f1035fa7f8f0d8b4cdb30da0b5801b8</anchor>
      <arglist>(std::istream &amp;in, Integer &amp;a)</arglist>
    </member>
    <member kind="friend">
      <type>friend CRYPTOPP_DLL std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>173bc5409dcfe80aa1af02d38ae2536f</anchor>
      <arglist>(std::ostream &amp;out, const Integer &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>7fcab0564d7270017ebcca55bae1a17a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9e86175b4b1fb79321736974846fce70</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>b0536c16f441f1b5abcb2019f7d52e17</anchor>
      <arglist>(signed long value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>15a70886677caedd35492b495c5290e6</anchor>
      <arglist>(Sign s, lword value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>834c31dcb78213e008b342c97764fd5d</anchor>
      <arglist>(Sign s, word highWord, word lowWord)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9e8bf8c72458dff4ceb5d6cdf9e5c97a</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>6931189bb0b2e68d04bef63bc6f172b3</anchor>
      <arglist>(const wchar_t *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>c2431e827b672fb072a9056b757a9252</anchor>
      <arglist>(const byte *encodedInteger, unsigned int byteCount, Signedness s=UNSIGNED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>d43539ac4ef1ba9a4431a92ca52b383b</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int byteCount, Signedness s=UNSIGNED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>81d3973655b9f9d358de31ca4d0215c1</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>931c70de901a1e6741f809eee11ca733</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int bitcount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integer</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>88a110cb9f89a8810c228ad00cea18c2</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;min, const Integer &amp;max, RandomNumberType rnType=ANY, const Integer &amp;equiv=Zero(), const Integer &amp;mod=One())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Integer &amp;</type>
      <name>Zero</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>19b7e6d48b1b57bd4846160ea2928175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Integer &amp;</type>
      <name>One</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>8c070592581bf6c2f928c72bfa1c1638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Integer &amp;</type>
      <name>Two</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>f0cb74a45a48e677952166bdac9d82d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Integer</type>
      <name>Power2</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>555661521c106eca1692b2e35d3a120d</anchor>
      <arglist>(unsigned int e)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MinEncodedSize</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>c73d05cba1efc78e034e05275c122086</anchor>
      <arglist>(Signedness=UNSIGNED) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Encode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>8e5c63c650628050501e4085b9c070b6</anchor>
      <arglist>(byte *output, unsigned int outputLen, Signedness=UNSIGNED) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Encode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>c442d55828111d6a6c10465da2b8c695</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int outputLen, Signedness=UNSIGNED) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>6ab51a05bee88cfa690179611e8a084e</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncodeAsOctetString</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>7a02335c1c9ad38b36ccb24f380b4331</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int length) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OpenPGPEncode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>99903eaab5e77dd81318438705ba9bf8</anchor>
      <arglist>(byte *output, unsigned int bufferSize) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OpenPGPEncode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>d8faaa49ec593a4b6e5d981c607e813a</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>4051c878d3b70cd166a0c237ac2042da</anchor>
      <arglist>(const byte *input, unsigned int inputLen, Signedness=UNSIGNED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>b69226345822ced161651abb428795a4</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int inputLen, Signedness=UNSIGNED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>35bac7fab72e716616a1d07818abdc0e</anchor>
      <arglist>(const byte *input, unsigned int inputLen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>8736cc41b06596c9c04328d2f0238db7</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeAsOctetString</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>8f02cc991e1013fa42797b561e2ad8b2</anchor>
      <arglist>(BufferedTransformation &amp;bt, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OpenPGPDecode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>ae771006780f0e9b332baa1aaf0fa167</anchor>
      <arglist>(const byte *input, unsigned int inputLen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OpenPGPDecode</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9ff99fc6723da5a45c98212de5cf4f3d</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsConvertableToLong</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>bc8abb12371da5c520d15efd64532697</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>signed long</type>
      <name>ConvertToLong</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9c689da5ded6e077a203b122deec519f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BitCount</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>178398002ab175e788a3bc224e5e5a8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ByteCount</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>ea4f2d31725ab02c67d9ea0288767670</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>WordCount</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>a8ecc9cc334b338ee805f91e6b289396</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBit</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>1fb76fb83977e2d22374b4afc57026fd</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>GetByte</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>c3710d5aee75da45dd12820841d52655</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>GetBits</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>5f02c9a8e443e02dc04db6fcc85b4037</anchor>
      <arglist>(unsigned int i, unsigned int n) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsZero</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>6d70dd43a65cfec05f5563daa43fd104</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NotZero</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>00b920fd1854a8a1a5be234edebfd8e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNegative</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>7118a72cd6ac315a17ebe03316f25186</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NotNegative</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9c7691b0c0f9a26b7343c46be1665a35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPositive</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>74fcb4d6ac90900a049937113036f527</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NotPositive</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>f202b82ae0c4149ca05eccbe200d2e99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEven</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>135da78466ea269cdc803fca1cc78129</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOdd</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>ee32e0b261b2558cf0fd5f3077e68a3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>96a2740dadac69f6ff374feb071a94ec</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator+=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>37047060547d744b74f15649fbae6ea3</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator-=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9951406a1fe063627d3293b27f8c1441</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator*=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>db1320901d7bbf1ee52bf27bacdfb9df</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator/=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>80e968a9c7afc4979fe2148170ec7458</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator%=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>468142f7860854f6e97910af4eb2b220</anchor>
      <arglist>(const Integer &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator/=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>6fcad58a76f3cedc4134a18d56ebb808</anchor>
      <arglist>(word t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator%=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>3874b6ac8979328ce532eebc8b275eab</anchor>
      <arglist>(word t)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator&lt;&lt;=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>20172523f62b712a5cae2c4e8b43e1dc</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator&gt;&gt;=</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>24b541ae9f05c22d4184078ed9d9bc73</anchor>
      <arglist>(unsigned int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Randomize</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>cc216a23e17f02332d42d9ae6add8123</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int bitcount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Randomize</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>ae8e0904d1752629f59f0343507c7f8b</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;min, const Integer &amp;max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Randomize</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>83dd6a11aa51d545ce2735777787b622</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;min, const Integer &amp;max, RandomNumberType rnType, const Integer &amp;equiv=Zero(), const Integer &amp;mod=One())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GenerateRandomNoThrow</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>d330521e84a900a80e8dd90e97796e17</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const NameValuePairs &amp;params=g_nullNameValuePairs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateRandom</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>0d9a427fe64a454b11b24fe61c10dbeb</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const NameValuePairs &amp;params=g_nullNameValuePairs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBit</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>5e9efe356609a722d9d7c45cef6459ff</anchor>
      <arglist>(unsigned int n, bool value=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetByte</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>5b8b8375299fe1c6df6f44b9dcdb98d8</anchor>
      <arglist>(unsigned int n, byte value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Negate</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>87410093addf9a2253fe07b39b918b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPositive</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>8ba4496f4ae1392c3860d3bcbba586c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNegative</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>860dd1318ef7089d774674f2100c8fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>bf1e9c170e56841ce73d137c12675f9b</anchor>
      <arglist>(Integer &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>f38f3bf1d96507458e5479b24174c08c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>operator+</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>0af6f7034ff425fd4e2e6863ab13f198</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>operator-</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>56b6d34f3b1e76c59f1413d7d91465b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator++</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>4290bf7f6763b27a51e216bdbfdea68f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>operator--</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>5b3dd03530b31f3839c75dcdc4322ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>operator++</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>1666444f09484e482b2f94dd263c7dc9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>operator--</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>000120734ad8ba84af5c5ac7f5f84925</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Compare</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>550cf80410789dc459df82387792ed49</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>Plus</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9e294ba5adf2c733e4185fc9c497ff2a</anchor>
      <arglist>(const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>Minus</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>af500b571832a4a29315837c94ccada3</anchor>
      <arglist>(const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>Times</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>a7547efdb8c45c6b033bfb1a0d5141e6</anchor>
      <arglist>(const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>DividedBy</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>9a6d4284d05d6377cbf6a07611a57545</anchor>
      <arglist>(const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>Modulo</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>850606c271d06678f98c98ecc0f0ac23</anchor>
      <arglist>(const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>DividedBy</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>16dab535de7a1ce00f2cb84da79d88db</anchor>
      <arglist>(word b) const </arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>Modulo</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>50e1b59012582912ff015cc083d50a50</anchor>
      <arglist>(word b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>3f1efdbd3baa1ef52d76e3fcd629e516</anchor>
      <arglist>(unsigned int n) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>c62812ef9859fc55f3d988684b4ee1d2</anchor>
      <arglist>(unsigned int n) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ModularArithmetic</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>0ef821fc78e4bfe3236b3a0157df189d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MontgomeryRepresentation</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>14e60a19be28337cb24783301e091877</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HalfMontgomeryRepresentation</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>ef0adde4261276d74ddf19366c427b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend void</type>
      <name>PositiveAdd</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>6295e7fe9ae3d0c22e38168e8fd7c0f1</anchor>
      <arglist>(Integer &amp;sum, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend void</type>
      <name>PositiveSubtract</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>cc5b1ed43bfa0c217e2c64535515e7bb</anchor>
      <arglist>(Integer &amp;diff, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend void</type>
      <name>PositiveMultiply</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>53b5444044b02d93e76fafac50c3bb29</anchor>
      <arglist>(Integer &amp;product, const Integer &amp;a, const Integer &amp;b)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend void</type>
      <name>PositiveDivide</name>
      <anchorfile>classInteger.html</anchorfile>
      <anchor>30542b29292dbe332eb60b6aabfaf937</anchor>
      <arglist>(Integer &amp;remainder, Integer &amp;quotient, const Integer &amp;dividend, const Integer &amp;divisor)</arglist>
    </member>
    <class kind="class">Integer::DivideByZero</class>
    <class kind="class">Integer::OpenPGPDecodeErr</class>
    <class kind="class">Integer::RandomNumberNotFound</class>
  </compound>
  <compound kind="class">
    <name>Integer::DivideByZero</name>
    <filename>classInteger_1_1DivideByZero.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>DivideByZero</name>
      <anchorfile>classInteger_1_1DivideByZero.html</anchorfile>
      <anchor>fa9ee5d252af9dc10490f411dcdf162a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Integer::OpenPGPDecodeErr</name>
    <filename>classInteger_1_1OpenPGPDecodeErr.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>OpenPGPDecodeErr</name>
      <anchorfile>classInteger_1_1OpenPGPDecodeErr.html</anchorfile>
      <anchor>9ac0a3d7ea0daa02a3eca0eb5b698bd0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Integer::RandomNumberNotFound</name>
    <filename>classInteger_1_1RandomNumberNotFound.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>RandomNumberNotFound</name>
      <anchorfile>classInteger_1_1RandomNumberNotFound.html</anchorfile>
      <anchor>46a65e5629532cbd8430ac0b89f04fb8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InvalidArgument</name>
    <filename>classInvalidArgument.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>InvalidArgument</name>
      <anchorfile>classInvalidArgument.html</anchorfile>
      <anchor>9fea12aad2d0a973c7a3f109202642ff</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InvalidDataFormat</name>
    <filename>classInvalidDataFormat.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>InvalidDataFormat</name>
      <anchorfile>classInvalidDataFormat.html</anchorfile>
      <anchor>698d4d179bc8ffa1d16356fa4b3fa413</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InvalidKeyLength</name>
    <filename>classInvalidKeyLength.html</filename>
    <base>InvalidArgument</base>
    <member kind="function">
      <type></type>
      <name>InvalidKeyLength</name>
      <anchorfile>classInvalidKeyLength.html</anchorfile>
      <anchor>ee56d8c371a42fc6f1754387bd5a00e1</anchor>
      <arglist>(const std::string &amp;algorithm, unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InvertibleRSAFunction</name>
    <filename>classInvertibleRSAFunction.html</filename>
    <base>RSAFunction</base>
    <base>TrapdoorFunctionInverse</base>
    <base>PKCS8PrivateKey</base>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>1d400269a0d1305e93623299d8184e29</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int modulusBits, const Integer &amp;e=17)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>6ff0e6c1bb44bff9fd7d3745b9f8de92</anchor>
      <arglist>(const Integer &amp;n, const Integer &amp;e, const Integer &amp;d, const Integer &amp;p, const Integer &amp;q, const Integer &amp;dp, const Integer &amp;dq, const Integer &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>82875d7b47505dc036005186c45dbde7</anchor>
      <arglist>(const Integer &amp;n, const Integer &amp;e, const Integer &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>315fea96cb04dc41150d92cf5d1ce3e0</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>f8c59c737c96b4809734971d0703707d</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeKey</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>b45b347adbf650bee2f1e456e35cc92e</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncodeKey</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>ba17c511266cba0af961fa88f7c3610b</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>CalculateInverse</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>929a48a3b7942c57223c0ca8baa194d3</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Validate</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>35247205517f839220a16287917ce0ce</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateRandom</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>369c37b8f01c8b64f22baa28811ff72f</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const NameValuePairs &amp;alg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVoidValue</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>5d11463cbb6dac0edea661e6da7ed7ad</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignFrom</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>871fc366191e9c5fae114c06a200c928</anchor>
      <arglist>(const NameValuePairs &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetPrime1</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>110e90d90147595f78d03edc23067da1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetPrime2</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>b6406c9a0c177cc03a3030984781caa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetPrivateExponent</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>ef46b2bb68f5ff95daa739a316e8f745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetModPrime1PrivateExponent</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>4ab27a29bd2c54ca03a80eb87565b31d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetModPrime2PrivateExponent</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>8130f329764b5021601f7571f5ae9270</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetMultiplicativeInverseOfPrime2ModPrime1</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>e6843c49be841d2201bf1a1f769cada2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrime1</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>bbaf0796c65e9a7ef02669faff4d600f</anchor>
      <arglist>(const Integer &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrime2</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>c5f75f19eb718a44d09066cc860f2e43</anchor>
      <arglist>(const Integer &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPrivateExponent</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>13956f432d0d2c47960da979cba18198</anchor>
      <arglist>(const Integer &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetModPrime1PrivateExponent</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>5b01ca0407225d56dd1f06634d56e405</anchor>
      <arglist>(const Integer &amp;dp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetModPrime2PrivateExponent</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>8c005d9809d47a63b1c2bb9d5ad5b88e</anchor>
      <arglist>(const Integer &amp;dq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMultiplicativeInverseOfPrime2ModPrime1</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>6a4bd221c844168cecf50ef04cada713</anchor>
      <arglist>(const Integer &amp;u)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_d</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>e6ebef334123434c80fd0d87dddea8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_p</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>0061793214f56717f67956444c935cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_q</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>48b1e3c5cf1ba5ba83952d46708afaee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_dp</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>665927266b9a38963099529f720246ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_dq</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>3702d3ea62a2edce11be04493e18a5a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_u</name>
      <anchorfile>classInvertibleRSAFunction.html</anchorfile>
      <anchor>6b7b378c8be194a47faf824844ed6c7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IPRange</name>
    <filename>structIPRange.html</filename>
    <member kind="variable">
      <type>const wxChar *</type>
      <name>addr</name>
      <anchorfile>structIPRange.html</anchorfile>
      <anchor>662978c32d219f72de794b07cbab4db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mask</name>
      <anchorfile>structIPRange.html</anchorfile>
      <anchor>7c03586f954f2c5c2bf606e8641620c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isLAN</name>
      <anchorfile>structIPRange.html</anchorfile>
      <anchor>c92a70af4e40f1de28ce2b412e1a23a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ItemsContainer</name>
    <filename>classItemsContainer.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>std::list&lt; T &gt;::iterator</type>
      <name>ItemIterator</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>5134a4f232f3ec9f7a88bd937acbab38</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ItemsContainer</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>bd3a1d4b48fa6e269ad26a1993838435</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ItemsContainer</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>767409632b1ef0044c35d48f8b2cae36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ItemCount</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>a60d93ddc4978b0808a8119ed39e8767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>AddItem</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>d6f699eec065f2a63a50cdf3bb64540f</anchor>
      <arglist>(T &amp;item)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ReQuery</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>66b3954cd3f77947f5fe0e123903b77d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>ItemIterator</type>
      <name>GetBeginIterator</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>7e0ee860d0484cf5b75f00144d7f6c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ItemIterator</type>
      <name>GetEndIterator</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>f87096b6ca95b048f7b3dadd5c947886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>EraseAll</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>29a7749db88a05d24909f92df1d8a5df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CimulewebApp *</type>
      <name>m_webApp</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>c328819ec74d9dd267160b0f406366a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; T &gt;</type>
      <name>m_items</name>
      <anchorfile>classItemsContainer.html</anchorfile>
      <anchor>5da622bbf6706077d30170d6da7e5aab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IteratedHash</name>
    <filename>classIteratedHash.html</filename>
    <templarg>T_HashWordType</templarg>
    <templarg>T_Endianness</templarg>
    <templarg>T_BlockSize</templarg>
    <templarg>T_Base</templarg>
    <base>IteratedHashBase2&lt; T_HashWordType, T_Endianness, T_Base &gt;</base>
    <member kind="enumvalue">
      <name>BLOCKSIZE</name>
      <anchorfile>classIteratedHash.html</anchorfile>
      <anchor>4704ceeaff3a8e008c63c43117af5b7cc48f8160eeb43e092e615c9d26ee782f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CRYPTOPP_COMPILE_ASSERT_GLOBAL</name>
      <anchorfile>classIteratedHash.html</anchorfile>
      <anchor>1d35293b8bca400b695772637a9feaa9</anchor>
      <arglist>((BLOCKSIZE &amp;(BLOCKSIZE-1))==0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IteratedHash</name>
      <anchorfile>classIteratedHash.html</anchorfile>
      <anchor>8f87c8f18fe475fd7a4162d39f6b16d2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IteratedHashBase</name>
    <filename>classIteratedHashBase.html</filename>
    <templarg>T</templarg>
    <templarg>BASE</templarg>
    <base>BASE</base>
    <member kind="typedef">
      <type>T</type>
      <name>HashWordType</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>4316d6e7e38a407d5a71f95de2b112e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IteratedHashBase</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>301ef0d2c6dae2b250cdf9075c0e5f92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>BlockSize</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>7625379c1e0e34c1b4c7724ea4b82265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OptimalBlockSize</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>d8ba3e6b25afbdf84f177b965229c0d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>OptimalDataAlignment</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>9ee30253981d13564bf0d2ffa33dfc25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>e8dbe2d5afeadae36491012e2e38009c</anchor>
      <arglist>(const byte *input, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>CreateUpdateSpace</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>3e58762695b17d0337cec8e77dda1b5b</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Restart</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>d53da712634ea213ad047b2a68b0fe70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetBlockSize</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>b129472b4b0b571b66363bcfd5dd8c62</anchor>
      <arglist>(unsigned int blockSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStateSize</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>423f01e0b850bfb7258162453d535424</anchor>
      <arglist>(unsigned int stateSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>GetBitCountHi</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>33a8299a01976e215362f093589b9f6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>GetBitCountLo</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>5fe17f6b8a18b047349b31931baa5965</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>HashMultipleBlocks</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>1664bcc8820d65e974ef42f46143ddb1</anchor>
      <arglist>(const T *input, unsigned int length)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>PadLastBlock</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>01f39339fa69510303ad401245df1037</anchor>
      <arglist>(unsigned int lastBlockSize, byte padFirst=0x80)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>Init</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>9f130072d067513f9d6489e19fccdf09</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>HashBlock</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>0797af1bd81464e545290bebd3ef6a48</anchor>
      <arglist>(const T *input)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SecBlock&lt; T &gt;</type>
      <name>m_data</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>ee0b044aa9664a5d8860ff9d7bf84c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SecBlock&lt; T &gt;</type>
      <name>m_digest</name>
      <anchorfile>classIteratedHashBase.html</anchorfile>
      <anchor>e50c20396ccb825d352e89703da69a94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IteratedHashBase2</name>
    <filename>classIteratedHashBase2.html</filename>
    <templarg>T</templarg>
    <templarg>B</templarg>
    <templarg>BASE</templarg>
    <base>IteratedHashBase</base>
    <member kind="typedef">
      <type>B</type>
      <name>ByteOrderClass</name>
      <anchorfile>classIteratedHashBase2.html</anchorfile>
      <anchor>abe1c78132b943113f7603283daccf46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IteratedHashBase&lt; T, BASE &gt;::HashWordType</type>
      <name>HashWordType</name>
      <anchorfile>classIteratedHashBase2.html</anchorfile>
      <anchor>240ec6899967cbb1a650c9fad864a079</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TruncatedFinal</name>
      <anchorfile>classIteratedHashBase2.html</anchorfile>
      <anchor>7b44169663b51ad01b535bff9e16d51a</anchor>
      <arglist>(byte *digest, unsigned int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CorrectEndianess</name>
      <anchorfile>classIteratedHashBase2.html</anchorfile>
      <anchor>168a0356ae228fe8de1f3d065dacbe25</anchor>
      <arglist>(HashWordType *out, const HashWordType *in, unsigned int byteCount)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>HashBlock</name>
      <anchorfile>classIteratedHashBase2.html</anchorfile>
      <anchor>4d072cc4337d054fd10c978cdda8c0e8</anchor>
      <arglist>(const HashWordType *input)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>HashEndianCorrectedBlock</name>
      <anchorfile>classIteratedHashBase2.html</anchorfile>
      <anchor>e44e0b0df839f3bd3d4c5020dcc89c5d</anchor>
      <arglist>(const HashWordType *data)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>IteratedHashWithStaticTransform</name>
    <filename>classIteratedHashWithStaticTransform.html</filename>
    <templarg>T_HashWordType</templarg>
    <templarg>T_Endianness</templarg>
    <templarg>T_BlockSize</templarg>
    <templarg>T_StateSize</templarg>
    <templarg>T_Transform</templarg>
    <templarg>T_DigestSize</templarg>
    <base>ClonableImpl&lt; T_Transform, AlgorithmImpl&lt; IteratedHash&lt; T_HashWordType, T_Endianness, T_BlockSize &gt;, T_Transform &gt; &gt;</base>
    <member kind="enumvalue">
      <name>DIGESTSIZE</name>
      <anchorfile>classIteratedHashWithStaticTransform.html</anchorfile>
      <anchor>6eaaefef2257da114e7be6058a4c4c46f1a22ed893b1096cec896cee1c775ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DigestSize</name>
      <anchorfile>classIteratedHashWithStaticTransform.html</anchorfile>
      <anchor>618b2184d1451ce6de49295c12f84097</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IteratedHashWithStaticTransform</name>
      <anchorfile>classIteratedHashWithStaticTransform.html</anchorfile>
      <anchor>1149dfe3d5b5e076e240da7bd85751fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>HashEndianCorrectedBlock</name>
      <anchorfile>classIteratedHashWithStaticTransform.html</anchorfile>
      <anchor>9917c50cbb1b92b5ceaff6cb80b5e3c1</anchor>
      <arglist>(const T_HashWordType *data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Init</name>
      <anchorfile>classIteratedHashWithStaticTransform.html</anchorfile>
      <anchor>b32f1ef07ad14b8456247b15abc5f12d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KadNodesListView</name>
    <filename>classKadNodesListView.html</filename>
    <base>wxListView</base>
    <member kind="function">
      <type></type>
      <name>KadNodesListView</name>
      <anchorfile>classKadNodesListView.html</anchorfile>
      <anchor>0fef8e297d9a3d7dc034ec1941ec72c8</anchor>
      <arglist>(wxWindow *parent, wxWindowID id=-1, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxListCtrlNameStr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnNodeEvent</name>
      <anchorfile>classKadNodesListView.html</anchorfile>
      <anchor>b0ac2caac7aed96b4aeee880bc98b652</anchor>
      <arglist>(const GUIEvent &amp;evt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KDF2_RNG</name>
    <filename>classKDF2__RNG.html</filename>
    <base>RandomNumberGenerator</base>
    <member kind="function">
      <type></type>
      <name>KDF2_RNG</name>
      <anchorfile>classKDF2__RNG.html</anchorfile>
      <anchor>6ed09b8197e83e97167488772e2cabd8</anchor>
      <arglist>(const byte *seed, unsigned int seedSize)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>GenerateByte</name>
      <anchorfile>classKDF2__RNG.html</anchorfile>
      <anchor>4cc06c10960ce94c5e3762bb219002fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateBlock</name>
      <anchorfile>classKDF2__RNG.html</anchorfile>
      <anchor>04ae36ce80feb4942eef0c241eb325f2</anchor>
      <arglist>(byte *output, unsigned int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KEY_COPIER</name>
    <filename>classKEY__COPIER.html</filename>
  </compound>
  <compound kind="struct">
    <name>KeyHash</name>
    <filename>structKeyHash.html</filename>
    <member kind="variable">
      <type>CSourceKeyMap</type>
      <name>m_Source_map</name>
      <anchorfile>structKeyHash.html</anchorfile>
      <anchor>703a0198fbdfc6957957ef291890ed81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSourceKeyList</type>
      <name>m_Source_list</name>
      <anchorfile>structKeyHash.html</anchorfile>
      <anchor>92567fed31870446a33fc5fedbf37426</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LangInfo</name>
    <filename>structLangInfo.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>structLangInfo.html</anchorfile>
      <anchor>9ee053f8205e709cb0ed1308400d2705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>available</name>
      <anchorfile>structLangInfo.html</anchorfile>
      <anchor>aafbfa3dc3123b876d69ccbc35b69b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>name</name>
      <anchorfile>structLangInfo.html</anchorfile>
      <anchor>c965e452a8535714d22a48f0de0dc135</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LinuxMon</name>
    <filename>classLinuxMon.html</filename>
    <member kind="function">
      <type></type>
      <name>LinuxMon</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>b930f41c9ec38a360d12b3dbc3cdfc06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinuxMon</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>37bc5dc1f295dac81a5cd8b476a5c648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Refresh</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>791562fd54fd0cd07fedaca3f0556e17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetUptime</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>a40e9e7b9a9dd7baa6e08159d0a78c82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetSysLoad_1</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>c01f8d411e4c6f7f7d3a29962719cd72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetSysLoad_5</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>94da38fc1136ceaf946594a6a06b6e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetSysLoad_15</name>
      <anchorfile>classLinuxMon.html</anchorfile>
      <anchor>ca9e29d4cfc95cb3dd4c34c4c9abdfbf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::list</name>
    <filename>classstd_1_1list.html</filename>
  </compound>
  <compound kind="struct">
    <name>Load</name>
    <filename>structLoad.html</filename>
    <member kind="variable">
      <type>uint32</type>
      <name>time</name>
      <anchorfile>structLoad.html</anchorfile>
      <anchor>5f09c4d513aec453d6dcfb4e745c29ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LogEntry</name>
    <filename>structLogEntry.html</filename>
    <member kind="variable">
      <type>GUI_Event_ID</type>
      <name>event</name>
      <anchorfile>structLogEntry.html</anchorfile>
      <anchor>3f8e77def5dd3aff3e1ce01b213739aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>critical</name>
      <anchorfile>structLogEntry.html</anchorfile>
      <anchor>65de33ae27be656e93afd203ce075934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>entry</name>
      <anchorfile>structLogEntry.html</anchorfile>
      <anchor>6036b12c6c2db7a308f3125ee3e7e6d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>make_ed2k_link</name>
    <filename>classmake__ed2k__link.html</filename>
    <base>wxAppConsole</base>
    <member kind="function">
      <type>int</type>
      <name>OnRun</name>
      <anchorfile>classmake__ed2k__link.html</anchorfile>
      <anchor>4d2caa3f93a216f709fd56c6d459fabb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::map</name>
    <filename>classstd_1_1map.html</filename>
  </compound>
  <compound kind="class">
    <name>MD4</name>
    <filename>classMD4.html</filename>
    <base>IteratedHashWithStaticTransform</base>
    <member kind="function">
      <type></type>
      <name>MD4</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>20789c6488bb4b46efc7af260394df4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MD4</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>565232e76066b6c8fd696421449cf3c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>calcMd4FromString</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>a5f24c8bfbc402d539a932b14e1b2a66</anchor>
      <arglist>(const wxString &amp;buf)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>calcMd4FromFile</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>56aacca24f41c1ef1ec734e4b15dba70</anchor>
      <arglist>(const wxString &amp;filename, MD4Hook hook)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>InitState</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>1b993f27f1828c9aaca3573a29a38503</anchor>
      <arglist>(HashWordType *state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Transform</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>79861343f1ed2b2d0d5a61070b3ae437</anchor>
      <arglist>(word32 *digest, const word32 *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>837a12e8c0366817d39032df6b91550b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>selfTest</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>9796b3c2a647af4a7f425592e7fbfb45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MD4Init</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>5fc3980a5c7eb7b539f89e6446b74e69</anchor>
      <arglist>(struct MD4Context *context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MD4Update</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>02b0513966b706336b95ba95041a4d44</anchor>
      <arglist>(struct MD4Context *context, unsigned char const *buf, size_t len)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MD4Final</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>b5a0d115d890644b64a2165ddbee3231</anchor>
      <arglist>(struct MD4Context *context, unsigned char *digest)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MD4Transform</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>6f04769ae5003377877cbe9b842e6a0c</anchor>
      <arglist>(uint32_t buf[4], uint32_t const in[16])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>wxString</type>
      <name>charToHex</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>5a71cfa8b16d646f8a06b0c44408c886</anchor>
      <arglist>(const char *buf, size_t len)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>size_t</type>
      <name>calcBufSize</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>f027f4aa9c9263c6918ede2f6bc16fde</anchor>
      <arglist>(size_t filesize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>byteReverse</name>
      <anchorfile>classMD4.html</anchorfile>
      <anchor>7edab2b4f9ed3fd004e909fe442ef881</anchor>
      <arglist>(unsigned char *buf, unsigned longs)</arglist>
    </member>
    <class kind="struct">MD4::MD4Context</class>
  </compound>
  <compound kind="struct">
    <name>MD4::MD4Context</name>
    <filename>structMD4_1_1MD4Context.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>buf</name>
      <anchorfile>structMD4_1_1MD4Context.html</anchorfile>
      <anchor>efcaf88995e8d41af8fe46bbdb8cf3c9</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bits</name>
      <anchorfile>structMD4_1_1MD4Context.html</anchorfile>
      <anchor>f1a87785ec1e1b171069a51885aa234a</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>in</name>
      <anchorfile>structMD4_1_1MD4Context.html</anchorfile>
      <anchor>1834b4c36704069e85c3e9d9f35e3a7d</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MD5_CTX</name>
    <filename>structMD5__CTX.html</filename>
    <member kind="variable">
      <type>UINT4</type>
      <name>state</name>
      <anchorfile>structMD5__CTX.html</anchorfile>
      <anchor>453bbde421f79a19eb2503c8316e8b0d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>UINT4</type>
      <name>count</name>
      <anchorfile>structMD5__CTX.html</anchorfile>
      <anchor>a578ed7b523e0270f703e797d427e5cb</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>buffer</name>
      <anchorfile>structMD5__CTX.html</anchorfile>
      <anchor>9c7c847375e515d1fa3a453b6f999917</anchor>
      <arglist>[64]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MD5Sum</name>
    <filename>classMD5Sum.html</filename>
    <member kind="function">
      <type></type>
      <name>MD5Sum</name>
      <anchorfile>classMD5Sum.html</anchorfile>
      <anchor>a8ac0905f5c9c6176c3014bff302f34b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MD5Sum</name>
      <anchorfile>classMD5Sum.html</anchorfile>
      <anchor>36a0c49a04a210d9c65eeb0f162da458</anchor>
      <arglist>(const wxString &amp;sSource)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>Calculate</name>
      <anchorfile>classMD5Sum.html</anchorfile>
      <anchor>3bb716733693c11a04d2db1985784668</anchor>
      <arglist>(const wxString &amp;sSource)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetHash</name>
      <anchorfile>classMD5Sum.html</anchorfile>
      <anchor>027e3786a1bd79249766fc47ed0119e7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDC</name>
    <filename>classMDC.html</filename>
    <templarg>T</templarg>
    <base>MDC_Info</base>
    <member kind="typedef">
      <type>BlockCipherFinal&lt; ENCRYPTION, Enc &gt;</type>
      <name>Encryption</name>
      <anchorfile>classMDC.html</anchorfile>
      <anchor>926e1a361c55ba954c031656cb2e9b4a</anchor>
      <arglist></arglist>
    </member>
    <class kind="class">MDC::Enc</class>
  </compound>
  <compound kind="struct">
    <name>MDC_Info</name>
    <filename>structMDC__Info.html</filename>
    <templarg>T</templarg>
    <base>FixedBlockSize&lt; T::DIGESTSIZE &gt;</base>
    <base>FixedKeyLength&lt; T::BLOCKSIZE &gt;</base>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>structMDC__Info.html</anchorfile>
      <anchor>b543405d9cb03df225ccbd57b419862f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>member_ptr</name>
    <filename>classmember__ptr.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>member_ptr</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>07de11b50740176cd87957cb3ed3d3b8</anchor>
      <arglist>(T *p=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~member_ptr</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>d8fef226532200a97e1691bfc6ac2b63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>7964462210e9bfa905321fb96123cd7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>79eefdcba17bcadd54dff9b3b4948937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>80899bba6f7a5baf39f4f40f2029fa99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>f129ccfbdb03a896c933bf5cd00c31b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>35c2209287e1c2db5f72fc078ea38855</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>e2feaf010df5dbe2ac54dc02ccb976ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>release</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>3e2476e6f94e4f472b1ae3cf26d94a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>0191c833924d93e9093b07bab31010fe</anchor>
      <arglist>(T *p=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>member_ptr</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>ec206e248e0e847ed7a9f4899a10dae8</anchor>
      <arglist>(const member_ptr&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>fbbdf66af19d975292fc1317fef9f664</anchor>
      <arglist>(const member_ptr&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T *</type>
      <name>m_p</name>
      <anchorfile>classmember__ptr.html</anchorfile>
      <anchor>82d41ef68f80d1add88d40ed274e2357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MessageQueue</name>
    <filename>classMessageQueue.html</filename>
    <base>AutoSignaling&lt; BufferedTransformation &gt;</base>
    <member kind="function">
      <type></type>
      <name>MessageQueue</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>54981f62bcf9e76c3d1cc5a25be2dbe4</anchor>
      <arglist>(unsigned int nodeSize=256)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>26b8baf32ac98064caf0696fc37dcacf</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>c9fb66078566b10cdf821273ff84400e</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>2be65d39b4191a4ab24ac88255bf10ad</anchor>
      <arglist>(bool, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedMessageSeriesEnd</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>38444f31bdf62d6cd176db3cb2051dfc</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>MaxRetrievable</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>a0ec72fa9548429422af2d616a5942a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AnyRetrievable</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>8d1efa74c89f571b3bc9f00a947fbaa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>93afe98a3cabd61e9da2e0ff11a1a08f</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>c7be07bff9e57f88b217bb836ea42e29</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>TotalBytesRetrievable</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>be939ae98e035e15f516de4e34b8829f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>NumberOfMessages</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>00b443a9dd55d2b8c6e38b544dee189b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNextMessage</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>540da279953a13541a65c271888e27b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>NumberOfMessagesInThisSeries</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>6705e6dc7fd0ca98d4d784e898d70c19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>NumberOfMessageSeries</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>c7208eb1374fd4689d61947ffb161352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyMessagesTo</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>67143ef5e88c34f3af8547a9a400af26</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int count=UINT_MAX, const std::string &amp;channel=NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>Spy</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>fe0f9e20030bcd6f33511edd1bd89644</anchor>
      <arglist>(unsigned int &amp;contiguousSize) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classMessageQueue.html</anchorfile>
      <anchor>0cf7618db89d28cb81aa7ddfc29b3d85</anchor>
      <arglist>(MessageQueue &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ModePolicyCommonTemplate</name>
    <filename>classModePolicyCommonTemplate.html</filename>
    <templarg>POLICY_INTERFACE</templarg>
    <base>CipherModeBase</base>
    <base>POLICY_INTERFACE</base>
  </compound>
  <compound kind="class">
    <name>ModularArithmetic</name>
    <filename>classModularArithmetic.html</filename>
    <base>AbstractRing&lt; Integer &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>RandomizationParameter</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>872afa5efebf43e4744156dcdfac3ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Integer</type>
      <name>Element</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>17f2266382639dde45d028e630e07296</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModularArithmetic</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>d5e4139c4635fa0f587de8a97bf2c4e6</anchor>
      <arglist>(const Integer &amp;mod=Integer::One())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModularArithmetic</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>7a7bf808b07baa755ed9ce9f300ce743</anchor>
      <arglist>(const ModularArithmetic &amp;ma)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModularArithmetic</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>a13202d33f899282fa10019f6ac31427</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModularArithmetic *</type>
      <name>Clone</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>78b01c25c168c43fba14726dc919574c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>ba88499eea9ee645c04cab392bbbd977</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncodeElement</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>27dc1aa752d09041ed66391dff7086cc</anchor>
      <arglist>(BufferedTransformation &amp;out, const Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeElement</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>795cefe1d831bd60defc31ccce945fe7</anchor>
      <arglist>(BufferedTransformation &amp;in, Element &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetModulus</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>9f3d39f146c18589038c1373a62adf34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetModulus</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>2d7a07fd3831386eb9315c4e1f5fcf25</anchor>
      <arglist>(const Integer &amp;newModulus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsMontgomeryRepresentation</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>37df8733ead60f1037d41ce9078067b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Integer</type>
      <name>ConvertIn</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>6d504c7166a5eab47a74b86ce8cc782b</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Integer</type>
      <name>ConvertOut</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>bbd97fd2abfb869063f51cfdeb769c71</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Half</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>ae65516727b454f9f6d48bed9ebbc167</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Equal</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>affad53421b276602f8219c5e21ba052</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Identity</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>1fdc1decac3957e7e8231f95e6621804</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Add</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>8e1b2eff202b57b3ea16080c2f06e318</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>Accumulate</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>2dbbc7868764d236204b7eaa04284297</anchor>
      <arglist>(Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Inverse</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>7e3a9d9ae5e151fdd75f00f7c22bdda3</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Subtract</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>8f2d714e41224436ade3f1de4f89c5ef</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer &amp;</type>
      <name>Reduce</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>2810eeb09d7dd4bf862365875f7b4237</anchor>
      <arglist>(Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Double</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>2704ef13b1d9109569613196de4a4915</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>MultiplicativeIdentity</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>5284c7c57ed71408c09f85f195df9025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Multiply</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>3f41c5971bea03e3701b0e5378a6f9fa</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Square</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>c378a2527fe2107d3379bc35d7cd0487</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsUnit</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>90ca6f6591e3e5553dc7b9e94dad100d</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>MultiplicativeInverse</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>e2246ad602514e19f1291cd46b351ed9</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Divide</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>f9c4550655ec60ea34480060f56061b0</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>CascadeExponentiate</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>39c4f7a3fb501adc8d96145aecfb63f0</anchor>
      <arglist>(const Integer &amp;x, const Integer &amp;e1, const Integer &amp;y, const Integer &amp;e2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SimultaneousExponentiate</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>e37f29d8031840d185935819318f90dd</anchor>
      <arglist>(Element *results, const Element &amp;base, const Integer *exponents, unsigned int exponentsCount) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxElementBitLength</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>9d60d15f789a4f3ebd3329fefc77500e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxElementByteLength</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>36b7eb53ab95d5ecafc3039fdcfa9077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>RandomElement</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>b0c17cf34484518ca944b6238622163a</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const RandomizationParameter &amp;=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>5a84667a0345e770fd189fcaa0e33865</anchor>
      <arglist>(const ModularArithmetic &amp;rhs) const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const RandomizationParameter</type>
      <name>DefaultRandomizationParameter</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>0bc237302baf05d7a7dcf7469eb2d331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>modulus</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>4aae80ba87395fed95495912a3268457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>result</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>612502bd81122aa2deac5789825147ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>result1</name>
      <anchorfile>classModularArithmetic.html</anchorfile>
      <anchor>dda10699a030e5a2e33d44ed24a28bbb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MontgomeryRepresentation</name>
    <filename>classMontgomeryRepresentation.html</filename>
    <base>ModularArithmetic</base>
    <member kind="function">
      <type></type>
      <name>MontgomeryRepresentation</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>c65a390ac18c44b685a189047a4d3292</anchor>
      <arglist>(const Integer &amp;modulus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ModularArithmetic *</type>
      <name>Clone</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>7a051242207625c219a03029365c4936</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMontgomeryRepresentation</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>47ca2277410a94e93ab6aea778269047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>ConvertIn</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>c0a6608ef5bac036beb44d8cbd5eac52</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>ConvertOut</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>d0037be677cdac1fa22375a8619abc77</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>MultiplicativeIdentity</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>c861eacde0adebc393da560f8b00fcf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Multiply</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>ff11deaac92b4061c6c1358081ba391a</anchor>
      <arglist>(const Integer &amp;a, const Integer &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>Square</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>1d472135bd5a92ef38f242e73420e0ad</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>MultiplicativeInverse</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>67f4a4b470ba6663de934692e73b60ca</anchor>
      <arglist>(const Integer &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>CascadeExponentiate</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>cd3a38b45b2e1c3d1dd9e1bb43d500fe</anchor>
      <arglist>(const Integer &amp;x, const Integer &amp;e1, const Integer &amp;y, const Integer &amp;e2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SimultaneousExponentiate</name>
      <anchorfile>classMontgomeryRepresentation.html</anchorfile>
      <anchor>031b2e547e3c748947e295e6e44b404c</anchor>
      <arglist>(Element *results, const Element &amp;base, const Integer *exponents, unsigned int exponentsCount) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MuleGifCtrl</name>
    <filename>classMuleGifCtrl.html</filename>
    <base>wxAnimationCtrl</base>
    <member kind="function">
      <type></type>
      <name>MuleGifCtrl</name>
      <anchorfile>classMuleGifCtrl.html</anchorfile>
      <anchor>dbf3e73bd8c7fd7cdcf867ed923d77be</anchor>
      <arglist>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxControlNameStr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MuleGifCtrl</name>
      <anchorfile>classMuleGifCtrl.html</anchorfile>
      <anchor>92dda3feda712a6c253dbffd157ca924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadData</name>
      <anchorfile>classMuleGifCtrl.html</anchorfile>
      <anchor>95c691e0be9cea0a60735bc9b60fd67c</anchor>
      <arglist>(const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classMuleGifCtrl.html</anchorfile>
      <anchor>beabdbd265488e945965e4cd4c8aee10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classMuleGifCtrl.html</anchorfile>
      <anchor>6f9f7ad5456fabe152a7bc7f5bcb644b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxSize</type>
      <name>GetBestSize</name>
      <anchorfile>classMuleGifCtrl.html</anchorfile>
      <anchor>9576f25181a27f8e887da78b935b3d98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>myApp</name>
    <filename>classmyApp.html</filename>
    <base>wxApp</base>
    <base>wxThreadHelper</base>
    <base>wxApp</base>
    <base>wxThreadHelper</base>
    <base>wxApp</base>
    <base protection="private">wxThreadHelper</base>
    <member kind="function">
      <type></type>
      <name>myApp</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>30bbb61d3e920a7067ef660f82d25fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Entry</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>95660e4209482593c444142b532cc91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>OnRun</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>6ee620b21eef9d8f5e85b8d41171bf3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>myApp</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>30bbb61d3e920a7067ef660f82d25fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Entry</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>cbd70143e4e7483ed816091bb1a6715b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>618e8e03da2e591e0d9630a987e4a7c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>OnRun</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>1164296a7dff3430c8426978dbd89f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>myApp</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>30bbb61d3e920a7067ef660f82d25fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Entry</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>cbd70143e4e7483ed816091bb1a6715b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>2213154b7fa55dabf4cf2247ce44a470</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ended</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>5f899b2fb6491a77e445feb24d45a65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>test4j *</type>
      <name>test</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>53a09ed526fc856341ab1a7f95a64742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>test5j *</type>
      <name>test</name>
      <anchorfile>classmyApp.html</anchorfile>
      <anchor>126587c573caf886c7a008abba978346</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MyApp</name>
    <filename>classMyApp.html</filename>
    <base>wxApp</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classMyApp.html</anchorfile>
      <anchor>1d2cf26494945ce12930ede58f0261e7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MyFrame</name>
    <filename>classMyFrame.html</filename>
    <base>wxFrame</base>
    <base>wxThreadHelper</base>
    <member kind="function">
      <type></type>
      <name>MyFrame</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>eb2b4ff8a8437835f3f0c394db581ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MyFrame</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>711b2bda77494841f2e582982b80c356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnQuit</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>9e6c4824efad3aa9f4c3a3025a616e2d</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnTest</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>3110bc5b0be04565578845f118cc7b75</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnAbout</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>b470cba0c5d8d46980c602589d556ee5</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Test1</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>ad4d4f1fe80dcc5b0e864d7d087943a5</anchor>
      <arglist>(wxSocketBase *sock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Test2</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>485be2c3955145fe6506ac554bd93136</anchor>
      <arglist>(wxSocketBase *sock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Test3</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>5e652cff0a665eafdfbd1e34e2a4c1f2</anchor>
      <arglist>(wxSocketBase *sock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateStatusBar</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>352c012424625cd15f2ab45e16a76232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Entry</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>6121c9c4e6e7729d20ff573bef720d1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxTextCtrl *</type>
      <name>m_text</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>53f8b5332799408166ac42cd8bb26301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMenu *</type>
      <name>m_menuFile</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>443cb3a3f56810689b9ba97201ec9703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxMenuBar *</type>
      <name>m_menuBar</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>99e89fda7b806fc704666d7eef04256b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_busy</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>ef610d6c2747e3f16a17f6a8d6f2dc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Testeur *</type>
      <name>m_testeur</name>
      <anchorfile>classMyFrame.html</anchorfile>
      <anchor>f35ef442c5315879a70a0ceeba731475</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>myMutexLocker</name>
    <filename>classmyMutexLocker.html</filename>
    <member kind="function">
      <type></type>
      <name>myMutexLocker</name>
      <anchorfile>classmyMutexLocker.html</anchorfile>
      <anchor>96059d1099bbb9a6b88a34be31adbb9d</anchor>
      <arglist>(wxMutex &amp;mutex, const char *func)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>myMutexLocker</name>
      <anchorfile>classmyMutexLocker.html</anchorfile>
      <anchor>ad264d4d17ff9f1ceb2d4653eb6f8930</anchor>
      <arglist>(wxMutex &amp;mutex, long sid, const char *func)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOk</name>
      <anchorfile>classmyMutexLocker.html</anchorfile>
      <anchor>073649ed85bf721d903d47b32839e00c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~myMutexLocker</name>
      <anchorfile>classmyMutexLocker.html</anchorfile>
      <anchor>c8552c0c1b50735f977c9bf57f755cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lockedInThread</name>
      <anchorfile>classmyMutexLocker.html</anchorfile>
      <anchor>c6ea06eaf57dbd3ad1102d70e08b47f0</anchor>
      <arglist>(wxMutex &amp;mutex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NameValuePairs</name>
    <filename>classNameValuePairs.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NameValuePairs</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>7ab9b908bbcf110bef6c441122696be2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetThisObject</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>b7afe4b5e1ced5cc8fa6f695bd7bd98c</anchor>
      <arglist>(T &amp;object) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetThisPointer</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>01c64a1e0a5f667898b4c1968a853c0f</anchor>
      <arglist>(T *&amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>96686e9f8d6ce3ab870e516fb72b608e</anchor>
      <arglist>(const char *name, T &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>GetValueWithDefault</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>943b2009297783f1c35bae46efc3b5f7</anchor>
      <arglist>(const char *name, T defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL std::string</type>
      <name>GetValueNames</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>e57ff5e530b9faabe8621cb48eedf49e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL bool</type>
      <name>GetIntValue</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>de8f1c90e5af24e51466d07d1252a752</anchor>
      <arglist>(const char *name, int &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL int</type>
      <name>GetIntValueWithDefault</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>4258f5edb2f8e6f38dda643833044620</anchor>
      <arglist>(const char *name, int defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetRequiredParameter</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>c66048d3bc2a741712486d02e1f75d78</anchor>
      <arglist>(const char *className, const char *name, T &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL void</type>
      <name>GetRequiredIntParameter</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>6527f1806b0cb264aeb385ad3e483570</anchor>
      <arglist>(const char *className, const char *name, int &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CRYPTOPP_DLL bool</type>
      <name>GetVoidValue</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>1a1207b90689d2997ea7a15523c2a415</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CRYPTOPP_DLL void</type>
      <name>ThrowIfTypeMismatch</name>
      <anchorfile>classNameValuePairs.html</anchorfile>
      <anchor>7e5e47dfb99eb4050341e81e02cee950</anchor>
      <arglist>(const char *name, const std::type_info &amp;stored, const std::type_info &amp;retrieving)</arglist>
    </member>
    <class kind="class">NameValuePairs::ValueTypeMismatch</class>
  </compound>
  <compound kind="class">
    <name>NameValuePairs::ValueTypeMismatch</name>
    <filename>classNameValuePairs_1_1ValueTypeMismatch.html</filename>
    <base>InvalidArgument</base>
    <member kind="function">
      <type></type>
      <name>ValueTypeMismatch</name>
      <anchorfile>classNameValuePairs_1_1ValueTypeMismatch.html</anchorfile>
      <anchor>2ab530b91ce1f12ec7d7238ac53dc832</anchor>
      <arglist>(const std::string &amp;name, const std::type_info &amp;stored, const std::type_info &amp;retrieving)</arglist>
    </member>
    <member kind="function">
      <type>const std::type_info &amp;</type>
      <name>GetStoredTypeInfo</name>
      <anchorfile>classNameValuePairs_1_1ValueTypeMismatch.html</anchorfile>
      <anchor>e2ab4e2ac822a7505c2a51299b6c73ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::type_info &amp;</type>
      <name>GetRetrievingTypeInfo</name>
      <anchorfile>classNameValuePairs_1_1ValueTypeMismatch.html</anchorfile>
      <anchor>108f450b7514e27942867e1be4bd11e9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NewInteger</name>
    <filename>structNewInteger.html</filename>
    <templarg>i</templarg>
    <member kind="function">
      <type>Integer *</type>
      <name>operator()</name>
      <anchorfile>structNewInteger.html</anchorfile>
      <anchor>7fa01a1fc2ad8073a055fb6cb618d4dd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NewLastSmallPrimeSquared</name>
    <filename>structNewLastSmallPrimeSquared.html</filename>
    <member kind="function">
      <type>Integer *</type>
      <name>operator()</name>
      <anchorfile>structNewLastSmallPrimeSquared.html</anchorfile>
      <anchor>d62115ea9cf23b2f0bb14dad547a85ac</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NewObject</name>
    <filename>structNewObject.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T *</type>
      <name>operator()</name>
      <anchorfile>structNewObject.html</anchorfile>
      <anchor>8dbdc2fc88dd008388fcef8de2c83961</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NewPrimeTable</name>
    <filename>structNewPrimeTable.html</filename>
    <member kind="function">
      <type>std::vector&lt; word16 &gt; *</type>
      <name>operator()</name>
      <anchorfile>structNewPrimeTable.html</anchorfile>
      <anchor>e0dde440401dbb8113275742a0162fe4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NotCopyable</name>
    <filename>classNotCopyable.html</filename>
    <member kind="function">
      <type></type>
      <name>NotCopyable</name>
      <anchorfile>classNotCopyable.html</anchorfile>
      <anchor>87c521041c0abcb674e5a86cf80b166a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NotImplemented</name>
    <filename>classNotImplemented.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>NotImplemented</name>
      <anchorfile>classNotImplemented.html</anchorfile>
      <anchor>b360905d5b2d8f2b0b2024ceacec9819</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NullAllocator</name>
    <filename>classNullAllocator.html</filename>
    <templarg>T</templarg>
    <base>AllocatorBase</base>
    <member kind="function">
      <type>CRYPTOPP_INHERIT_ALLOCATOR_TYPES pointer</type>
      <name>allocate</name>
      <anchorfile>classNullAllocator.html</anchorfile>
      <anchor>f932b2c2d03d3b7bb5284b6f8ccdb022</anchor>
      <arglist>(size_type, const void *=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocate</name>
      <anchorfile>classNullAllocator.html</anchorfile>
      <anchor>0387460f3b06fe42c3b18c7479a1db36</anchor>
      <arglist>(void *, size_type)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classNullAllocator.html</anchorfile>
      <anchor>1272d8a4177511762bcd3d76282f3dce</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NullNameValuePairs</name>
    <filename>classNullNameValuePairs.html</filename>
    <base>NameValuePairs</base>
    <member kind="function">
      <type>bool</type>
      <name>GetVoidValue</name>
      <anchorfile>classNullNameValuePairs.html</anchorfile>
      <anchor>2c2030abfcecd28b7567acc36c41ee51</anchor>
      <arglist>(const char *, const std::type_info &amp;, void *) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ObjectHolder</name>
    <filename>classObjectHolder.html</filename>
    <templarg>T</templarg>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>m_object</name>
      <anchorfile>classObjectHolder.html</anchorfile>
      <anchor>154db246b0eb9b9fd2c406b828d31c98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OID</name>
    <filename>classOID.html</filename>
    <member kind="function">
      <type></type>
      <name>OID</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>555321b8c9629499df393575c326fb55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OID</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>2e061c362d254905db7dd73006798746</anchor>
      <arglist>(unsigned long v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OID</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>8f0b919bba21aa4e1efb30c88324d2d5</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>OID &amp;</type>
      <name>operator+=</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>2185ab1de27fa53c5d27881fbff9f67c</anchor>
      <arglist>(unsigned long rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>bd0adbb886e0f33f9017ab234b831ab7</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>f6953d01afcf947c3e869b089fedf550</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeAndCheck</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>525fbe10cb64751914dd6316ab5ea047</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; unsigned long &gt;</type>
      <name>m_values</name>
      <anchorfile>classOID.html</anchorfile>
      <anchor>2280e6bc58bb06952b5d671edf26dc1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OnLineSig</name>
    <filename>classOnLineSig.html</filename>
    <member kind="function">
      <type></type>
      <name>OnLineSig</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>1f82376d804bc288ebab2e54902924e5</anchor>
      <arglist>(const wxFileName &amp;file, const double absoluteMaxDL=0.0, const wxDateTime absoluteMaxDlDate=wxDateTime::Now())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OnLineSig</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>754b9a879bd07bfa92e253e7ab4f683f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetimuleSig</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>8ea1328ed927820c4ca9674440191eed</anchor>
      <arglist>(const wxFileName &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Refresh</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>9eaab3376855d762651eacc1c74b3e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetimuleState</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>216a95a59cbcd61d943d20d85f410d6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetKadState</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>792746938b5ceb3755f7bab694a20b34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetServerName</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>805a6acaaeb6f801b961c802492dde58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetServerIP</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>6b657920a27432dcde95577616737360</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetServerPort</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>98c08bb0059a27b6a3877429e8415a01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetConnexionID</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>7d90f8b01de99b7e4e143fcfe4e915f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetULRate</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>3f5a8ec2102098c734bd5aba80db947f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetDLRate</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>1b97a997a3c4d45759e8274e79b36b0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetQueue</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>250c1e6e19a4ac1cc44d2964752c8c00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetSharedFiles</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>f19e715fb785bb070902aa233ca1de03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetUser</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>1266f6a262e90123b3fc2a1c7c578b0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetTotalUL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>db802a147caf4e45115ee90ab4ac8142</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetTotalDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>3eb85587f23d3a5427c7747c08702746</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetVersion</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>1cf79600d3c3120432d90257e11391bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetSessionUL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>b165931630dcc684060e429cff31ca1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetSessionDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>5187a5f26d20f699452bd91ddf9a6970</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetUpStatus</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>ae243363fa1a62d1cd477fe8009976eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetRunTime</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>aacc5ab31bd8e659ac7a51366058e912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetConvertedTotalUL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>1fb7b58fb0513b39df0097dbe9ae9aa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetConvertedTotalDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>3390eced41b58f1539103af0a3b389d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetConvertedSessionUL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>6bb61b881696c4c3ae468278ab0409b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetConvertedSessionDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>10252a3b74429bff94cad02b8ee567d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetConnexionIDType</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>41770d5e2d5c34c75209f89142ae2118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetSessionMaxDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>58fe6353a096b36d3cce6345994c090e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxDateTime</type>
      <name>GetSessionMaxDlDate</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>7277a3be0d5c0ba9e3b8bea82d8e6974</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSessionMaxDlChanged</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>f5001736035b2a8ed7ecb86a5b1cfdaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetSessionMaxDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>d72f83f392bd524a72713a69d35a490b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAbsoluteMaxDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>dccb7d54a8b62e2bdd5c91a933933f73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxDateTime</type>
      <name>GetAbsoluteMaxDlDate</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>6e5f8a2ff0390491f2c7b784d7c3416a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAbsoluteMaxDlChanged</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>9a07b1519581318516dd531e148369a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetAbsoluteMaxDL</name>
      <anchorfile>classOnLineSig.html</anchorfile>
      <anchor>0017b0beb8e1f75b69930fbf8cd85805</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OS_Error</name>
    <filename>classOS__Error.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>OS_Error</name>
      <anchorfile>classOS__Error.html</anchorfile>
      <anchor>3a45a94888d38a5fdf6e85e6cf710383</anchor>
      <arglist>(ErrorType errorType, const std::string &amp;s, const std::string &amp;operation, int errorCode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OS_Error</name>
      <anchorfile>classOS__Error.html</anchorfile>
      <anchor>967d47028c9f01ac6a6a488c872f348e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetOperation</name>
      <anchorfile>classOS__Error.html</anchorfile>
      <anchor>cdda504c6f4f3e79058ef51eba960458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetErrorCode</name>
      <anchorfile>classOS__Error.html</anchorfile>
      <anchor>91a3b87f4fe0cfc04af2d700fddfc86b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_operation</name>
      <anchorfile>classOS__Error.html</anchorfile>
      <anchor>7bc701dd90fc92acb1931db13f0c92e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_errorCode</name>
      <anchorfile>classOS__Error.html</anchorfile>
      <anchor>46552a032d0ebf14b668070b1cd0e37d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OutputProxy</name>
    <filename>classOutputProxy.html</filename>
    <base>CustomSignalPropagation&lt; Sink &gt;</base>
    <member kind="function">
      <type></type>
      <name>OutputProxy</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>56e14de9505c46a71bf2cf565995cb64</anchor>
      <arglist>(BufferedTransformation &amp;owner, bool passSignal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPassSignal</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>f6c9e812abf0620ed464806745bb8dae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPassSignal</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>997ff0e5b2ac162e96805f8753dfae40</anchor>
      <arglist>(bool passSignal)</arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>CreatePutSpace</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>aa5f3e4457ccd3583f42a20fbc8138a6</anchor>
      <arglist>(unsigned int &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>7c026e64759af427e76603052019e030</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PutModifiable2</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>3e0f096d22d787cc57a69bed34b9b93e</anchor>
      <arglist>(byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>48d4fa2095a31780f6bc0b37737de49f</anchor>
      <arglist>(const NameValuePairs &amp;parameters=g_nullNameValuePairs, int propagation=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Flush</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>a6c68d78790266c60fa8b27176fbf969</anchor>
      <arglist>(bool hardFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MessageSeriesEnd</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>ecf5c216c060f2e6adfeb4019e6ad797</anchor>
      <arglist>(int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPut2</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>034f727d4723e0ffff3f547d034596cd</anchor>
      <arglist>(const std::string &amp;channel, const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>ChannelPutModifiable2</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>11f4a83503256c06b14dc46d80bc744e</anchor>
      <arglist>(const std::string &amp;channel, byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChannelFlush</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>7aeaa853d3be4abac2b65fa45b5763db</anchor>
      <arglist>(const std::string &amp;channel, bool completeFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChannelMessageSeriesEnd</name>
      <anchorfile>classOutputProxy.html</anchorfile>
      <anchor>ae129d7efb204cbe5c733032de298fcc</anchor>
      <arglist>(const std::string &amp;channel, int propagation=-1, bool blocking=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>P1363_KDF2</name>
    <filename>classP1363__KDF2.html</filename>
    <templarg>H</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DeriveKey</name>
      <anchorfile>classP1363__KDF2.html</anchorfile>
      <anchor>aacd39764c2d603ffc31b6919ddd952b</anchor>
      <arglist>(byte *output, unsigned int outputLength, const byte *input, unsigned int inputLength, const byte *derivationParams, unsigned int derivationParamsLength)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PartFileBufferedData</name>
    <filename>structPartFileBufferedData.html</filename>
    <member kind="variable">
      <type>byte *</type>
      <name>data</name>
      <anchorfile>structPartFileBufferedData.html</anchorfile>
      <anchor>51a735840d361bceca3e46041d565c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>start</name>
      <anchorfile>structPartFileBufferedData.html</anchorfile>
      <anchor>1264267a0a3b2a3f18126089e673cc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>end</name>
      <anchorfile>structPartFileBufferedData.html</anchorfile>
      <anchor>89d05ea9dac78e920ebdc9db84e0af7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Requested_Block_Struct *</type>
      <name>block</name>
      <anchorfile>structPartFileBufferedData.html</anchorfile>
      <anchor>b26b9f8d5b4d0dc92287b98b7ca211f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PartFileEncoderData</name>
    <filename>classPartFileEncoderData.html</filename>
    <member kind="function">
      <type>void</type>
      <name>ResetEncoder</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>118ccb0febf691823d89948cb4f82a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decode</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>ddca9ce85c8f3de2a95b8919e76a2173</anchor>
      <arglist>(unsigned char *gapdata, wxULongLong gaplen, unsigned char *partdata, int partlen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PartFileEncoderData</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>b8ffc32b81484a2393b3197d71ca08fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PartFileEncoderData</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>dca005ded36c9990e5c1c3bb0039ed79</anchor>
      <arglist>(wxULongLong part_count, wxULongLong gap_count)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PartFileEncoderData</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>ed59b607e4b936268419a726d0cc8865</anchor>
      <arglist>(const PartFileEncoderData &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>PartFileEncoderData &amp;</type>
      <name>operator=</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>842b58e4641eae98572dfa29564a3e37</anchor>
      <arglist>(const PartFileEncoderData &amp;obj)</arglist>
    </member>
    <member kind="variable">
      <type>RLE_Data</type>
      <name>m_part_status</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>c53df62359f459358039120f41f4cdf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RLE_Data</type>
      <name>m_gap_status</name>
      <anchorfile>classPartFileEncoderData.html</anchorfile>
      <anchor>4b3ab90db6c1b8d3b9663ed0200506c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Pending_Block_Struct</name>
    <filename>structPending__Block__Struct.html</filename>
    <member kind="variable">
      <type>Requested_Block_Struct *</type>
      <name>block</name>
      <anchorfile>structPending__Block__Struct.html</anchorfile>
      <anchor>19bec41e121f476cc3bb7ce6668dbf56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct z_stream_s *</type>
      <name>zStream</name>
      <anchorfile>structPending__Block__Struct.html</anchorfile>
      <anchor>2d8c5eaf54036c3f928666e3f53caf63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>totalUnzipped</name>
      <anchorfile>structPending__Block__Struct.html</anchorfile>
      <anchor>06e6f80e461b5dc02433dea911610c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>fZStreamError</name>
      <anchorfile>structPending__Block__Struct.html</anchorfile>
      <anchor>64b653787b251963bafa9c771d2d1cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>fRecovered</name>
      <anchorfile>structPending__Block__Struct.html</anchorfile>
      <anchor>6621e8f2c90d5e963da49de5fb5149fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_2_EC_OPT_DEF</name>
    <filename>structPHP__2__EC__OPT__DEF.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>php_name</name>
      <anchorfile>structPHP__2__EC__OPT__DEF.html</anchorfile>
      <anchor>dde2346750dbf9baa338a1d8a98bce02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ec_opcode_t</type>
      <name>tagname</name>
      <anchorfile>structPHP__2__EC__OPT__DEF.html</anchorfile>
      <anchor>2e136b248c100d62f46aed7461fce30a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>opsize</name>
      <anchorfile>structPHP__2__EC__OPT__DEF.html</anchorfile>
      <anchor>1d1b7cd9e41c2c2a14af2895f749383a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_BLTIN_FUNC_DEF</name>
    <filename>structPHP__BLTIN__FUNC__DEF.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structPHP__BLTIN__FUNC__DEF.html</anchorfile>
      <anchor>2dfa572c505be40907b492e25b0e7f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>param_count</name>
      <anchorfile>structPHP__BLTIN__FUNC__DEF.html</anchorfile>
      <anchor>db6f497b96c7eac0266a2a7c0b96582c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_NATIVE_FUNC_PTR</type>
      <name>func</name>
      <anchorfile>structPHP__BLTIN__FUNC__DEF.html</anchorfile>
      <anchor>ad02111450b6e143e574f03b6d5bc9a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_EXP_NODE</name>
    <filename>structPHP__EXP__NODE.html</filename>
    <member kind="variable">
      <type>PHP_EXP_OP</type>
      <name>op</name>
      <anchorfile>structPHP__EXP__NODE.html</anchorfile>
      <anchor>8293a8013fbc08428ea4e6aeecef1b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_EXP_NODE::@36</type>
      <name>@37</name>
      <anchorfile>structPHP__EXP__NODE.html</anchorfile>
      <anchor>7d2bd3a189bf2cf577cbb9704630a822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_EXP_NODE::@36::@40</type>
      <name>tree_node</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@36.html</anchorfile>
      <anchor>c37b3cc47f30d3b68c04806a45bb4016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_EXP_NODE *</type>
      <name>left</name>
      <anchorfile>structPHP__EXP__NODE_1_1@36_1_1@40.html</anchorfile>
      <anchor>e4df33f56d422ec3ecd5ea8a6fdaeb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_EXP_NODE::@36::@40::@41</type>
      <name>@42</name>
      <anchorfile>structPHP__EXP__NODE_1_1@36_1_1@40.html</anchorfile>
      <anchor>38d5078285d5890858d9e1453e1c38a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_EXP_NODE *</type>
      <name>right</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@36_1_1@40_1_1@41.html</anchorfile>
      <anchor>ae01a58236f2ae7d74155a3ce29d4fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_SYN_NODE *</type>
      <name>syn_right</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@36_1_1@40_1_1@41.html</anchorfile>
      <anchor>ae1599bdef9ef5f443f0988979bc6015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_EXP_NODE *</type>
      <name>next</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@36.html</anchorfile>
      <anchor>b01102bad00b81c7b380007fcb6a8ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_EXP_NODE::@38</type>
      <name>@39</name>
      <anchorfile>structPHP__EXP__NODE.html</anchorfile>
      <anchor>6971ada7b0ef390934e180c8c4e11f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VALUE_NODE</type>
      <name>val_node</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@38.html</anchorfile>
      <anchor>50233eae3118ca3cb14e8e5d95f3c476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VAR_NODE *</type>
      <name>var_node</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@38.html</anchorfile>
      <anchor>4174f0f10504e79f7ab3306bcc5c0dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_SCOPE_ITEM *</type>
      <name>var_si_node</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@38.html</anchorfile>
      <anchor>d6842320f1a503a24d3a14591ca4da1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_EXP_NODE *</type>
      <name>exp_node</name>
      <anchorfile>unionPHP__EXP__NODE_1_1@38.html</anchorfile>
      <anchor>ab2e1401c0e320a15fa6dc68115f146c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_FUNC_PARAM_DEF</name>
    <filename>structPHP__FUNC__PARAM__DEF.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>class_name</name>
      <anchorfile>structPHP__FUNC__PARAM__DEF.html</anchorfile>
      <anchor>4de54d7f14ffa1ca14c53d15e4e66c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>byref</name>
      <anchorfile>structPHP__FUNC__PARAM__DEF.html</anchorfile>
      <anchor>545f0302b45fcd472040f1cce42168c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VALUE_NODE</type>
      <name>def_value</name>
      <anchorfile>structPHP__FUNC__PARAM__DEF.html</anchorfile>
      <anchor>558d823941f311e305ea8c09105cf204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VAR_NODE *</type>
      <name>var</name>
      <anchorfile>structPHP__FUNC__PARAM__DEF.html</anchorfile>
      <anchor>1397856698c03146c6011cb6e8a4d978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_ITEM *</type>
      <name>si_var</name>
      <anchorfile>structPHP__FUNC__PARAM__DEF.html</anchorfile>
      <anchor>74f46fb6c671306d9e7dac4882bf99ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_FUNC_PARAM_ITEM</name>
    <filename>structPHP__FUNC__PARAM__ITEM.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structPHP__FUNC__PARAM__ITEM.html</anchorfile>
      <anchor>cf8f0a80a49753a19f7771dcb956882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>class_name</name>
      <anchorfile>structPHP__FUNC__PARAM__ITEM.html</anchorfile>
      <anchor>7540c02ba75fe67355337668238c1821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>byref</name>
      <anchorfile>structPHP__FUNC__PARAM__ITEM.html</anchorfile>
      <anchor>1308dec75144ea7d64b8ac873e240b39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_FUNC_PARAM_ITEM *</type>
      <name>next_item</name>
      <anchorfile>structPHP__FUNC__PARAM__ITEM.html</anchorfile>
      <anchor>8459749d437fd7873b5b9db94bdd9995</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_LIST_ASSIGN_NODE</name>
    <filename>structPHP__LIST__ASSIGN__NODE.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>is_list</name>
      <anchorfile>structPHP__LIST__ASSIGN__NODE.html</anchorfile>
      <anchor>36e67ae7f5e8bb4ea699213288383015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_LIST_ASSIGN_NODE::@43</type>
      <name>@44</name>
      <anchorfile>structPHP__LIST__ASSIGN__NODE.html</anchorfile>
      <anchor>61619458bcde019451cf41c61ca45209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VAR_NODE *</type>
      <name>var</name>
      <anchorfile>unionPHP__LIST__ASSIGN__NODE_1_1@43.html</anchorfile>
      <anchor>7c9d2a1e91b5d4993accc6d57ad91af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_LIST_ASSIGN_NODE *</type>
      <name>list</name>
      <anchorfile>unionPHP__LIST__ASSIGN__NODE_1_1@43.html</anchorfile>
      <anchor>106e0db3046f508f705d68583bd0b1ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_LIST_ASSIGN_NODE *</type>
      <name>next_node</name>
      <anchorfile>structPHP__LIST__ASSIGN__NODE.html</anchorfile>
      <anchor>783b3938527c4764283adb12542531dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SCOPE_ITEM</name>
    <filename>structPHP__SCOPE__ITEM.html</filename>
    <member kind="variable">
      <type>PHP_SCOPE_ITEM_TYPE</type>
      <name>type</name>
      <anchorfile>structPHP__SCOPE__ITEM.html</anchorfile>
      <anchor>c82b1d81b0b67106ac3ffff39d640ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_SCOPE_ITEM::@45</type>
      <name>@46</name>
      <anchorfile>structPHP__SCOPE__ITEM.html</anchorfile>
      <anchor>e5d693fb97d3378a70eb0a85087cc60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VAR_NODE *</type>
      <name>var</name>
      <anchorfile>unionPHP__SCOPE__ITEM_1_1@45.html</anchorfile>
      <anchor>e92ceb0c267293bef9866b20c8c1a862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>func</name>
      <anchorfile>unionPHP__SCOPE__ITEM_1_1@45.html</anchorfile>
      <anchor>69d1986246be06f270276ce03cb41429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>class_decl</name>
      <anchorfile>unionPHP__SCOPE__ITEM_1_1@45.html</anchorfile>
      <anchor>6f549c10114c930bbab417d66f5316b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_SCOPE_ITEM::@45::@47</type>
      <name>param</name>
      <anchorfile>unionPHP__SCOPE__ITEM_1_1@45.html</anchorfile>
      <anchor>2990407a81c3e04a2863cb6632196a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_VAR_NODE *</type>
      <name>var</name>
      <anchorfile>structPHP__SCOPE__ITEM_1_1@45_1_1@47.html</anchorfile>
      <anchor>e333ef4d71adf09db2de09b23ab27b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>structPHP__SCOPE__ITEM_1_1@45_1_1@47.html</anchorfile>
      <anchor>fca55ac38eb9c18dcc5c4351fb2a6f7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_CLASS_DECL_NODE</name>
    <filename>structPHP__SYN__CLASS__DECL__NODE.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>is_native</name>
      <anchorfile>structPHP__SYN__CLASS__DECL__NODE.html</anchorfile>
      <anchor>ec27da83c53652f2d87ed046091a6af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structPHP__SYN__CLASS__DECL__NODE.html</anchorfile>
      <anchor>10ad69f849c2cf7a33b996e3b94e994e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_SYN_CLASS_DECL_NODE::@50</type>
      <name>@51</name>
      <anchorfile>structPHP__SYN__CLASS__DECL__NODE.html</anchorfile>
      <anchor>deec2ce41275e293d52c7b1eff3d9f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_TABLE</type>
      <name>decl_scope</name>
      <anchorfile>unionPHP__SYN__CLASS__DECL__NODE_1_1@50.html</anchorfile>
      <anchor>add1a19b33f4d7eeb2a0e014cc1cbc10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_NATIVE_PROP_GET_FUNC_PTR</type>
      <name>native_prop_get_ptr</name>
      <anchorfile>unionPHP__SYN__CLASS__DECL__NODE_1_1@50.html</anchorfile>
      <anchor>77af93ffc470e55a33567baeb88a691d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_FOR_NODE</name>
    <filename>structPHP__SYN__FOR__NODE.html</filename>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>do_start</name>
      <anchorfile>structPHP__SYN__FOR__NODE.html</anchorfile>
      <anchor>81086f5485ea9ac3b724f458f34eea8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>cond</name>
      <anchorfile>structPHP__SYN__FOR__NODE.html</anchorfile>
      <anchor>98078c330b98ad8eb788dadea795db5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>do_next</name>
      <anchorfile>structPHP__SYN__FOR__NODE.html</anchorfile>
      <anchor>fcb929ce18d60648634fe55cb6e4fdb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>code</name>
      <anchorfile>structPHP__SYN__FOR__NODE.html</anchorfile>
      <anchor>656e3d9dc3714066f8732974ae0de5d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_FOREACH_NODE</name>
    <filename>structPHP__SYN__FOREACH__NODE.html</filename>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>elems</name>
      <anchorfile>structPHP__SYN__FOREACH__NODE.html</anchorfile>
      <anchor>5dfbb09f143e8fcca35bb6ec4dd10dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_ITEM *</type>
      <name>i_key</name>
      <anchorfile>structPHP__SYN__FOREACH__NODE.html</anchorfile>
      <anchor>8adb2644277fd69a80f0ae77a5e0ca26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_ITEM *</type>
      <name>i_val</name>
      <anchorfile>structPHP__SYN__FOREACH__NODE.html</anchorfile>
      <anchor>a37a092cbc2f09699aa641f9dde92df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>code</name>
      <anchorfile>structPHP__SYN__FOREACH__NODE.html</anchorfile>
      <anchor>fc3c0980ea489bab5e86904791c41811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>byref</name>
      <anchorfile>structPHP__SYN__FOREACH__NODE.html</anchorfile>
      <anchor>3c2a56aac0b76f490a0bc9a5acf71167</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_FUNC_DECL_NODE</name>
    <filename>structPHP__SYN__FUNC__DECL__NODE.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structPHP__SYN__FUNC__DECL__NODE.html</anchorfile>
      <anchor>980e2f966b4a6505eab5c8b0c7fca52c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SCOPE_TABLE</type>
      <name>scope</name>
      <anchorfile>structPHP__SYN__FUNC__DECL__NODE.html</anchorfile>
      <anchor>5b3c7ad991d9226767c8200403dbc909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_native</name>
      <anchorfile>structPHP__SYN__FUNC__DECL__NODE.html</anchorfile>
      <anchor>bef8bfdef50af0a23f332bd363291a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_SYN_FUNC_DECL_NODE::@48</type>
      <name>@49</name>
      <anchorfile>structPHP__SYN__FUNC__DECL__NODE.html</anchorfile>
      <anchor>62e2bee03db81d53c9c985487029bfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>code</name>
      <anchorfile>unionPHP__SYN__FUNC__DECL__NODE_1_1@48.html</anchorfile>
      <anchor>e2804a89dbec52b1a5a639cd1d2e25b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_NATIVE_FUNC_PTR</type>
      <name>native_ptr</name>
      <anchorfile>unionPHP__SYN__FUNC__DECL__NODE_1_1@48.html</anchorfile>
      <anchor>8b465df62dd7a8b27eda5d72177bb880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>param_count</name>
      <anchorfile>structPHP__SYN__FUNC__DECL__NODE.html</anchorfile>
      <anchor>f879edfe16f87c7ddeb3e80f70187f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_FUNC_PARAM_DEF *</type>
      <name>params</name>
      <anchorfile>structPHP__SYN__FUNC__DECL__NODE.html</anchorfile>
      <anchor>299fda62a6fc0b51340b8afa5f9bea1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_IF_NODE</name>
    <filename>structPHP__SYN__IF__NODE.html</filename>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>cond</name>
      <anchorfile>structPHP__SYN__IF__NODE.html</anchorfile>
      <anchor>d0f5df5b7bf2d5d1d990ca3e0ff45d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>code_if</name>
      <anchorfile>structPHP__SYN__IF__NODE.html</anchorfile>
      <anchor>7134776e6118b0720b727535485a8221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>code_else</name>
      <anchorfile>structPHP__SYN__IF__NODE.html</anchorfile>
      <anchor>d4c8baada4d3614b475543e614c6f491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_NODE</name>
    <filename>structPHP__SYN__NODE.html</filename>
    <member kind="variable">
      <type>PHP_STATMENT_TYPE</type>
      <name>type</name>
      <anchorfile>structPHP__SYN__NODE.html</anchorfile>
      <anchor>a7062f2fc03faa62b24c60c7afffd677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_SYN_NODE::@52</type>
      <name>@53</name>
      <anchorfile>structPHP__SYN__NODE.html</anchorfile>
      <anchor>7a189f879674900d489cfc413bf5a269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>node_expr</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>2bd01135a693c81aba911995f9a98d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_IF_NODE</type>
      <name>node_if</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>c7c6209072e0330d83173dae367be030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_WHILE_NODE</type>
      <name>node_while</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>e6aa1c0b837bed5538c89d878aaa4249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_FOREACH_NODE</type>
      <name>node_foreach</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>8c2ea2c3d7c4ca9a54886e9f5b949666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_FOR_NODE</type>
      <name>node_for</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>99399f08ce845425b37845a9d6933f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_SWITCH_NODE</type>
      <name>node_switch</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>08486b48a39556f088736660c9f0e38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_FUNC_DECL_NODE *</type>
      <name>func_decl</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>02af3835b2b066a4dc7b21a1f88e70dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_CLASS_DECL_NODE *</type>
      <name>class_decl</name>
      <anchorfile>unionPHP__SYN__NODE_1_1@52.html</anchorfile>
      <anchor>b2f9f00642e5583931423959a2f5a4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>next_node</name>
      <anchorfile>structPHP__SYN__NODE.html</anchorfile>
      <anchor>5673c2a78902d4d9a8843574e0ba8131</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_SWITCH_NODE</name>
    <filename>structPHP__SYN__SWITCH__NODE.html</filename>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>cond</name>
      <anchorfile>structPHP__SYN__SWITCH__NODE.html</anchorfile>
      <anchor>c651a89b935a0b886d0c6c93d9784421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>case_list</name>
      <anchorfile>structPHP__SYN__SWITCH__NODE.html</anchorfile>
      <anchor>22a3bf02210a437b8ed0fc515ee400bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_SYN_WHILE_NODE</name>
    <filename>structPHP__SYN__WHILE__NODE.html</filename>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>cond</name>
      <anchorfile>structPHP__SYN__WHILE__NODE.html</anchorfile>
      <anchor>2a248adfb76d460cce6c674b3280ea87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>code</name>
      <anchorfile>structPHP__SYN__WHILE__NODE.html</anchorfile>
      <anchor>0c51508440304b7c48c84cad0d6e3164</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_VALUE_NODE</name>
    <filename>structPHP__VALUE__NODE.html</filename>
    <member kind="variable">
      <type>PHP_VALUE_TYPE</type>
      <name>type</name>
      <anchorfile>structPHP__VALUE__NODE.html</anchorfile>
      <anchor>2daba55856e60f08c20abbb66989aaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union PHP_VALUE_NODE::@33</type>
      <name>@34</name>
      <anchorfile>structPHP__VALUE__NODE.html</anchorfile>
      <anchor>a1f5bbcdca61cce930f8fba7e45fa12f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>int_val</name>
      <anchorfile>unionPHP__VALUE__NODE_1_1@33.html</anchorfile>
      <anchor>c35dddac4394c8accee201bd887ca213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>float_val</name>
      <anchorfile>unionPHP__VALUE__NODE_1_1@33.html</anchorfile>
      <anchor>1cef739a5eaa4f2aad976d9ac165088b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>str_val</name>
      <anchorfile>unionPHP__VALUE__NODE_1_1@33.html</anchorfile>
      <anchor>0d19164149b1d1f77239741d78ce574b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr_val</name>
      <anchorfile>unionPHP__VALUE__NODE_1_1@33.html</anchorfile>
      <anchor>7cc5c2eb9cbde7a98f62577343174123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct PHP_VALUE_NODE::@33::@35</type>
      <name>obj_val</name>
      <anchorfile>unionPHP__VALUE__NODE_1_1@33.html</anchorfile>
      <anchor>e28521fc633530b1fbdf0ba9b0505dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>inst_ptr</name>
      <anchorfile>structPHP__VALUE__NODE_1_1@33_1_1@35.html</anchorfile>
      <anchor>62ed5c6f2e6cbce5e4418b2496e92603</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>class_name</name>
      <anchorfile>structPHP__VALUE__NODE_1_1@33_1_1@35.html</anchorfile>
      <anchor>db4fb5c2ce35cb07500d87ace4962b13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHP_VAR_NODE</name>
    <filename>structPHP__VAR__NODE.html</filename>
    <member kind="variable">
      <type>PHP_VALUE_NODE</type>
      <name>value</name>
      <anchorfile>structPHP__VAR__NODE.html</anchorfile>
      <anchor>e91ed9fc7e7c04e1a4efa398dc0954da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ref_count</name>
      <anchorfile>structPHP__VAR__NODE.html</anchorfile>
      <anchor>54f111cf9cdb46a2208324f2846e66b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>flags</name>
      <anchorfile>structPHP__VAR__NODE.html</anchorfile>
      <anchor>e9e2accc8bb43adaff937586ae23ee91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_CryptoSystem</name>
    <filename>classPK__CryptoSystem.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PK_CryptoSystem</name>
      <anchorfile>classPK__CryptoSystem.html</anchorfile>
      <anchor>fb7c3e97dfefea458c6bfc9ca38dac5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>MaxPlaintextLength</name>
      <anchorfile>classPK__CryptoSystem.html</anchorfile>
      <anchor>61bfafb5f5f66411a13babb7e16f2889</anchor>
      <arglist>(unsigned int ciphertextLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>CiphertextLength</name>
      <anchorfile>classPK__CryptoSystem.html</anchorfile>
      <anchor>9d4c312565d4a79d7ca57495755e51fa</anchor>
      <arglist>(unsigned int plaintextLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ParameterSupported</name>
      <anchorfile>classPK__CryptoSystem.html</anchorfile>
      <anchor>294c4664af51a72112db1f04e6ef9049</anchor>
      <arglist>(const char *name) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>FixedCiphertextLength</name>
      <anchorfile>classPK__CryptoSystem.html</anchorfile>
      <anchor>8fe7c133d4c3303b6371f3312b089bed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>FixedMaxPlaintextLength</name>
      <anchorfile>classPK__CryptoSystem.html</anchorfile>
      <anchor>7c7e2a03feb7f20ed0063203b19b29c5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_DefaultEncryptionFilter</name>
    <filename>classPK__DefaultEncryptionFilter.html</filename>
    <base>Unflushable&lt; Filter &gt;</base>
    <member kind="function">
      <type></type>
      <name>PK_DefaultEncryptionFilter</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>191cdd32adc348a0f680bff0a28b9978</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const PK_Encryptor &amp;encryptor, BufferedTransformation *attachment, const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>b8c329c575534d596ce09870156edbfe</anchor>
      <arglist>(const byte *inString, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="variable">
      <type>RandomNumberGenerator &amp;</type>
      <name>m_rng</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>8944081b0f33c9f7811c3650eef1bbad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const PK_Encryptor &amp;</type>
      <name>m_encryptor</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>c8a38e097ae12531cff92fbd4bb1680c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const NameValuePairs &amp;</type>
      <name>m_parameters</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>70c84618dd080b04a6d208dbd4bd6cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ByteQueue</type>
      <name>m_plaintextQueue</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>1d45e75bbe12960bbdd4229691d416a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>m_ciphertext</name>
      <anchorfile>classPK__DefaultEncryptionFilter.html</anchorfile>
      <anchor>3ef606d5aa57cabf5f594157a99a6ec0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_DeterministicSignatureMessageEncodingMethod</name>
    <filename>classPK__DeterministicSignatureMessageEncodingMethod.html</filename>
    <base>PK_SignatureMessageEncodingMethod</base>
    <member kind="function">
      <type>bool</type>
      <name>VerifyMessageRepresentative</name>
      <anchorfile>classPK__DeterministicSignatureMessageEncodingMethod.html</anchorfile>
      <anchor>cad5d6ab45d97c4d860fe303019b5ee2</anchor>
      <arglist>(HashTransformation &amp;hash, HashIdentifier hashIdentifier, bool messageEmpty, byte *representative, unsigned int representativeBitLength) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_EncryptionMessageEncodingMethod</name>
    <filename>classPK__EncryptionMessageEncodingMethod.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PK_EncryptionMessageEncodingMethod</name>
      <anchorfile>classPK__EncryptionMessageEncodingMethod.html</anchorfile>
      <anchor>7fef18ea963b320120cfa275b4b90581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ParameterSupported</name>
      <anchorfile>classPK__EncryptionMessageEncodingMethod.html</anchorfile>
      <anchor>2629bd4e461ef8644b999797bef2bc14</anchor>
      <arglist>(const char *) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>MaxUnpaddedLength</name>
      <anchorfile>classPK__EncryptionMessageEncodingMethod.html</anchorfile>
      <anchor>814436d3bdb1b61339c3a85ff064732a</anchor>
      <arglist>(unsigned int paddedLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Pad</name>
      <anchorfile>classPK__EncryptionMessageEncodingMethod.html</anchorfile>
      <anchor>83a57f195fe69c0e6d67d10f92576383</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *raw, unsigned int inputLength, byte *padded, unsigned int paddedBitLength, const NameValuePairs &amp;parameters) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DecodingResult</type>
      <name>Unpad</name>
      <anchorfile>classPK__EncryptionMessageEncodingMethod.html</anchorfile>
      <anchor>50b22b931aa947df43e5caec284c2bc1</anchor>
      <arglist>(const byte *padded, unsigned int paddedBitLength, byte *raw, const NameValuePairs &amp;parameters) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_Encryptor</name>
    <filename>classPK__Encryptor.html</filename>
    <base virtualness="virtual">PK_CryptoSystem</base>
    <base>PublicKeyAlgorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Encrypt</name>
      <anchorfile>classPK__Encryptor.html</anchorfile>
      <anchor>73da64b34f6630f4d76bdce6ebdfc6d0</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *plaintext, unsigned int plaintextLength, byte *ciphertext, const NameValuePairs &amp;parameters=g_nullNameValuePairs) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BufferedTransformation *</type>
      <name>CreateEncryptionFilter</name>
      <anchorfile>classPK__Encryptor.html</anchorfile>
      <anchor>66b9a0c99f5258f11b02f71d776ff4a2</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, BufferedTransformation *attachment=NULL, const NameValuePairs &amp;parameters=g_nullNameValuePairs) const </arglist>
    </member>
    <class kind="class">PK_Encryptor::InvalidPlaintextLength</class>
  </compound>
  <compound kind="class">
    <name>PK_Encryptor::InvalidPlaintextLength</name>
    <filename>classPK__Encryptor_1_1InvalidPlaintextLength.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>InvalidPlaintextLength</name>
      <anchorfile>classPK__Encryptor_1_1InvalidPlaintextLength.html</anchorfile>
      <anchor>bf392960eb37c742241d32d5564d5161</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_FinalTemplate</name>
    <filename>classPK__FinalTemplate.html</filename>
    <templarg>BASE</templarg>
    <base>BASE</base>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>960769beb8ad2f29337f22ac1f854dc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>ac833810566144e56c74c90720f280c2</anchor>
      <arglist>(const Integer &amp;v1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>904c97c411560a9f57389bc6c4ed1f18</anchor>
      <arglist>(const typename BASE::KeyClass &amp;key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>2f1646f20fdf9d928a3c6a3afc2698fb</anchor>
      <arglist>(const PublicKeyCopier&lt; T &gt; &amp;key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>f844ce9fafae337e2b8cfde05cb8b4fb</anchor>
      <arglist>(const PrivateKeyCopier&lt; T &gt; &amp;key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>4494160c57d7613eabfec677946d805c</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>7a6192a046afb15df07f8f6fe37c001e</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>37c93e9824f2dd749836cf456e2c2f96</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>58eab5a65c589be169140a4f990cc475</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>7212f71db58e5ad4cd259fc00e770dc0</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>a9611f1b5ad447b5ce9a5d13ce73d4db</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5, const T6 &amp;v6)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>3034bf3f9c8ed3ef11872c8362ba6129</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5, const T6 &amp;v6, const T7 &amp;v7)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>1d64a883408d6f5a3e1f341798cfc850</anchor>
      <arglist>(const T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5, const T6 &amp;v6, const T7 &amp;v7, const T8 &amp;v8)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>be3cb1cad56cdcfe62111a03aa705e6e</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>08743386a189a6ae703561a340bfc1f2</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>e4558325ae67ca84fe3dbd5440e43827</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>6751947a1f93c7fc4b5e77a6aa6932e9</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>07212c9592460ca7ca25a1eb3902255f</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5, const T6 &amp;v6)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>6a7407240312709425de69caa84a71eb</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5, const T6 &amp;v6, const T7 &amp;v7)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PK_FinalTemplate</name>
      <anchorfile>classPK__FinalTemplate.html</anchorfile>
      <anchor>648e4f2aa773c0f6918b24aaddc78944</anchor>
      <arglist>(T1 &amp;v1, const T2 &amp;v2, const T3 &amp;v3, const T4 &amp;v4, const T5 &amp;v5, const T6 &amp;v6, const T7 &amp;v7, const T8 &amp;v8)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_MessageAccumulator</name>
    <filename>classPK__MessageAccumulator.html</filename>
    <base>HashTransformation</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>DigestSize</name>
      <anchorfile>classPK__MessageAccumulator.html</anchorfile>
      <anchor>d79cf196ecea7753beaa19d1ebf06928</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TruncatedFinal</name>
      <anchorfile>classPK__MessageAccumulator.html</anchorfile>
      <anchor>17ca24616fc0136930d8c5d67da0d732</anchor>
      <arglist>(byte *, unsigned int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_MessageAccumulatorBase</name>
    <filename>classPK__MessageAccumulatorBase.html</filename>
    <base>PK_MessageAccumulator</base>
    <member kind="function">
      <type></type>
      <name>PK_MessageAccumulatorBase</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>32d7a2bc23a2db0faecac23a13908534</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HashTransformation &amp;</type>
      <name>AccessHash</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>2b50619968b03f69ba3ad7ba21e780bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Update</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>1b1df3a1530ee16fc90616851e3abfc8</anchor>
      <arglist>(const byte *input, unsigned int length)</arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>m_recoverableMessage</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>345bc33d413c1fd7669de9d9d1f089c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>m_representative</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>bbef3e3ccb561a43b3ee7446c838a0da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>m_presignature</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>6f092d7793f35d6a38ed10bf83cdb781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecByteBlock</type>
      <name>m_semisignature</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>80c5888ebcacfcdf50f950ebba950209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>m_k</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>ba062650b7094dadcf1168cd182f2486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>m_s</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>0886827aa3335610a8bb412e90744fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_empty</name>
      <anchorfile>classPK__MessageAccumulatorBase.html</anchorfile>
      <anchor>6d0a3ce0258e928c8fb146989a6a7884</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_MessageAccumulatorImpl</name>
    <filename>classPK__MessageAccumulatorImpl.html</filename>
    <templarg>HASH_ALGORITHM</templarg>
    <base>PK_MessageAccumulatorBase</base>
    <base protection="protected">ObjectHolder&lt; HASH_ALGORITHM &gt;</base>
    <member kind="function">
      <type>HashTransformation &amp;</type>
      <name>AccessHash</name>
      <anchorfile>classPK__MessageAccumulatorImpl.html</anchorfile>
      <anchor>8c36c8e0ae73d819234a4f71863143b7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_SignatureMessageEncodingMethod</name>
    <filename>classPK__SignatureMessageEncodingMethod.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PK_SignatureMessageEncodingMethod</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>12cd23d84589354621ceaba2c1d0428b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>MaxRecoverableLength</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>388f32918740c08c1fc08f642c6f5b8e</anchor>
      <arglist>(unsigned int, unsigned int, unsigned int) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsProbabilistic</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>9c71fa7e3b75d764ccd58d6a63f66ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AllowNonrecoverablePart</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>d88eabf4435a70bdb9f305af2c4bc27f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecoverablePartFirst</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>20ed60378c1cf52d8f93957fa69c8030</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessSemisignature</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>c93396ea364b8a54ab8d788779624625</anchor>
      <arglist>(HashTransformation &amp;, const byte *, unsigned int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessRecoverableMessage</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>f1bb3b97f812b0eb7a82a789fa657225</anchor>
      <arglist>(HashTransformation &amp;, const byte *, unsigned int, const byte *, unsigned int, SecByteBlock &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ComputeMessageRepresentative</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>627ca26f230a360c5aa28ab50e83b524</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *recoverableMessage, unsigned int recoverableMessageLength, HashTransformation &amp;hash, HashIdentifier hashIdentifier, bool messageEmpty, byte *representative, unsigned int representativeBitLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>VerifyMessageRepresentative</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>2684c6b7f2d39e7206543353684766c6</anchor>
      <arglist>(HashTransformation &amp;hash, HashIdentifier hashIdentifier, bool messageEmpty, byte *representative, unsigned int representativeBitLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DecodingResult</type>
      <name>RecoverMessageFromRepresentative</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>c0eb819f6bec7a1b9c749070c43d0cab</anchor>
      <arglist>(HashTransformation &amp;, HashIdentifier, bool, byte *, unsigned int, byte *) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DecodingResult</type>
      <name>RecoverMessageFromSemisignature</name>
      <anchorfile>classPK__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>d341807488b8dc38272811005f5742af</anchor>
      <arglist>(HashTransformation &amp;, HashIdentifier, const byte *, unsigned int, const byte *, unsigned int, byte *) const </arglist>
    </member>
    <class kind="struct">PK_SignatureMessageEncodingMethod::HashIdentifierLookup</class>
  </compound>
  <compound kind="struct">
    <name>PK_SignatureMessageEncodingMethod::HashIdentifierLookup</name>
    <filename>structPK__SignatureMessageEncodingMethod_1_1HashIdentifierLookup.html</filename>
    <class kind="struct">PK_SignatureMessageEncodingMethod::HashIdentifierLookup::HashIdentifierLookup2</class>
  </compound>
  <compound kind="struct">
    <name>PK_SignatureMessageEncodingMethod::HashIdentifierLookup::HashIdentifierLookup2</name>
    <filename>structPK__SignatureMessageEncodingMethod_1_1HashIdentifierLookup_1_1HashIdentifierLookup2.html</filename>
    <templarg>H</templarg>
    <member kind="function" static="yes">
      <type>static HashIdentifier</type>
      <name>Lookup</name>
      <anchorfile>structPK__SignatureMessageEncodingMethod_1_1HashIdentifierLookup_1_1HashIdentifierLookup2.html</anchorfile>
      <anchor>343a949bb6305710a128ff7c5a2bee35</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_SignatureScheme</name>
    <filename>classPK__SignatureScheme.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PK_SignatureScheme</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>6a2ac6ee6b94f615f62bdf4ccc4e1795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>SignatureLength</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>30a75d4daf205a62c32810e24bdc99c8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>MaxSignatureLength</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>11e8ab75d76b0094417db538847fdb6e</anchor>
      <arglist>(unsigned int=0) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>MaxRecoverableLength</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>de02fb7cb0192dc403b6b7bc4404435f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>MaxRecoverableLengthFromSignatureLength</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>59f342ce806c59ba5cedd91cbb4c58b1</anchor>
      <arglist>(unsigned int signatureLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsProbabilistic</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>deb758d5f8ae8fad137d11ad1c5c60c0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>AllowNonrecoverablePart</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>00368da9563ce49efc42b5cd0d9c7738</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SignatureUpfront</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>780bca8d276b62bd28a54382f208ce36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>RecoverablePartFirst</name>
      <anchorfile>classPK__SignatureScheme.html</anchorfile>
      <anchor>168ca843d63ddababdf2cee3eaa02813</anchor>
      <arglist>() const =0</arglist>
    </member>
    <class kind="class">PK_SignatureScheme::InvalidKeyLength</class>
    <class kind="class">PK_SignatureScheme::KeyTooShort</class>
  </compound>
  <compound kind="class">
    <name>PK_SignatureScheme::InvalidKeyLength</name>
    <filename>classPK__SignatureScheme_1_1InvalidKeyLength.html</filename>
    <base>Exception</base>
    <member kind="function">
      <type></type>
      <name>InvalidKeyLength</name>
      <anchorfile>classPK__SignatureScheme_1_1InvalidKeyLength.html</anchorfile>
      <anchor>b78d51873b282f9307ec4ee72a0133b0</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_SignatureScheme::KeyTooShort</name>
    <filename>classPK__SignatureScheme_1_1KeyTooShort.html</filename>
    <base>PK_SignatureScheme::InvalidKeyLength</base>
    <member kind="function">
      <type></type>
      <name>KeyTooShort</name>
      <anchorfile>classPK__SignatureScheme_1_1KeyTooShort.html</anchorfile>
      <anchor>af13bc53a9ea6d678f318428ea71c54b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_Signer</name>
    <filename>classPK__Signer.html</filename>
    <base>PK_SignatureScheme</base>
    <base>PrivateKeyAlgorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual PK_MessageAccumulator *</type>
      <name>NewSignatureAccumulator</name>
      <anchorfile>classPK__Signer.html</anchorfile>
      <anchor>ff85d006e814ccc8ac943b145a0bfaf9</anchor>
      <arglist>(RandomNumberGenerator &amp;rng) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>InputRecoverableMessage</name>
      <anchorfile>classPK__Signer.html</anchorfile>
      <anchor>db00f3548fc5ff547006d116f16bf139</anchor>
      <arglist>(PK_MessageAccumulator &amp;messageAccumulator, const byte *recoverableMessage, unsigned int recoverableMessageLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>Sign</name>
      <anchorfile>classPK__Signer.html</anchorfile>
      <anchor>10739ae39f944cc20c579c9442b2bf45</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, PK_MessageAccumulator *messageAccumulator, byte *signature) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>SignAndRestart</name>
      <anchorfile>classPK__Signer.html</anchorfile>
      <anchor>525b74d3a6da157b0a356d3e772a0ef1</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, PK_MessageAccumulator &amp;messageAccumulator, byte *signature, bool restart=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>SignMessage</name>
      <anchorfile>classPK__Signer.html</anchorfile>
      <anchor>21caf9590524085fac494dcd33c511c2</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *message, unsigned int messageLen, byte *signature) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>SignMessageWithRecovery</name>
      <anchorfile>classPK__Signer.html</anchorfile>
      <anchor>bb6b03b0be24e5ecf0ac2837fc1289fd</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *recoverableMessage, unsigned int recoverableMessageLength, const byte *nonrecoverableMessage, unsigned int nonrecoverableMessageLength, byte *signature) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PK_Verifier</name>
    <filename>classPK__Verifier.html</filename>
    <base>PK_SignatureScheme</base>
    <base>PublicKeyAlgorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual PK_MessageAccumulator *</type>
      <name>NewVerificationAccumulator</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>cd874268dab653dde01409fc9dfd2069</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>InputSignature</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>b6d870abb86956e85a6602581c5b7063</anchor>
      <arglist>(PK_MessageAccumulator &amp;messageAccumulator, const byte *signature, unsigned int signatureLength) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Verify</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>002461c71eaacb022a0d169975a6f752</anchor>
      <arglist>(PK_MessageAccumulator *messageAccumulator) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>VerifyAndRestart</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>36e176dc8a0d3f924938cb2b07021f28</anchor>
      <arglist>(PK_MessageAccumulator &amp;messageAccumulator) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>VerifyMessage</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>653eee3f5413bada2292c12a06793c4e</anchor>
      <arglist>(const byte *message, unsigned int messageLen, const byte *signature, unsigned int signatureLength) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DecodingResult</type>
      <name>Recover</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>25a928c76d7bc73e1a04d85266b46382</anchor>
      <arglist>(byte *recoveredMessage, PK_MessageAccumulator *messageAccumulator) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DecodingResult</type>
      <name>RecoverAndRestart</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>6612ff44a274594890419ae75d260cce</anchor>
      <arglist>(byte *recoveredMessage, PK_MessageAccumulator &amp;messageAccumulator) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DecodingResult</type>
      <name>RecoverMessage</name>
      <anchorfile>classPK__Verifier.html</anchorfile>
      <anchor>67881a023d92616c0ffc18eeef14c808</anchor>
      <arglist>(byte *recoveredMessage, const byte *nonrecoverableMessage, unsigned int nonrecoverableMessageLength, const byte *signature, unsigned int signatureLength) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PKCS1v15</name>
    <filename>structPKCS1v15.html</filename>
    <base>SignatureStandard</base>
    <base>EncryptionStandard</base>
    <member kind="typedef">
      <type>PKCS_EncryptionPaddingScheme</type>
      <name>EncryptionMessageEncodingMethod</name>
      <anchorfile>structPKCS1v15.html</anchorfile>
      <anchor>fb02eef16ef3754acc17f4f49f950f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PKCS1v15_SignatureMessageEncodingMethod</type>
      <name>SignatureMessageEncodingMethod</name>
      <anchorfile>structPKCS1v15.html</anchorfile>
      <anchor>7e523e92c24a728724548327fbea64f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PKCS1v15_SignatureMessageEncodingMethod</name>
    <filename>classPKCS1v15__SignatureMessageEncodingMethod.html</filename>
    <base>PK_DeterministicSignatureMessageEncodingMethod</base>
    <member kind="function">
      <type>void</type>
      <name>ComputeMessageRepresentative</name>
      <anchorfile>classPKCS1v15__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>b1a558cce6ad622f59a412ec3530ab46</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *recoverableMessage, unsigned int recoverableMessageLength, HashTransformation &amp;hash, HashIdentifier hashIdentifier, bool messageEmpty, byte *representative, unsigned int representativeBitLength) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classPKCS1v15__SignatureMessageEncodingMethod.html</anchorfile>
      <anchor>711bfbe897d3894f015178a701fbad34</anchor>
      <arglist>()</arglist>
    </member>
    <class kind="struct">PKCS1v15_SignatureMessageEncodingMethod::HashIdentifierLookup</class>
  </compound>
  <compound kind="struct">
    <name>PKCS1v15_SignatureMessageEncodingMethod::HashIdentifierLookup</name>
    <filename>structPKCS1v15__SignatureMessageEncodingMethod_1_1HashIdentifierLookup.html</filename>
    <class kind="struct">PKCS1v15_SignatureMessageEncodingMethod::HashIdentifierLookup::HashIdentifierLookup2</class>
  </compound>
  <compound kind="struct">
    <name>PKCS1v15_SignatureMessageEncodingMethod::HashIdentifierLookup::HashIdentifierLookup2</name>
    <filename>structPKCS1v15__SignatureMessageEncodingMethod_1_1HashIdentifierLookup_1_1HashIdentifierLookup2.html</filename>
    <templarg>H</templarg>
    <member kind="function" static="yes">
      <type>static HashIdentifier</type>
      <name>Lookup</name>
      <anchorfile>structPKCS1v15__SignatureMessageEncodingMethod_1_1HashIdentifierLookup_1_1HashIdentifierLookup2.html</anchorfile>
      <anchor>1e9cf6e59af38ce1a90535ac1cccef11</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PKCS8PrivateKey</name>
    <filename>classPKCS8PrivateKey.html</filename>
    <base virtualness="virtual">ASN1Key</base>
    <base>PrivateKey</base>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classPKCS8PrivateKey.html</anchorfile>
      <anchor>9ffab1c1391e4faf356668d8e2cd7d32</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classPKCS8PrivateKey.html</anchorfile>
      <anchor>83e4531f1f514441107a1f35274589b8</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>BERDecodeOptionalAttributes</name>
      <anchorfile>classPKCS8PrivateKey.html</anchorfile>
      <anchor>55301b3f97993d9bb2dd7dcf48f35aa6</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DEREncodeOptionalAttributes</name>
      <anchorfile>classPKCS8PrivateKey.html</anchorfile>
      <anchor>0a32007edac3c3137ad0be6542402285</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PKCS_DigestDecoration</name>
    <filename>classPKCS__DigestDecoration.html</filename>
    <templarg>H</templarg>
    <member kind="function">
      <type>NAMESPACE_END const byte</type>
      <name>decoration</name>
      <anchorfile>classPKCS__DigestDecoration.html</anchorfile>
      <anchor>2a5ab906d0a95512069ac586694c7dac</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="function">
      <type>const unsigned int</type>
      <name>length</name>
      <anchorfile>classPKCS__DigestDecoration.html</anchorfile>
      <anchor>adb09bdb760d896a27813df63cac5ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const byte</type>
      <name>decoration</name>
      <anchorfile>classPKCS__DigestDecoration.html</anchorfile>
      <anchor>fecc9e06a165a0a4d4a9f9632fab2e72</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned int</type>
      <name>length</name>
      <anchorfile>classPKCS__DigestDecoration.html</anchorfile>
      <anchor>9d0d30e13fc8bff06f79986263862408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PKCS_EncryptionPaddingScheme</name>
    <filename>classPKCS__EncryptionPaddingScheme.html</filename>
    <base>PK_EncryptionMessageEncodingMethod</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxUnpaddedLength</name>
      <anchorfile>classPKCS__EncryptionPaddingScheme.html</anchorfile>
      <anchor>8c690f0682d31beff2e82ce08e9b2420</anchor>
      <arglist>(unsigned int paddedLength) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Pad</name>
      <anchorfile>classPKCS__EncryptionPaddingScheme.html</anchorfile>
      <anchor>704707bd785658c631433fd229890ebd</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const byte *raw, unsigned int inputLength, byte *padded, unsigned int paddedLength, const NameValuePairs &amp;parameters) const </arglist>
    </member>
    <member kind="function">
      <type>DecodingResult</type>
      <name>Unpad</name>
      <anchorfile>classPKCS__EncryptionPaddingScheme.html</anchorfile>
      <anchor>ef82d56c58b1dfc5820039938c23a9a2</anchor>
      <arglist>(const byte *padded, unsigned int paddedLength, byte *raw, const NameValuePairs &amp;parameters) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classPKCS__EncryptionPaddingScheme.html</anchorfile>
      <anchor>3cb0c91f1798e251b079f4958ebc3450</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Portable</name>
    <filename>classPortable.html</filename>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>Add</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>e2a29417080d3de030c84071c3393f26</anchor>
      <arglist>(word *C, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>Subtract</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>2c6e6dd744dbf714a2c337dd3edd48d3</anchor>
      <arglist>(word *C, const word *A, const word *B, unsigned int N)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply2</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>8c83443664f6196bd932620641341645</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static word</type>
      <name>Multiply2Add</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>b55608f0aebd1d52bf3b22b7d02cfc2f</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply4</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>2967bd1aa0157a68ba4f21c6a27c2e85</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply8</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>a75bfa25f9e55424760bde9f17622b47</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>MultiplyRecursionLimit</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>04a2c39bff742bac1fa3e1a5a435838d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply2Bottom</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>087a707244951b3471b59ec91e58709f</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply4Bottom</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>9ff9340fc5788358b273bd6972ee46d7</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply8Bottom</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>8bcd5ebdcab910885cda9d4ac5117125</anchor>
      <arglist>(word *C, const word *A, const word *B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>MultiplyBottomRecursionLimit</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>236946034d18885137698340bf4344ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Square2</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>45d6465480b2e7fb59335041dca58b89</anchor>
      <arglist>(word *R, const word *A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Square4</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>bd2d46363b9794cafd2a641b59ac7d5a</anchor>
      <arglist>(word *R, const word *A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Square8</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>f8d7c479a01efc652f2ce075c994056a</anchor>
      <arglist>(word *, const word *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>SquareRecursionLimit</name>
      <anchorfile>classPortable.html</anchorfile>
      <anchor>3a7c1bbb702ea8cb358f9d0872edf002</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>POSITION</name>
    <filename>structPOSITION.html</filename>
    <member kind="function">
      <type></type>
      <name>POSITION</name>
      <anchorfile>structPOSITION.html</anchorfile>
      <anchor>2ce4e2cadc81f4966aaae51fe62aade4</anchor>
      <arglist>(void *ptr=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>structPOSITION.html</anchorfile>
      <anchor>e8641465da0656b20fba0ad6de8654d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>m_ptr</name>
      <anchorfile>structPOSITION.html</anchorfile>
      <anchor>a9ef42d788257c4c643fa6de625d1631</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PrefsPage</name>
    <filename>structPrefsPage.html</filename>
    <member kind="variable">
      <type>wxString</type>
      <name>m_title</name>
      <anchorfile>structPrefsPage.html</anchorfile>
      <anchor>dd3c7894faeaddb18b79ad230a1f1ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSizer *(*</type>
      <name>m_function</name>
      <anchorfile>structPrefsPage.html</anchorfile>
      <anchor>24d4afd5803003a3b736094a160dceb0</anchor>
      <arglist>)(wxWindow *, bool, bool)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_imageidx</name>
      <anchorfile>structPrefsPage.html</anchorfile>
      <anchor>cce44b4d8f2092eafb63209b411679d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxPanel *</type>
      <name>m_widget</name>
      <anchorfile>structPrefsPage.html</anchorfile>
      <anchor>ac73a5f88a03438987df01f83985284a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PrefsUnifiedDlg</name>
    <filename>classPrefsUnifiedDlg.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>PrefsUnifiedDlg</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>7322e89dee660eeb40180ad03f140100</anchor>
      <arglist>(wxWindow *parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TransferFromWindow</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>2c5802ba169757622b28ceddec35f5ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TransferToWindow</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>893a12de0ad4a8be4438d4b3da81c87c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>CfgChanged</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>f92e07ccb9dafb23503ade451cda8578</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Cfg_Base *</type>
      <name>GetCfg</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>5885c6362991bc8bd06bb0c5592c0530</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnOk</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>1f1f2a93e6c9c1e5356ca82a58762fae</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnCancel</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>5b42a987127f817607e6eabf9617d8eb</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnClose</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>6d8a97ca75e169f0e662300e6d72cf2a</anchor>
      <arglist>(wxCloseEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonBrowseWav</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>895f9bc6b9fde574e600907e92b8cb0d</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonBrowseSkin</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>c5fbfd6050b3618ac869f164167e1337</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonBrowseApplication</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>1cab88b97001abc94c8ab88728c8a04b</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonDir</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>aed137f609974542e1b50b966463e687</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonEditAddr</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>cad51f79ab512c1462510e9e1bd08cbc</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonColorChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>8534f6c90d28c8505921f22f198cabee</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonIPFilterReload</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>804626c29d9d1d48516f8990c0c23eec</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnButtonIPFilterUpdate</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>5ab6168ce3be0b661b9bad00ff4bba8d</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnColorCategorySelected</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>e062a1287d1f5703802cb8223e083afc</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnCheckBoxChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>e14cbe765dbf57bc12cc7bc31bd9c4ac</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBrowserChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>f30f2aa26004ef3d9a626ba887232eb7</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnPrefsPageChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>10d65591e03eb3454eace5dae605be85</anchor>
      <arglist>(wxListEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnToolTipDelayChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>0b5320451074e47bbc0a486bae4d1a57</anchor>
      <arglist>(wxSpinEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnScrollBarChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>0c7c603926cb89d94e506d7b5ec22bcd</anchor>
      <arglist>(wxScrollEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRateLimitChanged</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>777b5d2f3af035223efe70d651449deb</anchor>
      <arglist>(wxSpinEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnTCPClientDestChange</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>73381f8a8ec46282f17a0a0522933476</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnInitDialog</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>c90011227a80fc10501b744453b605fd</anchor>
      <arglist>(wxInitDialogEvent &amp;evt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CDirectoryTreeCtrl *</type>
      <name>m_ShareSelector</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>396a826d7bec6bb5ed15871d62a4e62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxChoice *</type>
      <name>m_choiceColor</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>b6b3b1e27ca9256dfb94d5a53ce4969f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxButton *</type>
      <name>m_buttonColor</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>4dd3866d5583e7885e766413f66dbe0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxPanel *</type>
      <name>m_CurrentPanel</name>
      <anchorfile>classPrefsUnifiedDlg.html</anchorfile>
      <anchor>c0452c405e88820156fda709ae8c5667</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PrimeSelector</name>
    <filename>classPrimeSelector.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrimeSelector</name>
      <anchorfile>classPrimeSelector.html</anchorfile>
      <anchor>188d90b3b391a0b66c2ed277d3d4cf8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PrimeSelector *</type>
      <name>GetSelectorPointer</name>
      <anchorfile>classPrimeSelector.html</anchorfile>
      <anchor>ac28fbbb0a3ee3357fb2a0ee075313e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsAcceptable</name>
      <anchorfile>classPrimeSelector.html</anchorfile>
      <anchor>44f47be2ff2e8ce1813cb0781d725181</anchor>
      <arglist>(const Integer &amp;candidate) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PrimeSieve</name>
    <filename>classPrimeSieve.html</filename>
    <member kind="function">
      <type></type>
      <name>PrimeSieve</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>d666abdbdc1847849a034fca32e525b8</anchor>
      <arglist>(const Integer &amp;first, const Integer &amp;last, const Integer &amp;step, signed int delta=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NextCandidate</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>55376fe7f9294c1bf561350fa4a93013</anchor>
      <arglist>(Integer &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DoSieve</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>efd53894e116b4719697f4a5347f0854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SieveSingle</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>ef7632203a02890568748c22506d6247</anchor>
      <arglist>(std::vector&lt; bool &gt; &amp;sieve, word16 p, const Integer &amp;first, const Integer &amp;step, word16 stepInv)</arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>m_first</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>505052e929448429944305dbbf8e3d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>m_last</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>2166a7be20ae19477aec3a785053e758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>m_step</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>e4a118cd164def0137049b041a40df5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>signed int</type>
      <name>m_delta</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>b088fe1cbe49ca396ffee53f94da0706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>word</type>
      <name>m_next</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>7fd1a09885673caf9979e3247b7e71f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>m_sieve</name>
      <anchorfile>classPrimeSieve.html</anchorfile>
      <anchor>43d578612bed4a6c9ef353987c0407f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PrivateKey</name>
    <filename>classPrivateKey.html</filename>
    <base>GeneratableCryptoMaterial</base>
  </compound>
  <compound kind="class">
    <name>PrivateKeyAlgorithm</name>
    <filename>classPrivateKeyAlgorithm.html</filename>
    <base>AsymmetricAlgorithm</base>
    <member kind="function">
      <type>CryptoMaterial &amp;</type>
      <name>AccessMaterial</name>
      <anchorfile>classPrivateKeyAlgorithm.html</anchorfile>
      <anchor>48cf4528f16263f2200d5b908a0b8ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CryptoMaterial &amp;</type>
      <name>GetMaterial</name>
      <anchorfile>classPrivateKeyAlgorithm.html</anchorfile>
      <anchor>0199217f43af73a6ad78fe1303903fe3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PrivateKey &amp;</type>
      <name>AccessPrivateKey</name>
      <anchorfile>classPrivateKeyAlgorithm.html</anchorfile>
      <anchor>e2085815947c2ae7b3f9f614612e0c17</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const PrivateKey &amp;</type>
      <name>GetPrivateKey</name>
      <anchorfile>classPrivateKeyAlgorithm.html</anchorfile>
      <anchor>24edb4d57abc975e0e40ee02ce8f08fa</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PrivateKeyCopier</name>
    <filename>classPrivateKeyCopier.html</filename>
    <templarg>KEYS</templarg>
    <member kind="typedef">
      <type>KEYS::PrivateKey</type>
      <name>KeyClass</name>
      <anchorfile>classPrivateKeyCopier.html</anchorfile>
      <anchor>ba8fb72c2ef4b5779ffad9b82990d907</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrivateKeyCopier</name>
      <anchorfile>classPrivateKeyCopier.html</anchorfile>
      <anchor>9fe2f59bebace1dda608b4116284a26d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CopyKeyInto</name>
      <anchorfile>classPrivateKeyCopier.html</anchorfile>
      <anchor>d29dd24d2f69e9e59b9ab2576dbec2a2</anchor>
      <arglist>(typename KEYS::PublicKey &amp;key) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CopyKeyInto</name>
      <anchorfile>classPrivateKeyCopier.html</anchorfile>
      <anchor>c3f7024e6fc3ff0c67509d03bcdd51a9</anchor>
      <arglist>(typename KEYS::PrivateKey &amp;key) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProxyFilter</name>
    <filename>classProxyFilter.html</filename>
    <base>FilterWithBufferedInput</base>
    <member kind="function">
      <type></type>
      <name>ProxyFilter</name>
      <anchorfile>classProxyFilter.html</anchorfile>
      <anchor>57d8f45942f29124783269060c11d9ac</anchor>
      <arglist>(BufferedTransformation *filter, unsigned int firstSize, unsigned int lastSize, BufferedTransformation *attachment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classProxyFilter.html</anchorfile>
      <anchor>e5d15b0c5bcc601a58dde22e01ce9b79</anchor>
      <arglist>(bool hardFlush, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFilter</name>
      <anchorfile>classProxyFilter.html</anchorfile>
      <anchor>98a1d161913c42feb64951c396f0f3e0</anchor>
      <arglist>(Filter *filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NextPutMultiple</name>
      <anchorfile>classProxyFilter.html</anchorfile>
      <anchor>cc06a46e7ef6ebf7a3704bed8d747213</anchor>
      <arglist>(const byte *s, unsigned int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NextPutModifiable</name>
      <anchorfile>classProxyFilter.html</anchorfile>
      <anchor>86a3abb58aeaf8be9673beee3591ba86</anchor>
      <arglist>(byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>member_ptr&lt; BufferedTransformation &gt;</type>
      <name>m_filter</name>
      <anchorfile>classProxyFilter.html</anchorfile>
      <anchor>1f89e47a61f678d1d2dbb52ca2ba2996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PublicKey</name>
    <filename>classPublicKey.html</filename>
    <base virtualness="virtual">CryptoMaterial</base>
  </compound>
  <compound kind="class">
    <name>PublicKeyAlgorithm</name>
    <filename>classPublicKeyAlgorithm.html</filename>
    <base>AsymmetricAlgorithm</base>
    <member kind="function">
      <type>CryptoMaterial &amp;</type>
      <name>AccessMaterial</name>
      <anchorfile>classPublicKeyAlgorithm.html</anchorfile>
      <anchor>74b77db3086e07caf5506fda9ec204e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CryptoMaterial &amp;</type>
      <name>GetMaterial</name>
      <anchorfile>classPublicKeyAlgorithm.html</anchorfile>
      <anchor>adbb6acca8905a61d75f1951d53a90e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PublicKey &amp;</type>
      <name>AccessPublicKey</name>
      <anchorfile>classPublicKeyAlgorithm.html</anchorfile>
      <anchor>47cd0fed475280962ab6337c6c57c882</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const PublicKey &amp;</type>
      <name>GetPublicKey</name>
      <anchorfile>classPublicKeyAlgorithm.html</anchorfile>
      <anchor>beb33c2c3b6b362ba37f2d39fbf75834</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PublicKeyCopier</name>
    <filename>classPublicKeyCopier.html</filename>
    <templarg>KEYS</templarg>
    <member kind="typedef">
      <type>KEYS::PublicKey</type>
      <name>KeyClass</name>
      <anchorfile>classPublicKeyCopier.html</anchorfile>
      <anchor>ebc33b010bf00df2fad1a414b1975133</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PublicKeyCopier</name>
      <anchorfile>classPublicKeyCopier.html</anchorfile>
      <anchor>79380bad1c8d364155b519bd908f52fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CopyKeyInto</name>
      <anchorfile>classPublicKeyCopier.html</anchorfile>
      <anchor>6dcc6a8bec74711403d53a47ff69c99b</anchor>
      <arglist>(typename KEYS::PublicKey &amp;key) const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>QueuedFile</name>
    <filename>structQueuedFile.html</filename>
    <member kind="variable">
      <type>wxString</type>
      <name>m_path</name>
      <anchorfile>structQueuedFile.html</anchorfile>
      <anchor>0d64d13f680ae4db552969867569160b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_name</name>
      <anchorfile>structQueuedFile.html</anchorfile>
      <anchor>504ae2fdd21bc19495334bd5e886bd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CPartFile *</type>
      <name>m_owner</name>
      <anchorfile>structQueuedFile.html</anchorfile>
      <anchor>83cd8cae7f8a52c548dd8bd4b4914c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RandomizedTrapdoorFunction</name>
    <filename>classRandomizedTrapdoorFunction.html</filename>
    <base>TrapdoorFunctionBounds</base>
    <member kind="function" virtualness="pure">
      <type>virtual Integer</type>
      <name>ApplyRandomizedFunction</name>
      <anchorfile>classRandomizedTrapdoorFunction.html</anchorfile>
      <anchor>0ef90207f59fb08deaafed6ce1ff2e6a</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;x) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsRandomized</name>
      <anchorfile>classRandomizedTrapdoorFunction.html</anchorfile>
      <anchor>3c3ffbd7bb85bacc70bf51dc3d6d0b94</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RandomizedTrapdoorFunctionInverse</name>
    <filename>classRandomizedTrapdoorFunctionInverse.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RandomizedTrapdoorFunctionInverse</name>
      <anchorfile>classRandomizedTrapdoorFunctionInverse.html</anchorfile>
      <anchor>eada68bff06be69868303824880b67fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Integer</type>
      <name>CalculateRandomizedInverse</name>
      <anchorfile>classRandomizedTrapdoorFunctionInverse.html</anchorfile>
      <anchor>2c01608b61496578c5fe2967e69b923a</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;x) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsRandomized</name>
      <anchorfile>classRandomizedTrapdoorFunctionInverse.html</anchorfile>
      <anchor>f19097782ace14c0feb72ea717cc97f1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RandomNumberGenerator</name>
    <filename>classRandomNumberGenerator.html</filename>
    <base>Algorithm</base>
    <member kind="function" virtualness="pure">
      <type>virtual byte</type>
      <name>GenerateByte</name>
      <anchorfile>classRandomNumberGenerator.html</anchorfile>
      <anchor>4d5c7627db46b4bd5a9180cc81dc368e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>GenerateBit</name>
      <anchorfile>classRandomNumberGenerator.html</anchorfile>
      <anchor>ce592244cfbd6c18398ea6c75857532e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual word32</type>
      <name>GenerateWord32</name>
      <anchorfile>classRandomNumberGenerator.html</anchorfile>
      <anchor>c06c9f5e66f35d643e4192f231b8a4cd</anchor>
      <arglist>(word32 a=0, word32 b=0xffffffffL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GenerateBlock</name>
      <anchorfile>classRandomNumberGenerator.html</anchorfile>
      <anchor>f527b9e201a6c0ec64eb004ffe4220b0</anchor>
      <arglist>(byte *output, unsigned int size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>DiscardBytes</name>
      <anchorfile>classRandomNumberGenerator.html</anchorfile>
      <anchor>8e2bf4d4b120e0d91d930f7c81139b60</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Shuffle</name>
      <anchorfile>classRandomNumberGenerator.html</anchorfile>
      <anchor>9ef5090c556d086e7aa240acf7a131b4</anchor>
      <arglist>(IT begin, IT end)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RandomPool</name>
    <filename>classRandomPool.html</filename>
    <base>RandomNumberGenerator</base>
    <base>Bufferless&lt; BufferedTransformation &gt;</base>
    <member kind="function">
      <type></type>
      <name>RandomPool</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>707e9086d1c9d7677cf137e734d60446</anchor>
      <arglist>(unsigned int poolSize=384)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>5f838bc273fc9003087649eeab3438c4</anchor>
      <arglist>(const byte *begin, unsigned int, int messageEnd, bool blocking)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AnyRetrievable</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>0d92865479a7dd90ed2f63a2e416ccb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>MaxRetrievable</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>f10805e126f719f79658ef1bb7d4a71f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>0fa2c2f88370e78ce0a316c950680214</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>863d29be319bd749df928b05eb36f255</anchor>
      <arglist>(BufferedTransformation &amp;, unsigned long &amp;, unsigned long=ULONG_MAX, const std::string &amp;=NULL_CHANNEL, bool=true) const </arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>GenerateByte</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>33da00e5c39922b5496ccddc4fc37ef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GenerateBlock</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>9ebc7010c7f9769a0d92de6f5284447d</anchor>
      <arglist>(byte *output, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>8f3de7d7e8cb38b85a513cf826679c3d</anchor>
      <arglist>(const NameValuePairs &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Stir</name>
      <anchorfile>classRandomPool.html</anchorfile>
      <anchor>ec0b290ff82241f03cef986af574f05a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Requested_Block_Struct</name>
    <filename>structRequested__Block__Struct.html</filename>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>StartOffset</name>
      <anchorfile>structRequested__Block__Struct.html</anchorfile>
      <anchor>29deac7899e76ddb270767029bada3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>EndOffset</name>
      <anchorfile>structRequested__Block__Struct.html</anchorfile>
      <anchor>dbc5b8e602c25113ca04d1e5c16d1104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>packedsize</name>
      <anchorfile>structRequested__Block__Struct.html</anchorfile>
      <anchor>b52bde9d2abbb85fd673ff66c95e3f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>FileID</name>
      <anchorfile>structRequested__Block__Struct.html</anchorfile>
      <anchor>ea95c7a16e646ecb4d57c9a0628dad50</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>transferred</name>
      <anchorfile>structRequested__Block__Struct.html</anchorfile>
      <anchor>2b05f3e49991b8df039aee32505fee84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Requested_File_Struct</name>
    <filename>structRequested__File__Struct.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>fileid</name>
      <anchorfile>structRequested__File__Struct.html</anchorfile>
      <anchor>ac5455cfc196d140f33f40c0d27f6ec7</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>lastasked</name>
      <anchorfile>structRequested__File__Struct.html</anchorfile>
      <anchor>43d1da5e5489c09ceed1e786f1c177d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>badrequests</name>
      <anchorfile>structRequested__File__Struct.html</anchorfile>
      <anchor>a887ecc66b65a3c6141a4e9fa385568f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RLE_Data</name>
    <filename>classRLE__Data.html</filename>
    <member kind="function">
      <type></type>
      <name>RLE_Data</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>85c6670e2b8c0f861350dc298f14371e</anchor>
      <arglist>(wxULongLong len, bool use_diff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RLE_Data</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>b5e4f1f572c6624bc255ebcbc39c0203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RLE_Data</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>e351f8f73d6f33e80a8aa54cb3115740</anchor>
      <arglist>(const RLE_Data &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RLE_Data &amp;</type>
      <name>operator=</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>e705d9419278504d7a0a74d28051dc6d</anchor>
      <arglist>(const RLE_Data &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RLE_Data</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>5cc4561392b68940c583cc88f9b30a43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>Encode</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>af179791adf8e4aaedd7bed661b8be09</anchor>
      <arglist>(unsigned char *data, wxULongLong &amp;outlen)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>Encode</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>6c84e1bb0aa8c212713a8cf8d0c72c1b</anchor>
      <arglist>(ArrayOfUInts16 &amp;data, wxULongLong &amp;outlen)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>Decode</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>8a16aecf3cdb5847979d0c2938f197f0</anchor>
      <arglist>(const unsigned char *data, wxULongLong len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetEncoder</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>f243518ad706ecd35ea75fff09a260f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Realloc</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>73398de6fcb8fc384f54fc89271684fe</anchor>
      <arglist>(wxULongLong size)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>Buffer</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>a8177e354c0fc3034730f8c9abb6a9af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxULongLong</type>
      <name>Size</name>
      <anchorfile>classRLE__Data.html</anchorfile>
      <anchor>3a498fae09db63f6673236893e38c03b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RSA</name>
    <filename>structRSA.html</filename>
    <member kind="typedef">
      <type>RSAFunction</type>
      <name>PublicKey</name>
      <anchorfile>structRSA.html</anchorfile>
      <anchor>da56d557ddd0ce2325a070413c4c25dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>InvertibleRSAFunction</type>
      <name>PrivateKey</name>
      <anchorfile>structRSA.html</anchorfile>
      <anchor>2d7dd00a9fef0f9ab53bf5a6b4ddd624</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>structRSA.html</anchorfile>
      <anchor>f76472024807464b49805d5d7e1d6fd5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RSAFunction</name>
    <filename>classRSAFunction.html</filename>
    <base>TrapdoorFunction</base>
    <base>X509PublicKey</base>
    <member kind="function">
      <type>void</type>
      <name>Initialize</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>8f1a1bd46126545fe9e43cd1e259cba2</anchor>
      <arglist>(const Integer &amp;n, const Integer &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>OID</type>
      <name>GetAlgorithmID</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>2cfc99d5e5aba1ed39935df637010335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BERDecodeKey</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>40aa17ddd231edfcc052d4f028f27a8c</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncodeKey</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>594a5b0cf414e2a3386adaab2c53b5c6</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Validate</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>469fec0f4772d178f8674c2a35f19c51</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, unsigned int level) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetVoidValue</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>8178257a012f725ceb2cb6eead2121d6</anchor>
      <arglist>(const char *name, const std::type_info &amp;valueType, void *pValue) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignFrom</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>d2db62b20297a8d9df55171e73fe8de7</anchor>
      <arglist>(const NameValuePairs &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>ApplyFunction</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>8ff27b06cc624d5c41a1314b189cfab7</anchor>
      <arglist>(const Integer &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>PreimageBound</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>077c921fb8a5cf6e971c8627dc79f7bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>ImageBound</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>46a00dd9a2bcc85fc1b2f0b971d3a44f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetModulus</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>c7e07f0b492d3425f5b2d04c938d3427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Integer &amp;</type>
      <name>GetPublicExponent</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>b79b2b3e5df78f05e7dbd83879658d99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetModulus</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>6704ae9b7607ea8cac82c27303c8ff32</anchor>
      <arglist>(const Integer &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPublicExponent</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>1d6ff0264475bad18692ac81ba0c1b9e</anchor>
      <arglist>(const Integer &amp;e)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_n</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>b2e89822414861cb312d52d8c7ac3017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Integer</type>
      <name>m_e</name>
      <anchorfile>classRSAFunction.html</anchorfile>
      <anchor>f6d15cdabeb084e9cdc7efb1bbdea783</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RSAPrimeSelector</name>
    <filename>classRSAPrimeSelector.html</filename>
    <base>PrimeSelector</base>
    <member kind="function">
      <type></type>
      <name>RSAPrimeSelector</name>
      <anchorfile>classRSAPrimeSelector.html</anchorfile>
      <anchor>1e2909a8eacf291aa5f89a90d0fe1623</anchor>
      <arglist>(const Integer &amp;e)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RSAPrimeSelector</name>
      <anchorfile>classRSAPrimeSelector.html</anchorfile>
      <anchor>a17221080c516702986a4050a4b35d1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAcceptable</name>
      <anchorfile>classRSAPrimeSelector.html</anchorfile>
      <anchor>0ad0eb88574ade431c00514e132a0a35</anchor>
      <arglist>(const Integer &amp;candidate) const </arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>m_e</name>
      <anchorfile>classRSAPrimeSelector.html</anchorfile>
      <anchor>748d4eca8b06793bb25ea6f01cbebe01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RSASS</name>
    <filename>structRSASS.html</filename>
    <templarg>STANDARD</templarg>
    <templarg>H</templarg>
    <base>TF_SS&lt; STANDARD, H, RSA &gt;</base>
  </compound>
  <compound kind="struct">
    <name>SafeShifter&lt; false &gt;</name>
    <filename>structSafeShifter_3_01false_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>RightShift</name>
      <anchorfile>structSafeShifter_3_01false_01_4.html</anchorfile>
      <anchor>ccda2582de00336bdf751c64115504bf</anchor>
      <arglist>(T value, unsigned int bits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>LeftShift</name>
      <anchorfile>structSafeShifter_3_01false_01_4.html</anchorfile>
      <anchor>123648de449b4aa607950e95d034293f</anchor>
      <arglist>(T value, unsigned int bits)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SafeShifter&lt; true &gt;</name>
    <filename>structSafeShifter_3_01true_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>RightShift</name>
      <anchorfile>structSafeShifter_3_01true_01_4.html</anchorfile>
      <anchor>a4693fe5794aa995b0c533206944b702</anchor>
      <arglist>(T, unsigned int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>LeftShift</name>
      <anchorfile>structSafeShifter_3_01true_01_4.html</anchorfile>
      <anchor>6c3a05f9a2cc59be39d2d67b6d9b57ee</anchor>
      <arglist>(T, unsigned int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SearchFile</name>
    <filename>classSearchFile.html</filename>
    <member kind="function">
      <type></type>
      <name>SearchFile</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>13985a5a81a10c0eae826c81be8104e9</anchor>
      <arglist>(CEC_SearchFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUpdate</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>152cd439561099644fabeb54caad2132</anchor>
      <arglist>(CEC_SearchFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>d7af1f40cc2c90fbf8ffcfb18f9ad718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchFile</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>13985a5a81a10c0eae826c81be8104e9</anchor>
      <arglist>(CEC_SearchFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUpdate</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>152cd439561099644fabeb54caad2132</anchor>
      <arglist>(CEC_SearchFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>d7af1f40cc2c90fbf8ffcfb18f9ad718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static class SearchInfo *</type>
      <name>GetContainerInstance</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>50790c2a411b3b7d30073d67dbc35919</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static class SearchInfo *</type>
      <name>GetContainerInstance</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>bad67a7ba222601d7734e25d80d13d84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sFileName</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>e99ef842dd3ad9e5eb68250d17ed5806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>lFileSize</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>7f06d56104456b9ab86af23e5e37a2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>nHash</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>d48bfe28e99596593aa015d1cfef4a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sHash</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>eae419c18564e2814ba800710fb57d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>lSourceCount</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>769a48b3c28554cdbfacdeefa25fb572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bPresent</name>
      <anchorfile>classSearchFile.html</anchorfile>
      <anchor>4ecf0a844c4c1edbc8e86f77e10c2d30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SearchInfo</name>
    <filename>classSearchInfo.html</filename>
    <base>UpdatableItemsContainer&lt; SearchFile, CEC_SearchFile_Tag, CMD4Hash &gt;</base>
    <member kind="function">
      <type></type>
      <name>SearchInfo</name>
      <anchorfile>classSearchInfo.html</anchorfile>
      <anchor>b2c28f59cffffb62854938b5653bf84c</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReQuery</name>
      <anchorfile>classSearchInfo.html</anchorfile>
      <anchor>06686dba0c4cd828084a9e4e05f50677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static SearchInfo *</type>
      <name>m_This</name>
      <anchorfile>classSearchInfo.html</anchorfile>
      <anchor>5a9310ee5a03132e39044112c45544ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SecBlock</name>
    <filename>classSecBlock.html</filename>
    <templarg>T</templarg>
    <templarg>A</templarg>
    <member kind="typedef">
      <type>A::value_type</type>
      <name>value_type</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>c7bc2d547feea24c569da76ada0f3786</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>A::pointer</type>
      <name>iterator</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>839702c5cf360db92e8e89a18f4d1705</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>A::const_pointer</type>
      <name>const_iterator</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>00be6a18e0ae7680c5071d43c3bf6348</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>A::size_type</type>
      <name>size_type</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>c37f179bc9420b7af601df75eaed3c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SecBlock</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>bd083d663c569d915cf9859c5c926c26</anchor>
      <arglist>(unsigned int blocksize=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SecBlock</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>2c09b064510dead98bc0da7cd52c28e4</anchor>
      <arglist>(const SecBlock&lt; T, A &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SecBlock</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>30593876f4f72919ed367c10225205e1</anchor>
      <arglist>(const T *t, unsigned int len)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SecBlock</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>8f32e11d6e78528689cd31272f97b6bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>38984b763ce0d758d99e8119f963c69b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator void *</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>c6453a5b2b481544f7f77bbe3fea0a78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T *</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>6ec7180a13abc1d6481d91e6c7bc6265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>59e2c69126c9d03a9a2e0ca0a34a2cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator+</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>bbfc7698dbbceff5d14b5f81b25e877b</anchor>
      <arglist>(I offset)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator+</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>9c5cf24b5b4598b22ebe17392bb5792f</anchor>
      <arglist>(I offset) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>1a2f5073618eaff18b61f04cd622e809</anchor>
      <arglist>(I index)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>0551dd586dc913e86237f704ea58130e</anchor>
      <arglist>(I index) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>11a05906688172579cd3520816799446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>66dc3b8a22251b67ab52e9bf8607a759</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>26d88ba73b5da0f5dd4ab87ce6345d8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>451b3180f919fc931bdb1ff546897e7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>A::pointer</type>
      <name>data</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>42ad7c28810297ca50b2411284876845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>A::const_pointer</type>
      <name>data</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>83e241191e429f30ed7a0901125b9f02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>c248d3c89253dbc1036731a67710b5e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>91e67f1405c22194383d0697bdcfc9ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Assign</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>cac377f5ff7c548d66ccf4e723021090</anchor>
      <arglist>(const T *t, unsigned int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Assign</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>309d571ffb1b7d58185a8309ca58e6b2</anchor>
      <arglist>(const SecBlock&lt; T, A &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>SecBlock &amp;</type>
      <name>operator=</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>afb66a71628400e91f6fc15245b0784a</anchor>
      <arglist>(const SecBlock&lt; T, A &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>bd321a0646052f6179be33f88beabfb9</anchor>
      <arglist>(const SecBlock&lt; T, A &gt; &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>7e41d156d4146d59b618191df6991a11</anchor>
      <arglist>(const SecBlock&lt; T, A &gt; &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>New</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>7278eb2f5cf6afef37a4984f098f71e5</anchor>
      <arglist>(unsigned int newSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CleanNew</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>91ee02dff7661bf7f4aba33fd856e1e8</anchor>
      <arglist>(unsigned int newSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Grow</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>f83e585b2d66ceda4b730de172538e39</anchor>
      <arglist>(unsigned int newSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CleanGrow</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>4e2d8397c6cceee28088b0f568815d5f</anchor>
      <arglist>(unsigned int newSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>fde2287498d8ff9a3710ad65de4155e9</anchor>
      <arglist>(unsigned int newSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>3872f50f03372fa859803971961f02cd</anchor>
      <arglist>(SecBlock&lt; T, A &gt; &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>A</type>
      <name>m_alloc</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>536edaa408d09201419ac3fece8d894a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m_size</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>e3a956e4ae282c0dc54035870450a748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T *</type>
      <name>m_ptr</name>
      <anchorfile>classSecBlock.html</anchorfile>
      <anchor>9b8182b17492ab3098087c17fc3ea40e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServerEntry</name>
    <filename>classServerEntry.html</filename>
    <member kind="function">
      <type>uint32</type>
      <name>ID</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>577e4f4e0d2d36baf4c9a34d699bdb0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static class ServersInfo *</type>
      <name>GetContainerInstance</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>896681e67ca2d528a8f99ae8a2c4882b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sServerName</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>e236a1acdc314f597067538717f2fb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sServerDescription</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>2cd6a4b268a812c0689aa81e55ba5f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nServerIP</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>57da76e972a47734a0099a22bdd76efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>nServerPort</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>b6004c290dca5c9c7542a3b1bd45a0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sServerIP</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>53adb43e653ebdd5aa9df9355f857186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nServerUsers</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>c100755b366e590b721ce5d83498fe6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nServerMaxUsers</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>fc8decae847b0da1b3a6f9d6035df13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nServerFiles</name>
      <anchorfile>classServerEntry.html</anchorfile>
      <anchor>5a97d8beb65aeec9c3d69a4f468b91cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ServerMet_Struct</name>
    <filename>structServerMet__Struct.html</filename>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>dest</name>
      <anchorfile>structServerMet__Struct.html</anchorfile>
      <anchor>e3f0aa4103a0ac4273d30427f5b9eb90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>tagcount</name>
      <anchorfile>structServerMet__Struct.html</anchorfile>
      <anchor>bf55f5f1dc751df943fabe98eff0f810</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ServerPriorityComparator</name>
    <filename>structServerPriorityComparator.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structServerPriorityComparator.html</anchorfile>
      <anchor>68bb88bccf9ba376ae8d5d6af51a99ff</anchor>
      <arglist>(const CServer *lhs, const CServer *rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServersInfo</name>
    <filename>classServersInfo.html</filename>
    <base>ItemsContainer&lt; ServerEntry &gt;</base>
    <member kind="function">
      <type></type>
      <name>ServersInfo</name>
      <anchorfile>classServersInfo.html</anchorfile>
      <anchor>52f11ce89bef2696273b62546ff21c6d</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReQuery</name>
      <anchorfile>classServersInfo.html</anchorfile>
      <anchor>289bb6f931fbe8c247c3d8c61bf00b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ServersInfo *</type>
      <name>m_This</name>
      <anchorfile>classServersInfo.html</anchorfile>
      <anchor>17fe62e0951be466c34158f1e269bf40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>std::set</name>
    <filename>classstd_1_1set.html</filename>
  </compound>
  <compound kind="struct">
    <name>SFileRating</name>
    <filename>structSFileRating.html</filename>
    <member kind="variable">
      <type>wxString</type>
      <name>UserName</name>
      <anchorfile>structSFileRating.html</anchorfile>
      <anchor>e092ec966f3ce7ef05a0d8e8e2cc5bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>FileName</name>
      <anchorfile>structSFileRating.html</anchorfile>
      <anchor>3d0a807790eca84cdf12dac6a106d43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sint16</type>
      <name>Rating</name>
      <anchorfile>structSFileRating.html</anchorfile>
      <anchor>0a943631ee2f7577d01e371beeadf431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>Comment</name>
      <anchorfile>structSFileRating.html</anchorfile>
      <anchor>7bdb1df57f35f5535f3a99c67d29da26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SFindBestPF</name>
    <filename>structSFindBestPF.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structSFindBestPF.html</anchorfile>
      <anchor>1d2ea4ea965e534639b0baecb7b50ec2</anchor>
      <arglist>(CPartFile *file)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_category</name>
      <anchorfile>structSFindBestPF.html</anchorfile>
      <anchor>4c316ccab608db0d0f4314ea9b30cd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CPartFile *</type>
      <name>m_result</name>
      <anchorfile>structSFindBestPF.html</anchorfile>
      <anchor>d1ae7e7261de6c566f8bf2f710143dd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SHA</name>
    <filename>classSHA.html</filename>
    <base>IteratedHashWithStaticTransform</base>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>InitState</name>
      <anchorfile>classSHA.html</anchorfile>
      <anchor>cd7948dbfce9de129ed700a8d9fd10c3</anchor>
      <arglist>(HashWordType *state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Transform</name>
      <anchorfile>classSHA.html</anchorfile>
      <anchor>75c15e92713617986409f99414de6056</anchor>
      <arglist>(word32 *digest, const word32 *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classSHA.html</anchorfile>
      <anchor>3d776445fa47009a51f1092e0d8fb1a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SharedFile</name>
    <filename>classSharedFile.html</filename>
    <member kind="function">
      <type></type>
      <name>SharedFile</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>f26e31cf1184e58d80d64e922f369661</anchor>
      <arglist>(CEC_SharedFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUpdate</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>120a3daa137e30251dbf2bd7863e36dd</anchor>
      <arglist>(CEC_SharedFile_Tag *)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>6ec7b59d46efb0aaf11ee089b7e8fb06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static class SharedFileInfo *</type>
      <name>GetContainerInstance</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>67e1dca760a714fb3202e57a112261f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sFileName</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>09a4dbb7c1cb3e8abc9cc9f9662d0a3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>lFileSize</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>3d1b080e614a5405c9caf8a9e1d7c18a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>nFileTransferred</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>c2a1da9c5b0697eda6454b8281c72fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64</type>
      <name>nFileAllTimeTransferred</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>3dd2e516d45c9162f40ab6c484f0ecb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>nFileRequests</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>65ee2612628ccede58f431ebd483704a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nFileAllTimeRequests</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>b2e38cdfccb0d6ec418fd4dc64d90e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16</type>
      <name>nFileAccepts</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>04e4e6ead87b333d6b7e54ae3a225c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nFileAllTimeAccepts</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>5a8d3027dfd9574f9faeec17bd1b438a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8</type>
      <name>nFilePriority</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>cf097602ff1572f797f2bd4e2b4467d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bFileAutoPriority</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>98466c81f54196263fe29b9cd16616e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sFileHash</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>5b297404ce34febba64c69ea2b56f824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sED2kLink</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>1731aa0ed87dfc6ac240952fabf56670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>nHash</name>
      <anchorfile>classSharedFile.html</anchorfile>
      <anchor>fac87c889e6676545f7274072132c891</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SharedFileInfo</name>
    <filename>classSharedFileInfo.html</filename>
    <base>UpdatableItemsContainer&lt; SharedFile, CEC_SharedFile_Tag, CMD4Hash &gt;</base>
    <member kind="function">
      <type></type>
      <name>SharedFileInfo</name>
      <anchorfile>classSharedFileInfo.html</anchorfile>
      <anchor>775346c17d10e06f39b8d985d0167ceb</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReQuery</name>
      <anchorfile>classSharedFileInfo.html</anchorfile>
      <anchor>825e128f0df4cb2fb967c8579cfacc6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static SharedFileInfo *</type>
      <name>m_This</name>
      <anchorfile>classSharedFileInfo.html</anchorfile>
      <anchor>2417dcacea851a2221495b766ab0bd94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SignatureStandard</name>
    <filename>structSignatureStandard.html</filename>
  </compound>
  <compound kind="class">
    <name>simple_ptr</name>
    <filename>classsimple__ptr.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>simple_ptr</name>
      <anchorfile>classsimple__ptr.html</anchorfile>
      <anchor>9e8a2d379248fd1d76819775dfa496af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~simple_ptr</name>
      <anchorfile>classsimple__ptr.html</anchorfile>
      <anchor>2f64c0e14b1c7a11dd7c6649d95c8cb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>T *</type>
      <name>m_p</name>
      <anchorfile>classsimple__ptr.html</anchorfile>
      <anchor>7c4a48ed4ea8b823d14de63fb6d56993</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimpleKeyedTransformation</name>
    <filename>classSimpleKeyedTransformation.html</filename>
    <templarg>T</templarg>
    <base>SimpleKeyingInterface</base>
    <member kind="function">
      <type>void</type>
      <name>ThrowIfInvalidKeyLength</name>
      <anchorfile>classSimpleKeyedTransformation.html</anchorfile>
      <anchor>d7e67e3becf42b4fc882a695e822a93c</anchor>
      <arglist>(unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimpleKeyingInterface</name>
    <filename>classSimpleKeyingInterface.html</filename>
    <member kind="enumeration">
      <name>IV_Requirement</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>88201c180fbfaa9fef2715252546ad6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURED_IV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>88201c180fbfaa9fef2715252546ad6e333a35061f0263b5e3cd27cbaf27f401</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RANDOM_IV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>88201c180fbfaa9fef2715252546ad6e4520c4379ee3a1aed95a36e2235ba338</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNPREDICTABLE_RANDOM_IV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>88201c180fbfaa9fef2715252546ad6eceff3ad4b12bcb6d7b61a5bd543a815c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERNALLY_GENERATED_IV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>88201c180fbfaa9fef2715252546ad6eb659bf6d2c470c50c14bfbab5b2d45ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_RESYNCHRONIZABLE</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>88201c180fbfaa9fef2715252546ad6ec1d24de3dedd05c28516f452d3ace417</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleKeyingInterface</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>6e0fc6e456477b293902fae10497ba69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>MinKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>9b82732840d76047e326dbccd7d4e935</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>MaxKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>e616f79d6210911261b3045d9167787a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>DefaultKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>f623c16825e4889941232cc06cf59061</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>GetValidKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>4a56d0829660182978bb96d615ccfc6b</anchor>
      <arglist>(unsigned int n) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsValidKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>1c5a91a6dbbef7249cfbd9bc9fac0bf6</anchor>
      <arglist>(unsigned int n) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetKey</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>6609008a5373795ba658e688c16f7d3d</anchor>
      <arglist>(const byte *key, unsigned int length, const NameValuePairs &amp;params=g_nullNameValuePairs)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeyWithRounds</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>08fd06ceabb158451f8b9cb6f03ff314</anchor>
      <arglist>(const byte *key, unsigned int length, int rounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKeyWithIV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>0b929904dc34ca4db476ed62ef08aadb</anchor>
      <arglist>(const byte *key, unsigned int length, const byte *iv)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IV_Requirement</type>
      <name>IVRequirement</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>867b535e5c4a11704d0645272e8b03f9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsResynchronizable</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>d263f4a96fa8b4e7d01fea8ccaae9d3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanUseRandomIVs</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>26680fc02b91534a522b5754cdcdcb46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanUsePredictableIVs</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>307463503d7a4400ffafe03a683e1dbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanUseStructuredIVs</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>9c47590ef06335b34bdaf272fd37ef4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>IVSize</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>c1b39967f6fac32188f9eeea81896c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Resynchronize</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>95a37ca5deadf65a5fcd998f9c6e582e</anchor>
      <arglist>(const byte *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GetNextIV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>a14b0b5f472bbbc9f01f4fe479fb40d3</anchor>
      <arglist>(byte *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ThrowIfInvalidKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>f0920a483b62fafd8470aa9474375c55</anchor>
      <arglist>(const Algorithm &amp;algorithm, unsigned int length)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ThrowIfResynchronizable</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>e60d9774af66fc673fe6139f5880c477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ThrowIfInvalidIV</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>c687add7d0a09c626d85b77714bbd114</anchor>
      <arglist>(const byte *iv)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const byte *</type>
      <name>GetIVAndThrowIfInvalid</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>8d63825e000442603429b6f433b798f5</anchor>
      <arglist>(const NameValuePairs &amp;params)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AssertValidKeyLength</name>
      <anchorfile>classSimpleKeyingInterface.html</anchorfile>
      <anchor>3fa3c5500550dc3d7a8f006b4191c46b</anchor>
      <arglist>(unsigned int length) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimpleKeyingInterfaceImpl</name>
    <filename>classSimpleKeyingInterfaceImpl.html</filename>
    <templarg>BASE</templarg>
    <templarg>INFO</templarg>
    <base>BASE</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>MinKeyLength</name>
      <anchorfile>classSimpleKeyingInterfaceImpl.html</anchorfile>
      <anchor>ea50b40e0aa778a019f206d079783d04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxKeyLength</name>
      <anchorfile>classSimpleKeyingInterfaceImpl.html</anchorfile>
      <anchor>9cd4854076cc2bf1156991af9f0367fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DefaultKeyLength</name>
      <anchorfile>classSimpleKeyingInterfaceImpl.html</anchorfile>
      <anchor>ae0f3e27e697d2bd0da367779b56aabc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>GetValidKeyLength</name>
      <anchorfile>classSimpleKeyingInterfaceImpl.html</anchorfile>
      <anchor>be3a68c00754f56c5b700969a1f4b9ff</anchor>
      <arglist>(unsigned int n) const </arglist>
    </member>
    <member kind="function">
      <type>BASE::IV_Requirement</type>
      <name>IVRequirement</name>
      <anchorfile>classSimpleKeyingInterfaceImpl.html</anchorfile>
      <anchor>705f204d93f1c453f6d9563fbc73e129</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AssertValidKeyLength</name>
      <anchorfile>classSimpleKeyingInterfaceImpl.html</anchorfile>
      <anchor>8c627c7bab729fdae21b6e00d8d1766a</anchor>
      <arglist>(unsigned int length)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimpleProxyFilter</name>
    <filename>classSimpleProxyFilter.html</filename>
    <base>ProxyFilter</base>
    <member kind="function">
      <type></type>
      <name>SimpleProxyFilter</name>
      <anchorfile>classSimpleProxyFilter.html</anchorfile>
      <anchor>8ff6d868e53aa3da69e9190884e4168d</anchor>
      <arglist>(BufferedTransformation *filter, BufferedTransformation *attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FirstPut</name>
      <anchorfile>classSimpleProxyFilter.html</anchorfile>
      <anchor>56dc427b6b79b4464912a2c745ce3049</anchor>
      <arglist>(const byte *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LastPut</name>
      <anchorfile>classSimpleProxyFilter.html</anchorfile>
      <anchor>6202371f979ef0d09581cc76e8bafc22</anchor>
      <arglist>(const byte *, unsigned int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Singleton</name>
    <filename>classSingleton.html</filename>
    <templarg>T</templarg>
    <templarg>F</templarg>
    <templarg>instance</templarg>
    <member kind="function">
      <type></type>
      <name>Singleton</name>
      <anchorfile>classSingleton.html</anchorfile>
      <anchor>864479413a63f1752a16981a4819a123</anchor>
      <arglist>(F objectFactory=F())</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>Ref</name>
      <anchorfile>classSingleton.html</anchorfile>
      <anchor>b7f2a97041b5939110c5bde9cfd41161</anchor>
      <arglist>(...) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sink</name>
    <filename>classSink.html</filename>
    <base>BufferedTransformation</base>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classSink.html</anchorfile>
      <anchor>5b242c1d86b9a482f9e101fc833b394f</anchor>
      <arglist>(BufferedTransformation &amp;, unsigned long &amp;transferBytes, const std::string &amp;=NULL_CHANNEL, bool=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classSink.html</anchorfile>
      <anchor>58ac984ff5fe12badec0be48d6fd9057</anchor>
      <arglist>(BufferedTransformation &amp;, unsigned long &amp;, unsigned long=ULONG_MAX, const std::string &amp;=NULL_CHANNEL, bool=true) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SkinItem</name>
    <filename>structSkinItem.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>found</name>
      <anchorfile>structSkinItem.html</anchorfile>
      <anchor>cf211df267609d45e7cc4a442db945f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>filename</name>
      <anchorfile>structSkinItem.html</anchorfile>
      <anchor>c227e3ef7efe11208610893fa06aae55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SocketSentBytes</name>
    <filename>structSocketSentBytes.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>structSocketSentBytes.html</anchorfile>
      <anchor>04f8c46b428b61964d455c2ddfea3aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>sentBytesStandardPackets</name>
      <anchorfile>structSocketSentBytes.html</anchorfile>
      <anchor>4009382891fcb6772d5137c77da16dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>sentBytesControlPackets</name>
      <anchorfile>structSocketSentBytes.html</anchorfile>
      <anchor>bd8024c613746f3f2a9c134a39f494aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SortElem</name>
    <filename>classSortElem.html</filename>
    <member kind="function">
      <type></type>
      <name>SortElem</name>
      <anchorfile>classSortElem.html</anchorfile>
      <anchor>454c5bee912271285e24889d4ef5a558</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SortElem</name>
      <anchorfile>classSortElem.html</anchorfile>
      <anchor>a8bad0401adcad6b5763d82096866884</anchor>
      <arglist>(PHP_VAR_NODE *p)</arglist>
    </member>
    <member kind="variable">
      <type>PHP_VAR_NODE *</type>
      <name>obj</name>
      <anchorfile>classSortElem.html</anchorfile>
      <anchor>45efadfbd30cdeb11c8f85db2f73df50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static PHP_SYN_FUNC_DECL_NODE *</type>
      <name>callback</name>
      <anchorfile>classSortElem.html</anchorfile>
      <anchor>44d40417101c4f5eb898281c24ef1eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSortElem.html</anchorfile>
      <anchor>347818b312b4f3de91547edaf4b04f8e</anchor>
      <arglist>(const SortElem &amp;o1, const SortElem &amp;o2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Source</name>
    <filename>classSource.html</filename>
    <base>InputRejecting&lt; Filter &gt;</base>
    <member kind="function">
      <type></type>
      <name>Source</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>99d1d02e5d32ea8b21db7158f7cab2a9</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>Pump</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>04a731e827e218f477b561bd6bdba64a</anchor>
      <arglist>(unsigned long pumpMax=ULONG_MAX)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PumpMessages</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>515aad3c590ad819ddaf37c1340d9b31</anchor>
      <arglist>(unsigned int count=UINT_MAX)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PumpAll</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>78f3f645fc7a1af7e7a814d8a7d22a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>Pump2</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>485fee375725c8742122c19515138388</anchor>
      <arglist>(unsigned long &amp;byteCount, bool blocking=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>PumpMessages2</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>4652820a3429c6e2129911916f876e30</anchor>
      <arglist>(unsigned int &amp;messageCount, bool blocking=true)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>PumpAll2</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>9b8f3626057449c714a8602639e79b71</anchor>
      <arglist>(bool blocking=true)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>SourceExhausted</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>960a00f270077b03a538e713a6dfcbf0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SourceInitialize</name>
      <anchorfile>classSource.html</anchorfile>
      <anchor>8b0a1deb121dbb0075f0ef35927ca88f</anchor>
      <arglist>(bool pumpAll, const NameValuePairs &amp;parameters)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SourceTemplate</name>
    <filename>classSourceTemplate.html</filename>
    <templarg>T</templarg>
    <base>Source</base>
    <member kind="function">
      <type></type>
      <name>SourceTemplate</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>91f9615aa2a7ede51f3f64242c398851</anchor>
      <arglist>(BufferedTransformation *attachment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>e0f81a7cfeb0cc6307e141907b62c5a3</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Pump2</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>bdb9ad49b5aaa1a4207c9c4baedad15f</anchor>
      <arglist>(unsigned long &amp;byteCount, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PumpMessages2</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>46164c4855bdb083672df523f093efaa</anchor>
      <arglist>(unsigned int &amp;messageCount, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>PumpAll2</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>d08814c0e1e01416cb385f3e0ed9b4ae</anchor>
      <arglist>(bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SourceExhausted</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>845769da4e2278b91c4cf4dec7333314</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAutoSignalPropagation</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>f7f891477e9fcea66954f848b86de0a2</anchor>
      <arglist>(int propagation)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetAutoSignalPropagation</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>8c975a7317b94785e05a487bbda57b64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>m_store</name>
      <anchorfile>classSourceTemplate.html</anchorfile>
      <anchor>ef06cbeafaa73018609ed8d92262c598</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SrcHash</name>
    <filename>structSrcHash.html</filename>
    <member kind="variable">
      <type>CSourceKeyMap</type>
      <name>m_Source_map</name>
      <anchorfile>structSrcHash.html</anchorfile>
      <anchor>4d83582f7374f6725681171442f0f4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSourceKeyList</type>
      <name>m_Source_list</name>
      <anchorfile>structSrcHash.html</anchorfile>
      <anchor>a7af71d1064acf6979c27acf5de708d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sRECT</name>
    <filename>structsRECT.html</filename>
    <member kind="variable">
      <type>uint32</type>
      <name>left</name>
      <anchorfile>structsRECT.html</anchorfile>
      <anchor>fc7704bee77175a3159911cead8194f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>top</name>
      <anchorfile>structsRECT.html</anchorfile>
      <anchor>84c7bd422198ec675bcc8ec669439f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>right</name>
      <anchorfile>structsRECT.html</anchorfile>
      <anchor>3f1e5b0f3aec1e903e69c4e785b2584a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>bottom</name>
      <anchorfile>structsRECT.html</anchorfile>
      <anchor>2e89e42aab0a476464bc2eefee183176</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SSearchTerm</name>
    <filename>structSSearchTerm.html</filename>
    <member kind="enumeration">
      <name>ESearchTermType</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf39613</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf3961339e142c859ef673309663d881f57d4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf39613a179ba9f269a05d9a7d20fd63e7a2dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAND</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396139bde8b134599c1b4cfb610637d6d0072</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>String</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396133f6b0d3676536a9ec2dbad88512fc86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaTag</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396139d5e7cbcc2dcea9f12514484cb99f9a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpGreaterEqual</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396132a1e283b4418be12d93aac558539b61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpLessEqual</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396137992ac77caebab5fee4a4b592a105082</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpGreater</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396134ea10cd0614db1c8a718948ea6b07a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpLess</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf39613a955f2ecbe5f77de1e565ca3da0e824d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpEqual</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf396135c3cbd21007d962059c0708355e7cc84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpNotEqual</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>7b2564eb4ba6a83e1754e64b8bf39613c7abed7c838dc176c8d890d498bf64a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SSearchTerm</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>845a4f530735ec82373cd1b9e1da7cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SSearchTerm</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>c370f3248685bf6476a223f1bad668c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>enum SSearchTerm::ESearchTermType</type>
      <name>type</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>78a0046846c084b94081d5cb28b48081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CTag</type>
      <name>tag</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>768a96a4049a60ac20360db08d87ff9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxArrayString *</type>
      <name>astr</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>04936f04ac7f5dec185c701bcd59cba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SSearchTerm *</type>
      <name>left</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>375a13733ac0d7fd143e9a92bf3a927e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SSearchTerm *</type>
      <name>right</name>
      <anchorfile>structSSearchTerm.html</anchorfile>
      <anchor>84262b72758ae58c60439726297dd68a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Store</name>
    <filename>classStore.html</filename>
    <base>AutoSignaling&lt; InputRejecting&lt; BufferedTransformation &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>Store</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>5f58eadcb7385d5a5aa6830daef84f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>47bfecef2abe22b090935cfab6f19f89</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>NumberOfMessages</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>3a1b903a552e02b2582c08ad8e6ee693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNextMessage</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>5f578b4a2da5371a8a4b80a038a2d5ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>CopyMessagesTo</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>e5d85b56b9a70e4b2da147fa74cc5557</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned int count=UINT_MAX, const std::string &amp;channel=NULL_CHANNEL) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>StoreInitialize</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>2eeb9bf1ab754c721d9417f9b5dd2679</anchor>
      <arglist>(const NameValuePairs &amp;parameters)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_messageEnd</name>
      <anchorfile>classStore.html</anchorfile>
      <anchor>0a0e96651b3887bb4afafc4a69890d72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StreamTransformation</name>
    <filename>classStreamTransformation.html</filename>
    <base>Algorithm</base>
    <member kind="function">
      <type>StreamTransformation &amp;</type>
      <name>Ref</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>8c9304fff5af593ee68d3cf0d33c06e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>MandatoryBlockSize</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>3638ff7580edb42a5b1c367e53a7436f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>OptimalBlockSize</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>e79457bcbafc980672d88ee54ed4ac66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>GetOptimalBlockSizeUsed</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>94b4e1d14edde1fdde38361bce9ca4c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>OptimalDataAlignment</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>5338c5bc9332b6578dfb6022c304f6fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ProcessData</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>3ce649f4ff24bdc29750602bacb3a950</anchor>
      <arglist>(byte *outString, const byte *inString, unsigned int length)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ProcessLastBlock</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>d5fa0469eb57614980c913c4934235d2</anchor>
      <arglist>(byte *outString, const byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>MinLastBlockSize</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>2eb96f3a8fae23cb9f85acb288e3bcbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessString</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>b718c381b9f18ca9170963038d0ae7d5</anchor>
      <arglist>(byte *inoutString, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessString</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>9cca0d8fcb97d6f56ed9a5558888adb5</anchor>
      <arglist>(byte *outString, const byte *inString, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>ProcessByte</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>71a9bd33526fc7f227050075e7a78106</anchor>
      <arglist>(byte input)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsRandomAccess</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>d7286fd9a993de0a147b0c20f660bfa5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Seek</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>ace3fe119d2f5552dc2597b977affe80</anchor>
      <arglist>(lword)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsSelfInverting</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>583bc0edbd8a11c91da53395298c50de</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsForwardTransformation</name>
      <anchorfile>classStreamTransformation.html</anchorfile>
      <anchor>3244f76963a12a5ab6112326c7af9724</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringSinkTemplate</name>
    <filename>classStringSinkTemplate.html</filename>
    <templarg>T</templarg>
    <base>Bufferless&lt; Sink &gt;</base>
    <member kind="typedef">
      <type>T::traits_type::char_type</type>
      <name>char_type</name>
      <anchorfile>classStringSinkTemplate.html</anchorfile>
      <anchor>6b87d8a0aab9933148686c9e846ef17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringSinkTemplate</name>
      <anchorfile>classStringSinkTemplate.html</anchorfile>
      <anchor>7f718529861bfc5c77e3f6f230026c07</anchor>
      <arglist>(T &amp;output)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsolatedInitialize</name>
      <anchorfile>classStringSinkTemplate.html</anchorfile>
      <anchor>ca537f96a83a3006a32a4848af2f47f5</anchor>
      <arglist>(const NameValuePairs &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>Put2</name>
      <anchorfile>classStringSinkTemplate.html</anchorfile>
      <anchor>fb8165396f6249650ea228ac0d8b699b</anchor>
      <arglist>(const byte *begin, unsigned int length, int messageEnd, bool blocking)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringSource</name>
    <filename>classStringSource.html</filename>
    <base>SourceTemplate&lt; StringStore &gt;</base>
    <member kind="function">
      <type></type>
      <name>StringSource</name>
      <anchorfile>classStringSource.html</anchorfile>
      <anchor>0c56127a806471ead64e2b4e8956147f</anchor>
      <arglist>(BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringSource</name>
      <anchorfile>classStringSource.html</anchorfile>
      <anchor>82dbf0b3d0b311f090344a88a86e010d</anchor>
      <arglist>(const char *string, bool pumpAll, BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringSource</name>
      <anchorfile>classStringSource.html</anchorfile>
      <anchor>d99bed7ce4299eb5308217982c77b61e</anchor>
      <arglist>(const byte *string, unsigned int length, bool pumpAll, BufferedTransformation *attachment=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringSource</name>
      <anchorfile>classStringSource.html</anchorfile>
      <anchor>331ddfd760abc69c72bd29b8940cd68f</anchor>
      <arglist>(const std::string &amp;string, bool pumpAll, BufferedTransformation *attachment=NULL)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringStore</name>
    <filename>classStringStore.html</filename>
    <base>Store</base>
    <member kind="function">
      <type></type>
      <name>StringStore</name>
      <anchorfile>classStringStore.html</anchorfile>
      <anchor>a35e0ca808e5b5c5f433e95fe3a9e371</anchor>
      <arglist>(const char *string=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringStore</name>
      <anchorfile>classStringStore.html</anchorfile>
      <anchor>a01bcf03ec2f9227b7488a3ce62d764e</anchor>
      <arglist>(const byte *string, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringStore</name>
      <anchorfile>classStringStore.html</anchorfile>
      <anchor>530720124e95542bee27c6aa8cb0f201</anchor>
      <arglist>(const T &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>TransferTo2</name>
      <anchorfile>classStringStore.html</anchorfile>
      <anchor>0a2cdaf7bc4efcf35aa2a1044540ccdd</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;transferBytes, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>CRYPTOPP_DLL unsigned int</type>
      <name>CopyRangeTo2</name>
      <anchorfile>classStringStore.html</anchorfile>
      <anchor>6269740e3f1e22bef8ce4ff8dec5ca25</anchor>
      <arglist>(BufferedTransformation &amp;target, unsigned long &amp;begin, unsigned long end=ULONG_MAX, const std::string &amp;channel=NULL_CHANNEL, bool blocking=true) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SymmetricCipherDocumentation</name>
    <filename>structSymmetricCipherDocumentation.html</filename>
    <member kind="typedef">
      <type>SymmetricCipher</type>
      <name>Encryption</name>
      <anchorfile>structSymmetricCipherDocumentation.html</anchorfile>
      <anchor>44854216f0ebd272eddfd7f3877ecb34</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SymmetricCipher</type>
      <name>Decryption</name>
      <anchorfile>structSymmetricCipherDocumentation.html</anchorfile>
      <anchor>0d5bbe79fd8fb71c0f857bb97b0d1f2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>T_Base</name>
    <filename>classT__Base.html</filename>
  </compound>
  <compound kind="struct">
    <name>TagList</name>
    <filename>structTagList.html</filename>
    <base>std::list</base>
    <member kind="function">
      <type></type>
      <name>TagList</name>
      <anchorfile>structTagList.html</anchorfile>
      <anchor>260e450e6e9501316c0a536d32590850</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TagList</name>
      <anchorfile>structTagList.html</anchorfile>
      <anchor>1057ccdc6a8532c06a629a813435d109</anchor>
      <arglist>(const CFileDataIO &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteTo</name>
      <anchorfile>structTagList.html</anchorfile>
      <anchor>7bc600e9e9e339aa42a2f27e895313d1</anchor>
      <arglist>(CFileDataIO *file) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTags</name>
      <anchorfile>structTagList.html</anchorfile>
      <anchor>342108b3287f997f8a4e7ae3dc88ed33</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>test</name>
    <filename>classtest.html</filename>
    <member kind="function">
      <type></type>
      <name>test</name>
      <anchorfile>classtest.html</anchorfile>
      <anchor>b42d5ece712d716b04cb3f686f297a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classtest.html</anchorfile>
      <anchor>5eb123a59aef45aed4904ed815bb4889</anchor>
      <arglist>(String args[])</arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static String</type>
      <name>tcpKeyFileName</name>
      <anchorfile>classtest.html</anchorfile>
      <anchor>3ab05a91e3a747760806aac22cd67154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static String</type>
      <name>udpKeyFileName</name>
      <anchorfile>classtest.html</anchorfile>
      <anchor>f52993d1b3b18c06bdc951c25a4b0867</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static I2PSession</type>
      <name>_session</name>
      <anchorfile>classtest.html</anchorfile>
      <anchor>51da999d59ad525574f4e39a94450038</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>test4j</name>
    <filename>classtest4j.html</filename>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classtest4j.html</anchorfile>
      <anchor>90629ac33e8bc2883b7ff42e2aa01948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test4j</name>
      <anchorfile>classtest4j.html</anchorfile>
      <anchor>1b12c385e9c0a9db57b303320e916472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Router</type>
      <name>routeur</name>
      <anchorfile>classtest4j.html</anchorfile>
      <anchor>71a93f32688b7604465999f7535d830e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>m_order</name>
      <anchorfile>classtest4j.html</anchorfile>
      <anchor>043f2753f9098bb4df1b391a61b7ae9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>test5j</name>
    <filename>classtest5j.html</filename>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classtest5j.html</anchorfile>
      <anchor>7378e213070e498be9404ec33a74b593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>test5j</name>
      <anchorfile>classtest5j.html</anchorfile>
      <anchor>10d7e915e9662ca1df4fa62f9ec709e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Router</type>
      <name>routeur</name>
      <anchorfile>classtest5j.html</anchorfile>
      <anchor>93430a12a139177bff5c7af5cdaefcde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>m_order</name>
      <anchorfile>classtest5j.html</anchorfile>
      <anchor>7b2d7ddb86e4ddad6228e85679aaee98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Testeur</name>
    <filename>classTesteur.html</filename>
    <base>wxEvtHandler</base>
    <member kind="function">
      <type></type>
      <name>Testeur</name>
      <anchorfile>classTesteur.html</anchorfile>
      <anchor>6f5da05add4325c3178bd38917f94b0a</anchor>
      <arglist>(MyFrame *frame)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Testeur</name>
      <anchorfile>classTesteur.html</anchorfile>
      <anchor>b0805be66745a715e805e2566d1fb89d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnTest</name>
      <anchorfile>classTesteur.html</anchorfile>
      <anchor>cb3f3b8c2e3ef2b3a1391de4b279f328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnServerEvent</name>
      <anchorfile>classTesteur.html</anchorfile>
      <anchor>be6a8317908af6767685b0bd133b5a35</anchor>
      <arglist>(wxSocketEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnSocketEvent</name>
      <anchorfile>classTesteur.html</anchorfile>
      <anchor>1b83b68a01e328a6e50ba54975ab121f</anchor>
      <arglist>(wxSocketEvent &amp;event)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_numClients</name>
      <anchorfile>classTesteur.html</anchorfile>
      <anchor>6140a69a7c328f3a0b077b5cb36a7daa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_Base</name>
    <filename>classTF__Base.html</filename>
    <templarg>TFI</templarg>
    <templarg>MEI</templarg>
    <member kind="typedef" protection="protected">
      <type>TFI</type>
      <name>TrapdoorFunctionInterface</name>
      <anchorfile>classTF__Base.html</anchorfile>
      <anchor>33e2d6c0fbb715a5255edd5e84a849fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>MEI</type>
      <name>MessageEncodingInterface</name>
      <anchorfile>classTF__Base.html</anchorfile>
      <anchor>06b4d20aa32c616a1d0d2b8bee909436</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~TF_Base</name>
      <anchorfile>classTF__Base.html</anchorfile>
      <anchor>6bdd507ce75e96403f25755a222b42db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const TrapdoorFunctionBounds &amp;</type>
      <name>GetTrapdoorFunctionBounds</name>
      <anchorfile>classTF__Base.html</anchorfile>
      <anchor>91a0b93853efa8d2dbb54a5473adc1e9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const TrapdoorFunctionInterface &amp;</type>
      <name>GetTrapdoorFunctionInterface</name>
      <anchorfile>classTF__Base.html</anchorfile>
      <anchor>b0343355a27d810970828bc26bf80682</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual const MessageEncodingInterface &amp;</type>
      <name>GetMessageEncodingInterface</name>
      <anchorfile>classTF__Base.html</anchorfile>
      <anchor>4cf32c7b5ac95767059781c22311d13a</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TF_CryptoSchemeOptions</name>
    <filename>structTF__CryptoSchemeOptions.html</filename>
    <templarg>T1</templarg>
    <templarg>T2</templarg>
    <templarg>T3</templarg>
    <member kind="typedef">
      <type>T1</type>
      <name>AlgorithmInfo</name>
      <anchorfile>structTF__CryptoSchemeOptions.html</anchorfile>
      <anchor>45271ca0b9eb6eb74e575799c001120c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T2</type>
      <name>Keys</name>
      <anchorfile>structTF__CryptoSchemeOptions.html</anchorfile>
      <anchor>a8e23577d1b6915ce323c01e633ee085</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Keys::PrivateKey</type>
      <name>PrivateKey</name>
      <anchorfile>structTF__CryptoSchemeOptions.html</anchorfile>
      <anchor>6b22527dbbff834c230d3525621dd92b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Keys::PublicKey</type>
      <name>PublicKey</name>
      <anchorfile>structTF__CryptoSchemeOptions.html</anchorfile>
      <anchor>eaee2863edb847236270f02ac101bd8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T3</type>
      <name>MessageEncodingMethod</name>
      <anchorfile>structTF__CryptoSchemeOptions.html</anchorfile>
      <anchor>22cd3ac40209580e2437a104cb4d948b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_ObjectImpl</name>
    <filename>classTF__ObjectImpl.html</filename>
    <templarg>BASE</templarg>
    <templarg>SCHEME_OPTIONS</templarg>
    <templarg>KEY_COPIER</templarg>
    <base>TF_ObjectImplBase&lt; TwoBases&lt; BASE, KEY_COPIER &gt;, SCHEME_OPTIONS, KEY_COPIER::KeyClass &gt;</base>
    <member kind="typedef">
      <type>KEY_COPIER::KeyClass</type>
      <name>KeyClass</name>
      <anchorfile>classTF__ObjectImpl.html</anchorfile>
      <anchor>084f4843d53591e9ef02150e63f95bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const KeyClass &amp;</type>
      <name>GetKey</name>
      <anchorfile>classTF__ObjectImpl.html</anchorfile>
      <anchor>1630a269d62dff65564af8a44483892a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KeyClass &amp;</type>
      <name>AccessKey</name>
      <anchorfile>classTF__ObjectImpl.html</anchorfile>
      <anchor>2526be08235d580ccad27e28d67c39fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyKeyInto</name>
      <anchorfile>classTF__ObjectImpl.html</anchorfile>
      <anchor>8a38eb4a6af562c316b5efc129e16273</anchor>
      <arglist>(typename SCHEME_OPTIONS::PrivateKey &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyKeyInto</name>
      <anchorfile>classTF__ObjectImpl.html</anchorfile>
      <anchor>3d13fd11c72b0514f41d12b553e82823</anchor>
      <arglist>(typename SCHEME_OPTIONS::PublicKey &amp;key) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_ObjectImplBase</name>
    <filename>classTF__ObjectImplBase.html</filename>
    <templarg>BASE</templarg>
    <templarg>SCHEME_OPTIONS</templarg>
    <templarg>KEY</templarg>
    <base>AlgorithmImpl&lt; BASE, SCHEME_OPTIONS::AlgorithmInfo &gt;</base>
    <member kind="typedef">
      <type>SCHEME_OPTIONS</type>
      <name>SchemeOptions</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>c390c297a0a05fcfc6fa90a9b21086d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>KEY</type>
      <name>KeyClass</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>2998ca115f0bf49e40ba019be7b957e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PublicKey &amp;</type>
      <name>AccessPublicKey</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>f9bc9161e7f6a9950bf5c28b8c5a4b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PublicKey &amp;</type>
      <name>GetPublicKey</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>9fcccd5314768b440e7f8a1740049b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PrivateKey &amp;</type>
      <name>AccessPrivateKey</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>2ca155893464660edccee57408e0b86c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PrivateKey &amp;</type>
      <name>GetPrivateKey</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>bd01846fd98f27444793000a9a36ef2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const KeyClass &amp;</type>
      <name>GetKey</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>2e1e1fcd508d0a273e2f3b273e5569f4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual KeyClass &amp;</type>
      <name>AccessKey</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>21ce92ff7741209c06ddebaed5a5a47d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const KeyClass &amp;</type>
      <name>GetTrapdoorFunction</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>1387bff0407fa1a15230660bafd19cc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PK_MessageAccumulator *</type>
      <name>NewSignatureAccumulator</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>2e831dd692a8001813dafc24362be49d</anchor>
      <arglist>(RandomNumberGenerator &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>PK_MessageAccumulator *</type>
      <name>NewVerificationAccumulator</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>85f0572adce876409f260de34ff62d56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const BASE::MessageEncodingInterface &amp;</type>
      <name>GetMessageEncodingInterface</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>497cc109ccf9dcc5b15c9fafc0d5bbe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const TrapdoorFunctionBounds &amp;</type>
      <name>GetTrapdoorFunctionBounds</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>a3b0e95afa07bf7ac1f95376570978a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const BASE::TrapdoorFunctionInterface &amp;</type>
      <name>GetTrapdoorFunctionInterface</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>e066b6e2da22f581bab632afb03f7075</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>HashIdentifier</type>
      <name>GetHashIdentifier</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>a61e843cae67ed088e44b22da80e29bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>GetDigestSize</name>
      <anchorfile>classTF__ObjectImplBase.html</anchorfile>
      <anchor>19898a08614c08505c89604ae73fa7cb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_SignatureSchemeBase</name>
    <filename>classTF__SignatureSchemeBase.html</filename>
    <templarg>INTERFACE</templarg>
    <templarg>BASE</templarg>
    <base>INTERFACE</base>
    <base protection="protected">BASE</base>
    <member kind="function">
      <type>unsigned int</type>
      <name>SignatureLength</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>eda92f60936e1fc33d783e53117a57af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxRecoverableLength</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>f96f19f35ce135464a995a918b210bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>MaxRecoverableLengthFromSignatureLength</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>f9280b27830a0ecd9ea39b256cfb71f9</anchor>
      <arglist>(unsigned int) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsProbabilistic</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>be87eb9e2ac692612310e4c47f482f90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AllowNonrecoverablePart</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>2885774c3257b611275f94e2343593d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RecoverablePartFirst</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>62782b021b7387ec542e85efb69bd043</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>MessageRepresentativeLength</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>51306414a49f59834134ea2e069ee70f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>MessageRepresentativeBitLength</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>13988d5a170679290ec479ca9e4693a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual HashIdentifier</type>
      <name>GetHashIdentifier</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>0463482e6f65364c8ee948269802573a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>GetDigestSize</name>
      <anchorfile>classTF__SignatureSchemeBase.html</anchorfile>
      <anchor>e001e479257ba55a2fca6458bc6590dc</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TF_SignatureSchemeOptions</name>
    <filename>structTF__SignatureSchemeOptions.html</filename>
    <templarg>T1</templarg>
    <templarg>T2</templarg>
    <templarg>T3</templarg>
    <templarg>T4</templarg>
    <base>TF_CryptoSchemeOptions</base>
    <member kind="typedef">
      <type>T4</type>
      <name>HashFunction</name>
      <anchorfile>structTF__SignatureSchemeOptions.html</anchorfile>
      <anchor>40b683fbd46e943488506ce36ab46f5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_SignerBase</name>
    <filename>classTF__SignerBase.html</filename>
    <base>TF_SignatureSchemeBase&lt; PK_Signer, TF_Base&lt; RandomizedTrapdoorFunctionInverse, PK_SignatureMessageEncodingMethod &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>InputRecoverableMessage</name>
      <anchorfile>classTF__SignerBase.html</anchorfile>
      <anchor>d52590cf9d3b7a4dc7fc411c0c51a314</anchor>
      <arglist>(PK_MessageAccumulator &amp;messageAccumulator, const byte *recoverableMessage, unsigned int recoverableMessageLength) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>SignAndRestart</name>
      <anchorfile>classTF__SignerBase.html</anchorfile>
      <anchor>1d85d9a0effd7deb2898429ca39607f9</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, PK_MessageAccumulator &amp;messageAccumulator, byte *signature, bool restart=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_SignerImpl</name>
    <filename>classTF__SignerImpl.html</filename>
    <templarg>SCHEME_OPTIONS</templarg>
    <base>TF_ObjectImpl&lt; TF_SignerBase, SCHEME_OPTIONS, PrivateKeyCopier&lt; SCHEME_OPTIONS::Keys &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>TF_SS</name>
    <filename>classTF__SS.html</filename>
    <templarg>STANDARD</templarg>
    <templarg>H</templarg>
    <templarg>KEYS</templarg>
    <templarg>ALG_INFO</templarg>
    <base>KEYS</base>
    <member kind="typedef">
      <type>STANDARD</type>
      <name>Standard</name>
      <anchorfile>classTF__SS.html</anchorfile>
      <anchor>dfd71a78de97218c16cc74578334345b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Standard::SignatureMessageEncodingMethod</type>
      <name>MessageEncodingMethod</name>
      <anchorfile>classTF__SS.html</anchorfile>
      <anchor>cb837b4662f97886a2d0695a1e0bd329</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TF_SignatureSchemeOptions&lt; ALG_INFO, KEYS, MessageEncodingMethod, H &gt;</type>
      <name>SchemeOptions</name>
      <anchorfile>classTF__SS.html</anchorfile>
      <anchor>af8a088a3be06f7edd16f51b63657df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PK_FinalTemplate&lt; TF_SignerImpl&lt; SchemeOptions &gt; &gt;</type>
      <name>Signer</name>
      <anchorfile>classTF__SS.html</anchorfile>
      <anchor>cb65955eaffe7bf712815bcc0096e959</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PK_FinalTemplate&lt; TF_VerifierImpl&lt; SchemeOptions &gt; &gt;</type>
      <name>Verifier</name>
      <anchorfile>classTF__SS.html</anchorfile>
      <anchor>65546b9070fbf3960015932defd8b333</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>StaticAlgorithmName</name>
      <anchorfile>classTF__SS.html</anchorfile>
      <anchor>accdff34ebbfddf0c1b9c0d08761a91c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_VerifierBase</name>
    <filename>classTF__VerifierBase.html</filename>
    <base>TF_SignatureSchemeBase&lt; PK_Verifier, TF_Base&lt; TrapdoorFunction, PK_SignatureMessageEncodingMethod &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>InputSignature</name>
      <anchorfile>classTF__VerifierBase.html</anchorfile>
      <anchor>b89d1de48f73ffe9fa962780cbb8b03c</anchor>
      <arglist>(PK_MessageAccumulator &amp;messageAccumulator, const byte *signature, unsigned int signatureLength) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyAndRestart</name>
      <anchorfile>classTF__VerifierBase.html</anchorfile>
      <anchor>de187ebe9057cd724638d0d4ee45fae2</anchor>
      <arglist>(PK_MessageAccumulator &amp;messageAccumulator) const </arglist>
    </member>
    <member kind="function">
      <type>DecodingResult</type>
      <name>RecoverAndRestart</name>
      <anchorfile>classTF__VerifierBase.html</anchorfile>
      <anchor>73a03f321bf157096c2efd67d471c19f</anchor>
      <arglist>(byte *recoveredMessage, PK_MessageAccumulator &amp;recoveryAccumulator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TF_VerifierImpl</name>
    <filename>classTF__VerifierImpl.html</filename>
    <templarg>SCHEME_OPTIONS</templarg>
    <base>TF_ObjectImpl&lt; TF_VerifierBase, SCHEME_OPTIONS, PublicKeyCopier&lt; SCHEME_OPTIONS::Keys &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>ThreadData</name>
    <filename>structThreadData.html</filename>
    <member kind="variable">
      <type>CParsedUrl</type>
      <name>parsedURL</name>
      <anchorfile>structThreadData.html</anchorfile>
      <anchor>e9e925c252ca28b01556cc95a4214d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sURL</name>
      <anchorfile>structThreadData.html</anchorfile>
      <anchor>f7ce59c83f8ecaf4b8af98f93f7f50b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SessionID</name>
      <anchorfile>structThreadData.html</anchorfile>
      <anchor>5df72c93068632cb383a1ea67fcffcdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CWebSocket *</type>
      <name>pSocket</name>
      <anchorfile>structThreadData.html</anchorfile>
      <anchor>0fa832893927dcffabb224e4d77b564b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThrottledControlSocket</name>
    <filename>classThrottledControlSocket.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual SocketSentBytes</type>
      <name>SendControlData</name>
      <anchorfile>classThrottledControlSocket.html</anchorfile>
      <anchor>e526b48d701a4a0db263d1eb18f83b34</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 minFragSize)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThrottledFileSocket</name>
    <filename>classThrottledFileSocket.html</filename>
    <base>ThrottledControlSocket</base>
    <member kind="function" virtualness="pure">
      <type>virtual SocketSentBytes</type>
      <name>SendFileAndControlData</name>
      <anchorfile>classThrottledFileSocket.html</anchorfile>
      <anchor>9dcda7a1f43f9a3ce22127dc4a0e4bbc</anchor>
      <arglist>(uint32 maxNumberOfBytesToSend, uint32 minFragSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32</type>
      <name>GetLastCalledSend</name>
      <anchorfile>classThrottledFileSocket.html</anchorfile>
      <anchor>d801415745996c21fbf83a323eb370c9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint32</type>
      <name>GetNeededBytes</name>
      <anchorfile>classThrottledFileSocket.html</anchorfile>
      <anchor>3bb3aabfacddc52f9183c89b116208c9</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TransferredData</name>
    <filename>structTransferredData.html</filename>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>datalen</name>
      <anchorfile>structTransferredData.html</anchorfile>
      <anchor>772a362c90d96b093120b0e7dca76bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>timestamp</name>
      <anchorfile>structTransferredData.html</anchorfile>
      <anchor>dc6adca44f223099cae0c8dc54cab9b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrapdoorFunction</name>
    <filename>classTrapdoorFunction.html</filename>
    <base>RandomizedTrapdoorFunction</base>
    <member kind="function">
      <type>Integer</type>
      <name>ApplyRandomizedFunction</name>
      <anchorfile>classTrapdoorFunction.html</anchorfile>
      <anchor>96fb3b113095a027a726a66af4fa2b49</anchor>
      <arglist>(RandomNumberGenerator &amp;, const Integer &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRandomized</name>
      <anchorfile>classTrapdoorFunction.html</anchorfile>
      <anchor>fe7fdc08ef27054d7689423600a588af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Integer</type>
      <name>ApplyFunction</name>
      <anchorfile>classTrapdoorFunction.html</anchorfile>
      <anchor>06f1c5450f47d1de7143619b42f5167b</anchor>
      <arglist>(const Integer &amp;x) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrapdoorFunctionBounds</name>
    <filename>classTrapdoorFunctionBounds.html</filename>
  </compound>
  <compound kind="class">
    <name>TrapdoorFunctionInverse</name>
    <filename>classTrapdoorFunctionInverse.html</filename>
    <base>RandomizedTrapdoorFunctionInverse</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TrapdoorFunctionInverse</name>
      <anchorfile>classTrapdoorFunctionInverse.html</anchorfile>
      <anchor>ca0073a6f99b0bed771eef5a4a83a4e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>CalculateRandomizedInverse</name>
      <anchorfile>classTrapdoorFunctionInverse.html</anchorfile>
      <anchor>676ce8748a1fbdde3cdeaa9d5e2a1c41</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRandomized</name>
      <anchorfile>classTrapdoorFunctionInverse.html</anchorfile>
      <anchor>4813fed647aae710c3ab8aea54d391ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Integer</type>
      <name>CalculateInverse</name>
      <anchorfile>classTrapdoorFunctionInverse.html</anchorfile>
      <anchor>cd12caa3b27c018a85967ae7664cc920</anchor>
      <arglist>(RandomNumberGenerator &amp;rng, const Integer &amp;x) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoBases</name>
    <filename>classTwoBases.html</filename>
    <templarg>BASE1</templarg>
    <templarg>BASE2</templarg>
    <base>BASE1</base>
    <base>BASE2</base>
  </compound>
  <compound kind="struct">
    <name>UDP_Header_Struct</name>
    <filename>structUDP__Header__Struct.html</filename>
    <member kind="variable">
      <type>int8</type>
      <name>eDonkeyID</name>
      <anchorfile>structUDP__Header__Struct.html</anchorfile>
      <anchor>edae8509208cc0eeab5f846319630a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8</type>
      <name>command</name>
      <anchorfile>structUDP__Header__Struct.html</anchorfile>
      <anchor>47cd99813477624c1cc1ea40ee31bbe1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Unflushable</name>
    <filename>classUnflushable.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>bool</type>
      <name>Flush</name>
      <anchorfile>classUnflushable.html</anchorfile>
      <anchor>e5070b5e2895ca6cf458ff7ccef9f1e1</anchor>
      <arglist>(bool completeFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsolatedFlush</name>
      <anchorfile>classUnflushable.html</anchorfile>
      <anchor>85a92b66530b02ff823feed8a6bc448a</anchor>
      <arglist>(bool, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChannelFlush</name>
      <anchorfile>classUnflushable.html</anchorfile>
      <anchor>bc1b73420d35a30a6e227b32be4d7981</anchor>
      <arglist>(const std::string &amp;channel, bool hardFlush, int propagation=-1, bool blocking=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>InputBufferIsEmpty</name>
      <anchorfile>classUnflushable.html</anchorfile>
      <anchor>c480dd22bc6aab488a0953cb052940d8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UpdatableItemsContainer</name>
    <filename>classUpdatableItemsContainer.html</filename>
    <templarg>T</templarg>
    <templarg>G</templarg>
    <templarg>I</templarg>
    <base>ItemsContainer</base>
    <member kind="function">
      <type></type>
      <name>UpdatableItemsContainer</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>c0c38ced73244f82c6680666bbd2ced0</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>AddItem</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>a91a0316d7ca2263d5266792ce916f5d</anchor>
      <arglist>(T &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>GetByID</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>b3cb7f7461a6f898ab42251286e8634c</anchor>
      <arglist>(I id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessUpdate</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>6e1ff374b98ec161361c812ce473855b</anchor>
      <arglist>(const CECPacket *reply, CECPacket *full_req, int req_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProcessFull</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>9eaebcc34c70df18023ac44e8fac1945</anchor>
      <arglist>(const CECPacket *reply)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DoRequery</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>13cc960748bdffe071ef05e569fc9670</anchor>
      <arglist>(int cmd, int tag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ItemDeleted</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>e1b3ed2fa2605f9be634a097efb8ba43</anchor>
      <arglist>(T *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ItemInserted</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>d106e2fcdf4961864c33e8aa28916cf3</anchor>
      <arglist>(T *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; I, T * &gt;</type>
      <name>m_items_hash</name>
      <anchorfile>classUpdatableItemsContainer.html</anchorfile>
      <anchor>b60f16af6535d9a4d373e904baad47a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UpdateInfo</name>
    <filename>structUpdateInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>timestamp</name>
      <anchorfile>structUpdateInfo.html</anchorfile>
      <anchor>843d98fbc6edf43ca9977492226e0d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>downloads</name>
      <anchorfile>structUpdateInfo.html</anchorfile>
      <anchor>f4f673759735c874f1c7018e260f2d2f</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>uploads</name>
      <anchorfile>structUpdateInfo.html</anchorfile>
      <anchor>b729dd6d1ade5ebe7dbe58c6b4e2c9dd</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>connections</name>
      <anchorfile>structUpdateInfo.html</anchorfile>
      <anchor>a5c6e123af2d31d6524210ca8a4b9157</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>kadnodes</name>
      <anchorfile>structUpdateInfo.html</anchorfile>
      <anchor>5ca9aee973f50cdaa76d80f6fa2149a8</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UploadBandwidthThrottler</name>
    <filename>classUploadBandwidthThrottler.html</filename>
    <base>wxThread</base>
    <member kind="function">
      <type></type>
      <name>UploadBandwidthThrottler</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>667521c30c433daaf47bd2ad8dea9a88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UploadBandwidthThrottler</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>a1793f5950342873537b1c95a76e87f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetNumberOfSentBytesSinceLastCallAndReset</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>5266715b61436eca207a2f4b99c98bcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetNumberOfSentBytesOverheadSinceLastCallAndReset</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>1315a85eea9d3bd820eb7124f7d0ee0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetHighestNumberOfFullyActivatedSlotsSinceLastCallAndReset</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>07269aaae53a4c1428e89c1b7a1f8a06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetStandardListSize</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>cf920cb87ab8ec6de29ffc8ca3348aff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddToStandardList</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>4543817d0ffdf9160e5bfebd39253f96</anchor>
      <arglist>(uint32 index, ThrottledFileSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveFromStandardList</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>0cdc4b9fc3a72811f292fa115ff74274</anchor>
      <arglist>(ThrottledFileSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueForSendingControlPacket</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>cfaa5803854e19e185f9408dce1707c6</anchor>
      <arglist>(ThrottledControlSocket *socket, bool hasSent=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFromAllQueues</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>328a79e551604bb9b8b3c6503d953010</anchor>
      <arglist>(ThrottledControlSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveFromAllQueues</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>6c872c671a3584dd29909cb3f48a8867</anchor>
      <arglist>(ThrottledFileSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndThread</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>e3a606235cabf197c6e7d0def8391000</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static uint16</type>
      <name>s_maxupload</name>
      <anchorfile>classUploadBandwidthThrottler.html</anchorfile>
      <anchor>bd9f7e2c397debc443210d1cf97432e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UploadFile</name>
    <filename>classUploadFile.html</filename>
    <member kind="function">
      <type></type>
      <name>UploadFile</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>d49b7b74bdc1d8892fb5aaed78f16e9a</anchor>
      <arglist>(CEC_UpDownClient_Tag *tag)</arglist>
    </member>
    <member kind="function">
      <type>CMD4Hash</type>
      <name>ID</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>fa1f891f98774719dd07492e3e6f6f3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static class UploadsInfo *</type>
      <name>GetContainerInstance</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>5d8d843b4df9f726303f21242e883637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>sUserName</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>af17c1a5376869174fcf95f006306520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nTransferredUp</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>cb7ad30d28cb728b3f3478d01a93f5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nTransferredDown</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>96343ba93a78ca0270bb0f3ad0ad9605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>nSpeed</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>eadb3a21f29468440adb303fd6a7bf06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMD4Hash</type>
      <name>nHash</name>
      <anchorfile>classUploadFile.html</anchorfile>
      <anchor>50bdfa872d8866cba5158a1f634832a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UploadsInfo</name>
    <filename>classUploadsInfo.html</filename>
    <base>ItemsContainer&lt; UploadFile &gt;</base>
    <member kind="function">
      <type></type>
      <name>UploadsInfo</name>
      <anchorfile>classUploadsInfo.html</anchorfile>
      <anchor>f5ee6a9c8555191b395a86042d799f7b</anchor>
      <arglist>(CimulewebApp *webApp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ReQuery</name>
      <anchorfile>classUploadsInfo.html</anchorfile>
      <anchor>2bffe7b47657d335d136cbcc14a7b4fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static UploadsInfo *</type>
      <name>m_This</name>
      <anchorfile>classUploadsInfo.html</anchorfile>
      <anchor>a1346c4e89701ecc85e08f27cf4ce830</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>utf8_table</name>
    <filename>structutf8__table.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>cmask</name>
      <anchorfile>structutf8__table.html</anchorfile>
      <anchor>3b5a2ab01b7cec92681a6067e1fec202</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cval</name>
      <anchorfile>structutf8__table.html</anchorfile>
      <anchor>c16a9da1e7aca56a8b0f68cda20d7d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>shift</name>
      <anchorfile>structutf8__table.html</anchorfile>
      <anchor>e8ec16819170e356a0d1a989560084e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>lmask</name>
      <anchorfile>structutf8__table.html</anchorfile>
      <anchor>7bd968119e3c166a1e9e3544b4b96dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>lval</name>
      <anchorfile>structutf8__table.html</anchorfile>
      <anchor>51d3df2a10b005497fa11c4ca166e670</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Waitable</name>
    <filename>classWaitable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Waitable</name>
      <anchorfile>classWaitable.html</anchorfile>
      <anchor>34686e120d2c79666741c0c139a215cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>GetMaxWaitObjectCount</name>
      <anchorfile>classWaitable.html</anchorfile>
      <anchor>221cf2a8063487b56b97c27197e16b12</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>GetWaitObjects</name>
      <anchorfile>classWaitable.html</anchorfile>
      <anchor>3e22b9473759d47baf73b2e18fd8d591</anchor>
      <arglist>(WaitObjectContainer &amp;container)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Wait</name>
      <anchorfile>classWaitable.html</anchorfile>
      <anchor>1799049bad43906c679e4bcc9e527321</anchor>
      <arglist>(unsigned long milliseconds)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WindowSlider</name>
    <filename>structWindowSlider.html</filename>
    <member kind="function">
      <type></type>
      <name>WindowSlider</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>44f235e8b36f80c8160325fb72ed5749</anchor>
      <arglist>(const Integer &amp;Exp, bool FastNegate, unsigned int windowSizeIn=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FindNextWindow</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>b5eb09cfae787154eb834b5834cd01dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>exp</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>df7b445a01b42d24cd2554ff95834488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Integer</type>
      <name>windowModulus</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>d3614a41491b556917929ba49f7c1137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>windowSize</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>57d6977b6a829c4886066739cc4c97ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>windowBegin</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>3c9293a64085bd50cb091f5868554404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>expWindow</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>afc87771c1a9739ab72ca40d880766b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fastNegate</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>bd8504269b597348117dc630b44bc7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>negateNext</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>ec23523a38233c22352f14880ed97309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>firstTime</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>8cb21d063db31c5afbae40dae89e3241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>finished</name>
      <anchorfile>structWindowSlider.html</anchorfile>
      <anchor>a5c6c6d7fa6835c27f8756b454390629</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Word</name>
    <filename>classWord.html</filename>
    <member kind="function">
      <type></type>
      <name>Word</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>17baf7109d46beb48d5b469f3baedc48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Word</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>7755d2fa17ee18931eb5a8f763219867</anchor>
      <arglist>(word value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Word</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>fa9303935900b3db97500b14d57655ff</anchor>
      <arglist>(hword low, hword high)</arglist>
    </member>
    <member kind="function">
      <type>Word</type>
      <name>operator-</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>95c8ed23e30aa0ee042b89d5f0aa179e</anchor>
      <arglist>(Word a)</arglist>
    </member>
    <member kind="function">
      <type>Word</type>
      <name>operator-</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>76b96e8ec4893b3d6631328cd5cf2795</anchor>
      <arglist>(hword a)</arglist>
    </member>
    <member kind="function">
      <type>hword</type>
      <name>operator/</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>4afdaf0220c6c6c3dc118771dc102012</anchor>
      <arglist>(hword divisor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>51c712e056945de59584db0373fee8ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>word</type>
      <name>GetWhole</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>c99f8ed524a19be26338323b1e63077a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hword</type>
      <name>GetLowHalf</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>8e6c5e29c081207f2cf6f35f3eef878c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hword</type>
      <name>GetHighHalf</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>1c2b3b154eba7942518889358540f377</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hword</type>
      <name>GetHighHalfAsBorrow</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>e53024a3bfb2cf8bebb137ce3b517ba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Word</type>
      <name>Multiply</name>
      <anchorfile>classWord.html</anchorfile>
      <anchor>e67733582b922d0737c28292b33ed83b</anchor>
      <arglist>(hword a, hword b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxAnimationCtrl</name>
    <filename>classwxAnimationCtrl.html</filename>
  </compound>
  <compound kind="class">
    <name>wxApp</name>
    <filename>classwxApp.html</filename>
  </compound>
  <compound kind="class">
    <name>wxAppConsole</name>
    <filename>classwxAppConsole.html</filename>
  </compound>
  <compound kind="class">
    <name>WxCas</name>
    <filename>classWxCas.html</filename>
    <base>wxApp</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>OnInit</name>
      <anchorfile>classWxCas.html</anchorfile>
      <anchor>91c9a87998b01e03e14123e8b2c41236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>OnExit</name>
      <anchorfile>classWxCas.html</anchorfile>
      <anchor>7ca759687c90e218bbd89bae9b23d35e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WxCasFrame *</type>
      <name>GetMainFrame</name>
      <anchorfile>classWxCas.html</anchorfile>
      <anchor>734dbe220612928a75582c5270f64380</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxLocale</type>
      <name>m_locale</name>
      <anchorfile>classWxCas.html</anchorfile>
      <anchor>8442669765a1b53eff9327676ab42315</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WxCasCte</name>
    <filename>structWxCasCte.html</filename>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>imuleSIG_FILENAME</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>1f648a6cff9cbe7b8f606f1def7c3138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>imuleSIG_IMG_NAME</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>04e869536148d3b4091c159606661423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxUint32</type>
      <name>MIN_REFRESH_RATE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>50ea6713cf304cf81bc6c005bc5707be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxUint32</type>
      <name>MAX_REFRESH_RATE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>502ecd72b0210e3e8216a2fb4b203495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxUint32</type>
      <name>MIN_FTP_RATE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>2beff0dd72a3d31fc916f8602b2ef688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxUint32</type>
      <name>MAX_FTP_RATE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>29e9dc81d0e92e47799e1ee74d8a94d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>imuleSIG_PATH_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>0dfa71e978675df8fc99c71bb5387f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>REFRESH_RATE_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>e2dd62e317d929bfb2cfa7983e8c8ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>ENABLE_AUTOSTATIMG_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>4d0615910056fa61a43dcdb05d75c781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>AUTOSTATIMG_DIR_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>0eab6df07b23e2a4afe7b6ea9771afe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>AUTOSTATIMG_TYPE_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>04efc506fc547f0e01b69148c2d03f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>ENABLE_FTP_UPDATE_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>3f5a7151191c1dbcf20e78fe003eb3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>FTP_UPDATE_RATE_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>f0c0d8a49d7594b3b90d236fd9fb6f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>FTP_URL_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>8fb6a4b6780a2c4380a184e3f67f0c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>FTP_PATH_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>2ced0edd1180bf45e7197ad9ba16f964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>FTP_USER_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>aa1169fffefe6432e7986276b28a3662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>FTP_PASSWD_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>cd69ce0c48f340a88047e1ea3d174ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>ABSOLUTE_MAX_DL_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>20d9218fd42737366fb9141f45caf672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>ABSOLUTE_MAX_DL_DATE_KEY</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>bed46fd3cf92069f00b64fee40a9c295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_imuleSIG_PATH</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>8f470af7de341a1fd004a3b8c17a77b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxUint32</type>
      <name>DEFAULT_REFRESH_RATE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>935e076be4c4455c25e5b064e2d5f28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>DEFAULT_AUTOSTATIMG_ISENABLED</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>74fcc5c4b371ba89280dedcd28979af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_AUTOSTATIMG_PATH</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>91e30a2fe3bf8c6fbb8143465de5b6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_AUTOSTATIMG_TYPE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>995d96987fcb54d53d1293d6c234ef47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>DEFAULT_FTP_UPDATE_ISENABLED</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>281caad245a3500687e5664ea30184e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxUint32</type>
      <name>DEFAULT_FTP_UPDATE_RATE</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>5354a8c4ae1822676c3d90ba5165f2a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_FTP_URL</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>77dcfa5d7143d85016ad37147434acc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_FTP_PATH</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>792a49e9355e008547c0383381096d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_FTP_USER</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>f0ff89434b6c95614d5c7721d3e30ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const wxString</type>
      <name>DEFAULT_FTP_PASSWD</name>
      <anchorfile>structWxCasCte.html</anchorfile>
      <anchor>5da2d283f3a749ff596ce15c84edf7e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WxCasFrame</name>
    <filename>classWxCasFrame.html</filename>
    <base>wxFrame</base>
    <member kind="function">
      <type></type>
      <name>WxCasFrame</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>960b6d4b064ffe27fc81b7eb76dcf380</anchor>
      <arglist>(const wxString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WxCasFrame</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>4b746eddf1b4519f77b397c1fdff1949</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxImage *</type>
      <name>GetStatImage</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>034ddd88f12c4239598fb24c8a54d4c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeRefreshPeriod</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>6d80b310f2a12cb5f90b7c36635fa45b</anchor>
      <arglist>(const int newPeriod)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ChangeFtpUpdatePeriod</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>2dc1a5394fe141a611a6cc1be1f0b1b5</anchor>
      <arglist>(const int newPeriod)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetimuleSigFile</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>354618e47738eaa97d82295b2ff65b5d</anchor>
      <arglist>(const wxFileName &amp;file)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>UpdateStatsPanel</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>6cddc5180ff1e287f8c531176726cf51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateAll</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>2e9e9c48ee25cc020bb377d2148bf53e</anchor>
      <arglist>(bool forceFitting=FALSE)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SaveAbsoluteHits</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>aaecba7635b41a632dd70a01b7abd6f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarRefresh</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>28ddad4b135c8ca0affad7ce01256dec</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarAbout</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>058c65cb23731eed7408b0e3faaa35c6</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarSave</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>fc3cc5b1739d354fb35ac3262b2a9b73</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarPrint</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>92f171e5b70acb4416349cd045908793</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnBarPrefs</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>f54f12b51f443889242524a64a104b74</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnRefreshTimer</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>462df0634e539786369ce7d832a16f5d</anchor>
      <arglist>(wxTimerEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnFtpUpdateTimer</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>d29aca7f007b08f13e51989321a2842b</anchor>
      <arglist>(wxTimerEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnHitButton</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>364fd3c0afd1e0d0fe8f93090dda6bf7</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAbsHitButton</name>
      <anchorfile>classWxCasFrame.html</anchorfile>
      <anchor>2132c20ae7d789014070192a432f4f87</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WxCasPix</name>
    <filename>classWxCasPix.html</filename>
    <member kind="function" static="yes">
      <type>static wxBitmap</type>
      <name>getPixmap</name>
      <anchorfile>classWxCasPix.html</anchorfile>
      <anchor>c0b0dcfaac94815b49cf3b633be4501d</anchor>
      <arglist>(const wxString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WxCasPrefs</name>
    <filename>classWxCasPrefs.html</filename>
    <base>wxDialog</base>
    <member kind="function">
      <type></type>
      <name>WxCasPrefs</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>12547fe2e06ea6ac021504fffb4e6d01</anchor>
      <arglist>(wxWindow *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WxCasPrefs</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>9fdf76296029fd74248a1a3036aff315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnOSPathBrowseButton</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>771a0acd15294fb46c40b2965ddc2b5f</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnValidateButton</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>6356dadeee273daffd5ce49d3d33a1d6</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAutoStatImgBrowseButton</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>3bf59f8222b99e9c72c15ce880621512</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnAutoStatImgCheck</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>63b7cd8f01cbcea08c23a84cf75e1b5b</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>OnFtpUpdateCheck</name>
      <anchorfile>classWxCasPrefs.html</anchorfile>
      <anchor>28673bd521ac016e85f21ebc1670b1fa</anchor>
      <arglist>(wxCommandEvent &amp;event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>WxCasPrint</name>
    <filename>classWxCasPrint.html</filename>
    <base>wxPrintout</base>
    <member kind="function">
      <type></type>
      <name>WxCasPrint</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>f1ee64c73cc36930396ca28cb6c78d46</anchor>
      <arglist>(const wxString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WxCasPrint</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>9f9387d7bbab5d8520156654be476133</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OnPrintPage</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>6be22d825fef977857d361109eb51a86</anchor>
      <arglist>(int page)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasPage</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>4ec2174a53f497e1e9c621e27e4d4bd2</anchor>
      <arglist>(int page)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>OnBeginDocument</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>2a3c0c32610ae0cbb5803558a35d40a8</anchor>
      <arglist>(int startPage, int endPage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPageInfo</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>cff2f385d38cd930b0e9cf13311c6948</anchor>
      <arglist>(int *minPage, int *maxPage, int *selPageFrom, int *selPageTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DrawPageOne</name>
      <anchorfile>classWxCasPrint.html</anchorfile>
      <anchor>714d03aa42a3d6b2e197114b10e2a0ab</anchor>
      <arglist>(wxDC *dc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxControl</name>
    <filename>classwxControl.html</filename>
  </compound>
  <compound kind="class">
    <name>wxDialog</name>
    <filename>classwxDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>wxECInitDoneEvent</name>
    <filename>classwxECInitDoneEvent.html</filename>
    <base>wxEvent</base>
    <member kind="function">
      <type></type>
      <name>wxECInitDoneEvent</name>
      <anchorfile>classwxECInitDoneEvent.html</anchorfile>
      <anchor>0ff2bfcfa9a63174c4f25a71967873f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxEvent *</type>
      <name>Clone</name>
      <anchorfile>classwxECInitDoneEvent.html</anchorfile>
      <anchor>22e1ee76dcaf912e92c8826eacad70a4</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxECSocketEvent</name>
    <filename>classwxECSocketEvent.html</filename>
    <base>wxEvent</base>
    <member kind="function">
      <type></type>
      <name>wxECSocketEvent</name>
      <anchorfile>classwxECSocketEvent.html</anchorfile>
      <anchor>844b5de3aa7691a620aba8c33089d160</anchor>
      <arglist>(int id, int event_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxECSocketEvent</name>
      <anchorfile>classwxECSocketEvent.html</anchorfile>
      <anchor>13836a740ff950ad07b2ea7fb424c938</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxECSocketEvent</name>
      <anchorfile>classwxECSocketEvent.html</anchorfile>
      <anchor>f3c42a4540201b47a97b08b8de0f4499</anchor>
      <arglist>(int id, bool result, const wxString &amp;reply)</arglist>
    </member>
    <member kind="function">
      <type>wxEvent *</type>
      <name>Clone</name>
      <anchorfile>classwxECSocketEvent.html</anchorfile>
      <anchor>eb68d4e210a56ff883102925ff5e8a95</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetResult</name>
      <anchorfile>classwxECSocketEvent.html</anchorfile>
      <anchor>bb6754a51228360e4643f14999f6e0a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>GetServerReply</name>
      <anchorfile>classwxECSocketEvent.html</anchorfile>
      <anchor>17ff1de3f95d59c14cac1bfe3d26c659</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxEvent</name>
    <filename>classwxEvent.html</filename>
  </compound>
  <compound kind="class">
    <name>wxEvtHandler</name>
    <filename>classwxEvtHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>wxFileConfig</name>
    <filename>classwxFileConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>wxFrame</name>
    <filename>classwxFrame.html</filename>
  </compound>
  <compound kind="class">
    <name>wxI2PDatagramSocket</name>
    <filename>classwxI2PDatagramSocket.html</filename>
    <base>wxI2PSocketBase</base>
    <member kind="function">
      <type></type>
      <name>wxI2PDatagramSocket</name>
      <anchorfile>classwxI2PDatagramSocket.html</anchorfile>
      <anchor>077ac123714cdb6c70a40e21a93d291f</anchor>
      <arglist>(wxString sessionName, wxSocketFlags flags=wxSOCKET_NONE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxI2PDatagramSocket &amp;</type>
      <name>RecvFrom</name>
      <anchorfile>classwxI2PDatagramSocket.html</anchorfile>
      <anchor>0b075044107254b6d6be85b50c35a36f</anchor>
      <arglist>(CI2PAddress &amp;address, void *buffer, wxUint32 nbytes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxI2PDatagramSocket &amp;</type>
      <name>SendTo</name>
      <anchorfile>classwxI2PDatagramSocket.html</anchorfile>
      <anchor>9080e3d34a40943c06c3ce0faa0ff070</anchor>
      <arglist>(const CI2PAddress &amp;address, const void *buffer, wxUint32 nbytes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_logback</name>
      <anchorfile>classwxI2PDatagramSocket.html</anchorfile>
      <anchor>31d1e3ab6285785f00efbe8c47a3a9ac</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_dgramback</name>
      <anchorfile>classwxI2PDatagramSocket.html</anchorfile>
      <anchor>e9a398ca51a6362711f59db0952fa000</anchor>
      <arglist>(CI2PAddress &amp;dest, char *data, usize_t size)</arglist>
    </member>
    <class kind="class">wxI2PDatagramSocket::CDatagramMessage</class>
  </compound>
  <compound kind="class">
    <name>wxI2PSocket</name>
    <filename>classwxI2PSocket.html</filename>
    <base>wxI2PSocketBase</base>
    <member kind="function">
      <type></type>
      <name>wxI2PSocket</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>56857ce52653bb52ced31a6977f1ffd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init1</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>ec224b6e419f1a1e0311e759f384d6dd</anchor>
      <arglist>(wxI2PSocketServer *mgr, CSamSession::write_buff_t *buff, const CI2PAddress &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init2</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>75e469405a80fe742d11572bf4260490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServer</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>ad69649c039d81b391a1c7db0dc7b753</anchor>
      <arglist>(wxI2PSocketServer *mgr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~wxI2PSocket</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>3005da782550b82cb93d570aed30ab73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetPeer</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>74fe8a7fed1d764d46c5194026b900f9</anchor>
      <arglist>(CI2PAddress &amp;addr)</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetPeer</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>d1685b051235f7118b2b2d8927cf1628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxI2PSocket &amp;</type>
      <name>Write</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>c7094088e6fc75691a80226d474d7c2b</anchor>
      <arglist>(const void *buffer, wxUint32 nbytes)</arglist>
    </member>
    <member kind="function">
      <type>wxI2PSocket &amp;</type>
      <name>Read</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>abb5fb85ae614c1ddc84652b318c8623</anchor>
      <arglist>(void *buffer, wxUint32 nbytes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Close</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>9f41abc10f81092540b8fc290a8a74d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxI2PSocket &amp;</type>
      <name>Flush</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>a01c57eb4c1f89f62933368718344e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_closeback</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>b8623ea1cc40238e30065ddd959fc339</anchor>
      <arglist>(CSamSession::samerr_t reason, wxString message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_databack</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>590ec6776adefe989ec31edacb181d38</anchor>
      <arglist>(void *data, usize_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_streamFreedBuffer</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>4af26240bc91b9f118e487659ae6c526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_logback</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>766c94f8e047a8405d274419eea9b9e0</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="function">
      <type>sam_sid_t</type>
      <name>getId</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>0b1dfb5cf60f5275cb20938b7a634bb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DECLARE_NO_COPY_CLASS</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>388b8a094ffe42f311a1fc79a03cd488</anchor>
      <arglist>(wxI2PSocket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addWxOutputEvent</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>b687a64d9f17e2573e7b68ad996246f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CI2PAddress</type>
      <name>m_there</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>6c646bed4772631ca4d8cbfdc00c8cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxI2PSocketServer *</type>
      <name>m_server</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>dd065320e5a4ed5a287e60636659757d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CSamSession::sam_sid_t</type>
      <name>m_streamId</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>e0ad0cb55b885796ebabf3fa72918ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>write_buff_t *</type>
      <name>m_sendq</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>85c9437738e7996d2fa8b7bafeec0f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; buff_t * &gt;</type>
      <name>m_recvq</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>38c8df0fe286c2b9a629b8d64079960e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxUint64</type>
      <name>m_recvqBytesFromStart</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>1c80214cb1f2c3599e92ab91e9dc5b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxUint64</type>
      <name>m_recvqCurrentSize</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>da17b264e1e05f28efe2eaf7ba5b53c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_recvqMutex</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>8cb6b0557cc5b35eb2cb26672f406d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxCondition</type>
      <name>m_recvqCondition</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>c5fc3e8c1027799282310303450f2c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_blockedOnLastWrite</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>f8888261d69ae9ad9cbfcb97ed2e1d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_InputEventSent</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>2aa491be81b9a355719fe1eb860c22cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_readLock</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>ece25bb4845d2f00574aa85ceb99082f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxMutex</type>
      <name>m_writeLock</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>ae45b088e911a0ce01ac3cd360c49048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxUint32</type>
      <name>s_STREAM_PAYLOAD_MAX</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>6e482b88c2cc6b1defc8b7b9638a690c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static wxUint32</type>
      <name>s_MAX_RECEIVE_HALF_QUEUE_SIZE</name>
      <anchorfile>classwxI2PSocket.html</anchorfile>
      <anchor>31e6d08b29de453d5b5e75983638ba2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxI2PSocketBase</name>
    <filename>classwxI2PSocketBase.html</filename>
    <base protection="protected">CSamSession</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>662c72d103a3a1ef7eb4d7a2cbe7890b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxI2PSocketBase</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>2933a491b2ac81755c91bf1da57be695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxI2PSocketBase</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>414715683190a0ece085d3cee2f0f616</anchor>
      <arglist>(wxString sessionName, sam_conn_t, wxSocketFlags flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~wxI2PSocketBase</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>788d4bd5bea5c9f26cb02df2d246a91f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Start</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>aa60200d7970b210c7427d764c51a762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxI2PSocketBase &amp;</type>
      <name>Discard</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>bfef28cacbed0ba458ffb0917a1ab97c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Destroy</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>a7bbd3d650d2d489f3e69ae073b811b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Close</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>83bc28f7afe688990cc4752605435e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetLocal</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>f73f252db40d6441067871a6e42df6c6</anchor>
      <arglist>(CI2PAddress &amp;addr)</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>GetLocal</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>b089585328ba7c4f422045145427f984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEventHandler</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>7c93b5dfde1660b327abd11b8119838d</anchor>
      <arglist>(wxEvtHandler &amp;handler, int id=wxID_ANY)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxEvtHandler *</type>
      <name>GetEventHandler</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>4fafe3c0e0a0b1adf733cea0fe1f0fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>GetEventId</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>97ca53c626f5b1907d182719a2fa4251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnLost</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>2c078e0a09ddf2536b87d3426568a179</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Error</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>b4d31afb87de0668ea92340087b1d07f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxSocketError</type>
      <name>LastError</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>8b458b8c3eeaae37671136e668a3466d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxUint32</type>
      <name>LastCount</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>bfb9a96f576157cffff493843eae0064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setError</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>fd5db211deb3b46d0f96ffa23d8e2dcd</anchor>
      <arglist>(wxSocketError e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCount</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>a6188ec09725894701de589afbf7725e</anchor>
      <arglist>(wxUint32 c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetNotify</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>e6a00889ba8151445401857322bbb706</anchor>
      <arglist>(wxSocketEventFlags flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Notify</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>8b5aeb1a058bc7755ada5320dd9e6040</anchor>
      <arglist>(bool notify)</arglist>
    </member>
    <member kind="function">
      <type>wxSocketEventFlags</type>
      <name>GetEventFlags</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>c52ef47532d70fcf1e12a2c9a16f8efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNotify</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>2509c1728a65cfec87b8d0734ec43a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientData</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>9d2caa9556a6b0d625607f152b82e7a5</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>GetClientData</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>11bef10caeb568e04437b8a56bc34f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsOk</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>e08fecb6028faa12c361c1fc9a7c7ea1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RestoreState</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>a39e68e544b6bfea121d6dcb4876f591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SaveState</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>ec5c06ead1f5c6b7c6894c5ed6fe833e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlags</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>6d76b4bb15bf89f9714f952479dffaa8</anchor>
      <arglist>(wxSocketFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>wxSocketFlags</type>
      <name>GetFlags</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>f904639ed4f59f6a25c1a2d70d94d845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setI2POptions</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>28a608d8dba687d11c55eb0484815a9e</anchor>
      <arglist>(wxString opts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setI2POptions</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>50c07f6323e8e197e8301c052ec3bc27</anchor>
      <arglist>(const std::map&lt; wxString, wxString &gt; socket_opts, const std::map&lt; wxString, wxString &gt; router_opts)</arglist>
    </member>
    <member kind="enumeration">
      <name>State</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d89704d0df2f6d568c52bb6b54a72e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_STARTED</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d89704d0df2f6d568c52bb6b54a72e048a6e7bb90f395f923462bd38238992b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READY</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d89704d0df2f6d568c52bb6b54a72e045b2ae517a8a27cc8162e33cbc7d9a0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RUNNING</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d89704d0df2f6d568c52bb6b54a72e046d3d94493e446ac55450b1f7c54af179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSFERRED</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d89704d0df2f6d568c52bb6b54a72e049248bbd9cee68d8d454679cee63c1c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOPPED</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d89704d0df2f6d568c52bb6b54a72e042b3f90c024a34ade43bca7c29092904b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_diedback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>5ce3648baf454f7f6bada964bff28c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_diedback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>22009209beac03ca340d71c57d3f3689</anchor>
      <arglist>(samerr_t)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_namingback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d7d72feec1b67d1fd3ddbc5d6a08e83e</anchor>
      <arglist>(wxString name, const CI2PAddress &amp;pubkey, CSamSession::samerr_t result, wxString message)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_dgramback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>b574821a0ac48e63b2fdee606c9dcd86</anchor>
      <arglist>(CI2PAddress &amp;dest, char *data, usize_t size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_closeback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>611efb9f82493e248cff19c623bcf88c</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t reason, wxString message)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_stream_connectback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>4d6ba208be270599118ccc8baf063103</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_databack</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>298e3bf4514334f06398f29684a6472e</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, void *data, usize_t size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_stream_statusback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>769bbb0c820c3fe5f825b0aebe92ae67</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t result, wxString message)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_rawback</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>05014fcdb3001522badb97e27a72a8b1</anchor>
      <arglist>(void *data, usize_t size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_streamFreedBuffer</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>2a9c5dd8ce796871f7b6b3c59284a201</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addWxInputEvent</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>79017be0535b9d0d9ba02cb61805eafe</anchor>
      <arglist>(wxString msg=wxT(&quot;&quot;))</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_connection_complete</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>4b2c5925401057ff1c4534727de5dcf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DECLARE_NO_COPY_CLASS</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>dfd3dd6777eadf7ec87aa0b22b2b4cf4</anchor>
      <arglist>(wxI2PSocketBase)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>m_state</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>2e22c77f89c3cba87fc03dc859065d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>m_nextState</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>3136e85b916f1c4fc92a4c7dbc6a7d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>evtID</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>6864e1cbf15e0495e869641078d152a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxEvtHandler *</type>
      <name>evtHandler</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>30b213a01dfaa2a3b7813a4e140ff75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Behavior</type>
      <name>m_behave</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>0af876fc14435512a2182d2831d5ef2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::stack&lt; Behavior &gt;</type>
      <name>m_behaveHistory</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>5042b936ecc5c5e163fc35215853cb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxSocketError</type>
      <name>m_lastError</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>d348cb13df2af3e2b2b5040bde3c6b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>wxUint32</type>
      <name>m_lastCount</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>c0d9f3531f9167ec6e0bdc439eda4b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_beingDeleted</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>8a325198c7c0cde0f795526397b13832</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CSamSession</name>
      <anchorfile>classwxI2PSocketBase.html</anchorfile>
      <anchor>cb1dbb370d3b1eb2f88fc89661d4aca8</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">wxI2PSocketBase::Behavior</class>
  </compound>
  <compound kind="struct">
    <name>wxI2PSocketBase::Behavior</name>
    <filename>structwxI2PSocketBase_1_1Behavior.html</filename>
    <member kind="function">
      <type></type>
      <name>Behavior</name>
      <anchorfile>structwxI2PSocketBase_1_1Behavior.html</anchorfile>
      <anchor>eb459664890aff692bd50e552f7cad72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>wxSocketFlags</type>
      <name>flags</name>
      <anchorfile>structwxI2PSocketBase_1_1Behavior.html</anchorfile>
      <anchor>3a7eb0384543467ff2301f60b327aba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxSocketEventFlags</type>
      <name>eventFlags</name>
      <anchorfile>structwxI2PSocketBase_1_1Behavior.html</anchorfile>
      <anchor>e14b04b6cd3230b7fa0ec8e65930d37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>notify</name>
      <anchorfile>structwxI2PSocketBase_1_1Behavior.html</anchorfile>
      <anchor>517f2a21da7593b30a831cc82f495dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data</name>
      <anchorfile>structwxI2PSocketBase_1_1Behavior.html</anchorfile>
      <anchor>50e3ddd36b435329c40bf06ce4eac3f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxI2PSocketClient</name>
    <filename>classwxI2PSocketClient.html</filename>
    <base>wxI2PSocket</base>
    <member kind="function">
      <type></type>
      <name>wxI2PSocketClient</name>
      <anchorfile>classwxI2PSocketClient.html</anchorfile>
      <anchor>4231add45b6d6baa9908c059d2584b64</anchor>
      <arglist>(wxSocketFlags flags=wxSOCKET_NONE)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Connect</name>
      <anchorfile>classwxI2PSocketClient.html</anchorfile>
      <anchor>6dc2ac19647d053d5f9d005ceb549b27</anchor>
      <arglist>(const CI2PAddress &amp;address, bool wait=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_stream_statusback</name>
      <anchorfile>classwxI2PSocketClient.html</anchorfile>
      <anchor>3621b5260e9c54004e1208ee8b48873f</anchor>
      <arglist>(CSamSession::samerr_t result, wxString message)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createServer</name>
      <anchorfile>classwxI2PSocketClient.html</anchorfile>
      <anchor>4bdc00f7463bae2acbcb15385e9b3204</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxI2PSocketServer</name>
    <filename>classwxI2PSocketServer.html</filename>
    <base>wxI2PSocketBase</base>
    <member kind="function">
      <type></type>
      <name>wxI2PSocketServer</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>f67a060c871e7d08d0da0e7da79c5de5</anchor>
      <arglist>(wxString sessionName, wxSocketFlags flags=wxSOCKET_NONE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~wxI2PSocketServer</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>1db35dfb6262f3b3bf8d5d7e43269a53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>wxI2PSocket *</type>
      <name>Accept</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>bfbb2874d208e9088e1a3e0c80472f4e</anchor>
      <arglist>(bool wait=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AcceptWith</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>c7d5494061fb81957cfc0018d11c989f</anchor>
      <arglist>(wxI2PSocket &amp;socket, bool wait=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Connect</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>1f247f58d113b15f24f05b6980c78e15</anchor>
      <arglist>(wxI2PSocketClient *socket, const CI2PAddress &amp;dest, bool wait=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopManaging</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>c0452e87b697881b8a074d40ff8568a1</anchor>
      <arglist>(CSamSession::sam_sid_t)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Close</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>ea267464a406dfd3b6f633260b9d2bbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_stream_connectback</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>8e5b30a4b5a168cb54a6df4e0e51ca4f</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_stream_statusback</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>64e271d6edb4caa9a6f6bf20a0360fc7</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t result, wxString message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_closeback</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>da06a57f13ab5456c5deef13bc891892</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, CSamSession::samerr_t reason, wxString message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sam_databack</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>78b313549f4b434e2115258e238a160e</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id, void *data, usize_t size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_streamFreedBuffer</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>863927781dfb942e08d4e5a063d58a2b</anchor>
      <arglist>(CSamSession::sam_sid_t stream_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_logback</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>66349adda4579775f147d2c995f38bf6</anchor>
      <arglist>(wxString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sam_logback</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>7acb5372ef4d1f8d37897c77715b6809</anchor>
      <arglist>(sam_sid_t, wxString)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxI2PSocketServer *</type>
      <name>getServer</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>caa77ac9eccfc88a0302e1fbbb5f9129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>wxI2PSocket</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>3c1ab8a6edb03d0eb58a5bf6a1270679</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>wxI2PSocketClient</name>
      <anchorfile>classwxI2PSocketServer.html</anchorfile>
      <anchor>c84d300d7dc0064a22456179d9900090</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxListCtrl</name>
    <filename>classwxListCtrl.html</filename>
  </compound>
  <compound kind="class">
    <name>wxListView</name>
    <filename>classwxListView.html</filename>
  </compound>
  <compound kind="class">
    <name>wxLog</name>
    <filename>classwxLog.html</filename>
  </compound>
  <compound kind="class">
    <name>wxNotebook</name>
    <filename>classwxNotebook.html</filename>
  </compound>
  <compound kind="class">
    <name>wxPanel</name>
    <filename>classwxPanel.html</filename>
  </compound>
  <compound kind="class">
    <name>wxPrintout</name>
    <filename>classwxPrintout.html</filename>
  </compound>
  <compound kind="class">
    <name>wxSocketClient</name>
    <filename>classwxSocketClient.html</filename>
  </compound>
  <compound kind="class">
    <name>WxStringWriter</name>
    <filename>classWxStringWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>WxStringWriter</name>
      <anchorfile>classWxStringWriter.html</anchorfile>
      <anchor>6eda1013061466e63d5fafd8131c81c5</anchor>
      <arglist>(RawData s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classWxStringWriter.html</anchorfile>
      <anchor>168974e8fd299c467396c0eec6a584d4</anchor>
      <arglist>(char[] cbuf, int off, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWxStringWriter.html</anchorfile>
      <anchor>bd7734e10d1c2052adc0773e446818ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWxStringWriter.html</anchorfile>
      <anchor>c3b29ef198658b760872650727359b22</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>wxTaskBarIcon</name>
    <filename>classwxTaskBarIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>wxTextCtrl</name>
    <filename>classwxTextCtrl.html</filename>
  </compound>
  <compound kind="class">
    <name>wxThread</name>
    <filename>classwxThread.html</filename>
  </compound>
  <compound kind="class">
    <name>wxThreadHelper</name>
    <filename>classwxThreadHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>wxTreeCtrl</name>
    <filename>classwxTreeCtrl.html</filename>
  </compound>
  <compound kind="class">
    <name>wxTreeItemData</name>
    <filename>classwxTreeItemData.html</filename>
  </compound>
  <compound kind="class">
    <name>X509PublicKey</name>
    <filename>classX509PublicKey.html</filename>
    <base virtualness="virtual">ASN1Key</base>
    <base>PublicKey</base>
    <member kind="function">
      <type>void</type>
      <name>BERDecode</name>
      <anchorfile>classX509PublicKey.html</anchorfile>
      <anchor>4eb86b0b55185f10a13ff7e1b083a67b</anchor>
      <arglist>(BufferedTransformation &amp;bt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DEREncode</name>
      <anchorfile>classX509PublicKey.html</anchorfile>
      <anchor>dfd76c247053ce6f771411ea2b5a9ff5</anchor>
      <arglist>(BufferedTransformation &amp;bt) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>yy_buffer_state</name>
    <filename>structyy__buffer__state.html</filename>
    <member kind="variable">
      <type>FILE *</type>
      <name>yy_input_file</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>4843d1422e3276b636d475a3095bd948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_ch_buf</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>d7b8df8d8a4688e57b0b8d3ca75adc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_buf_pos</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>58aa927f098b99d99e75da80f9b681ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>yy_size_t</type>
      <name>yy_buf_size</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>48302f5f3477a9c78bbddf56d356ef54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_n_chars</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>06406208824817acfec2183b79080945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_is_our_buffer</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>80ce2431c70dc4f89ced487f18449465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_is_interactive</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>bf5c70eea75581b58c0ee7bd31b14490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_at_bol</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>9d60c60af6e1a6f69de16871fd64f85f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_bs_lineno</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>818e94bc9c766e683c60df1e9fd01199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_bs_column</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>10c4fcd8be759e6bf11e6d3e8cdb0307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_fill_buffer</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>63d2afbb1d79a3fc63df9e12626f827d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_buffer_status</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>70fd925d37a2f0454fbd0def675d106c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yy_input_file</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>4843d1422e3276b636d475a3095bd948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_ch_buf</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>d7b8df8d8a4688e57b0b8d3ca75adc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_buf_pos</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>58aa927f098b99d99e75da80f9b681ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yy_input_file</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>4843d1422e3276b636d475a3095bd948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_ch_buf</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>d7b8df8d8a4688e57b0b8d3ca75adc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_buf_pos</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>58aa927f098b99d99e75da80f9b681ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>yy_trans_info</name>
    <filename>structyy__trans__info.html</filename>
    <member kind="variable">
      <type>flex_int32_t</type>
      <name>yy_verify</name>
      <anchorfile>structyy__trans__info.html</anchorfile>
      <anchor>5c9f61e770deef50bd4e697310342fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>flex_int32_t</type>
      <name>yy_nxt</name>
      <anchorfile>structyy__trans__info.html</anchorfile>
      <anchor>e0715250c2bef261e596e77e0030f13e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>yyalloc</name>
    <filename>unionyyalloc.html</filename>
    <member kind="variable">
      <type>yytype_int16</type>
      <name>yyss</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>ad44e4a724037e32eeb58333c516bb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yyvs</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>9494cc8d8cd0eba1b44ca20fe89de5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short int</type>
      <name>yyss</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>f0ff2928e377d4fc6ef49c97b69d5ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>YYSTYPE</name>
    <filename>unionYYSTYPE.html</filename>
    <member kind="variable">
      <type>wxString *</type>
      <name>pstr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>d441294015e76360afd956fdf14f5d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSearchExpr *</type>
      <name>pexpr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>53a6a3c5a6ddfb8d2d22cc3579de5a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString *</type>
      <name>pstr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>d441294015e76360afd956fdf14f5d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSearchExpr *</type>
      <name>pexpr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>53a6a3c5a6ddfb8d2d22cc3579de5a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString *</type>
      <name>pstr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>d441294015e76360afd956fdf14f5d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSearchExpr *</type>
      <name>pexpr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>53a6a3c5a6ddfb8d2d22cc3579de5a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString *</type>
      <name>pstr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>d441294015e76360afd956fdf14f5d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CSearchExpr *</type>
      <name>pexpr</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>53a6a3c5a6ddfb8d2d22cc3579de5a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>syn_node</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>93d0f67bc33b81c37c2fa80362e7967f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>exp_node</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>1c6f38fcb5a150711e89ad14939ee97b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>str_val</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>b65479aa736405f0dc0ebfaf4cb4a5fa</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable">
      <type>PHP_SYN_NODE *</type>
      <name>syn_node</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>93d0f67bc33b81c37c2fa80362e7967f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHP_EXP_NODE *</type>
      <name>exp_node</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>1c6f38fcb5a150711e89ad14939ee97b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BASE1</name>
    <filename>classBASE1.html</filename>
  </compound>
  <compound kind="class">
    <name>BASE2</name>
    <filename>classBASE2.html</filename>
  </compound>
  <compound kind="class">
    <name>CIPHER</name>
    <filename>classCIPHER.html</filename>
  </compound>
  <compound kind="class">
    <name>HASH_ALGORITHM</name>
    <filename>classHASH__ALGORITHM.html</filename>
  </compound>
  <compound kind="class">
    <name>int</name>
    <filename>classint.html</filename>
  </compound>
  <compound kind="class">
    <name>int &amp;</name>
    <filename>classint_01_6.html</filename>
  </compound>
  <compound kind="class">
    <name>INTERFACE</name>
    <filename>classINTERFACE.html</filename>
  </compound>
  <compound kind="class">
    <name>KEYS</name>
    <filename>classKEYS.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; CKnownFile * &gt;</name>
    <filename>classstd_1_1list_3_01CKnownFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; CPartFile * &gt;</name>
    <filename>classstd_1_1list_3_01CPartFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; CSearchFile * &gt;</name>
    <filename>classstd_1_1list_3_01CSearchFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; CServer * &gt;</name>
    <filename>classstd_1_1list_3_01CServer_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; CUpDownClient * &gt;</name>
    <filename>classstd_1_1list_3_01CUpDownClient_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; DownloadFile &gt;</name>
    <filename>classstd_1_1list_3_01DownloadFile_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; SearchFile &gt;</name>
    <filename>classstd_1_1list_3_01SearchFile_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; ServerEntry &gt;</name>
    <filename>classstd_1_1list_3_01ServerEntry_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; SharedFile &gt;</name>
    <filename>classstd_1_1list_3_01SharedFile_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::list&lt; UploadFile &gt;</name>
    <filename>classstd_1_1list_3_01UploadFile_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; CMD4Hash, CKnownFile * &gt;</name>
    <filename>classstd_1_1map_3_01CMD4Hash_00_01CKnownFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; CMD4Hash, CPartFile * &gt;</name>
    <filename>classstd_1_1map_3_01CMD4Hash_00_01CPartFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; CMD4Hash, CSearchFile * &gt;</name>
    <filename>classstd_1_1map_3_01CMD4Hash_00_01CSearchFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; CMD4Hash, DownloadFile * &gt;</name>
    <filename>classstd_1_1map_3_01CMD4Hash_00_01DownloadFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; CMD4Hash, SearchFile * &gt;</name>
    <filename>classstd_1_1map_3_01CMD4Hash_00_01SearchFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; CMD4Hash, SharedFile * &gt;</name>
    <filename>classstd_1_1map_3_01CMD4Hash_00_01SharedFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; uint32_t, CServer * &gt;</name>
    <filename>classstd_1_1map_3_01uint32__t_00_01CServer_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::map&lt; uint32_t, CUpDownClient * &gt;</name>
    <filename>classstd_1_1map_3_01uint32__t_00_01CUpDownClient_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>POLICY</name>
    <filename>classPOLICY.html</filename>
  </compound>
  <compound kind="class">
    <name>POLICY_INTERFACE</name>
    <filename>classPOLICY__INTERFACE.html</filename>
  </compound>
  <compound kind="class">
    <name>T_HashWordType</name>
    <filename>classT__HashWordType.html</filename>
  </compound>
  <compound kind="class">
    <name>T_HashWordType *</name>
    <filename>classT__HashWordType_01_5.html</filename>
  </compound>
  <compound kind="class">
    <name>uint64_t</name>
    <filename>classuint64__t.html</filename>
  </compound>
  <compound kind="class">
    <name>unsigned int</name>
    <filename>classunsigned_01int.html</filename>
  </compound>
  <compound kind="class">
    <name>unsigned int</name>
    <filename>classunsigned_01int.html</filename>
  </compound>
  <compound kind="class">
    <name>unsigned int *</name>
    <filename>classunsigned_01int_01_5.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector&lt; CKnownFile * &gt;</name>
    <filename>classstd_1_1vector_3_01CKnownFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector&lt; CPartFile * &gt;</name>
    <filename>classstd_1_1vector_3_01CPartFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector&lt; CSearchFile * &gt;</name>
    <filename>classstd_1_1vector_3_01CSearchFile_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector&lt; CServer * &gt;</name>
    <filename>classstd_1_1vector_3_01CServer_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>std::vector&lt; CUpDownClient * &gt;</name>
    <filename>classstd_1_1vector_3_01CUpDownClient_01_5_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>wxMutex</name>
    <filename>classwxMutex.html</filename>
  </compound>
  <compound kind="class">
    <name>wxString</name>
    <filename>classwxString.html</filename>
  </compound>
  <compound kind="class">
    <name>wxString &amp;</name>
    <filename>classwxString_01_6.html</filename>
  </compound>
  <compound kind="namespace">
    <name>base64</name>
    <filename>namespacebase64.html</filename>
    <class kind="struct">base64::decoder</class>
    <class kind="struct">base64::encoder</class>
  </compound>
  <compound kind="struct">
    <name>base64::decoder</name>
    <filename>structbase64_1_1decoder.html</filename>
    <member kind="enumeration">
      <name>base64_decodestep</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>8f134e6dbc5fc9ee5e1986b90f236f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_a</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>8f134e6dbc5fc9ee5e1986b90f236f3ea0682df3d4673d77c5e65f792a88234b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_b</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>8f134e6dbc5fc9ee5e1986b90f236f3e27d4e51a6bf80f5f26dfeafbe8dee95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_c</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>8f134e6dbc5fc9ee5e1986b90f236f3e1038920058ab7da499f63aaec4b940c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_d</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>8f134e6dbc5fc9ee5e1986b90f236f3e60bd4b71842390ffa29b2c17c666ff9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base64_decode_value</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>88621151ed1748e4049b9bd656d9f325</anchor>
      <arglist>(char value_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>base64_init_decodestate</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>58df1721772e9c18fbc2b04bbf9107bb</anchor>
      <arglist>(base64_decodestate *state_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base64_decode_block</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>4a2f7b37b5d28d936c2f99bd72e9004a</anchor>
      <arglist>(const char *code_in, const int length_in, char *plaintext_out, base64_decodestate *state_in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>decoder</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>f1b1bd1957163a56241cf99bc75ac216</anchor>
      <arglist>(int buffersize_in=4096)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decode</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>084fcd5a6b23018811351372f77608c3</anchor>
      <arglist>(char value_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decode</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>5fe94638810cc0e3e92a5aac3aabb68a</anchor>
      <arglist>(const char *code_in, const int length_in, char *plaintext_out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decode</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>06dd48fbac18c36fe1fcfbade00e8e83</anchor>
      <arglist>(std::istream &amp;istream_in, std::ostream &amp;ostream_in)</arglist>
    </member>
    <member kind="variable">
      <type>base64_decodestate</type>
      <name>_state</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>e1225ed2386fbdf5618830521d062275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>_buffersize</name>
      <anchorfile>structbase64_1_1decoder.html</anchorfile>
      <anchor>c8816a13d9ff20d3da312cf934e222b1</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">base64::decoder::base64_decodestate</class>
  </compound>
  <compound kind="struct">
    <name>base64::decoder::base64_decodestate</name>
    <filename>structbase64_1_1decoder_1_1base64__decodestate.html</filename>
    <member kind="variable">
      <type>base64_decodestep</type>
      <name>step</name>
      <anchorfile>structbase64_1_1decoder_1_1base64__decodestate.html</anchorfile>
      <anchor>046ebb12ef74b1c8e075d020c3dc5c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>plainchar</name>
      <anchorfile>structbase64_1_1decoder_1_1base64__decodestate.html</anchorfile>
      <anchor>69cc418f72f6c02d2a2cd23e1ff69bbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>base64::encoder</name>
    <filename>structbase64_1_1encoder.html</filename>
    <member kind="enumeration">
      <name>base64_encodestep</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>d56cf10bc13081567bd37b4e90647b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_A</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>d56cf10bc13081567bd37b4e90647b18a213d620d00e538c31e968cdd6ebfdcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_B</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>d56cf10bc13081567bd37b4e90647b188726dba9b70a5ce14c891366dc1dfd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>step_C</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>d56cf10bc13081567bd37b4e90647b18b5ad97c9fdce6d5aa1a55f1a36b147e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>base64_init_encodestate</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>562cebdcd06da3cd5261bda0206283e1</anchor>
      <arglist>(base64_encodestate *state_in)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>base64_encode_value</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>24a3863910b08182fba27e3f1eb13e2a</anchor>
      <arglist>(char value_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base64_encode_block</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>c102ab574a35f376aca45ca0e7b7f1ec</anchor>
      <arglist>(const char *plaintext_in, int length_in, char *code_out, base64_encodestate *state_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>base64_encode_blockend</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>8890d3db0865feaa45296c824fdc0dc2</anchor>
      <arglist>(char *code_out, base64_encodestate *state_in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>encoder</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>d3fea34bf5c76494ee399594f7ff1f3c</anchor>
      <arglist>(int buffersize_in=4096)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>encode</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>56c1fe334ec4d9b40764d061f6be33cf</anchor>
      <arglist>(char value_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>encode</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>6cf6b27f47ac3f9e611e8edf76637436</anchor>
      <arglist>(const char *code_in, const int length_in, char *plaintext_out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>encode_end</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>231df052047c158d67b8e011a536d5f1</anchor>
      <arglist>(char *plaintext_out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>encode</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>92f05b058191035f734181ee21653d9c</anchor>
      <arglist>(std::istream &amp;istream_in, std::ostream &amp;ostream_in)</arglist>
    </member>
    <member kind="variable">
      <type>base64_encodestate</type>
      <name>_state</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>6c023b4bcb76a33aae7d63d0ce2c7f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>_buffersize</name>
      <anchorfile>structbase64_1_1encoder.html</anchorfile>
      <anchor>18cad927fe1f2d68e205af18fc2114b1</anchor>
      <arglist></arglist>
    </member>
    <class kind="struct">base64::encoder::base64_encodestate</class>
  </compound>
  <compound kind="struct">
    <name>base64::encoder::base64_encodestate</name>
    <filename>structbase64_1_1encoder_1_1base64__encodestate.html</filename>
    <member kind="variable">
      <type>base64_encodestep</type>
      <name>step</name>
      <anchorfile>structbase64_1_1encoder_1_1base64__encodestate.html</anchorfile>
      <anchor>d421fdbb81fe75cfe811868c38be1b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>result</name>
      <anchorfile>structbase64_1_1encoder_1_1base64__encodestate.html</anchorfile>
      <anchor>f49bcc1c2374a6e7a9e2e5708fddc57d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Kademlia</name>
    <filename>namespaceKademlia.html</filename>
    <class kind="class">Kademlia::CEntry</class>
    <class kind="class">Kademlia::CKademliaError</class>
    <class kind="class">Kademlia::CIndexed</class>
    <class kind="class">Kademlia::CKademlia</class>
    <class kind="class">Kademlia::CPrefs</class>
    <class kind="class">Kademlia::CSearch</class>
    <class kind="class">Kademlia::CSearchManager</class>
    <class kind="class">Kademlia::CKademliaUDPListener</class>
    <class kind="class">Kademlia::CContact</class>
    <class kind="class">Kademlia::ContactList</class>
    <class kind="class">Kademlia::CRoutingBin</class>
    <class kind="class">Kademlia::CRoutingZone</class>
    <class kind="class">Kademlia::CUInt128</class>
    <member kind="typedef">
      <type>std::map&lt; CRoutingZone *, CRoutingZone * &gt;</type>
      <name>EventMap</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>e76b71b4848b039c3943f242434d45f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; wxString &gt;</type>
      <name>WordList</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>2db16fa7facaac8308f8b7a2ab3d2218</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; CUInt128, CSearch * &gt;</type>
      <name>SearchMap</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>29a7f99c93afe01c938cd577012fe33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; CUInt128, CContact * &gt;</type>
      <name>ContactMap</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>c9a867ff2d74d6dc948c8832f29e532d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CUInt128 &gt;</type>
      <name>UIntList</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>f01388245405f95cbd9c440bb305c153</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; CUInt128 &gt;</type>
      <name>UIntSet</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>be588fbb7d33a986cb5da26841b34abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; CContact * &gt;</type>
      <name>ContactSet</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>0e1d2a5c6ce350b4191d30777119b8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>uint16</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>897a294f9c275127fd55d5bc63ce41a3</anchor>
      <arglist>(uint16 val)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>2557ee34d63b1b8af988df12d40a0428</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>le</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>29ef8aab91aed825c0542f374b15947e</anchor>
      <arglist>(uint64 val)</arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>K</name>
      <anchorfile>namespaceKademlia.html</anchorfile>
      <anchor>b880c1473cacb79259e4dc34cb49b4c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CEntry</name>
    <filename>classKademlia_1_1CEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>CEntry</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>7e36dcada143de3cf6eb886aaef8868b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CEntry</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>bbb00f96402ac4cc6acb74c9422e3e9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64</type>
      <name>GetIntTagValue</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>d1524e79840c531aef38ea65c8cb2dae</anchor>
      <arglist>(const uint8 tagID) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetStrTagValue</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>b20c0a214e5fa9ea2e1d8678e1732caf</anchor>
      <arglist>(const wxString &amp;tagname) const </arglist>
    </member>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>tcpdest</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>b95ab8ef12408b4b33aac40b9d223de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CI2PAddress</type>
      <name>udpdest</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>132ebf287f0c5b94dcb7c579e98bdb02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CUInt128</type>
      <name>keyID</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>6686285115ba408fc27c03d4c56bc8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CUInt128</type>
      <name>sourceID</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>9637ca6249402efaf6c969387dcd8a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>fileName</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>916950e28db70985e81b5901faf9195d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxULongLong</type>
      <name>size</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>248d30284120f828f93a151da78bbfc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TagList</type>
      <name>taglist</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>abc8c486ab105ca63557447df9e54c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>lifetime</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>5780836d3aaf4065d0f67071bcb49b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>source</name>
      <anchorfile>classKademlia_1_1CEntry.html</anchorfile>
      <anchor>9953fba97134f12da59495c5a47f49f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CKademliaError</name>
    <filename>classKademlia_1_1CKademliaError.html</filename>
    <member kind="function">
      <type></type>
      <name>CKademliaError</name>
      <anchorfile>classKademlia_1_1CKademliaError.html</anchorfile>
      <anchor>2c701ec748c494989df353c2381a6654</anchor>
      <arglist>(int errorCode, const wxString &amp;errorDescription)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_ErrorCode</name>
      <anchorfile>classKademlia_1_1CKademliaError.html</anchorfile>
      <anchor>1151e50e789f01abe25c9c20f0512050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxString</type>
      <name>m_ErrorDescription</name>
      <anchorfile>classKademlia_1_1CKademliaError.html</anchorfile>
      <anchor>edb03ce467c4c4d7a0af6b430a5fc978</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CIndexed</name>
    <filename>classKademlia_1_1CIndexed.html</filename>
    <member kind="function">
      <type></type>
      <name>CIndexed</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>465137bdde99f3073957a96c4307f12a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CIndexed</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>dec46216cf0c93b583479513bdbb9559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddKeyword</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>833003659b63e145c626ca79374baec1</anchor>
      <arglist>(const CUInt128 &amp;keyWordID, const CUInt128 &amp;sourceID, Kademlia::CEntry &amp;entry, uint8 &amp;load)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddSources</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>d0cd6cdd8e2d05cd01dacfc865d87bae</anchor>
      <arglist>(const CUInt128 &amp;keyWordID, const CUInt128 &amp;sourceID, Kademlia::CEntry &amp;entry, uint8 &amp;load)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddNotes</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>cdd44a75c19f5c87600cc6ce4f03276e</anchor>
      <arglist>(const CUInt128 &amp;keyID, const CUInt128 &amp;sourceID, Kademlia::CEntry &amp;entry, uint8 &amp;load)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddLoad</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>675295151507dfeddaebbf7ef64aa98b</anchor>
      <arglist>(const CUInt128 &amp;keyID, uint32 time)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetIndexedCount</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>9aee7f08662c415b64efbfc1a0fb3606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetFileKeyCount</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>fd0b9c0a4d2b51009caed4aaed1f917a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendResults</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>e92e523ca05d7b9014982df8e80b8a02</anchor>
      <arglist>(const CUInt128 &amp;keyID, std::list&lt; CSourceKeyList::iterator &gt; results, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendValidKeywordResult</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>2960df66faa57500469e7df025e49bda</anchor>
      <arglist>(const CUInt128 &amp;keyID, const SSearchTerm *pSearchTerms, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendValidSourceResult</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>74a5934ca175be956226eef7c631c203</anchor>
      <arglist>(const CUInt128 &amp;keyID, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendValidNoteResult</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>a0861eb537b024ed97b20a94f568ca51</anchor>
      <arglist>(const CUInt128 &amp;keyID, const CUInt128 &amp;CheckID, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkNotInLoadStatus</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>bc46303aa0ac39468d46bd8f85ea42bc</anchor>
      <arglist>(const CUInt128 &amp;keyID)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetSourceCount</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>0969cac8332d1329c2e7a4a4dd0646a6</anchor>
      <arglist>(const CUInt128 &amp;keyID) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>GetCompleteSourceCount</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>8d84cf6770b5ee3a18b40a853b07a8e5</anchor>
      <arglist>(const CUInt128 &amp;keyID) const </arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_totalIndexSource</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>859ee86ff8007206603c5149e099652e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32</type>
      <name>m_totalIndexKeyword</name>
      <anchorfile>classKademlia_1_1CIndexed.html</anchorfile>
      <anchor>0844ab4086e3743ebcd71927d812a6ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CKademlia</name>
    <filename>classKademlia_1_1CKademlia.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>start</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>26e5b1020c1fb7e3af1e37d3e921224c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>start</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>a8e3e9fbecccae8ad10bbdb5049c131f</anchor>
      <arglist>(CPrefs *prefs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stop</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>2e61504764fd7c763225bd5e599dfb9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CPrefs *</type>
      <name>getPrefs</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>70ef306b96432cae7f01a7a690b1560a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CRoutingZone *</type>
      <name>getRoutingZone</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>b07bf1a6328c48054d8afee0bca5f7fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CKademliaUDPListener *</type>
      <name>getUDPListener</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>becadaf01071e609b37929efbc3f9c1b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CIndexed *</type>
      <name>getIndexed</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>afa3e3e244edae68eb2c690ef0ef5971</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isRunning</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>890566273244d524e5cfc7a487d9d010</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isConnected</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>cf486a2f242af324971f15e19f298949</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>getKademliaUsers</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>bdddca8e91c65f1d2f26174d7b69fb36</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>getKademliaFiles</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>0b5515d2819a7865fe6b1c06ad3a8cab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>getTotalStoreKey</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>b8755057cffe6d4d0353df7ec6b19c82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>getTotalStoreSrc</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>b0ca609b9d11552660968cbeee68a243</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>getTotalStoreNotes</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>50f0eea58ec27a8b2775ffd46f221505</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32</type>
      <name>getTotalFile</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>7caaa31b7a40c43f36c49f50e3af1a4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getPublish</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>6806fadf03cc9d159be0bacc0bb890d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CI2PAddress</type>
      <name>getDestAddress</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>f2cc2164c001a532565ec99ca251c972</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bootstrap</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>8b559d15258e9990cd2cb90ce118d548</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>processPacket</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>953f92e4a04c54fe657c7f916a1c4f80</anchor>
      <arglist>(const byte *data, uint32 lenData, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addEvent</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>7a5a6ef7a8f396e3392a9c7d64f57a2d</anchor>
      <arglist>(CRoutingZone *zone)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeEvent</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>ce51c4e210a1b6b41beda02dd1cc603d</anchor>
      <arglist>(CRoutingZone *zone)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>process</name>
      <anchorfile>classKademlia_1_1CKademlia.html</anchorfile>
      <anchor>f42476c36073012323ae78edbe4b9276</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CPrefs</name>
    <filename>classKademlia_1_1CPrefs.html</filename>
    <member kind="function">
      <type></type>
      <name>~CPrefs</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>3d055e447f95d70e93a28bf2951831ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKadID</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>297c7e0cf5568020af83e3c082de1e6d</anchor>
      <arglist>(const CUInt128 &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>const CUInt128 &amp;</type>
      <name>getKadID</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>225f026bdc72878a11903d3af084b949</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientHash</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>eac347fca6e523173d9bccde833303c3</anchor>
      <arglist>(const CUInt128 &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>const CUInt128 &amp;</type>
      <name>getClientHash</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>d8ed8321cd470329ace4b75a3b6ff0f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>getDestAddress</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>09c6501e76aebce30a26d6fac4600cd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDestAddress</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>cac36f0c229eaf17003a02e5ec9231a3</anchor>
      <arglist>(const CI2PAddress &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasHadContact</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>87a47ed5dd61a656ae599a58f7d99f0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastContact</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>553195bb5517bbed47d209310d4681a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLostConnection</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>5e0a0430468d60f256a1b46e4bca9148</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getLastContact</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>032d2a4a432671a67a6691c708f776c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>getTotalFile</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>443c61aa6d17f46b4dd184f555fb5267</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalFile</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>35bb9b0949de156420fccc4edcd3457b</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>getTotalStoreSrc</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>5a052a4041644ec24db775b0d5cb0e7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalStoreSrc</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>874bc37839365e94c00ad83698a5247e</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>getTotalStoreKey</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>ea0e78913ea547aec7f778ef1f4691f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalStoreKey</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>4bcca35f6cb53c1ed280826e41cbe6a2</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>getTotalSource</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>d4884833e798b998116f34aace2b178b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalSource</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>17cf49213f02a65e6e52859e3c88ef03</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>getTotalNotes</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>515f5fe24d183dc6d347c7f7f6d407cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalNotes</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>47b870be9fb9c28c3f1865f71acc1fb7</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function">
      <type>uint8</type>
      <name>getTotalStoreNotes</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>c253e86c6954c77963d688cd9170e689</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTotalStoreNotes</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>f0c9860878ed0da3739f7eb1bc6d01c4</anchor>
      <arglist>(uint8 val)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getKademliaUsers</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>e59aa724c094044fc4d13ec88cebb79d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKademliaUsers</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>e2f35f4d10ed2db4b9b04d1b2239f6d7</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getKademliaFiles</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>6fbbfd2e1c3aa10e87121a667a0d1423</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKademliaFiles</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>0d76aa6fa7dc02710bc066d6f86ffb2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPublish</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>c357abbdf95bd59b56fc90562305c4a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPublish</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>54b6b08c19c024fd04526ce82eb5cc0b</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CPrefs *</type>
      <name>getInstance</name>
      <anchorfile>classKademlia_1_1CPrefs.html</anchorfile>
      <anchor>2910d57b709bc09edd193f24bb8cb347</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CSearch</name>
    <filename>classKademlia_1_1CSearch.html</filename>
    <member kind="enumvalue">
      <name>NODE</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560feac88c4663adb90dfcf3c9f6925abe1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODECOMPLETE</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560f883c63325da5592b669f4fd79cff4a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560f86302de2f7b78c9c5898f34f34081270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEYWORD</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560ff02593d890d7557cb1b23e00dbc7b13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTES</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560fe58c146af30e5b7809b3413c5ad3ea87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOREFILE</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560fa1762a46e9812ea2a3cd5e6b140d1f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOREKEYWORD</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560fda9742477f976e9d00fa19cd479c7092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STORENOTES</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>5cf0fcaea640f40cab7fedb320b8560f3efc1c427ff4fc64f34589075ab0d71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getSearchID</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>e43935cdb5ca5353fcd1f260ddb3f79d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getSearchTypes</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>ae059c5bdedf40fd3fe7453be9d468da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSearchTypes</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>8222072a74b64e6236c959dd60c4d155</anchor>
      <arglist>(uint32 val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTargetID</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>9518f1ae88b13111fd11bc8054f39928</anchor>
      <arglist>(CUInt128 val)</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getSearchLifetime</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>342e75e7ba131402e7ce5fa19529c39a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getSearchMaxAnswers</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>bfe8b5a60127fbdb71fd62904f83aefe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getSearchAnswers</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>06e1a8e91930c7de06bd96319281b5ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getCompletedPeers</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>b9597b4dccf020fde0be3f9e37c858a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getKadPacketSent</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>e79567cb52c3774e4d69ce66b7a2470e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getRequestAnswer</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>44d8f165e1a68ea62bfefbef01b3739f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendRequestToSelectedPeers</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>df7beef692ca4b1e063d4c939911c801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString &amp;</type>
      <name>getFileName</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>c3217006513205044cdda35aa0cba870</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>20f58202c52e05e22f5340ba2c622da8</anchor>
      <arglist>(const wxString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128</type>
      <name>getTarget</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>a7aa426eadd34fc21d70b2c7d7587bf3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFileID</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>9f068285e4757cc39737bfc56bcba75a</anchor>
      <arglist>(const CUInt128 &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PreparePublishPacket</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>d6b4c909faf72cd530faf27682798b1d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PreparePacketForTags</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>16d61620187e6eb4dfe8b603c62acb1a</anchor>
      <arglist>(CMemFile *packet, CKnownFile *file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Stoping</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>7ccbc3edef61cd0ad7ba75116270d0f1</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getNodeLoad</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>decf8c48594b64e50d283afb99673a91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getNodeLoadResonse</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>27022442e0129b7da001d3ce7c4bbc8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getNodeLoadTotal</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>8f02a4046f70b3b4f75214ed7099d93e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNodeLoad</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>b3e2aa4f7a7d009d8aaef9d4c73eb481</anchor>
      <arglist>(uint8 load)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CSearch</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>e7964dbe5cd3685fe4d93d8a49564b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CSearch</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>3e98580dad260e1d01f481502446d5f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CUInt128</type>
      <name>m_keywordPublish</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>411aa9b4f3dd81bc1efda3a985405b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CMemFile *</type>
      <name>m_bio</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>aeae0d2fa952c3f764cd21bc3dcf1cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CSearchManager</name>
      <anchorfile>classKademlia_1_1CSearch.html</anchorfile>
      <anchor>045377c2857a68ea782b0ac776d24e5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CSearchManager</name>
    <filename>classKademlia_1_1CSearchManager.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopSearch</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>b4f65649c61b3f11717ce5f68cf59b7a</anchor>
      <arglist>(uint32 searchID, bool delayDelete)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopAllSearches</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>5e238cc46225615e2e403d78899c4448</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CSearch *</type>
      <name>prepareLookup</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>9184e3e42d572abed63cf35d5d332db6</anchor>
      <arglist>(uint32 type, bool start, const CUInt128 &amp;id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CSearch *</type>
      <name>prepareFindKeywords</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>38c95547576729525d6d7aecbf3e197a</anchor>
      <arglist>(const wxString &amp;keyword, CMemFile *ed2k_packet, uint32 searchid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>startSearch</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>bfd0dc6f1d8a00ecdcf87a7f308bd82f</anchor>
      <arglist>(CSearch *pSearch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleteSearch</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>69fd8efccfd22f52d6675c1e01e36935</anchor>
      <arglist>(CSearch *pSearch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>processGotPeerListForTarget</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>eabe0d9dc1899ed70d918c22537dffbb</anchor>
      <arglist>(const CUInt128 &amp;target, const CI2PAddress &amp;fromDest, ContactList *results)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>processSearchResultList</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>a32292be4b3042f3f1e633223a1a2bad</anchor>
      <arglist>(CMemFile &amp;bio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>processPublishResult</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>69f7f6b5d04cbf73f9f84f779c405138</anchor>
      <arglist>(CMemFile &amp;bio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getWords</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>dbe989af93f3e2c5f9020441eb73c383</anchor>
      <arglist>(const wxString &amp;str, WordList *words)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>updateStats</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>ede2b44f4102df9b6cdde1738fd03380</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNodeSearch</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>ab3591e041053cdd06009d956923e655</anchor>
      <arglist>(const CUInt128 &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>alreadySearchingFor</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>72d52fd3bfacbeb70051e4f06646cbed</anchor>
      <arglist>(const CUInt128 &amp;target)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CRoutingZone</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>565f90e6553418b810b84ff686ecd82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CKademlia</name>
      <anchorfile>classKademlia_1_1CSearchManager.html</anchorfile>
      <anchor>ae6fe0fc4b201e36eb06a5bcab7f0112</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CKademliaUDPListener</name>
    <filename>classKademlia_1_1CKademliaUDPListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CKademliaUDPListener</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>a2437dbfcb2f1549086e6f4e1ff30b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bootstrap</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>815e4fc85092b1f463e2142fde600744</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMyDetails</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>846a5aba5081b2b9d681040379ba5d23</anchor>
      <arglist>(byte opcode, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendNullPacket</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>de065b726a7966f02641be4f4f9428eb</anchor>
      <arglist>(byte opcode, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>processPacket</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>dcc8b3ca153d9f3ffb5244ebc47a1f4a</anchor>
      <arglist>(const byte *data, uint32 lenData, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendPacket</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>10e6d8519b9dddf5e921e8dbfbd90737</anchor>
      <arglist>(CMemFile *data, byte opcode, const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processPublishRequest</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>dc75b81d84f1e680277619a3833dfb8d</anchor>
      <arglist>(CMemFile &amp;packetData, const CI2PAddress &amp;dest, bool self=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processPublishNotesRequest</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>3a84eb3f4cb3c710f6e7375dca48d8a3</anchor>
      <arglist>(CMemFile &amp;packetData, const CI2PAddress &amp;dest, bool self=false)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CSearch</name>
      <anchorfile>classKademlia_1_1CKademliaUDPListener.html</anchorfile>
      <anchor>d5fbf7741334ba6b5362969be927d2eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CContact</name>
    <filename>classKademlia_1_1CContact.html</filename>
    <member kind="function">
      <type></type>
      <name>~CContact</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>497e5ec26879482deb732f36924da8af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CContact</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>21a41a4e11f75368772f54f8f39c8eef</anchor>
      <arglist>(CFileDataIO &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>const int</type>
      <name>writeToFile</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>9d8c5a07f4be7f52c7444a152d7ebce4</anchor>
      <arglist>(CFileDataIO &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addedToKadNodes</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>505f1b40c4141677b79ada83ec00b839</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removedFromKadNodes</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>4ffc69d00cd425e83614e8fd7e68f32e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inKadNodes</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>23dbe72c8ccce1678feaac9cf7fc8613</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>getInfoString</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>506dd1c7f647a5941b86733a1067c0fb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const CUInt128 &amp;</type>
      <name>getClientID</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>782c8538902bc20303c461a3da90a8e8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientID</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>e9e71f3ef6d40838ade71c99b41891d1</anchor>
      <arglist>(const CUInt128 &amp;clientID)</arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>getClientIDString</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>40d6a15d5c24b42128c34545938f843e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const CUInt128 &amp;</type>
      <name>getDistance</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>0b409f8e54cb1e1f45dbaf131dd9872d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const wxString</type>
      <name>getDistanceString</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>2c554829dddd9fc2fbfb6ca328219f2b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>getTCPDest</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>160374e9c689c7ac656c4a41d94013ef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTCPDest</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>309468a4427be53090247913104de751</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>CI2PAddress</type>
      <name>getUDPDest</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>70bef5d5990411649c1bbf714fbeb23a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUDPDest</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>ced724d6aaac6561dcb847c98b2d942f</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistanceFrom</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>3f439f049d0547bd644f0e8d08f15da5</anchor>
      <arglist>(const CUInt128 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>byte</type>
      <name>getType</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>988e11cc14b450821b61e38c71312c54</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateType</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>e4f79680a7b22d3839701ff829858635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkingType</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>7ea95292f375e21488655693a8bb756c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inUse</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>59c3848d6cf1dd337db1862c6faa609d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incUse</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>69f1a360af4751ee01e08a91c969f1b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incUse</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>1b3df610b935340cdef5686ae7842901</anchor>
      <arglist>(const char[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decUse</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>0a3d9b72f3be3210401b9db90486804b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decUse</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>670aeca17920001ec643a24e8d4350c2</anchor>
      <arglist>(const char[])</arglist>
    </member>
    <member kind="function">
      <type>const time_t</type>
      <name>getCreatedTime</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>f494072b9a51346519ee062b89b8c0f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpireTime</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>c2cf0b35aedb65a89c60cf281d81c6fa</anchor>
      <arglist>(time_t value)</arglist>
    </member>
    <member kind="function">
      <type>const time_t</type>
      <name>getExpireTime</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>30e9a4e49d51579e0ebb430de7c35d3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const time_t</type>
      <name>getLastTypeSet</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>1513578c474563b6f391c0892330f1ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const time_t</type>
      <name>getLastTypeUpdate</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>3251e16067166ef522de5ededf5a410a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CContact</type>
      <name>Self</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>c2dcaf88422d0f219c504fc6d182c6a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::set&lt; CContact * &gt; &amp;</type>
      <name>getKadContacts</name>
      <anchorfile>classKademlia_1_1CContact.html</anchorfile>
      <anchor>f1e5d87809ffebf457b3b14fd3ab1e98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::ContactList</name>
    <filename>classKademlia_1_1ContactList.html</filename>
    <base protection="private">std::list</base>
    <member kind="typedef">
      <type>std::list&lt; CContact * &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>574e5b6af68d388b6c5e2d770e92dca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CContact * &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>cfbfacf90893b9bb2f1aff09497eb71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>7fe03596833126eac56744ee5a459853</anchor>
      <arglist>(CContact *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>e37ba5ccb9b1f932fd524d3b1f0787a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>275869aab8db33751dea1607ac76a67c</anchor>
      <arglist>(CContact *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>64e4e750b19e151258b7ae26009d4434</anchor>
      <arglist>(iterator, iterator, iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ContactList</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>8f3361944a317712dff8835d4eba8970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>e9875a57773468db29d8f492f3c63138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>2f87890240933b12b7fa94874b314d35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>b20cf62c3b2bc4899c0385858aeef5c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>453ab4d4afa1f1b0d9e7a8f570945fde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>074be5317c70f88b355c7d5c36417596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>d246945c8b324a4955a670b6ec41623a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CContact *</type>
      <name>front</name>
      <anchorfile>classKademlia_1_1ContactList.html</anchorfile>
      <anchor>0d360ee83c20d07d75d366805a3e9504</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CRoutingBin</name>
    <filename>classKademlia_1_1CRoutingBin.html</filename>
    <member kind="function">
      <type></type>
      <name>~CRoutingBin</name>
      <anchorfile>classKademlia_1_1CRoutingBin.html</anchorfile>
      <anchor>fed1a9f36434ac98978cb6a4c38cf895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CRoutingZone</name>
      <anchorfile>classKademlia_1_1CRoutingBin.html</anchorfile>
      <anchor>565f90e6553418b810b84ff686ecd82f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CRoutingZone</name>
    <filename>classKademlia_1_1CRoutingZone.html</filename>
    <member kind="function">
      <type></type>
      <name>CRoutingZone</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>60652c68aef1f5cf924393745181bfe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CRoutingZone</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>efd5ba05b8b91897785132b07bb62e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onBigTimer</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>85bcba9bf1d96e18b4c75565f1c1776a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>onSmallTimer</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>5f6db2c8e7aeb2fba0dca1ce45bf6684</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>CContact *</type>
      <name>add</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>8d587b947d2819c2a792074b5a90d499</anchor>
      <arglist>(CContact *contact, bool trusted=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wouldLikeToAdd</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>5162fd79de13873853181f6c1e9d7f4b</anchor>
      <arglist>(const CUInt128 &amp;id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>002ba627bfa82cdc80169b6936545bb6</anchor>
      <arglist>(const CUInt128 &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAlive</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>640ac3a8767244309afaad01ffb0552e</anchor>
      <arglist>(const CI2PAddress &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>CContact *</type>
      <name>getContact</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>93de8b6e102aa8911e3179d162da3246</anchor>
      <arglist>(const CUInt128 &amp;id) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getNumContacts</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>80e26be104824ed0ad1d52e1d7fc9e35</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllEntries</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>eb4104a26c12cf6f28579251a51de909</anchor>
      <arglist>(ContactList *result, bool emptyFirst=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getClosestTo</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>9212427e7882bf1ba84ea7d9bb7c6bc2</anchor>
      <arglist>(uint32 maxType, const CUInt128 &amp;target, const CUInt128 &amp;distance, uint32 maxRequired, ContactMap *result, bool emptyFirst=true) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getBootstrapContacts</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>572566df0c0e9a03327a9ed039cfd48d</anchor>
      <arglist>(ContactList *results, uint32 maxRequired)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDirty</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>d5644d62b6cf800336b5f29d43e48820</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>estimateCount</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>14f051a1dad8fe62772e191c4467fab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>a16bcde1fa5d8a7abd209079a1270ced</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>m_nextBigTimer</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>3d8b981a6fc951c2dd70e78fa2682b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>m_nextSmallTimer</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>3cac929aa5e7be17067c59a9cc9b4f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CRoutingBin</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>69bd6595081eacf7c0d4007bb346d818</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CContact</name>
      <anchorfile>classKademlia_1_1CRoutingZone.html</anchorfile>
      <anchor>9c269735859af7390439933fd82cac36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kademlia::CUInt128</name>
    <filename>classKademlia_1_1CUInt128.html</filename>
    <member kind="function">
      <type></type>
      <name>CUInt128</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>212cdf88a6e527ff0a9dddaced37e478</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CUInt128</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>35e762ab44b700ef7daacb42242cd1a2</anchor>
      <arglist>(bool fill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CUInt128</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>abe229eefe9fbe1ca269ed81f855760d</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CUInt128</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>638cdaed397e6d160779f89d87d9e33f</anchor>
      <arglist>(const byte *valueBE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CUInt128</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>e3a87f4c03e19d2b81370ef03a535e51</anchor>
      <arglist>(const CUInt128 &amp;value, uint32 numBits=128)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CUInt128</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>7506fc57060ba0dd62c0dd36f61f153a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const byte *</type>
      <name>getData</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>e6dd16adc06865f079d4f570b2e093f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>byte *</type>
      <name>getDataPtr</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>9bfd5731db4e2237b3ab8fd997d3f926</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getBitNumber</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>5af1a73f727941de1977c5b631b4c681</anchor>
      <arglist>(uint32 bit) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>3009963c0a4dcf992ff8ded5fc6291d1</anchor>
      <arglist>(const CUInt128 &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>d7ee63796bd6768bb021fef95171dc46</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>toHexString</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>faf2d44a27530e260c247d5213b570a8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>toBinaryString</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>6a699b0466cfc5ce84831cc81bd1ea2f</anchor>
      <arglist>(bool trim=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toByteArray</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>bd31e9fbe1e05718cca89e30c702016f</anchor>
      <arglist>(byte *b) const </arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>get32BitChunk</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>213dc593d9e98fb5a2c35bbd9a51be6d</anchor>
      <arglist>(int val) const </arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>setValue</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>ca4df3cf69109a9d61dc3ec173563027</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>setValue</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>fd8e7b7ea1483614af13ff1e1add3e69</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>setValueBE</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>622e9f2a09e9797e0dee7ad784616a5c</anchor>
      <arglist>(const byte *valueBE)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>setValueRandom</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>bb2e211b7abba4f58ce270e76c58429a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>setBitNumber</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>fb113f31dff40f61476bf9d7fd06be52</anchor>
      <arglist>(uint32 bit, uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>shiftLeft</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>25608fad6e324e3ac32f7e42e3ea208e</anchor>
      <arglist>(uint32 bits)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>add</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>4ae6a6d902706b0ed472b09e9d9cb202</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>add</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>83e054075f191d7efcf5e56b4b0919c0</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>subtract</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>5e9ff66cd041eb6590fc95a94fb3346b</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>subtract</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>a1cf7a7fcc7bacce33998e5feb3dd0c7</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>XOR</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>0c88d0e40c139957464fe9a8055f6377</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>CUInt128 &amp;</type>
      <name>XORBE</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>2b879dcc7c3a4f680f0c87680058c2fd</anchor>
      <arglist>(const byte *valueBE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>fff7bf4162db197c2fb2731ecaa62fb7</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator-</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>a297481c0c3a622de0c5a4b3c35d0702</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>77dbd7da3397c9e97f59966c0df8df94</anchor>
      <arglist>(const CUInt128 &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>0d8cadd5bc47cebfec4ebaa1f9e2cd57</anchor>
      <arglist>(const CUInt128 &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>dbacef0f5c965bf2d0bc48805a9cbf69</anchor>
      <arglist>(const CUInt128 &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>01c962940177895eb05c97c92f3a8130</anchor>
      <arglist>(const CUInt128 &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>ef2fd15c6c06a217c660e69f6e460458</anchor>
      <arglist>(const CUInt128 &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>6b8815e1b2a44e6fb6a227ea4f5113bb</anchor>
      <arglist>(const CUInt128 &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>2595570d2d57592526694852ca7e3b98</anchor>
      <arglist>(const CUInt128 &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator+</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>9f2a070f889919601786f13e01a0623b</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator-</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>c282a8ad2bb0fb24c191d6b6716e7b6f</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>032e7ace8815bf193dee84016ee01d93</anchor>
      <arglist>(uint32 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>25c0b503864f75fefe814e658970f8c8</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>5c17a8fdfd1225c4327326b8f07dcb6a</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>1bc86a5fd34a92242fe03259a9b92118</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>d89303a7532333fc98f26194608397cb</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>77b1a6aaa9b16b73646cf14623e616e9</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classKademlia_1_1CUInt128.html</anchorfile>
      <anchor>f3f314954591e7ba899c2e91b3ecb0c1</anchor>
      <arglist>(uint32 value) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>MuleExtern</name>
    <filename>namespaceMuleExtern.html</filename>
    <class kind="class">MuleExtern::wxGenericListCtrl</class>
    <class kind="class">MuleExtern::wxListCtrl</class>
  </compound>
  <compound kind="class">
    <name>MuleExtern::wxGenericListCtrl</name>
    <filename>classMuleExtern_1_1wxGenericListCtrl.html</filename>
    <base>wxControl</base>
    <member kind="function">
      <type></type>
      <name>wxGenericListCtrl</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>4385d221c849380f86313e48c29717de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxGenericListCtrl</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>49f4eadc57fea941c39f867796b97991</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;listCtrl&quot;))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~wxGenericListCtrl</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>3089d0b1bd0d0bb22273c37183ca007c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Create</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>b7b4c40a71240555ca00f7938a515cc8</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;listCtrl&quot;))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetColumn</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>4f545195da15cf971f1f951d5592244f</anchor>
      <arglist>(int col, wxListItem &amp;item) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetColumn</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>60791c0b3026648d6f6a58ab7abc4670</anchor>
      <arglist>(int col, wxListItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetColumnWidth</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>b43d0b120af9b83d6b27b3fa4458e346</anchor>
      <arglist>(int col) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetColumnWidth</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>3f3f67087c56551d349df264b253f36f</anchor>
      <arglist>(int col, int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetCountPerPage</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>99f346710cf7a37ab0148d6c7dfbcdc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetVisibleLines</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>5696c874f6ca7968a35fdbb9c7032eb9</anchor>
      <arglist>(long *first, long *last)</arglist>
    </member>
    <member kind="function">
      <type>wxRect</type>
      <name>GetViewRect</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>7d37038b939b3c98d08370cea849fe43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>a4ffdb3739634d5bb6985911793c0f50</anchor>
      <arglist>(wxListItem &amp;info) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>0687f67cf23c59a77597b6bc4f8c0b1a</anchor>
      <arglist>(wxListItem &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>SetItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>81989ab8b6351649e851fde4ee05824f</anchor>
      <arglist>(long index, int col, const wxString &amp;label, int imageId=-1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetItemState</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>bb65977c839247b3866ec8b5dd1cf3ee</anchor>
      <arglist>(long item, long stateMask) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetItemState</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>1e5058f213adbbadf09348d0badd21ca</anchor>
      <arglist>(long item, long state, long stateMask)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetItemImage</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>61cffef9d5bf45405cdfaa3de5848731</anchor>
      <arglist>(long item, int image, int selImage=-1)</arglist>
    </member>
    <member kind="function">
      <type>wxString</type>
      <name>GetItemText</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>d46fc560a61b0c2de48a4d3daaf2c3d7</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemText</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>93decd438aaf9bb63d26bcd0bcc77a1a</anchor>
      <arglist>(long item, const wxString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>wxUIntPtr</type>
      <name>GetItemData</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>d090f93be0e58ec62cc0bb41476ea7d1</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetItemData</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>c2d1ccfe0cf0de5405f5ee017930e47c</anchor>
      <arglist>(long item, long data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetItemRect</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>8237c85d2c8f6ab68531194e459e9dd0</anchor>
      <arglist>(long item, wxRect &amp;rect, int code=wxLIST_RECT_BOUNDS) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetItemPosition</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>e14d3192ec467a073c7eb4e656b78518</anchor>
      <arglist>(long item, wxPoint &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetItemPosition</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>dd9bc5004aa5bfe1206027148e2a0a70</anchor>
      <arglist>(long item, const wxPoint &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetItemCount</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>cacce60fff154ecad3e95654a16b1e72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetColumnCount</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>77c6976d2d4606067468b618de9b82f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemSpacing</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>6fc5f15486c88e532418068e7ad700d5</anchor>
      <arglist>(int spacing, bool isSmall=false)</arglist>
    </member>
    <member kind="function">
      <type>wxSize</type>
      <name>GetItemSpacing</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f8b13d795c9cf478dd43d79e9d1e256e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemTextColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>3f311a949df71a303d662b4aa11cfc49</anchor>
      <arglist>(long item, const wxColour &amp;col)</arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>GetItemTextColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>8b58fa2909c9fd1839e896f84b93b265</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemBackgroundColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>de3c7a54a90dabc2c18731ecb37993cb</anchor>
      <arglist>(long item, const wxColour &amp;col)</arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>GetItemBackgroundColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>7560d6b33804b46111e81072a69814ae</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemFont</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>af9963bb3e46b6f5d3ef615fab22b29a</anchor>
      <arglist>(long item, const wxFont &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>wxFont</type>
      <name>GetItemFont</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>656fb12af5f002296cc0f920f74da262</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetSelectedItemCount</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>6f36163871b712382933f7293e069170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>wxColour</type>
      <name>GetTextColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ceeba33a3060a6d8a3f05e4af5dd11f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTextColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>15f3ca4c17eb562099e920ca160985a6</anchor>
      <arglist>(const wxColour &amp;col)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetTopItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f7c938efcfb67ae9c679bbf781a3a7a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSingleStyle</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f22cfbb9913852ce523922f6cfca16a2</anchor>
      <arglist>(long style, bool add=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWindowStyleFlag</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>e272368f381b9e2ed26b5ae1fe597c14</anchor>
      <arglist>(long style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecreateWindow</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>72739b9b268e01dd5c17028ea0ebf7e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>GetNextItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>5eb13bcdfaec73eb60e7e4f31037eef2</anchor>
      <arglist>(long item, int geometry=wxLIST_NEXT_ALL, int state=wxLIST_STATE_DONTCARE) const </arglist>
    </member>
    <member kind="function">
      <type>wxImageListType *</type>
      <name>GetImageList</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>d072aabaa7d1b625a26053e25004668c</anchor>
      <arglist>(int which) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetImageList</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f42c7a2e02328e98a54e8f3d8959a1cd</anchor>
      <arglist>(wxImageListType *imageList, int which)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AssignImageList</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>28d0e628674682da72a15d740973c8a4</anchor>
      <arglist>(wxImageListType *imageList, int which)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Arrange</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f041785d899b9303f703042a79632c38</anchor>
      <arglist>(int flag=wxLIST_ALIGN_DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearAll</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>6e769672645190f9c53100e5657eb04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>24d2c84faa23f7929b9f267e43a1dafe</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteAllItems</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>149893091e21c55c9af09d140c833708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteAllColumns</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>689e9be30d81dc24475893a87af90177</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeleteColumn</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>3ae55c65a4972ef84d3c0ee046ba5649</anchor>
      <arglist>(int col)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetItemCount</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>a7aac49343a8db69d754903e4d95b095</anchor>
      <arglist>(long count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EditLabel</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>94537b7e8680ee432e2d14f230e89714</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Edit</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ed634eafecf94e0d4dd051d2ef39af10</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnsureVisible</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>e33c5dfd20811970515a5918c62cec80</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>FindItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>706f3077007bfeb6f29d4b58eaab06f1</anchor>
      <arglist>(long start, const wxString &amp;str, bool partial=false)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>FindItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>e9b646c9dfc6e100bcc378371d37103f</anchor>
      <arglist>(long start, wxUIntPtr data)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>FindItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>2d97b0ffe842e3646cbc73d8ef58470b</anchor>
      <arglist>(long start, const wxPoint &amp;pt, int direction)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>HitTest</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>658d9345c704e80127423f7d48df6be6</anchor>
      <arglist>(const wxPoint &amp;point, int &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>InsertItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>a729ef1d966dd1de2355ac2e57126fea</anchor>
      <arglist>(wxListItem &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>InsertItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>75b0973488d6c15cc571f2a824ac379c</anchor>
      <arglist>(long index, const wxString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>InsertItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>4254ead7deb53da5e91c95e1eda0cd80</anchor>
      <arglist>(long index, int imageIndex)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>InsertItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>bc318947422102f34d9fca054af9f5fd</anchor>
      <arglist>(long index, const wxString &amp;label, int imageIndex)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>InsertColumn</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>8e62510ed62206e8ba44a99e844db9ab</anchor>
      <arglist>(long col, wxListItem &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>InsertColumn</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>d614355cf2a6bfd90b7e41d7d9730e7c</anchor>
      <arglist>(long col, const wxString &amp;heading, int format=wxLIST_FORMAT_LEFT, int width=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ScrollList</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>d8cb2b7c7beac566532f86c8d0847039</anchor>
      <arglist>(int dx, int dy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SortItems</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>342529c90d24d0700e782d1bb20b409f</anchor>
      <arglist>(wxListCtrlCompare fn, long data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Update</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>c08014c9046e51d5ba28ffd0dcdc2d92</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InReportView</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>889fc3f46b85ef2726a6a33dbeae908d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsVirtual</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ef095ce46b4004f0be09e32748c814f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasHeader</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>19df121ef4b268e0e886bab5039f1189</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ae6dbb4a8a9903417edfcfcee4a8ad34</anchor>
      <arglist>(long item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshItems</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>32b62746557d4c01b07135764566f62f</anchor>
      <arglist>(long itemFrom, long itemTo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxDEPRECATED</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>13879c345851ff9e899e16d4206e68a0</anchor>
      <arglist>(int GetItemSpacing(bool isSmall) const )</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxVisualAttributes</type>
      <name>GetDefaultAttributes</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>c2555a73bb1151c3d041fb5d2ae1e8d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnInternalIdle</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f873b84f2267f2c4fa73a2386ea4c1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OnSize</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>81b7575f671b9ec4d79bd1590777f1fd</anchor>
      <arglist>(wxSizeEvent &amp;event)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Refresh</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>1d070fd4300bc7b1771290081767b5b6</anchor>
      <arglist>(bool eraseBackground=true, const wxRect *rect=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Freeze</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>283564df197e56496a160900238ec0e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Thaw</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>192a8a1a62a81df0b992a7822a6dbaa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>OnDrawItem</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>c710d99e0c19cb99ae07ddc77f58fa18</anchor>
      <arglist>(int item, wxDC *dc, const wxRect &amp;rect, const wxRect &amp;rectHL, bool highlighted)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SetBackgroundColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>2b4efa0b16fc5c1e67e5d609c2706ba8</anchor>
      <arglist>(const wxColour &amp;colour)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SetForegroundColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ba4e6eb50b50bfd9b77a37b038991e54</anchor>
      <arglist>(const wxColour &amp;colour)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxColour</type>
      <name>GetBackgroundColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>d7364e5859bbedb07f03e6c334f95d4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxColour</type>
      <name>GetForegroundColour</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ba2b5230691dc837570413937f33ac83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SetFont</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>966482a6daaec55269810a04e7592205</anchor>
      <arglist>(const wxFont &amp;font)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SetCursor</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>edbb35d5d7203c48cfdd7ba4690872e6</anchor>
      <arglist>(const wxCursor &amp;cursor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DoPopupMenu</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>cc34d97dd48659357616a3bad7c43f2b</anchor>
      <arglist>(wxMenu *menu, int x, int y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ShouldInheritColours</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>f2e4537560039aabc5cd5cf46235375d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFocus</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>57dcc702cdffd9652adc9b06b55614ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetFocus</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>b869fb7b567ef2c0c7119316d4548e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual wxSize</type>
      <name>DoGetBestSize</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>c5c53d913b5c076d2e96916850f8f604</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static wxVisualAttributes</type>
      <name>GetClassDefaultAttributes</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>b81a6f3484d0b244b7d17e326b931fff</anchor>
      <arglist>(wxWindowVariant variant=wxWINDOW_VARIANT_NORMAL)</arglist>
    </member>
    <member kind="variable">
      <type>wxImageListType *</type>
      <name>m_imageListNormal</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>598e7f3ba3cd38ace89f9348e47d689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxImageListType *</type>
      <name>m_imageListSmall</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>11426ce330561f4227ab49389250ba54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxImageListType *</type>
      <name>m_imageListState</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>6f58b596d772a01aa9c31ba8be29d774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_ownsImageListNormal</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>e793bd2f47b3615b5f2536897dc6935e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_ownsImageListSmall</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>1479ff91c5b75fee589131404a97eb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>m_ownsImageListState</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>ef4ba6d011fce24c909ba84e54eb0a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxListHeaderWindow *</type>
      <name>m_headerWin</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>516482033c7b1e4715b752cfaa318715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxListMainWindow *</type>
      <name>m_mainWin</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>559eb8ab289441d3926b3bd817bbbbd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>wxCoord</type>
      <name>m_headerHeight</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>7045fc790d4a3b0596e60d62c9e06167</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual wxString</type>
      <name>OnGetItemText</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>5dc78c2bce3a35a2958b7140fffba6dc</anchor>
      <arglist>(long item, long column) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>OnGetItemImage</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>fafdc0fe04369d9eb2b508548ba48cb2</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual wxListItemAttr *</type>
      <name>OnGetItemAttr</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>19e0eac1c6a678595323fd93e05db146</anchor>
      <arglist>(long item) const </arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>wxListMainWindow</name>
      <anchorfile>classMuleExtern_1_1wxGenericListCtrl.html</anchorfile>
      <anchor>758f180ef476479575b310071bace4fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MuleExtern::wxListCtrl</name>
    <filename>classMuleExtern_1_1wxListCtrl.html</filename>
    <base>MuleExtern::wxGenericListCtrl</base>
    <member kind="function">
      <type></type>
      <name>wxListCtrl</name>
      <anchorfile>classMuleExtern_1_1wxListCtrl.html</anchorfile>
      <anchor>02eb8b1232f7529642a8e4ad7dd3b72b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>wxListCtrl</name>
      <anchorfile>classMuleExtern_1_1wxListCtrl.html</anchorfile>
      <anchor>f569d3d8b1837422746800af413402cd</anchor>
      <arglist>(wxWindow *parent, wxWindowID winid=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxLC_ICON, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxT(&quot;listCtrl&quot;))</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>src/utils/aLinkCreator/</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/</path>
    <filename>dir_61e5c01cdf1c1af7314dfe8b382520ba.html</filename>
    <dir>src/utils/aLinkCreator/src/</dir>
    <file>alc.xpm</file>
  </compound>
  <compound kind="dir">
    <name>src/utils/amps/</name>
    <path>/media/brun/progs/iMule/src/utils/amps/</path>
    <filename>dir_5bfe44ad95b67788bb44d9dbfd4a7531.html</filename>
    <dir>src/utils/amps/langs/</dir>
    <file>index.php</file>
  </compound>
  <compound kind="dir">
    <name>src/utils/cas/</name>
    <path>/media/brun/progs/iMule/src/utils/cas/</path>
    <filename>dir_15754236f3824c0df4de0d6e8d3f605d.html</filename>
    <file>cas.c</file>
    <file>configfile.c</file>
    <file>configfile.h</file>
    <file>functions.c</file>
    <file>functions.h</file>
    <file>graphics.c</file>
    <file>graphics.h</file>
    <file>html.c</file>
    <file>html.h</file>
    <file>lines.c</file>
    <file>lines.h</file>
    <file>version.h</file>
  </compound>
  <compound kind="dir">
    <name>src/webserver/chicane/</name>
    <path>/media/brun/progs/iMule/src/webserver/chicane/</path>
    <filename>dir_77dea5a1c81d312623c15717d9aca4c0.html</filename>
    <file>downloads.php</file>
    <file>index.php</file>
    <file>login.php</file>
    <file>preferences.php</file>
    <file>search.php</file>
    <file>servers.php</file>
    <file>shared.php</file>
    <file>stat_graphs.php</file>
    <file>stat_tree.php</file>
  </compound>
  <compound kind="dir">
    <name>src/libs/common/</name>
    <path>/media/brun/progs/iMule/src/libs/common/</path>
    <filename>dir_95f6b82e2663c3b1fbb4243c9fd9a886.html</filename>
    <file>Format.cpp</file>
    <file>Format.h</file>
    <file>MD5Sum.cpp</file>
    <file>MD5Sum.h</file>
    <file>MuleDebug.cpp</file>
    <file>MuleDebug.h</file>
    <file>StringFunctions.cpp</file>
    <file>StringFunctions.h</file>
  </compound>
  <compound kind="dir">
    <name>src/webserver/default/</name>
    <path>/media/brun/progs/iMule/src/webserver/default/</path>
    <filename>dir_4d4324eec083b1769423632b8430e0a2.html</filename>
    <file>downloads.php</file>
    <file>index.php</file>
    <file>login.php</file>
    <file>preferences.php</file>
    <file>search.php</file>
    <file>servers.php</file>
    <file>shared.php</file>
    <file>stat_graphs.php</file>
    <file>stat_tree.php</file>
  </compound>
  <compound kind="dir">
    <name>src/libs/ec/</name>
    <path>/media/brun/progs/iMule/src/libs/ec/</path>
    <filename>dir_67d671554db92f1f961e603e8cc434a7.html</filename>
    <file>ECCodes.h</file>
    <file>ECFileConfig.h</file>
    <file>ECPacket.cpp</file>
    <file>ECPacket.h</file>
    <file>ECSocket.cpp</file>
    <file>ECSocket.h</file>
    <file>ECSpecialTags.cpp</file>
    <file>ECSpecialTags.h</file>
    <file>RemoteConnect.cpp</file>
    <file>RemoteConnect.h</file>
  </compound>
  <compound kind="dir">
    <name>src/extern/</name>
    <path>/media/brun/progs/iMule/src/extern/</path>
    <filename>dir_466f12ecc04c5ec5fd1dfca805562d9a.html</filename>
    <file>listctrl.262.cpp</file>
    <file>listctrl.262.h</file>
  </compound>
  <compound kind="dir">
    <name>src/libs/i2p/</name>
    <path>/media/brun/progs/iMule/src/libs/i2p/</path>
    <filename>dir_11aa4f498ba281d9924264e71a49e64b.html</filename>
    <file>b64codec.h</file>
    <file>CI2PAddress.cpp</file>
    <file>CI2PAddress.h</file>
    <file>CI2PRouter.cpp</file>
    <file>CI2PRouter.h</file>
    <file>CI2PRouterThread.java</file>
    <file>CMuleLogger.java</file>
    <file>CMuleLoggerImpl.cpp</file>
    <file>CSamLauncher.cpp</file>
    <file>CSamLauncher.h</file>
    <file>CSamSession.cpp</file>
    <file>CSamSession.h</file>
    <file>I2PRouter.java</file>
    <file>JConversions.cpp</file>
    <file>JConversions.h</file>
    <file>myMutexLocker.cpp</file>
    <file>myMutexLocker.h</file>
    <file>test-socket.h</file>
    <file>test.java</file>
    <file>test2.cpp</file>
    <file>test3.cpp</file>
    <file>test4.cpp</file>
    <file>test4j.java</file>
    <file>test5.cpp</file>
    <file>test5j.java</file>
    <file>test6.cpp</file>
    <file>test7-socket.cpp</file>
    <file>wxI2PDatagramSocket.cpp</file>
    <file>wxI2PDatagramSocket.h</file>
    <file>wxI2PEvents.cpp</file>
    <file>wxI2PEvents.h</file>
    <file>wxI2PSocket.cpp</file>
    <file>wxI2PSocket.h</file>
    <file>wxI2PSocketBase.cpp</file>
    <file>wxI2PSocketBase.h</file>
    <file>wxI2PSocketClient.cpp</file>
    <file>wxI2PSocketClient.h</file>
    <file>wxI2PSocketServer.cpp</file>
    <file>wxI2PSocketServer.h</file>
    <file>WxStringWriter.java</file>
    <file>wxStringWriterImpl.cpp</file>
  </compound>
  <compound kind="dir">
    <name>src/kademlia/kademlia/</name>
    <path>/media/brun/progs/iMule/src/kademlia/kademlia/</path>
    <filename>dir_f4fb4841fa18bc8401c7e5471a84e41a.html</filename>
    <file>Defines.h</file>
    <file>Entry.cpp</file>
    <file>Entry.h</file>
    <file>Error.h</file>
    <file>Indexed.cpp</file>
    <file>Indexed.h</file>
    <file>Kademlia.cpp</file>
    <file>Kademlia.h</file>
    <file>Prefs.cpp</file>
    <file>Prefs.h</file>
    <file>Search.cpp</file>
    <file>Search.h</file>
    <file>SearchManager.cpp</file>
    <file>SearchManager.h</file>
  </compound>
  <compound kind="dir">
    <name>src/kademlia/</name>
    <path>/media/brun/progs/iMule/src/kademlia/</path>
    <filename>dir_e8a89008ec8fb08a191d5f65eaa77f15.html</filename>
    <dir>src/kademlia/kademlia/</dir>
    <dir>src/kademlia/net/</dir>
    <dir>src/kademlia/routing/</dir>
    <dir>src/kademlia/utils/</dir>
  </compound>
  <compound kind="dir">
    <name>src/utils/amps/langs/</name>
    <path>/media/brun/progs/iMule/src/utils/amps/langs/</path>
    <filename>dir_b5d6373077c155776750e771e98fb959.html</filename>
    <file>ca.inc</file>
    <file>de.inc</file>
    <file>en.inc</file>
    <file>es.inc</file>
    <file>eu.inc</file>
    <file>fi.inc</file>
    <file>fr.inc</file>
    <file>hu.inc</file>
    <file>it.inc</file>
    <file>nl.inc</file>
    <file>pl.inc</file>
    <file>pt.inc</file>
    <file>pt_BR.inc</file>
  </compound>
  <compound kind="dir">
    <name>src/libs/</name>
    <path>/media/brun/progs/iMule/src/libs/</path>
    <filename>dir_2cd833e05f0617c6c62363757e373ccf.html</filename>
    <dir>src/libs/common/</dir>
    <dir>src/libs/ec/</dir>
    <dir>src/libs/i2p/</dir>
  </compound>
  <compound kind="dir">
    <name>src/kademlia/net/</name>
    <path>/media/brun/progs/iMule/src/kademlia/net/</path>
    <filename>dir_82ac998d045a56fae3c10bac31b838f1.html</filename>
    <file>KademliaUDPListener.cpp</file>
    <file>KademliaUDPListener.h</file>
  </compound>
  <compound kind="dir">
    <name>src/webserver/php-default/</name>
    <path>/media/brun/progs/iMule/src/webserver/php-default/</path>
    <filename>dir_d6a5471b1451784b319011337039909d.html</filename>
    <file>footer.php</file>
    <file>imuleweb-main-dload.php</file>
    <file>imuleweb-main-kad.php</file>
    <file>imuleweb-main-prefs.php</file>
    <file>imuleweb-main-search.php</file>
    <file>imuleweb-main-servers.php</file>
    <file>imuleweb-main-shared.php</file>
    <file>imuleweb-main-stats.php</file>
    <file>login.php</file>
    <file>stats.php</file>
    <file>stats_tree.php</file>
  </compound>
  <compound kind="dir">
    <name>src/pixmaps/</name>
    <path>/media/brun/progs/iMule/src/pixmaps/</path>
    <filename>dir_2b19152645605c55e2cfa8991ca56325.html</filename>
    <file>chat.ico.xpm</file>
    <file>mule_Tr_grey.ico.xpm</file>
    <file>mule_Tr_grey_big.ico.xpm</file>
    <file>mule_Tr_yellow.ico.xpm</file>
    <file>mule_Tr_yellow_big.ico.xpm</file>
    <file>mule_TrayIcon.ico.xpm</file>
    <file>mule_TrayIcon_big.ico.xpm</file>
    <file>sort_dn.xpm</file>
    <file>sort_dnx2.xpm</file>
    <file>sort_up.xpm</file>
    <file>sort_upx2.xpm</file>
  </compound>
  <compound kind="dir">
    <name>src/kademlia/routing/</name>
    <path>/media/brun/progs/iMule/src/kademlia/routing/</path>
    <filename>dir_d5309b363bce8ce9c409d73eb4768d43.html</filename>
    <file>Contact.cpp</file>
    <file>Contact.h</file>
    <file>Maps.cpp</file>
    <file>Maps.h</file>
    <file>RoutingBin.cpp</file>
    <file>RoutingBin.h</file>
    <file>RoutingZone.cpp</file>
    <file>RoutingZone.h</file>
  </compound>
  <compound kind="dir">
    <name>src/webserver/src/</name>
    <path>/media/brun/progs/iMule/src/webserver/src/</path>
    <filename>dir_28025bd380e2718414bdae0c82ed5100.html</filename>
    <file>php_core_lib.cpp</file>
    <file>php_core_lib.h</file>
    <file>php_lexer.c</file>
    <file>php_parser.c</file>
    <file>php_parser.h</file>
    <file>php_syntree.cpp</file>
    <file>php_syntree.h</file>
    <file>WebInterface.cpp</file>
    <file>WebInterface.h</file>
    <file>WebServer.cpp</file>
    <file>WebServer.h</file>
    <file>WebSocket.cpp</file>
    <file>WebSocket.h</file>
  </compound>
  <compound kind="dir">
    <name>src/utils/wxCas/src/</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/src/</path>
    <filename>dir_e9a542dda8876c68b00645003209e3ea.html</filename>
    <file>linuxmon.cpp</file>
    <file>linuxmon.h</file>
    <file>onlinesig.cpp</file>
    <file>onlinesig.h</file>
    <file>wxcas.cpp</file>
    <file>wxcas.h</file>
    <file>wxcascte.cpp</file>
    <file>wxcascte.h</file>
    <file>wxcasframe.cpp</file>
    <file>wxcasframe.h</file>
    <file>wxcaspix.cpp</file>
    <file>wxcaspix.h</file>
    <file>wxcasprefs.cpp</file>
    <file>wxcasprefs.h</file>
    <file>wxcasprint.cpp</file>
    <file>wxcasprint.h</file>
  </compound>
  <compound kind="dir">
    <name>src/utils/aLinkCreator/src/</name>
    <path>/media/brun/progs/iMule/src/utils/aLinkCreator/src/</path>
    <filename>dir_045e6c467d84e3fca3595ceb47a65b17.html</filename>
    <file>alc.cpp</file>
    <file>alc.h</file>
    <file>alcc.cpp</file>
    <file>alcc.h</file>
    <file>alcframe.cpp</file>
    <file>alcframe.h</file>
    <file>alcpix.cpp</file>
    <file>alcpix.h</file>
    <file>bithelp.h</file>
    <file>ed2khash.cpp</file>
    <file>ed2khash.h</file>
    <file>md4.cpp</file>
    <file>md4.h</file>
  </compound>
  <compound kind="dir">
    <name>src/</name>
    <path>/media/brun/progs/iMule/src/</path>
    <filename>dir_5192d7d5e5bd8a533136e752ae2e979a.html</filename>
    <dir>src/extern/</dir>
    <dir>src/kademlia/</dir>
    <dir>src/libs/</dir>
    <dir>src/pixmaps/</dir>
    <dir>src/tmp/</dir>
    <dir>src/utils/</dir>
    <dir>src/webserver/</dir>
    <file>AddFileThread.cpp</file>
    <file>AddFileThread.h</file>
    <file>AddFriend.cpp</file>
    <file>AddFriend.h</file>
    <file>AICHSyncThread.cpp</file>
    <file>AICHSyncThread.h</file>
    <file>ArchSpecific.h</file>
    <file>AsyncDNS.cpp</file>
    <file>AsyncDNS.h</file>
    <file>BarShader.cpp</file>
    <file>BarShader.h</file>
    <file>BaseClient.cpp</file>
    <file>CatDialog.cpp</file>
    <file>CatDialog.h</file>
    <file>CFile.cpp</file>
    <file>CFile.h</file>
    <file>ChatSelector.cpp</file>
    <file>ChatSelector.h</file>
    <file>ChatWnd.cpp</file>
    <file>ChatWnd.h</file>
    <file>ClientCredits.cpp</file>
    <file>ClientCredits.h</file>
    <file>ClientCreditsList.cpp</file>
    <file>ClientCreditsList.h</file>
    <file>ClientDetailDialog.cpp</file>
    <file>ClientDetailDialog.h</file>
    <file>ClientList.cpp</file>
    <file>ClientList.h</file>
    <file>ClientListCtrl.cpp</file>
    <file>ClientListCtrl.h</file>
    <file>ClientTCPSocket.cpp</file>
    <file>ClientTCPSocket.h</file>
    <file>ClientUDPSocket.cpp</file>
    <file>ClientUDPSocket.h</file>
    <file>Color.h</file>
    <file>ColorFrameCtrl.cpp</file>
    <file>ColorFrameCtrl.h</file>
    <file>CommentDialog.cpp</file>
    <file>CommentDialog.h</file>
    <file>CommentDialogLst.cpp</file>
    <file>CommentDialogLst.h</file>
    <file>CryptoPP.cpp</file>
    <file>CryptoPP.h</file>
    <file>CryptoPP_Inc.h</file>
    <file>CTypedPtrList.h</file>
    <file>DataToText.cpp</file>
    <file>DataToText.h</file>
    <file>DeadSourceList.cpp</file>
    <file>DeadSourceList.h</file>
    <file>DirectoryTreeCtrl.cpp</file>
    <file>DirectoryTreeCtrl.h</file>
    <file>DownloadClient.cpp</file>
    <file>DownloadListCtrl.cpp</file>
    <file>DownloadListCtrl.h</file>
    <file>DownloadQueue.cpp</file>
    <file>DownloadQueue.h</file>
    <file>ECSpecialCoreTags.cpp</file>
    <file>ECSpecialMuleTags.cpp</file>
    <file>ED2KLink.cpp</file>
    <file>ED2KLink.h</file>
    <file>ED2KLinkParser.cpp</file>
    <file>EditServerListDlg.cpp</file>
    <file>EditServerListDlg.h</file>
    <file>EMSocket.cpp</file>
    <file>EMSocket.h</file>
    <file>ExternalConn.cpp</file>
    <file>ExternalConn.h</file>
    <file>ExternalConnector.cpp</file>
    <file>ExternalConnector.h</file>
    <file>FileDetailDialog.cpp</file>
    <file>FileDetailDialog.h</file>
    <file>FileDetailListCtrl.cpp</file>
    <file>FileDetailListCtrl.h</file>
    <file>FileFunctions.cpp</file>
    <file>FileFunctions.h</file>
    <file>FileLock.h</file>
    <file>Friend.cpp</file>
    <file>Friend.h</file>
    <file>FriendList.cpp</file>
    <file>FriendList.h</file>
    <file>FriendListCtrl.cpp</file>
    <file>FriendListCtrl.h</file>
    <file>GetTickCount.cpp</file>
    <file>GetTickCount.h</file>
    <file>GuiEvents.cpp</file>
    <file>GuiEvents.h</file>
    <file>HTTPDownload.cpp</file>
    <file>HTTPDownload.h</file>
    <file>I2PConnectionManager.cpp</file>
    <file>I2PConnectionManager.h</file>
    <file>amule-gui.cpp</file>
    <file>amule-remote-gui.cpp</file>
    <file>amule-remote-gui.h</file>
    <file>amule.cpp</file>
    <file>amule.h</file>
    <file>iMule.xpm</file>
    <file>amuled.cpp</file>
    <file>amuleDlg.cpp</file>
    <file>amuleDlg.h</file>
    <file>imuleIPV4Address.h</file>
    <file>inetdownload.h</file>
    <file>InternalEvents.cpp</file>
    <file>InternalEvents.h</file>
    <file>IPFilter.cpp</file>
    <file>IPFilter.h</file>
    <file>KadDlg.cpp</file>
    <file>KadDlg.h</file>
    <file>kadNodesListView.cpp</file>
    <file>kadNodesListView.h</file>
    <file>KnownFile.cpp</file>
    <file>KnownFile.h</file>
    <file>KnownFileList.cpp</file>
    <file>KnownFileList.h</file>
    <file>listctrl.cpp</file>
    <file>listctrl.h</file>
    <file>ListenSocket.cpp</file>
    <file>ListenSocket.h</file>
    <file>Logger.cpp</file>
    <file>Logger.h</file>
    <file>make_ed2k_link.cpp</file>
    <file>MD4Hash.h</file>
    <file>MemFile.cpp</file>
    <file>MemFile.h</file>
    <file>MuleGifCtrl.cpp</file>
    <file>MuleGifCtrl.h</file>
    <file>MuleListCtrl.cpp</file>
    <file>MuleListCtrl.h</file>
    <file>MuleNotebook.cpp</file>
    <file>MuleNotebook.h</file>
    <file>MuleTextCtrl.cpp</file>
    <file>MuleTextCtrl.h</file>
    <file>MuleTrayIcon.cpp</file>
    <file>MuleTrayIcon.h</file>
    <file>MuleUDPSocket.cpp</file>
    <file>MuleUDPSocket.h</file>
    <file>muuli_wdr.cpp</file>
    <file>muuli_wdr.h</file>
    <file>NetworkFunctions.cpp</file>
    <file>NetworkFunctions.h</file>
    <file>Observable.h</file>
    <file>ObservableQueue.h</file>
    <file>OPCodes.cpp</file>
    <file>OPCodes.h</file>
    <file>OScopeCtrl.cpp</file>
    <file>OScopeCtrl.h</file>
    <file>OtherFunctions.cpp</file>
    <file>OtherFunctions.h</file>
    <file>OtherStructs.h</file>
    <file>Packet.cpp</file>
    <file>Packet.h</file>
    <file>Parser.cpp</file>
    <file>Parser.hpp</file>
    <file>PartFile.cpp</file>
    <file>PartFile.h</file>
    <file>PartFileConvert.cpp</file>
    <file>PartFileConvert.h</file>
    <file>Preferences.cpp</file>
    <file>Preferences.h</file>
    <file>PrefsUnifiedDlg.cpp</file>
    <file>PrefsUnifiedDlg.h</file>
    <file>Proxy.cpp</file>
    <file>Proxy.h</file>
    <file>RangeMap.h</file>
    <file>RLE.cpp</file>
    <file>RLE.h</file>
    <file>SafeFile.cpp</file>
    <file>SafeFile.h</file>
    <file>Scanner.cpp</file>
    <file>Scanner.h</file>
    <file>SearchDlg.cpp</file>
    <file>SearchDlg.h</file>
    <file>SearchExpr.h</file>
    <file>SearchList.cpp</file>
    <file>SearchList.h</file>
    <file>SearchListCtrl.cpp</file>
    <file>SearchListCtrl.h</file>
    <file>Server.cpp</file>
    <file>Server.h</file>
    <file>ServerConnect.cpp</file>
    <file>ServerConnect.h</file>
    <file>ServerList.cpp</file>
    <file>ServerList.h</file>
    <file>ServerListCtrl.cpp</file>
    <file>ServerListCtrl.h</file>
    <file>ServerSocket.cpp</file>
    <file>ServerSocket.h</file>
    <file>ServerUDPSocket.cpp</file>
    <file>ServerUDPSocket.h</file>
    <file>ServerWnd.cpp</file>
    <file>ServerWnd.h</file>
    <file>SHA.cpp</file>
    <file>SHA.h</file>
    <file>SHAHashSet.cpp</file>
    <file>SHAHashSet.h</file>
    <file>SharedFileList.cpp</file>
    <file>SharedFileList.h</file>
    <file>SharedFilesCtrl.cpp</file>
    <file>SharedFilesCtrl.h</file>
    <file>SharedFilesWnd.cpp</file>
    <file>SharedFilesWnd.h</file>
    <file>StateMachine.cpp</file>
    <file>StateMachine.h</file>
    <file>Statistics.cpp</file>
    <file>Statistics.h</file>
    <file>StatisticsDlg.cpp</file>
    <file>StatisticsDlg.h</file>
    <file>StatTree.cpp</file>
    <file>StatTree.h</file>
    <file>Tag.cpp</file>
    <file>Tag.h</file>
    <file>TextClient.cpp</file>
    <file>TextClient.h</file>
    <file>ThrottledSocket.h</file>
    <file>Timer.cpp</file>
    <file>Timer.h</file>
    <file>TransferWnd.cpp</file>
    <file>TransferWnd.h</file>
    <file>Types.h</file>
    <file>updownclient.h</file>
    <file>UploadBandwidthThrottler.cpp</file>
    <file>UploadBandwidthThrottler.h</file>
    <file>UploadClient.cpp</file>
    <file>UploadQueue.cpp</file>
    <file>UploadQueue.h</file>
  </compound>
  <compound kind="dir">
    <name>src/tmp/</name>
    <path>/media/brun/progs/iMule/src/tmp/</path>
    <filename>dir_ba9ff3cc2e48db56338b6aade90c3bd4.html</filename>
    <file>Parser.cpp</file>
    <file>Parser.hpp</file>
  </compound>
  <compound kind="dir">
    <name>src/utils/</name>
    <path>/media/brun/progs/iMule/src/utils/</path>
    <filename>dir_c53701a2ac00b57de6dbff27e8bf6ab8.html</filename>
    <dir>src/utils/aLinkCreator/</dir>
    <dir>src/utils/amps/</dir>
    <dir>src/utils/cas/</dir>
    <dir>src/utils/wxCas/</dir>
    <file>mkFileSum.c</file>
  </compound>
  <compound kind="dir">
    <name>src/kademlia/utils/</name>
    <path>/media/brun/progs/iMule/src/kademlia/utils/</path>
    <filename>dir_20e90cd18a422c5198911cff56f17366.html</filename>
    <file>LittleEndian.cpp</file>
    <file>LittleEndian.h</file>
    <file>UInt128.cpp</file>
    <file>UInt128.h</file>
  </compound>
  <compound kind="dir">
    <name>src/webserver/</name>
    <path>/media/brun/progs/iMule/src/webserver/</path>
    <filename>dir_8a4544b165b15b3cb8718468abe55066.html</filename>
    <dir>src/webserver/chicane/</dir>
    <dir>src/webserver/default/</dir>
    <dir>src/webserver/php-default/</dir>
    <dir>src/webserver/src/</dir>
  </compound>
  <compound kind="dir">
    <name>src/utils/wxCas/</name>
    <path>/media/brun/progs/iMule/src/utils/wxCas/</path>
    <filename>dir_f380f7564accc8e6601240472d3df857.html</filename>
    <dir>src/utils/wxCas/src/</dir>
    <file>wxcas.xpm</file>
  </compound>
</tagfile>
